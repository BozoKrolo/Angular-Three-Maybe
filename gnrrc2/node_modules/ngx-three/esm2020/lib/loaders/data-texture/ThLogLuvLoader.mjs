import { Directive, Host, Injectable, Pipe } from '@angular/core';
import { LogLuvLoader } from 'three/examples/jsm/loaders/LogLuvLoader';
import { ThCallbackLoaderBaseDirective, ThCallbackLoaderBasePipe, ThCallbackLoaderService } from '../ThCallbackLoaderBase';
import * as i0 from "@angular/core";
import * as i1 from "../../generated/ThDataTexture";
export class LogLuvLoaderService extends ThCallbackLoaderService {
    constructor() {
        super(...arguments);
        this.clazz = LogLuvLoader;
    }
}
LogLuvLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: LogLuvLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
LogLuvLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: LogLuvLoaderService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: LogLuvLoaderService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }] });
export class ThLogLuvLoaderPipe extends ThCallbackLoaderBasePipe {
    constructor(service) {
        super();
        this.service = service;
    }
}
ThLogLuvLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThLogLuvLoaderPipe, deps: [{ token: LogLuvLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });
ThLogLuvLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.1.1", ngImport: i0, type: ThLogLuvLoaderPipe, name: "loadLogLuvTexture" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThLogLuvLoaderPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'loadLogLuvTexture',
                    pure: true
                }]
        }], ctorParameters: function () { return [{ type: LogLuvLoaderService }]; } });
export class ThLogLuvLoaderDirective extends ThCallbackLoaderBaseDirective {
    constructor(host, zone, service) {
        super(host, zone);
        this.host = host;
        this.zone = zone;
        this.service = service;
    }
}
ThLogLuvLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThLogLuvLoaderDirective, deps: [{ token: i1.ThDataTexture, host: true }, { token: i0.NgZone }, { token: LogLuvLoaderService }], target: i0.ɵɵFactoryTarget.Directive });
ThLogLuvLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.1.1", type: ThLogLuvLoaderDirective, selector: "[loadLogLuvTexture]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThLogLuvLoaderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[loadLogLuvTexture]'
                }]
        }], ctorParameters: function () { return [{ type: i1.ThDataTexture, decorators: [{
                    type: Host
                }] }, { type: i0.NgZone }, { type: LogLuvLoaderService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhMb2dMdXZMb2FkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtdGhyZWUvc3JjL2xpYi9sb2FkZXJzL2RhdGEtdGV4dHVyZS9UaExvZ0x1dkxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQVUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUV6RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDdkUsT0FBTyxFQUNMLDZCQUE2QixFQUM3Qix3QkFBd0IsRUFDeEIsdUJBQXVCLEVBQ3hCLE1BQU0seUJBQXlCLENBQUM7OztBQUtqQyxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsdUJBQXFDO0lBSDlFOztRQUlTLFVBQUssR0FBRyxZQUFZLENBQUM7S0FDN0I7O2dIQUZZLG1CQUFtQjtvSEFBbkIsbUJBQW1CLGNBRmxCLE1BQU07MkZBRVAsbUJBQW1CO2tCQUgvQixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7QUFTRCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsd0JBQXNDO0lBQzVFLFlBQXNCLE9BQTRCO1FBQ2hELEtBQUssRUFBRSxDQUFDO1FBRFksWUFBTyxHQUFQLE9BQU8sQ0FBcUI7SUFFbEQsQ0FBQzs7K0dBSFUsa0JBQWtCOzZHQUFsQixrQkFBa0I7MkZBQWxCLGtCQUFrQjtrQkFKOUIsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsbUJBQW1CO29CQUN6QixJQUFJLEVBQUUsSUFBSTtpQkFDWDs7QUFVRCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsNkJBQTJDO0lBQ3RGLFlBQThCLElBQW1CLEVBQVksSUFBWSxFQUFZLE9BQTRCO1FBQy9HLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFEVSxTQUFJLEdBQUosSUFBSSxDQUFlO1FBQVksU0FBSSxHQUFKLElBQUksQ0FBUTtRQUFZLFlBQU8sR0FBUCxPQUFPLENBQXFCO0lBRWpILENBQUM7O29IQUhVLHVCQUF1Qjt3R0FBdkIsdUJBQXVCOzJGQUF2Qix1QkFBdUI7a0JBSG5DLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtpQkFDaEM7OzBCQUVjLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3QsIEluamVjdGFibGUsIE5nWm9uZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGhEYXRhVGV4dHVyZSB9IGZyb20gJy4uLy4uL2dlbmVyYXRlZC9UaERhdGFUZXh0dXJlJztcbmltcG9ydCB7IExvZ0x1dkxvYWRlciB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9sb2FkZXJzL0xvZ0x1dkxvYWRlcic7XG5pbXBvcnQge1xuICBUaENhbGxiYWNrTG9hZGVyQmFzZURpcmVjdGl2ZSxcbiAgVGhDYWxsYmFja0xvYWRlckJhc2VQaXBlLFxuICBUaENhbGxiYWNrTG9hZGVyU2VydmljZVxufSBmcm9tICcuLi9UaENhbGxiYWNrTG9hZGVyQmFzZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIExvZ0x1dkxvYWRlclNlcnZpY2UgZXh0ZW5kcyBUaENhbGxiYWNrTG9hZGVyU2VydmljZTxMb2dMdXZMb2FkZXI+IHtcbiAgcHVibGljIGNsYXp6ID0gTG9nTHV2TG9hZGVyO1xufVxuXG5AUGlwZSh7XG4gIG5hbWU6ICdsb2FkTG9nTHV2VGV4dHVyZScsXG4gIHB1cmU6IHRydWVcbn0pXG5leHBvcnQgY2xhc3MgVGhMb2dMdXZMb2FkZXJQaXBlIGV4dGVuZHMgVGhDYWxsYmFja0xvYWRlckJhc2VQaXBlPExvZ0x1dkxvYWRlcj4gaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHNlcnZpY2U6IExvZ0x1dkxvYWRlclNlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tsb2FkTG9nTHV2VGV4dHVyZV0nXG59KVxuZXhwb3J0IGNsYXNzIFRoTG9nTHV2TG9hZGVyRGlyZWN0aXZlIGV4dGVuZHMgVGhDYWxsYmFja0xvYWRlckJhc2VEaXJlY3RpdmU8TG9nTHV2TG9hZGVyPiB7XG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgcHJvdGVjdGVkIGhvc3Q6IFRoRGF0YVRleHR1cmUsIHByb3RlY3RlZCB6b25lOiBOZ1pvbmUsIHByb3RlY3RlZCBzZXJ2aWNlOiBMb2dMdXZMb2FkZXJTZXJ2aWNlKSB7XG4gICAgc3VwZXIoaG9zdCwgem9uZSk7XG4gIH1cbn1cbiJdfQ==