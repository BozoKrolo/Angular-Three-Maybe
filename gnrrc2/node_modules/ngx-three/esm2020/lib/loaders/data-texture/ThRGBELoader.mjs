import { Directive, Host, Injectable, Pipe } from '@angular/core';
import { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';
import { ThCallbackLoaderService, ThCallbackLoaderBaseDirective, ThCallbackLoaderBasePipe } from '../ThCallbackLoaderBase';
import * as i0 from "@angular/core";
import * as i1 from "../../generated/ThDataTexture";
export class RGBELoaderService extends ThCallbackLoaderService {
    constructor() {
        super(...arguments);
        this.clazz = RGBELoader;
    }
}
RGBELoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: RGBELoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
RGBELoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: RGBELoaderService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: RGBELoaderService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }] });
export class ThRGBELoaderPipe extends ThCallbackLoaderBasePipe {
    constructor(service) {
        super();
        this.service = service;
    }
}
ThRGBELoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBELoaderPipe, deps: [{ token: RGBELoaderService }], target: i0.ɵɵFactoryTarget.Pipe });
ThRGBELoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.1.1", ngImport: i0, type: ThRGBELoaderPipe, name: "loadRGBETexture" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBELoaderPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'loadRGBETexture',
                    pure: true
                }]
        }], ctorParameters: function () { return [{ type: RGBELoaderService }]; } });
export class ThRGBELoaderDirective extends ThCallbackLoaderBaseDirective {
    constructor(host, zone, service) {
        super(host, zone);
        this.host = host;
        this.zone = zone;
        this.service = service;
    }
}
ThRGBELoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBELoaderDirective, deps: [{ token: i1.ThDataTexture, host: true }, { token: i0.NgZone }, { token: RGBELoaderService }], target: i0.ɵɵFactoryTarget.Directive });
ThRGBELoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.1.1", type: ThRGBELoaderDirective, selector: "[loadRGBETexture]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBELoaderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[loadRGBETexture]'
                }]
        }], ctorParameters: function () { return [{ type: i1.ThDataTexture, decorators: [{
                    type: Host
                }] }, { type: i0.NgZone }, { type: RGBELoaderService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhSR0JFTG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRocmVlL3NyYy9saWIvbG9hZGVycy9kYXRhLXRleHR1cmUvVGhSR0JFTG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBVSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXpGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUduRSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLDZCQUE2QixFQUM3Qix3QkFBd0IsRUFDekIsTUFBTSx5QkFBeUIsQ0FBQzs7O0FBS2pDLE1BQU0sT0FBTyxpQkFBa0IsU0FBUSx1QkFBbUM7SUFIMUU7O1FBSVMsVUFBSyxHQUFHLFVBQVUsQ0FBQztLQUMzQjs7OEdBRlksaUJBQWlCO2tIQUFqQixpQkFBaUIsY0FGaEIsTUFBTTsyRkFFUCxpQkFBaUI7a0JBSDdCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COztBQVNELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSx3QkFBb0M7SUFDeEUsWUFBc0IsT0FBMEI7UUFDOUMsS0FBSyxFQUFFLENBQUM7UUFEWSxZQUFPLEdBQVAsT0FBTyxDQUFtQjtJQUVoRCxDQUFDOzs2R0FIVSxnQkFBZ0I7MkdBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUo1QixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxpQkFBaUI7b0JBQ3ZCLElBQUksRUFBRSxJQUFJO2lCQUNYOztBQVVELE1BQU0sT0FBTyxxQkFBc0IsU0FBUSw2QkFBeUM7SUFDbEYsWUFBOEIsSUFBbUIsRUFBWSxJQUFZLEVBQVksT0FBMEI7UUFDN0csS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQURVLFNBQUksR0FBSixJQUFJLENBQWU7UUFBWSxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVksWUFBTyxHQUFQLE9BQU8sQ0FBbUI7SUFFL0csQ0FBQzs7a0hBSFUscUJBQXFCO3NHQUFyQixxQkFBcUI7MkZBQXJCLHFCQUFxQjtrQkFIakMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2lCQUM5Qjs7MEJBRWMsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdCwgSW5qZWN0YWJsZSwgTmdab25lLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRhVGV4dHVyZUxvYWRlciB9IGZyb20gJ3RocmVlJztcbmltcG9ydCB7IFJHQkVMb2FkZXIgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9SR0JFTG9hZGVyJztcbmltcG9ydCB7IFRoRGF0YVRleHR1cmUgfSBmcm9tICcuLi8uLi9nZW5lcmF0ZWQvVGhEYXRhVGV4dHVyZSc7XG5pbXBvcnQgeyBUaFRleHR1cmUgfSBmcm9tICcuLi8uLi9nZW5lcmF0ZWQvVGhUZXh0dXJlJztcbmltcG9ydCB7XG4gIFRoQ2FsbGJhY2tMb2FkZXJTZXJ2aWNlLFxuICBUaENhbGxiYWNrTG9hZGVyQmFzZURpcmVjdGl2ZSxcbiAgVGhDYWxsYmFja0xvYWRlckJhc2VQaXBlXG59IGZyb20gJy4uL1RoQ2FsbGJhY2tMb2FkZXJCYXNlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUkdCRUxvYWRlclNlcnZpY2UgZXh0ZW5kcyBUaENhbGxiYWNrTG9hZGVyU2VydmljZTxSR0JFTG9hZGVyPiB7XG4gIHB1YmxpYyBjbGF6eiA9IFJHQkVMb2FkZXI7XG59XG5cbkBQaXBlKHtcbiAgbmFtZTogJ2xvYWRSR0JFVGV4dHVyZScsXG4gIHB1cmU6IHRydWVcbn0pXG5leHBvcnQgY2xhc3MgVGhSR0JFTG9hZGVyUGlwZSBleHRlbmRzIFRoQ2FsbGJhY2tMb2FkZXJCYXNlUGlwZTxSR0JFTG9hZGVyPiBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgc2VydmljZTogUkdCRUxvYWRlclNlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tsb2FkUkdCRVRleHR1cmVdJ1xufSlcbmV4cG9ydCBjbGFzcyBUaFJHQkVMb2FkZXJEaXJlY3RpdmUgZXh0ZW5kcyBUaENhbGxiYWNrTG9hZGVyQmFzZURpcmVjdGl2ZTxSR0JFTG9hZGVyPiB7XG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgcHJvdGVjdGVkIGhvc3Q6IFRoRGF0YVRleHR1cmUsIHByb3RlY3RlZCB6b25lOiBOZ1pvbmUsIHByb3RlY3RlZCBzZXJ2aWNlOiBSR0JFTG9hZGVyU2VydmljZSkge1xuICAgIHN1cGVyKGhvc3QsIHpvbmUpO1xuICB9XG59XG4iXX0=