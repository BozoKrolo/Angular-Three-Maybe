import { Directive, Host, Injectable, Pipe } from '@angular/core';
import { TGALoader } from 'three/examples/jsm/loaders/TGALoader';
import { ThCallbackLoaderService, ThCallbackLoaderBaseDirective, ThCallbackLoaderBasePipe } from '../ThCallbackLoaderBase';
import * as i0 from "@angular/core";
import * as i1 from "../../generated/ThDataTexture";
export class TGALoaderService extends ThCallbackLoaderService {
    constructor() {
        super(...arguments);
        this.clazz = TGALoader;
    }
}
TGALoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: TGALoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
TGALoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: TGALoaderService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: TGALoaderService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }] });
export class ThTGALoaderPipe extends ThCallbackLoaderBasePipe {
    constructor(service) {
        super();
        this.service = service;
    }
}
ThTGALoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThTGALoaderPipe, deps: [{ token: TGALoaderService }], target: i0.ɵɵFactoryTarget.Pipe });
ThTGALoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.1.1", ngImport: i0, type: ThTGALoaderPipe, name: "loadTGATexture" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThTGALoaderPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'loadTGATexture',
                    pure: true
                }]
        }], ctorParameters: function () { return [{ type: TGALoaderService }]; } });
export class ThTGALoaderDirective extends ThCallbackLoaderBaseDirective {
    constructor(host, zone, service) {
        super(host, zone);
        this.host = host;
        this.zone = zone;
        this.service = service;
    }
}
ThTGALoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThTGALoaderDirective, deps: [{ token: i1.ThDataTexture, host: true }, { token: i0.NgZone }, { token: TGALoaderService }], target: i0.ɵɵFactoryTarget.Directive });
ThTGALoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.1.1", type: ThTGALoaderDirective, selector: "[loadTGATexture]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThTGALoaderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[loadTGATexture]'
                }]
        }], ctorParameters: function () { return [{ type: i1.ThDataTexture, decorators: [{
                    type: Host
                }] }, { type: i0.NgZone }, { type: TGALoaderService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhUR0FMb2FkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtdGhyZWUvc3JjL2xpYi9sb2FkZXJzL2RhdGEtdGV4dHVyZS9UaFRHQUxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQVUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUd6RixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFakUsT0FBTyxFQUNMLHVCQUF1QixFQUN2Qiw2QkFBNkIsRUFDN0Isd0JBQXdCLEVBQ3pCLE1BQU0seUJBQXlCLENBQUM7OztBQUtqQyxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsdUJBQWtDO0lBSHhFOztRQUlTLFVBQUssR0FBRyxTQUFTLENBQUM7S0FDMUI7OzZHQUZZLGdCQUFnQjtpSEFBaEIsZ0JBQWdCLGNBRmYsTUFBTTsyRkFFUCxnQkFBZ0I7a0JBSDVCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COztBQVNELE1BQU0sT0FBTyxlQUFnQixTQUFRLHdCQUFtQztJQUN0RSxZQUFzQixPQUF5QjtRQUM3QyxLQUFLLEVBQUUsQ0FBQztRQURZLFlBQU8sR0FBUCxPQUFPLENBQWtCO0lBRS9DLENBQUM7OzRHQUhVLGVBQWU7MEdBQWYsZUFBZTsyRkFBZixlQUFlO2tCQUozQixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxnQkFBZ0I7b0JBQ3RCLElBQUksRUFBRSxJQUFJO2lCQUNYOztBQVVELE1BQU0sT0FBTyxvQkFBcUIsU0FBUSw2QkFBd0M7SUFDaEYsWUFBOEIsSUFBbUIsRUFBWSxJQUFZLEVBQVksT0FBeUI7UUFDNUcsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQURVLFNBQUksR0FBSixJQUFJLENBQWU7UUFBWSxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVksWUFBTyxHQUFQLE9BQU8sQ0FBa0I7SUFFOUcsQ0FBQzs7aUhBSFUsb0JBQW9CO3FHQUFwQixvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFIaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2lCQUM3Qjs7MEJBRWMsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdCwgSW5qZWN0YWJsZSwgTmdab25lLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRhVGV4dHVyZUxvYWRlciwgVGV4dHVyZSB9IGZyb20gJ3RocmVlJztcbmltcG9ydCB7IFRoRGF0YVRleHR1cmUgfSBmcm9tICcuLi8uLi9nZW5lcmF0ZWQvVGhEYXRhVGV4dHVyZSc7XG5pbXBvcnQgeyBUR0FMb2FkZXIgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9UR0FMb2FkZXInO1xuaW1wb3J0IHsgVGhUZXh0dXJlIH0gZnJvbSAnLi4vLi4vZ2VuZXJhdGVkL1RoVGV4dHVyZSc7XG5pbXBvcnQge1xuICBUaENhbGxiYWNrTG9hZGVyU2VydmljZSxcbiAgVGhDYWxsYmFja0xvYWRlckJhc2VEaXJlY3RpdmUsXG4gIFRoQ2FsbGJhY2tMb2FkZXJCYXNlUGlwZVxufSBmcm9tICcuLi9UaENhbGxiYWNrTG9hZGVyQmFzZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFRHQUxvYWRlclNlcnZpY2UgZXh0ZW5kcyBUaENhbGxiYWNrTG9hZGVyU2VydmljZTxUR0FMb2FkZXI+IHtcbiAgcHVibGljIGNsYXp6ID0gVEdBTG9hZGVyO1xufVxuXG5AUGlwZSh7XG4gIG5hbWU6ICdsb2FkVEdBVGV4dHVyZScsXG4gIHB1cmU6IHRydWVcbn0pXG5leHBvcnQgY2xhc3MgVGhUR0FMb2FkZXJQaXBlIGV4dGVuZHMgVGhDYWxsYmFja0xvYWRlckJhc2VQaXBlPFRHQUxvYWRlcj4gaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHNlcnZpY2U6IFRHQUxvYWRlclNlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tsb2FkVEdBVGV4dHVyZV0nXG59KVxuZXhwb3J0IGNsYXNzIFRoVEdBTG9hZGVyRGlyZWN0aXZlIGV4dGVuZHMgVGhDYWxsYmFja0xvYWRlckJhc2VEaXJlY3RpdmU8VEdBTG9hZGVyPiB7XG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgcHJvdGVjdGVkIGhvc3Q6IFRoRGF0YVRleHR1cmUsIHByb3RlY3RlZCB6b25lOiBOZ1pvbmUsIHByb3RlY3RlZCBzZXJ2aWNlOiBUR0FMb2FkZXJTZXJ2aWNlKSB7XG4gICAgc3VwZXIoaG9zdCwgem9uZSk7XG4gIH1cbn1cbiJdfQ==