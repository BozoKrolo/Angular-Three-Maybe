import { Directive, Host, Injectable, Pipe } from '@angular/core';
import { RGBMLoader } from 'three/examples/jsm/loaders/RGBMLoader';
import { ThCallbackLoaderService, ThCallbackLoaderBaseDirective, ThCallbackLoaderBasePipe } from '../ThCallbackLoaderBase';
import * as i0 from "@angular/core";
import * as i1 from "../../generated/ThDataTexture";
export class RGBMLoaderService extends ThCallbackLoaderService {
    constructor() {
        super(...arguments);
        this.clazz = RGBMLoader;
    }
}
RGBMLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: RGBMLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
RGBMLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: RGBMLoaderService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: RGBMLoaderService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }] });
export class ThRGBMLoaderPipe extends ThCallbackLoaderBasePipe {
    constructor(service) {
        super();
        this.service = service;
    }
}
ThRGBMLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBMLoaderPipe, deps: [{ token: RGBMLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });
ThRGBMLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.1.1", ngImport: i0, type: ThRGBMLoaderPipe, name: "loadRGBMTexture" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBMLoaderPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'loadRGBMTexture',
                    pure: true
                }]
        }], ctorParameters: function () { return [{ type: RGBMLoaderService }]; } });
export class ThRGBMLoaderDirective extends ThCallbackLoaderBaseDirective {
    constructor(host, zone, service) {
        super(host, zone);
        this.host = host;
        this.zone = zone;
        this.service = service;
    }
}
ThRGBMLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBMLoaderDirective, deps: [{ token: i1.ThDataTexture, host: true }, { token: i0.NgZone }, { token: RGBMLoaderService }], target: i0.ɵɵFactoryTarget.Directive });
ThRGBMLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.1.1", type: ThRGBMLoaderDirective, selector: "[loadRGBMTexture]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThRGBMLoaderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[loadRGBMTexture]'
                }]
        }], ctorParameters: function () { return [{ type: i1.ThDataTexture, decorators: [{
                    type: Host
                }] }, { type: i0.NgZone }, { type: RGBMLoaderService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhSR0JNTG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRocmVlL3NyYy9saWIvbG9hZGVycy9kYXRhLXRleHR1cmUvVGhSR0JNTG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBVSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUduRSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLDZCQUE2QixFQUM3Qix3QkFBd0IsRUFDekIsTUFBTSx5QkFBeUIsQ0FBQzs7O0FBS2pDLE1BQU0sT0FBTyxpQkFBa0IsU0FBUSx1QkFBbUM7SUFIMUU7O1FBSVMsVUFBSyxHQUFHLFVBQVUsQ0FBQztLQUMzQjs7OEdBRlksaUJBQWlCO2tIQUFqQixpQkFBaUIsY0FGaEIsTUFBTTsyRkFFUCxpQkFBaUI7a0JBSDdCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COztBQVNELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSx3QkFBb0M7SUFDeEUsWUFBc0IsT0FBMEI7UUFDOUMsS0FBSyxFQUFFLENBQUM7UUFEWSxZQUFPLEdBQVAsT0FBTyxDQUFtQjtJQUVoRCxDQUFDOzs2R0FIVSxnQkFBZ0I7MkdBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUo1QixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxpQkFBaUI7b0JBQ3ZCLElBQUksRUFBRSxJQUFJO2lCQUNYOztBQVVELE1BQU0sT0FBTyxxQkFBc0IsU0FBUSw2QkFBeUM7SUFDbEYsWUFBOEIsSUFBbUIsRUFBWSxJQUFZLEVBQVksT0FBMEI7UUFDN0csS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQURVLFNBQUksR0FBSixJQUFJLENBQWU7UUFBWSxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVksWUFBTyxHQUFQLE9BQU8sQ0FBbUI7SUFFL0csQ0FBQzs7a0hBSFUscUJBQXFCO3NHQUFyQixxQkFBcUI7MkZBQXJCLHFCQUFxQjtrQkFIakMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2lCQUM5Qjs7MEJBRWMsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdCwgSW5qZWN0YWJsZSwgTmdab25lLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSR0JNTG9hZGVyIH0gZnJvbSAndGhyZWUvZXhhbXBsZXMvanNtL2xvYWRlcnMvUkdCTUxvYWRlcic7XG5pbXBvcnQgeyBUaERhdGFUZXh0dXJlIH0gZnJvbSAnLi4vLi4vZ2VuZXJhdGVkL1RoRGF0YVRleHR1cmUnO1xuaW1wb3J0IHsgVGhUZXh0dXJlIH0gZnJvbSAnLi4vLi4vZ2VuZXJhdGVkL1RoVGV4dHVyZSc7XG5pbXBvcnQge1xuICBUaENhbGxiYWNrTG9hZGVyU2VydmljZSxcbiAgVGhDYWxsYmFja0xvYWRlckJhc2VEaXJlY3RpdmUsXG4gIFRoQ2FsbGJhY2tMb2FkZXJCYXNlUGlwZVxufSBmcm9tICcuLi9UaENhbGxiYWNrTG9hZGVyQmFzZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFJHQk1Mb2FkZXJTZXJ2aWNlIGV4dGVuZHMgVGhDYWxsYmFja0xvYWRlclNlcnZpY2U8UkdCTUxvYWRlcj4ge1xuICBwdWJsaWMgY2xhenogPSBSR0JNTG9hZGVyO1xufVxuXG5AUGlwZSh7XG4gIG5hbWU6ICdsb2FkUkdCTVRleHR1cmUnLFxuICBwdXJlOiB0cnVlXG59KVxuZXhwb3J0IGNsYXNzIFRoUkdCTUxvYWRlclBpcGUgZXh0ZW5kcyBUaENhbGxiYWNrTG9hZGVyQmFzZVBpcGU8UkdCTUxvYWRlcj4gaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHNlcnZpY2U6IFJHQk1Mb2FkZXJTZXJ2aWNlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbG9hZFJHQk1UZXh0dXJlXSdcbn0pXG5leHBvcnQgY2xhc3MgVGhSR0JNTG9hZGVyRGlyZWN0aXZlIGV4dGVuZHMgVGhDYWxsYmFja0xvYWRlckJhc2VEaXJlY3RpdmU8UkdCTUxvYWRlcj4ge1xuICBjb25zdHJ1Y3RvcihASG9zdCgpIHByb3RlY3RlZCBob3N0OiBUaERhdGFUZXh0dXJlLCBwcm90ZWN0ZWQgem9uZTogTmdab25lLCBwcm90ZWN0ZWQgc2VydmljZTogUkdCTUxvYWRlclNlcnZpY2UpIHtcbiAgICBzdXBlcihob3N0LCB6b25lKTtcbiAgfVxufVxuIl19