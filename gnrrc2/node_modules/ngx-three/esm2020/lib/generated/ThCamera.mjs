/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable no-underscore-dangle */
/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */
import { ChangeDetectionStrategy, Component, forwardRef, Input } from '@angular/core';
import { applyValue } from '../util';
import { ThObject3D } from './ThObject3D';
import * as i0 from "@angular/core";
export class ThCamera extends ThObject3D {
    // @ts-ignore
    get isCamera() {
        return this._objRef?.isCamera;
    }
    // @ts-ignore
    get type() {
        return this._objRef?.type;
    }
    set layers(value) {
        if (this._objRef) {
            this._objRef.layers = applyValue(this._objRef.layers, value);
        }
    }
    // @ts-ignore
    get layers() {
        return this._objRef?.layers;
    }
    set matrixWorldInverse(value) {
        if (this._objRef) {
            this._objRef.matrixWorldInverse = applyValue(this._objRef.matrixWorldInverse, value);
        }
    }
    // @ts-ignore
    get matrixWorldInverse() {
        return this._objRef?.matrixWorldInverse;
    }
    set projectionMatrix(value) {
        if (this._objRef) {
            this._objRef.projectionMatrix = applyValue(this._objRef.projectionMatrix, value);
        }
    }
    // @ts-ignore
    get projectionMatrix() {
        return this._objRef?.projectionMatrix;
    }
    set projectionMatrixInverse(value) {
        if (this._objRef) {
            this._objRef.projectionMatrixInverse = applyValue(this._objRef.projectionMatrixInverse, value);
        }
    }
    // @ts-ignore
    get projectionMatrixInverse() {
        return this._objRef?.projectionMatrixInverse;
    }
}
ThCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThCamera, deps: null, target: i0.ɵɵFactoryTarget.Component });
ThCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.1.1", type: ThCamera, selector: "th-camera", inputs: { layers: "layers", matrixWorldInverse: "matrixWorldInverse", projectionMatrix: "projectionMatrix", projectionMatrixInverse: "projectionMatrixInverse" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCamera) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThCamera, decorators: [{
            type: Component,
            args: [{
                    selector: 'th-camera',
                    template: '<ng-content/>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCamera) }]
                }]
        }], propDecorators: { layers: [{
                type: Input
            }], matrixWorldInverse: [{
                type: Input
            }], projectionMatrix: [{
                type: Input
            }], projectionMatrixInverse: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhDYW1lcmEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtdGhyZWUvc3JjL2xpYi9nZW5lcmF0ZWQvVGhDYW1lcmEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseURBQXlEO0FBQ3pELHlDQUF5QztBQUN6QyxxSUFBcUk7QUFDckksT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDckMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFRMUMsTUFBTSxPQUFnQixRQUFnRCxTQUFRLFVBQTJCO0lBQ3ZHLGFBQWE7SUFDYixJQUFXLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsYUFBYTtJQUNiLElBQVcsSUFBSTtRQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDNUIsQ0FBQztJQUNELElBQ1csTUFBTSxDQUFDLEtBQStCO1FBQy9DLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQVMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDdEU7SUFDSCxDQUFDO0lBQ0QsYUFBYTtJQUNiLElBQVcsTUFBTTtRQUNmLE9BQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQ1csa0JBQWtCLENBQzNCLEtBbUJLO1FBRUwsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsa0JBQWtCLEdBQUcsVUFBVSxDQUFVLElBQUksQ0FBQyxPQUFPLENBQUMsa0JBQWtCLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDL0Y7SUFDSCxDQUFDO0lBQ0QsYUFBYTtJQUNiLElBQVcsa0JBQWtCO1FBQzNCLE9BQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQztJQUMxQyxDQUFDO0lBQ0QsSUFDVyxnQkFBZ0IsQ0FDekIsS0FtQks7UUFFTCxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVLENBQVUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUMzRjtJQUNILENBQUM7SUFDRCxhQUFhO0lBQ2IsSUFBVyxnQkFBZ0I7UUFDekIsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDO0lBQ3hDLENBQUM7SUFDRCxJQUNXLHVCQUF1QixDQUNoQyxLQW1CSztRQUVMLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixHQUFHLFVBQVUsQ0FBVSxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ3pHO0lBQ0gsQ0FBQztJQUNELGFBQWE7SUFDYixJQUFXLHVCQUF1QjtRQUNoQyxPQUFPLElBQUksQ0FBQyxPQUFPLEVBQUUsdUJBQXVCLENBQUM7SUFDL0MsQ0FBQzs7cUdBL0dtQixRQUFRO3lGQUFSLFFBQVEsc01BRmpCLENBQUMsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxpREFGbkUsZUFBZTsyRkFJTCxRQUFRO2tCQU43QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUsZUFBZTtvQkFDekIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsRUFBRSxDQUFDO2lCQUM5RTs4QkFXWSxNQUFNO3NCQURoQixLQUFLO2dCQVdLLGtCQUFrQjtzQkFENUIsS0FBSztnQkFnQ0ssZ0JBQWdCO3NCQUQxQixLQUFLO2dCQWdDSyx1QkFBdUI7c0JBRGpDLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb24gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVyc2NvcmUtZGFuZ2xlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LXNlbGVjdG9yLCBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LWNsYXNzLXN1ZmZpeCwganNkb2Mvbm8tdHlwZXMsIGltcG9ydC9uby1kZXByZWNhdGVkICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FtZXJhLCBFdmVudCwgTGF5ZXJzLCBNYXRyaXg0IH0gZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgYXBwbHlWYWx1ZSB9IGZyb20gJy4uL3V0aWwnO1xuaW1wb3J0IHsgVGhPYmplY3QzRCB9IGZyb20gJy4vVGhPYmplY3QzRCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoLWNhbWVyYScsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQvPicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFRoT2JqZWN0M0QsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoQ2FtZXJhKSB9XVxufSlcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBUaENhbWVyYTxUIGV4dGVuZHMgQ2FtZXJhID0gQ2FtZXJhLCBUQVJHUyA9IFtdPiBleHRlbmRzIFRoT2JqZWN0M0Q8RXZlbnQsIFQsIFRBUkdTPiB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgcHVibGljIGdldCBpc0NhbWVyYSgpOiB0cnVlIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5fb2JqUmVmPy5pc0NhbWVyYTtcbiAgfVxuICAvLyBAdHMtaWdub3JlXG4gIHB1YmxpYyBnZXQgdHlwZSgpOiAoc3RyaW5nIHwgJ0NhbWVyYScpIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5fb2JqUmVmPy50eXBlO1xuICB9XG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBzZXQgbGF5ZXJzKHZhbHVlOiBMYXllcnMgfCBbbGF5ZXI6IG51bWJlcl0pIHtcbiAgICBpZiAodGhpcy5fb2JqUmVmKSB7XG4gICAgICB0aGlzLl9vYmpSZWYubGF5ZXJzID0gYXBwbHlWYWx1ZTxMYXllcnM+KHRoaXMuX29ialJlZi5sYXllcnMsIHZhbHVlKTtcbiAgICB9XG4gIH1cbiAgLy8gQHRzLWlnbm9yZVxuICBwdWJsaWMgZ2V0IGxheWVycygpOiBMYXllcnMgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLl9vYmpSZWY/LmxheWVycztcbiAgfVxuICBASW5wdXQoKVxuICBwdWJsaWMgc2V0IG1hdHJpeFdvcmxkSW52ZXJzZShcbiAgICB2YWx1ZTpcbiAgICAgIHwgTWF0cml4NFxuICAgICAgfCBbXG4gICAgICAgICAgbjExOiBudW1iZXIsXG4gICAgICAgICAgbjEyOiBudW1iZXIsXG4gICAgICAgICAgbjEzOiBudW1iZXIsXG4gICAgICAgICAgbjE0OiBudW1iZXIsXG4gICAgICAgICAgbjIxOiBudW1iZXIsXG4gICAgICAgICAgbjIyOiBudW1iZXIsXG4gICAgICAgICAgbjIzOiBudW1iZXIsXG4gICAgICAgICAgbjI0OiBudW1iZXIsXG4gICAgICAgICAgbjMxOiBudW1iZXIsXG4gICAgICAgICAgbjMyOiBudW1iZXIsXG4gICAgICAgICAgbjMzOiBudW1iZXIsXG4gICAgICAgICAgbjM0OiBudW1iZXIsXG4gICAgICAgICAgbjQxOiBudW1iZXIsXG4gICAgICAgICAgbjQyOiBudW1iZXIsXG4gICAgICAgICAgbjQzOiBudW1iZXIsXG4gICAgICAgICAgbjQ0OiBudW1iZXJcbiAgICAgICAgXVxuICApIHtcbiAgICBpZiAodGhpcy5fb2JqUmVmKSB7XG4gICAgICB0aGlzLl9vYmpSZWYubWF0cml4V29ybGRJbnZlcnNlID0gYXBwbHlWYWx1ZTxNYXRyaXg0Pih0aGlzLl9vYmpSZWYubWF0cml4V29ybGRJbnZlcnNlLCB2YWx1ZSk7XG4gICAgfVxuICB9XG4gIC8vIEB0cy1pZ25vcmVcbiAgcHVibGljIGdldCBtYXRyaXhXb3JsZEludmVyc2UoKTogTWF0cml4NCB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuX29ialJlZj8ubWF0cml4V29ybGRJbnZlcnNlO1xuICB9XG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBzZXQgcHJvamVjdGlvbk1hdHJpeChcbiAgICB2YWx1ZTpcbiAgICAgIHwgTWF0cml4NFxuICAgICAgfCBbXG4gICAgICAgICAgbjExOiBudW1iZXIsXG4gICAgICAgICAgbjEyOiBudW1iZXIsXG4gICAgICAgICAgbjEzOiBudW1iZXIsXG4gICAgICAgICAgbjE0OiBudW1iZXIsXG4gICAgICAgICAgbjIxOiBudW1iZXIsXG4gICAgICAgICAgbjIyOiBudW1iZXIsXG4gICAgICAgICAgbjIzOiBudW1iZXIsXG4gICAgICAgICAgbjI0OiBudW1iZXIsXG4gICAgICAgICAgbjMxOiBudW1iZXIsXG4gICAgICAgICAgbjMyOiBudW1iZXIsXG4gICAgICAgICAgbjMzOiBudW1iZXIsXG4gICAgICAgICAgbjM0OiBudW1iZXIsXG4gICAgICAgICAgbjQxOiBudW1iZXIsXG4gICAgICAgICAgbjQyOiBudW1iZXIsXG4gICAgICAgICAgbjQzOiBudW1iZXIsXG4gICAgICAgICAgbjQ0OiBudW1iZXJcbiAgICAgICAgXVxuICApIHtcbiAgICBpZiAodGhpcy5fb2JqUmVmKSB7XG4gICAgICB0aGlzLl9vYmpSZWYucHJvamVjdGlvbk1hdHJpeCA9IGFwcGx5VmFsdWU8TWF0cml4ND4odGhpcy5fb2JqUmVmLnByb2plY3Rpb25NYXRyaXgsIHZhbHVlKTtcbiAgICB9XG4gIH1cbiAgLy8gQHRzLWlnbm9yZVxuICBwdWJsaWMgZ2V0IHByb2plY3Rpb25NYXRyaXgoKTogTWF0cml4NCB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuX29ialJlZj8ucHJvamVjdGlvbk1hdHJpeDtcbiAgfVxuICBASW5wdXQoKVxuICBwdWJsaWMgc2V0IHByb2plY3Rpb25NYXRyaXhJbnZlcnNlKFxuICAgIHZhbHVlOlxuICAgICAgfCBNYXRyaXg0XG4gICAgICB8IFtcbiAgICAgICAgICBuMTE6IG51bWJlcixcbiAgICAgICAgICBuMTI6IG51bWJlcixcbiAgICAgICAgICBuMTM6IG51bWJlcixcbiAgICAgICAgICBuMTQ6IG51bWJlcixcbiAgICAgICAgICBuMjE6IG51bWJlcixcbiAgICAgICAgICBuMjI6IG51bWJlcixcbiAgICAgICAgICBuMjM6IG51bWJlcixcbiAgICAgICAgICBuMjQ6IG51bWJlcixcbiAgICAgICAgICBuMzE6IG51bWJlcixcbiAgICAgICAgICBuMzI6IG51bWJlcixcbiAgICAgICAgICBuMzM6IG51bWJlcixcbiAgICAgICAgICBuMzQ6IG51bWJlcixcbiAgICAgICAgICBuNDE6IG51bWJlcixcbiAgICAgICAgICBuNDI6IG51bWJlcixcbiAgICAgICAgICBuNDM6IG51bWJlcixcbiAgICAgICAgICBuNDQ6IG51bWJlclxuICAgICAgICBdXG4gICkge1xuICAgIGlmICh0aGlzLl9vYmpSZWYpIHtcbiAgICAgIHRoaXMuX29ialJlZi5wcm9qZWN0aW9uTWF0cml4SW52ZXJzZSA9IGFwcGx5VmFsdWU8TWF0cml4ND4odGhpcy5fb2JqUmVmLnByb2plY3Rpb25NYXRyaXhJbnZlcnNlLCB2YWx1ZSk7XG4gICAgfVxuICB9XG4gIC8vIEB0cy1pZ25vcmVcbiAgcHVibGljIGdldCBwcm9qZWN0aW9uTWF0cml4SW52ZXJzZSgpOiBNYXRyaXg0IHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5fb2JqUmVmPy5wcm9qZWN0aW9uTWF0cml4SW52ZXJzZTtcbiAgfVxufVxuIl19