/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable no-underscore-dangle */
/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */
import { ChangeDetectionStrategy, Component, forwardRef } from '@angular/core';
import { AmbientLightProbe } from 'three';
import { ThLightProbe } from './ThLightProbe';
import { ThObject3D } from './ThObject3D';
import * as i0 from "@angular/core";
export class ThAmbientLightProbe extends ThLightProbe {
    getType() {
        return AmbientLightProbe;
    }
    // @ts-ignore
    get isAmbientLightProbe() {
        return this._objRef?.isAmbientLightProbe;
    }
}
ThAmbientLightProbe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThAmbientLightProbe, deps: null, target: i0.ɵɵFactoryTarget.Component });
ThAmbientLightProbe.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.1.1", type: ThAmbientLightProbe, selector: "th-ambientLightProbe", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLightProbe) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.1", ngImport: i0, type: ThAmbientLightProbe, decorators: [{
            type: Component,
            args: [{
                    selector: 'th-ambientLightProbe',
                    template: '<ng-content/>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLightProbe) }]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhBbWJpZW50TGlnaHRQcm9iZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC10aHJlZS9zcmMvbGliL2dlbmVyYXRlZC9UaEFtYmllbnRMaWdodFByb2JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlEQUF5RDtBQUN6RCx5Q0FBeUM7QUFDekMscUlBQXFJO0FBQ3JJLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFRLE1BQU0sZUFBZSxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxpQkFBaUIsRUFBdUIsTUFBTSxPQUFPLENBQUM7QUFDL0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7O0FBUTFDLE1BQU0sT0FBTyxtQkFHWCxTQUFRLFlBQXNCO0lBQ3ZCLE9BQU87UUFDWixPQUFPLGlCQUFpQixDQUFDO0lBQzNCLENBQUM7SUFFRCxhQUFhO0lBQ2IsSUFBVyxtQkFBbUI7UUFDNUIsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLG1CQUFtQixDQUFDO0lBQzNDLENBQUM7O2dIQVhVLG1CQUFtQjtvR0FBbkIsbUJBQW1CLCtDQUZuQixDQUFDLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FBQyxpREFGOUUsZUFBZTsyRkFJZCxtQkFBbUI7a0JBTi9CLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsb0JBQW9CLENBQUMsRUFBRSxDQUFDO2lCQUN6RiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZXJzY29yZS1kYW5nbGUgKi9cbi8qIGVzbGludC1kaXNhYmxlIEBhbmd1bGFyLWVzbGludC9jb21wb25lbnQtc2VsZWN0b3IsIEBhbmd1bGFyLWVzbGludC9jb21wb25lbnQtY2xhc3Mtc3VmZml4LCBqc2RvYy9uby10eXBlcywgaW1wb3J0L25vLWRlcHJlY2F0ZWQgKi9cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIGZvcndhcmRSZWYsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFtYmllbnRMaWdodFByb2JlLCBDb2xvclJlcHJlc2VudGF0aW9uIH0gZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgVGhMaWdodFByb2JlIH0gZnJvbSAnLi9UaExpZ2h0UHJvYmUnO1xuaW1wb3J0IHsgVGhPYmplY3QzRCB9IGZyb20gJy4vVGhPYmplY3QzRCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RoLWFtYmllbnRMaWdodFByb2JlJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudC8+JyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogVGhPYmplY3QzRCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGhBbWJpZW50TGlnaHRQcm9iZSkgfV1cbn0pXG5leHBvcnQgY2xhc3MgVGhBbWJpZW50TGlnaHRQcm9iZTxcbiAgVCBleHRlbmRzIEFtYmllbnRMaWdodFByb2JlID0gQW1iaWVudExpZ2h0UHJvYmUsXG4gIFRBUkdTID0gW2NvbG9yPzogQ29sb3JSZXByZXNlbnRhdGlvbiwgaW50ZW5zaXR5PzogbnVtYmVyXVxuPiBleHRlbmRzIFRoTGlnaHRQcm9iZTxULCBUQVJHUz4ge1xuICBwdWJsaWMgZ2V0VHlwZSgpOiBUeXBlPEFtYmllbnRMaWdodFByb2JlPiB7XG4gICAgcmV0dXJuIEFtYmllbnRMaWdodFByb2JlO1xuICB9XG5cbiAgLy8gQHRzLWlnbm9yZVxuICBwdWJsaWMgZ2V0IGlzQW1iaWVudExpZ2h0UHJvYmUoKTogdHJ1ZSB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuX29ialJlZj8uaXNBbWJpZW50TGlnaHRQcm9iZTtcbiAgfVxufVxuIl19