{"version":3,"file":"ngx-three.mjs","sources":["../../../projects/ngx-three/src/lib/events/raycaster.service.ts","../../../projects/ngx-three/src/lib/util.ts","../../../projects/ngx-three/src/lib/loaders/LazyObject3dProxy.ts","../../../projects/ngx-three/src/lib/ThWrapperBase.ts","../../../projects/ngx-three/src/lib/ThObjectBase.ts","../../../projects/ngx-three/src/lib/generated/ThObject3D.ts","../../../projects/ngx-three/src/lib/events/raycaster.events.directive.ts","../../../projects/ngx-three/src/lib/generated/ThEffectComposerGen.ts","../../../projects/ngx-three/src/lib/generated/ThCamera.ts","../../../projects/ngx-three/src/lib/generated/ThScene.ts","../../../projects/ngx-three/src/lib/ThEngine.service.ts","../../../projects/ngx-three/src/lib/ThView.ts","../../../projects/ngx-three/src/lib/generated/overrides/ThEffectComposer.ts","../../../projects/ngx-three/src/lib/ThPassBase.ts","../../../projects/ngx-three/src/lib/generated/ThPass.ts","../../../projects/ngx-three/src/lib/generated/ThRenderPassGen.ts","../../../projects/ngx-three/src/lib/generated/overrides/ThRenderPass.ts","../../../projects/ngx-three/src/lib/renderer/th-animation-loop.service.ts","../../../projects/ngx-three/src/lib/ThCanvas.ts","../../../projects/ngx-three/src/lib/ThControlBase.ts","../../../projects/ngx-three/src/lib/generated/ThTransformControlsGen.ts","../../../projects/ngx-three/src/lib/generated/overrides/ThTransformControls.ts","../../../projects/ngx-three/src/lib/generated/ThAdaptiveToneMappingPass.ts","../../../projects/ngx-three/src/lib/generated/ThAfterimagePass.ts","../../../projects/ngx-three/src/lib/generated/ThLight.ts","../../../projects/ngx-three/src/lib/generated/ThAmbientLight.ts","../../../projects/ngx-three/src/lib/generated/ThLightProbe.ts","../../../projects/ngx-three/src/lib/generated/ThAmbientLightProbe.ts","../../../projects/ngx-three/src/lib/generated/ThArcballControls.ts","../../../projects/ngx-three/src/lib/generated/ThPerspectiveCamera.ts","../../../projects/ngx-three/src/lib/generated/ThArrayCamera.ts","../../../projects/ngx-three/src/lib/generated/ThArrowHelper.ts","../../../projects/ngx-three/src/lib/generated/ThAudio.ts","../../../projects/ngx-three/src/lib/generated/ThAudioListener.ts","../../../projects/ngx-three/src/lib/generated/ThLine.ts","../../../projects/ngx-three/src/lib/generated/ThLineSegments.ts","../../../projects/ngx-three/src/lib/generated/ThAxesHelper.ts","../../../projects/ngx-three/src/lib/generated/ThBloomPass.ts","../../../projects/ngx-three/src/lib/generated/ThBokehPass.ts","../../../projects/ngx-three/src/lib/generated/ThBone.ts","../../../projects/ngx-three/src/lib/generated/ThBox3Helper.ts","../../../projects/ngx-three/src/lib/ThGeometryBase.ts","../../../projects/ngx-three/src/lib/generated/ThBufferGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThBoxGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThBoxHelper.ts","../../../projects/ngx-three/src/lib/generated/ThBoxLineGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThCameraHelper.ts","../../../projects/ngx-three/src/lib/ThTextureBase.ts","../../../projects/ngx-three/src/lib/generated/ThTexture.ts","../../../projects/ngx-three/src/lib/generated/ThCanvasTexture.ts","../../../projects/ngx-three/src/lib/generated/ThCapsuleGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThCircleGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThClearMaskPass.ts","../../../projects/ngx-three/src/lib/generated/ThClearPass.ts","../../../projects/ngx-three/src/lib/generated/ThCompressedTexture.ts","../../../projects/ngx-three/src/lib/generated/ThCompressedArrayTexture.ts","../../../projects/ngx-three/src/lib/generated/ThCylinderGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThConeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThConvexGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThCubeCamera.ts","../../../projects/ngx-three/src/lib/generated/ThCubeTexture.ts","../../../projects/ngx-three/src/lib/generated/ThCubeTexturePass.ts","../../../projects/ngx-three/src/lib/generated/ThData3DTexture.ts","../../../projects/ngx-three/src/lib/generated/ThDataArrayTexture.ts","../../../projects/ngx-three/src/lib/generated/ThDataTexture.ts","../../../projects/ngx-three/src/lib/generated/ThDecalGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThDepthTexture.ts","../../../projects/ngx-three/src/lib/generated/ThDirectionalLight.ts","../../../projects/ngx-three/src/lib/generated/ThDirectionalLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPolyhedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThDodecahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThDotScreenPass.ts","../../../projects/ngx-three/src/lib/generated/ThDragControls.ts","../../../projects/ngx-three/src/lib/generated/ThEdgesGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThExtrudeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThFilmPass.ts","../../../projects/ngx-three/src/lib/generated/ThFirstPersonControls.ts","../../../projects/ngx-three/src/lib/generated/ThFlyControls.ts","../../../projects/ngx-three/src/lib/generated/ThFramebufferTexture.ts","../../../projects/ngx-three/src/lib/generated/ThGlitchPass.ts","../../../projects/ngx-three/src/lib/generated/ThGridHelper.ts","../../../projects/ngx-three/src/lib/generated/ThGroup.ts","../../../projects/ngx-three/src/lib/generated/ThHalftonePass.ts","../../../projects/ngx-three/src/lib/generated/ThHemisphereLight.ts","../../../projects/ngx-three/src/lib/generated/ThHemisphereLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThHemisphereLightProbe.ts","../../../projects/ngx-three/src/lib/generated/ThIcosahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThInstancedBufferGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThMesh.ts","../../../projects/ngx-three/src/lib/generated/ThInstancedMesh.ts","../../../projects/ngx-three/src/lib/generated/ThLatheGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThLightningStrike.ts","../../../projects/ngx-three/src/lib/ThMaterialBase.ts","../../../projects/ngx-three/src/lib/generated/ThMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThLineBasicMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThLineDashedMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThLineLoop.ts","../../../projects/ngx-three/src/lib/generated/ThLOD.ts","../../../projects/ngx-three/src/lib/generated/ThShaderPass.ts","../../../projects/ngx-three/src/lib/generated/ThLUTPass.ts","../../../projects/ngx-three/src/lib/generated/ThOrbitControls.ts","../../../projects/ngx-three/src/lib/generated/ThMapControls.ts","../../../projects/ngx-three/src/lib/generated/ThMaskPass.ts","../../../projects/ngx-three/src/lib/generated/ThMeshBasicMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshDepthMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshDistanceMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshLambertMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshMatcapMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshNormalMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshPhongMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshStandardMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshPhysicalMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshToonMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThOctahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThOrthographicCamera.ts","../../../projects/ngx-three/src/lib/generated/ThOutlinePass.ts","../../../projects/ngx-three/src/lib/generated/ThParametricGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThPlaneGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThPlaneHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPointerLockControls.ts","../../../projects/ngx-three/src/lib/generated/ThPointLight.ts","../../../projects/ngx-three/src/lib/generated/ThPointLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPoints.ts","../../../projects/ngx-three/src/lib/generated/ThPointsMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThPolarGridHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPositionalAudio.ts","../../../projects/ngx-three/src/lib/generated/ThShaderMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThRawShaderMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThRectAreaLight.ts","../../../projects/ngx-three/src/lib/generated/ThRingGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThRoundedBoxGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThSAOPass.ts","../../../projects/ngx-three/src/lib/generated/ThSavePass.ts","../../../projects/ngx-three/src/lib/generated/ThShadowMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThShapeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThSkeletonHelper.ts","../../../projects/ngx-three/src/lib/generated/ThSkinnedMesh.ts","../../../projects/ngx-three/src/lib/generated/ThSMAAPass.ts","../../../projects/ngx-three/src/lib/generated/ThSphereGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThSpotLight.ts","../../../projects/ngx-three/src/lib/generated/ThSpotLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThSprite.ts","../../../projects/ngx-three/src/lib/generated/ThSpriteMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThSSAARenderPass.ts","../../../projects/ngx-three/src/lib/generated/ThSSAOPass.ts","../../../projects/ngx-three/src/lib/generated/ThSSRPass.ts","../../../projects/ngx-three/src/lib/generated/ThStereoCamera.ts","../../../projects/ngx-three/src/lib/generated/ThTAARenderPass.ts","../../../projects/ngx-three/src/lib/generated/ThTeapotGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTetrahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTextGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTexturePass.ts","../../../projects/ngx-three/src/lib/generated/ThTorusGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTorusKnotGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTrackballControls.ts","../../../projects/ngx-three/src/lib/generated/ThTubeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThUnrealBloomPass.ts","../../../projects/ngx-three/src/lib/generated/ThVideoTexture.ts","../../../projects/ngx-three/src/lib/generated/ThWireframeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ngx-three-generated.module.ts","../../../projects/ngx-three/src/lib/loaders/ThLoaderBase.ts","../../../projects/ngx-three/src/lib/loaders/ThCallbackLoaderBase.ts","../../../projects/ngx-three/src/lib/loaders/compressed-texture/ThDDSLoader.ts","../../../projects/ngx-three/src/lib/loaders/compressed-texture/ThKTX2Loader.ts","../../../projects/ngx-three/src/lib/loaders/compressed-texture/ThKTXLoader.ts","../../../projects/ngx-three/src/lib/loaders/compressed-texture/ThPVRLoader.ts","../../../projects/ngx-three/src/lib/loaders/data-texture/ThEXRLoader.ts","../../../projects/ngx-three/src/lib/loaders/data-texture/ThRGBELoader.ts","../../../projects/ngx-three/src/lib/loaders/data-texture/ThRGBMLoader.ts","../../../projects/ngx-three/src/lib/loaders/data-texture/ThTGALoader.ts","../../../projects/ngx-three/src/lib/loaders/ThCubeTextureLoader.ts","../../../projects/ngx-three/src/lib/loaders/ThAsyncLoaderBase.ts","../../../projects/ngx-three/src/lib/loaders/compressed-texture/ThDRACOLoader.ts","../../../projects/ngx-three/src/lib/loaders/ThGLTFLoader.ts","../../../projects/ngx-three/src/lib/loaders/ThTextureLoader.ts","../../../projects/ngx-three/src/lib/pipes/clone.pipe.ts","../../../projects/ngx-three/src/lib/pipes/color.pipe.ts","../../../projects/ngx-three/src/lib/pipes/fog.pipe.ts","../../../projects/ngx-three/src/lib/pipes/vector.pipe.ts","../../../projects/ngx-three/src/lib/renderer/th-render.directive.ts","../../../projects/ngx-three/src/lib/stats/stats.directive.ts","../../../projects/ngx-three/src/lib/loaders/ThOBJLoader.ts","../../../projects/ngx-three/src/lib/loaders/ThFBXLoader.ts","../../../projects/ngx-three/src/lib/loaders/data-texture/ThLogLuvLoader.ts","../../../projects/ngx-three/src/lib/generated/index.ts","../../../projects/ngx-three/src/lib/loaders/ThPLYLoader.ts","../../../projects/ngx-three/src/lib/pipes/bind.pipe.ts","../../../projects/ngx-three/src/lib/extra/web/html.component.ts","../../../projects/ngx-three/src/lib/extra/web/html.component.html","../../../projects/ngx-three/src/lib/directives/ref-by-id.directive.ts","../../../projects/ngx-three/src/lib/pipes/plane.pipe.ts","../../../projects/ngx-three/src/lib/ngx-three.module.ts","../../../projects/ngx-three/src/lib/component.helpers.ts","../../../projects/ngx-three/src/public-api.ts","../../../projects/ngx-three/src/ngx-three.ts"],"sourcesContent":["import { inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport * as THREE from 'three';\nimport { Intersection, Raycaster } from 'three';\nimport { ThCamera } from '../generated/ThCamera';\nimport { RaycasterEventDirective } from './raycaster.events.directive';\n\n// eslint-disable-next-line no-shadow\nexport enum RaycasterEvent {\n  mouseEnter = 'mouseEnter',\n  mouseExit = 'mouseExit',\n  click = 'click',\n  pointerDown = 'pointerDown',\n  pointerUp = 'pointerUp'\n}\n\nexport const RAYCASTER = new InjectionToken<Raycaster>('A reference to the raycaster object', {\n  factory: () => new Raycaster()\n});\n\ninterface NearestIntersection extends Intersection {\n  target?: RaycasterEventDirective | null;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n  private canvas?: HTMLCanvasElement;\n  private raycaster = inject(RAYCASTER);\n  private selected: RaycasterEventDirective | null = null;\n  private enabled = true;\n  private camera?: ThCamera;\n  private groups: Array<RaycasterEventDirective> = [];\n  private paused = false;\n\n  private maxClickDistance = 23;\n\n  private static instanceCnt = 0;\n\n  /**\n   * targets of the pointer down event\n   */\n  private pointerDownEvent?: PointerEvent;\n\n  public readonly nid = RaycasterService.instanceCnt++;\n\n  constructor() {\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n  }\n\n  public ngOnDestroy(): void {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    if (!this.canvas) {\n      throw new Error('missing canvas');\n    }\n    this.canvas.addEventListener('pointermove', this.onPointerMove);\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.canvas.addEventListener('pointerup', this.onPointerUp);\n  }\n\n  private unsubscribe() {\n    if (!this.canvas) {\n      throw new Error('missing canvas');\n    }\n    this.canvas.removeEventListener('pointermove', this.onPointerMove);\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.canvas.removeEventListener('pointerup', this.onPointerUp);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public init(camera: ThCamera, canvas: HTMLCanvasElement) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n    this.canvas = canvas;\n    this.subscribe();\n  }\n\n  public addEventTarget(target: RaycasterEventDirective) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(target);\n  }\n\n  public removeEventTarget(target: RaycasterEventDirective) {\n    const index = this.groups.indexOf(target);\n    if (index >= 0) {\n      this.groups.splice(index, 1);\n    }\n  }\n\n  private onPointerMove(event: any /*MouseEvent  & { layerX: number, layerY: number}*/) {\n    if (!this.isReady()) {\n      return;\n    }\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.mouseEnter);\n    if (!this.selected || this.selected !== i?.target) {\n      if (this.selected) {\n        this.selected.host.objRef?.dispatchEvent({\n          type: RaycasterEvent.mouseExit,\n          component: this.selected.host\n        });\n        this.selected.emitOnMouseExit();\n        this.selected = null;\n      }\n      if (i && i.target) {\n        this.selected = i.target;\n        const evt = {\n          type: RaycasterEvent.mouseEnter,\n          component: i.target.host,\n          ...i\n        };\n        this.selected.host.objRef?.dispatchEvent(evt);\n        this.selected.emitOnMouseEnter(evt);\n      }\n    }\n  }\n\n  private onPointerDown(event: PointerEvent) {\n    this.maxClickDistance = event.width;\n    this.pointerDownEvent = event;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    const i = this.getFirstIntersectedGroup((event as any).layerX, (event as any).layerY, RaycasterEvent.pointerDown);\n    if (i && i.target && i.target.host.objRef) {\n      const evt = { type: RaycasterEvent.pointerDown, component: i.target.host, ...i };\n      i.target.host.objRef.dispatchEvent(evt);\n      i.target.emitOnPointerDown(evt);\n    }\n  }\n\n  private onPointerUp(event: PointerEvent) {\n    const downEvent = this.pointerDownEvent;\n    this.pointerDownEvent = undefined;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    // pointer up\n    let i = this.getFirstIntersectedGroup((event as any).layerX, (event as any).layerY, RaycasterEvent.pointerUp);\n    if (i && i.target && i.target.host.objRef) {\n      const evt = { type: RaycasterEvent.pointerUp, component: i.target.host, ...i };\n      i.target.host.objRef.dispatchEvent(evt);\n      i.target.emitOnPointerUp(evt);\n    }\n\n    // click\n    if (this.calcPointerDownUpDinstance(event, downEvent) > this.maxClickDistance) {\n      return;\n    }\n    i = this.getFirstIntersectedGroup((event as any).layerX, (event as any).layerY, RaycasterEvent.click);\n    if (i && i.target && i.target.host.objRef) {\n      const evt = { type: RaycasterEvent.click, component: i.target.host, ...i };\n      i.target.host.objRef.dispatchEvent(evt);\n      i.target.emitOnClick(evt);\n    }\n  }\n\n  private isReady(ignorePaused?: boolean): boolean {\n    return !!(\n      this.enabled &&\n      (ignorePaused || !this.paused) &&\n      this.camera &&\n      this.camera.objRef &&\n      this.groups &&\n      this.groups.length > 0\n    );\n  }\n\n  private calcPointerDownUpDinstance(upEvent: PointerEvent, downEvent?: PointerEvent) {\n    if (!downEvent) {\n      return Number.MAX_VALUE;\n    }\n    const xDist = (upEvent as any).layerX - (downEvent as any).layerX;\n    const yDist = (upEvent as any).layerY - (downEvent as any).layerY;\n    return Math.sqrt(xDist * xDist + yDist * yDist);\n  }\n\n  private getFirstIntersectedGroup(x: number, y: number, event: RaycasterEvent): NearestIntersection | undefined {\n    if (!this.camera || !this.canvas || !this.camera.objRef) {\n      return;\n    }\n    x = (x / this.canvas.clientWidth) * 2 - 1;\n    y = -(y / this.canvas.clientHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector2(x, y);\n    this.raycaster.setFromCamera(mouseVector, this.camera.objRef);\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection | undefined;\n    let nearestGroup: RaycasterEventDirective | undefined;\n    for (const group of this.groups) {\n      const i = group.host.objRef;\n      if (!group[event] || !i) {\n        continue;\n      }\n      const intersection = this.raycaster.intersectObject(i, true);\n      if (\n        intersection.length > 0 &&\n        (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)\n      ) {\n        nearestIntersection = intersection[0];\n        nearestGroup = group;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup && nearestIntersection) {\n      return {\n        target: nearestGroup,\n        ...nearestIntersection\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport interface ThSettable {\n  set(...args: any): this;\n  copy?(value: any): this;\n}\n\nexport function isSettable(obj: any): obj is ThSettable {\n  return !!(obj && obj.set); // && obj.copy;\n}\n\n/**\n * tries to apply the new value to the target.\n * if the new value is 'setter arguments' then it uses set on the target.\n * else it tries to use the 'copy' method of the target if available\n * else it return the newValue as new target\n * if newValue is undefined the old target is returned\n *\n * @param target the target for the new value\n * @param newValue the value to be set\n * @returns the new target(value)\n */\nexport function applyValue<T>(target: T, newValue?: any[] | T): T {\n  if (isSettable(target)) {\n    if (newValue === undefined) {\n      return target as T;\n    }\n\n    if (Array.isArray(newValue)) {\n      target.set(...newValue);\n      return target as T;\n    }\n\n    if (target.copy && newValue) {\n      target.copy(newValue);\n      return target as T;\n    }\n\n    // just set the value\n    if (newValue !== undefined) {\n      target.set(newValue);\n      return target;\n    }\n  } else {\n    // apply the value\n    return newValue as T;\n  }\n\n  // nothing to do\n  return target;\n}\n\nexport function isDisposable(obj: any): obj is { dispose: () => void } {\n  if (obj && typeof obj.dispose === 'function') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * compatibility function for checking if a subject is observed\n * works with RxJs 6.x.x and RxJs 7+\n *\n * @param s the subject\n * @returns true if the subject is observed\n */\nexport function isObserved<T = any>(s?: Subject<T>): s is Subject<T> {\n  return (\n    s !== undefined &&\n    (s.observed /* <-- needs at least RxJs 7.x.x */ || s.observers?.length > 0) /* <-- for RxJs < 7.x.x */\n  );\n}\n\n// This can live anywhere in your codebase:\nexport function applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null)\n      );\n    });\n  });\n}\n\n// typed changes for ngOnChanges\n\ntype MarkFunctionProperties<Component> = {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  [Key in keyof Component]: Component[Key] extends Function ? never : Key;\n};\n\ntype ExcludeFunctionPropertyNames<T> = MarkFunctionProperties<T>[keyof T];\n\ntype ExcludeFunctions<T> = Pick<T, ExcludeFunctionPropertyNames<T>>;\n\nexport type NgChanges<Component, Props = ExcludeFunctions<Component>> = {\n  [Key in keyof Props]?: {\n    previousValue: Props[Key];\n    currentValue: Props[Key];\n    firstChange: boolean;\n    isFirstChange(): boolean;\n  };\n};\n","import { Object3D, Event } from 'three';\nimport { applyValue, isSettable } from '../util';\n\nclass Object3DProxyHandler implements ProxyHandler<Object3D> {\n  constructor(target: Object3D) {\n    this.objRef = target;\n  }\n\n  protected objRef: Object3D;\n  protected memberMap = new Map<keyof Object3D, any>();\n  protected children: Object3D[] = [];\n  protected eventListener: { [key: string]: ((event: Event) => void)[] } = {};\n  protected loaded = false;\n\n  get(_target: unknown, p: keyof LazyObject3DProxy, receiver: any): any {\n    switch (p) {\n      case '__isProxy':\n        return true;\n      case 'applyToObject3D':\n        return this.applyToObject3D;\n      case 'objRef':\n        if (this.loaded) {\n          return this.objRef;\n        } else {\n          return undefined;\n        }\n      case 'add':\n        return this.add;\n      case 'remove':\n        return this.remove;\n      case 'children':\n        return this.objRef ? this.objRef.children : this.children;\n      default: {\n        const objKey = p as keyof Object3D;\n        const value = this.objRef[objKey];\n        if (value !== undefined) {\n          // this is necessary for complex members\n          // (returned by reference, they might be altered, we have to reapply them to the real object )\n          this.memberMap.set(objKey, value);\n        }\n        return value;\n      }\n    }\n  }\n\n  set(_target: unknown, p: keyof LazyObject3DProxy, value: any, _receiver: any): boolean {\n    if (p === 'objRef') {\n      if (value) {\n        this.applyToObject3D(value);\n      }\n      this.loaded = true;\n      this.objRef = value;\n    } else {\n      // store to the member map\n      this.memberMap.set(p as keyof Object3D, value);\n      if (this.objRef) {\n        // and apply to the real object if present\n        (this.objRef as any)[p] = value;\n      }\n    }\n    return true;\n  }\n\n  add = (...object: Object3D[]): this => {\n    if (this.objRef) {\n      this.objRef.add(...object);\n    }\n\n    this.children.push(...object);\n\n    return this;\n  };\n\n  remove = (...object: Object3D[]): this => {\n    if (this.objRef) {\n      this.objRef.remove(...object);\n    }\n\n    for (const obj of object) {\n      const index = this.children.indexOf(obj);\n      if (index >= 0) {\n        this.children = this.children.splice(index, 1);\n      }\n    }\n\n    return this;\n  };\n\n  applyToObject3D = (objRef: Object3D) => {\n    this.memberMap.forEach((value, key) => {\n      const member = (objRef as any)[key];\n      if (isSettable(member)) {\n        applyValue(member, value);\n      } else {\n        (objRef as any)[key] = value;\n      }\n    });\n\n    this.children.forEach((child) => objRef.add(child));\n\n    if (this.objRef?.parent) {\n      const parent = this.objRef?.parent;\n      parent.remove(this.objRef);\n      parent.add(objRef);\n    }\n  };\n\n  /**\n   * Adds a listener to an event type.\n   *\n   * @param type The type of event to listen to.\n   * @param listener The function that gets called when the event is fired.\n   */\n  addEventListener = (type: string, listener: (event: Event) => void): void => {\n    let arr = this.eventListener[type];\n    if (!arr) {\n      arr = [];\n      this.eventListener[type] = arr;\n    }\n\n    arr.push(listener);\n\n    if (this.objRef) {\n      this.objRef.addEventListener(type, listener);\n    }\n  };\n\n  /**\n   * Removes a listener from an event type.\n   *\n   * @param type The type of the listener that gets removed.\n   * @param listener The listener function that gets removed.\n   */\n  removeEventListener = (type: string, listener: (event: Event) => void): void => {\n    const arr = this.eventListener[type];\n    if (!arr) {\n      return;\n    }\n\n    const index = arr.indexOf(listener);\n    if (index >= 0) {\n      arr.splice(index, 1);\n    }\n  };\n}\n\nexport interface LazyObject3DProxy extends Object3D {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  readonly __isProxy?: boolean;\n  objRef?: Object3D;\n  applyToObject3D(real: Object3D): void;\n}\n\nexport function createLazyObject3DProxy(target = new Object3D()): LazyObject3DProxy {\n  const handler = new Object3DProxyHandler(target);\n  return new Proxy<LazyObject3DProxy>(handler as unknown as LazyObject3DProxy, handler);\n}\n\nexport function isLazyObject3dProxy(object: Object3D | LazyObject3DProxy): object is LazyObject3DProxy {\n  return (\n    // eslint-disable-next-line no-underscore-dangle\n    (object as LazyObject3DProxy).__isProxy === true && (object as LazyObject3DProxy).objRef === undefined\n  );\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  Type\n} from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { EventDispatcher, Object3D } from 'three';\nimport { isLazyObject3dProxy } from './loaders/LazyObject3dProxy';\nimport { ThWrapperLifeCycle } from './ThWrapperLifeCycle';\nimport { isDisposable } from './util';\n\n@Component({\n  selector: 'th-abs-wrapper',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThWrapperBase<T, ARGS = unknown> implements ThWrapperLifeCycle, OnChanges, OnInit, OnDestroy {\n  protected _objRef?: T;\n  protected _objRef$?: ReplaySubject<T>;\n\n  @Input()\n  public autoAddToParent = true;\n\n  @Input()\n  public autoDispose = true;\n\n  @Input()\n  set objRef(ref: T | undefined) {\n    this.applyObjRef(ref);\n  }\n\n  get objRef() {\n    return this._objRef;\n  }\n\n  // emit the changes\n  protected updateEmitter?: EventEmitter<SimpleChanges>;\n\n  constructor() {\n    // nothing to do\n  }\n\n  addToParent(): void {\n    // nothing to do, implement it in a derived class\n  }\n  removeFromParent(): void {\n    // nothing to do, implement it in a derived class\n  }\n\n  @Input()\n  public args?: ARGS;\n\n  protected eventListeners?: { [key: THREE.Event['type']]: THREE.EventListener<THREE.Event, THREE.Event['type'], T> };\n  @Input()\n  public set threeEvents(\n    eventMap: { [key: THREE.Event['type']]: THREE.EventListener<THREE.Event, THREE.Event['type'], T> } | undefined\n  ) {\n    this.removeEvents();\n    this.eventListeners = eventMap;\n    this.applyEvents();\n  }\n\n  public get threeEvents() {\n    return this.eventListeners;\n  }\n\n  @Output()\n  public get onUpdate(): Observable<SimpleChanges> {\n    if (!this.updateEmitter) {\n      this.updateEmitter = new EventEmitter();\n    }\n    return this.updateEmitter;\n  }\n\n  /**\n   * emits the last assigned object ref\n   */\n  @Output()\n  public get objRef$(): Observable<T> {\n    if (!this._objRef$) {\n      this._objRef$ = new ReplaySubject(1);\n    }\n    return this._objRef$;\n  }\n\n  ngOnInit(): void {\n    if (!this.objRef) {\n      this.objRef = this.createThreeInstance(this.args);\n    }\n  }\n\n  // Override this\n  public getType(): Type<any> {\n    throw new Error('derive me');\n  }\n\n  public createThreeInstance(args?: unknown) {\n    if (Array.isArray(args)) {\n      return new (this.getType())(...(args as any[]));\n    } else {\n      return new (this.getType())(args);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log('on changes');\n    if (this.objRef && !isLazyObject3dProxy(this.objRef as any)) {\n      // the object is already set and it is no proxy\n\n      // emit the changes\n      this.emitPropertyChanges(changes);\n\n      // TODO: request animation frame\n\n      return;\n    }\n\n    if (!this.objRef) {\n      // no object and no proxy is set --> create an instance\n      this.objRef = this.createThreeInstance(changes.args?.currentValue);\n    }\n\n    // eslint-disable-next-line guard-for-in\n    for (const key in changes) {\n      (this as any)[key] = changes[key].currentValue;\n    }\n    this.emitPropertyChanges(changes);\n  }\n\n  public disposeObjRef() {\n    if (isDisposable(this.objRef)) {\n      this.objRef.dispose();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeEvents();\n    this.removeFromParent();\n\n    if (this.autoDispose) {\n      this.disposeObjRef();\n    }\n  }\n\n  protected applyObjRef(objRef: T | undefined) {\n    if (this._objRef !== objRef) {\n      this.removeFromParent();\n      this._objRef = objRef;\n      if (this.autoAddToParent) {\n        this.addToParent();\n      }\n    }\n    this.emitObjRefChange();\n  }\n\n  protected emitObjRefChange() {\n    // only emit change if _objRef is no proxy,\n    // and trigger emit over objRef event emitter\n    if (this._objRef && !isLazyObject3dProxy(this._objRef as any)) {\n      (this._objRef as unknown as Object3D).dispatchEvent?.({ type: 'loaded', object: this._objRef });\n      if (this._objRef$) {\n        this._objRef$.next(this._objRef);\n      }\n    }\n  }\n\n  protected emitPropertyChanges(changes: SimpleChanges) {\n    if (this._objRef) {\n      (this._objRef as unknown as EventDispatcher).dispatchEvent?.({ type: 'changes', changes });\n    }\n    if (this.updateEmitter) {\n      this.updateEmitter.next(changes);\n    }\n  }\n\n  private removeEvents() {\n    if (this.eventListeners && this._objRef) {\n      for (const entry of Object.entries(this.eventListeners)) {\n        (this._objRef as any).removeEventListener(entry[0], entry[1]);\n      }\n      this.eventListeners = undefined;\n    }\n  }\n\n  private applyEvents() {\n    if (this.eventListeners && this._objRef) {\n      for (const entry of Object.entries(this.eventListeners)) {\n        (this._objRef as any).addEventListener(entry[0], entry[1]);\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Object3D, Vector3 } from 'three';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-object',\n  template: '<ng-content/>'\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThObjectBase<T extends Object3D, ARGS = unknown> extends ThWrapperBase<T, ARGS> implements OnInit {\n  constructor(public parent: ThObjectBase<any>) {\n    super();\n  }\n\n  public override addToParent() {\n    if (\n      this._objRef &&\n      this.parent.objRef &&\n      (!this._objRef.parent || this._objRef.parent.uuid !== this.parent.objRef.uuid)\n    ) {\n      this.parent.objRef.add(this._objRef);\n    }\n  }\n\n  public override removeFromParent() {\n    this._objRef?.parent?.remove(this._objRef);\n  }\n\n  protected override applyObjRef(objRef: T | undefined) {\n    if (this._objRef !== objRef || this._objRef?.parent?.uuid !== this.parent.objRef.uuid) {\n      this.removeFromParent();\n      this._objRef = objRef;\n      if (this.autoAddToParent) {\n        this.addToParent();\n      }\n    }\n    this.emitObjRefChange();\n  }\n\n  protected attachToParent(newRef?: T, oldRef?: T) {\n    if (!this.parent.objRef || (newRef === oldRef && oldRef?.parent?.uuid === this.parent.objRef.uuid)) {\n      return;\n    }\n\n    // remove old obj from parent\n    if (oldRef && oldRef.parent) {\n      oldRef.parent.remove(oldRef);\n    }\n\n    // add new obj to parent\n    if (newRef && (!newRef.parent || (newRef.parent && newRef.parent.uuid !== this.parent.objRef.uuid))) {\n      this.parent.objRef.add(newRef);\n    }\n  }\n\n  // object 3d methods\n  @Input()\n  public set lookAt(vector: Vector3 | [x: number, y: number, z: number]) {\n    Promise.resolve().then(() => {\n      // execute next microtick, to assume all\n      // position changes already happend,\n      // because lookAt triggers a world matrix calculation\n      if (!this.objRef) {\n        return;\n      }\n      if (Array.isArray(vector)) {\n        this.objRef.lookAt(...vector);\n      } else {\n        this.objRef.lookAt(vector);\n      }\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, Input, SkipSelf, Type } from '@angular/core';\nimport {\n  AnimationClip,\n  BaseEvent,\n  BufferGeometry,\n  Camera,\n  Euler,\n  EulerOrder,\n  Event,\n  Group,\n  Layers,\n  Material,\n  Matrix3,\n  Matrix4,\n  Object3D,\n  Quaternion,\n  Scene,\n  Vector3,\n  WebGLRenderer\n} from 'three';\nimport { ThObjectBase } from '../ThObjectBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-object3D',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: []\n})\nexport class ThObject3D<\n  E extends BaseEvent = Event,\n  T extends Object3D<E> = Object3D<E>,\n  TARGS = []\n> extends ThObjectBase<T, TARGS> {\n  public getType(): Type<Object3D<E>> {\n    return Object3D;\n  }\n\n  // @ts-ignore\n  public get isObject3D(): true | undefined {\n    return this._objRef?.isObject3D;\n  }\n  // @ts-ignore\n  public get id(): number | undefined {\n    return this._objRef?.id;\n  }\n  @Input()\n  public set uuid(value: string) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uuid(): string | undefined {\n    return this._objRef?.uuid;\n  }\n  @Input()\n  public set name(value: string) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n\n  // @ts-ignore\n  public get name(): string | undefined {\n    return this._objRef?.name;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Object3D') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set children(value: Object3D[]) {\n    if (this._objRef) {\n      this._objRef.children = value;\n    }\n  }\n\n  // @ts-ignore\n  public get children(): Object3D[] | undefined {\n    return this._objRef?.children;\n  }\n  @Input()\n  public set up(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.up = applyValue<Vector3>(this._objRef.up, value);\n    }\n  }\n  // @ts-ignore\n  public get up(): Vector3 | undefined {\n    return this._objRef?.up;\n  }\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  public get position(): Vector3 | undefined {\n    return this._objRef?.position;\n  }\n  @Input()\n  public set rotation(value: Euler | [x: number, y: number, z: number, order?: EulerOrder]) {\n    if (this._objRef) {\n      applyValue<Euler>(this._objRef.rotation, value);\n    }\n  }\n  // @ts-ignore\n  public get rotation(): Euler | undefined {\n    return this._objRef?.rotation;\n  }\n  @Input()\n  public set quaternion(value: Quaternion | [x: number, y: number, z: number, w: number]) {\n    if (this._objRef) {\n      applyValue<Quaternion>(this._objRef.quaternion, value);\n    }\n  }\n  // @ts-ignore\n  public get quaternion(): Quaternion | undefined {\n    return this._objRef?.quaternion;\n  }\n  @Input()\n  public set scale(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      applyValue<Vector3>(this._objRef.scale, value);\n    }\n  }\n  // @ts-ignore\n  public get scale(): Vector3 | undefined {\n    return this._objRef?.scale;\n  }\n  @Input()\n  public set modelViewMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      applyValue<Matrix4>(this._objRef.modelViewMatrix, value);\n    }\n  }\n  // @ts-ignore\n  public get modelViewMatrix(): Matrix4 | undefined {\n    return this._objRef?.modelViewMatrix;\n  }\n  @Input()\n  public set normalMatrix(\n    value:\n      | Matrix3\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n31: number,\n          n32: number,\n          n33: number\n        ]\n  ) {\n    if (this._objRef) {\n      applyValue<Matrix3>(this._objRef.normalMatrix, value);\n    }\n  }\n  // @ts-ignore\n  public get normalMatrix(): Matrix3 | undefined {\n    return this._objRef?.normalMatrix;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix4 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set matrixWorld(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrixWorld = applyValue<Matrix4>(this._objRef.matrixWorld, value);\n    }\n  }\n  // @ts-ignore\n  public get matrixWorld(): Matrix4 | undefined {\n    return this._objRef?.matrixWorld;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  @Input()\n  public set matrixWorldAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixWorldAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixWorldAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixWorldAutoUpdate;\n  }\n  @Input()\n  public set matrixWorldNeedsUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixWorldNeedsUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixWorldNeedsUpdate(): boolean | undefined {\n    return this._objRef?.matrixWorldNeedsUpdate;\n  }\n  @Input()\n  public set layers(value: Layers | [layer: number]) {\n    if (this._objRef) {\n      this._objRef.layers = applyValue<Layers>(this._objRef.layers, value);\n    }\n  }\n  // @ts-ignore\n  public get layers(): Layers | undefined {\n    return this._objRef?.layers;\n  }\n  @Input()\n  public set visible(value: boolean) {\n    if (this._objRef) {\n      this._objRef.visible = value;\n    }\n  }\n\n  // @ts-ignore\n  public get visible(): boolean | undefined {\n    return this._objRef?.visible;\n  }\n  @Input()\n  public set castShadow(value: boolean) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get castShadow(): boolean | undefined {\n    return this._objRef?.castShadow;\n  }\n  @Input()\n  public set receiveShadow(value: boolean) {\n    if (this._objRef) {\n      this._objRef.receiveShadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get receiveShadow(): boolean | undefined {\n    return this._objRef?.receiveShadow;\n  }\n  @Input()\n  public set frustumCulled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.frustumCulled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get frustumCulled(): boolean | undefined {\n    return this._objRef?.frustumCulled;\n  }\n  @Input()\n  public set renderOrder(value: number) {\n    if (this._objRef) {\n      this._objRef.renderOrder = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderOrder(): number | undefined {\n    return this._objRef?.renderOrder;\n  }\n  @Input()\n  public set animations(value: AnimationClip[]) {\n    if (this._objRef) {\n      this._objRef.animations = value;\n    }\n  }\n\n  // @ts-ignore\n  public get animations(): AnimationClip[] | undefined {\n    return this._objRef?.animations;\n  }\n  @Input()\n  public set userData(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n\n  // @ts-ignore\n  public get userData(): { [key: string]: any } | undefined {\n    return this._objRef?.userData;\n  }\n  @Input()\n  public set customDepthMaterial(value: Material | undefined) {\n    if (this._objRef) {\n      this._objRef.customDepthMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get customDepthMaterial(): (Material | undefined) | undefined {\n    return this._objRef?.customDepthMaterial;\n  }\n  @Input()\n  public set customDistanceMaterial(value: Material | undefined) {\n    if (this._objRef) {\n      this._objRef.customDistanceMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get customDistanceMaterial(): (Material | undefined) | undefined {\n    return this._objRef?.customDistanceMaterial;\n  }\n  @Input()\n  public set onBeforeRender(\n    value: (\n      renderer: WebGLRenderer,\n      scene: Scene,\n      camera: Camera,\n      geometry: BufferGeometry,\n      material: Material,\n      group: Group\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.onBeforeRender = value;\n    }\n  }\n\n  // @ts-ignore\n  public get onBeforeRender():\n    | ((\n        renderer: WebGLRenderer,\n        scene: Scene,\n        camera: Camera,\n        geometry: BufferGeometry,\n        material: Material,\n        group: Group\n      ) => void)\n    | undefined {\n    return this._objRef?.onBeforeRender;\n  }\n  @Input()\n  public set onAfterRender(\n    value: (\n      renderer: WebGLRenderer,\n      scene: Scene,\n      camera: Camera,\n      geometry: BufferGeometry,\n      material: Material,\n      group: Group\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.onAfterRender = value;\n    }\n  }\n\n  // @ts-ignore\n  public get onAfterRender():\n    | ((\n        renderer: WebGLRenderer,\n        scene: Scene,\n        camera: Camera,\n        geometry: BufferGeometry,\n        material: Material,\n        group: Group\n      ) => void)\n    | undefined {\n    return this._objRef?.onAfterRender;\n  }\n\n  public static readonly DEFAULT_UP = Object3D.DEFAULT_UP;\n\n  public static readonly DEFAULT_MATRIX_AUTO_UPDATE = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n  public static readonly DEFAULT_MATRIX_WORLD_AUTO_UPDATE = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE;\n\n  constructor(@SkipSelf() parent: ThObject3D) {\n    super(parent);\n  }\n}\n","import { AfterViewInit, Directive, EventEmitter, Host, OnDestroy, Output } from '@angular/core';\nimport { Intersection } from 'three';\nimport { ThObject3D } from '../generated/ThObject3D';\n\nimport { RaycasterEvent, RaycasterService } from './raycaster.service';\n\nexport interface RaycasterEmitEvent extends Intersection {\n  type: RaycasterEvent;\n  component: ThObject3D;\n}\n\n@Directive({ selector: '[onClick], [onMouseEnter], [onMouseExit], [onPointerDown], [onPointerUp]' })\nexport class RaycasterEventDirective implements AfterViewInit, OnDestroy {\n  @Output() get onMouseEnter(): EventEmitter<RaycasterEmitEvent> {\n    if (!this.mouseEnter) {\n      this.mouseEnter = new EventEmitter<RaycasterEmitEvent>();\n    }\n    return this.mouseEnter;\n  }\n  protected mouseEnter?: EventEmitter<RaycasterEmitEvent>;\n\n  @Output() get onMouseExit(): EventEmitter<{ component: ThObject3D; type: RaycasterEvent }> {\n    if (!this.mouseExit) {\n      this.mouseExit = new EventEmitter<{ component: ThObject3D; type: RaycasterEvent }>();\n    }\n    return this.mouseExit;\n  }\n  protected mouseExit?: EventEmitter<{ component: ThObject3D; type: RaycasterEvent }>;\n\n  @Output() get onClick(): EventEmitter<RaycasterEmitEvent> {\n    if (!this.click) {\n      this.click = new EventEmitter<RaycasterEmitEvent>();\n    }\n    return this.click;\n  }\n  protected click?: EventEmitter<RaycasterEmitEvent>;\n\n  @Output() get onPointerDown(): EventEmitter<RaycasterEmitEvent> {\n    if (!this.pointerDown) {\n      this.pointerDown = new EventEmitter<RaycasterEmitEvent>();\n    }\n    return this.pointerDown;\n  }\n  protected pointerDown?: EventEmitter<RaycasterEmitEvent>;\n\n  @Output() get onPointerUp(): EventEmitter<RaycasterEmitEvent> {\n    if (!this.pointerUp) {\n      this.pointerUp = new EventEmitter<RaycasterEmitEvent>();\n    }\n    return this.pointerUp;\n  }\n  protected pointerUp?: EventEmitter<RaycasterEmitEvent>;\n\n  constructor(@Host() public readonly host: ThObject3D, private raycasterService: RaycasterService) {\n    this.emitOnMouseEnter = this.emitOnMouseEnter.bind(this);\n    this.emitOnMouseExit = this.emitOnMouseExit.bind(this);\n    this.emitOnClick = this.emitOnClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    this.raycasterService.addEventTarget(this);\n  }\n\n  private unSubscribeEvents() {\n    this.raycasterService.removeEventTarget(this);\n  }\n\n  public emitOnMouseExit() {\n    this.mouseExit?.emit({\n      component: this.host,\n      type: RaycasterEvent.mouseExit\n    });\n  }\n\n  public emitOnMouseEnter(event: RaycasterEmitEvent) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter?.emit(event);\n  }\n\n  public emitOnClick(event: RaycasterEmitEvent) {\n    // console.log('onClick', event);\n    this.click?.emit(event);\n  }\n\n  public emitOnPointerDown(event: RaycasterEmitEvent) {\n    // console.log('onClick', event);\n    this.pointerDown?.emit(event);\n  }\n\n  public emitOnPointerUp(event: RaycasterEmitEvent) {\n    // console.log('onClick', event);\n    this.pointerUp?.emit(event);\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, Input, Type } from '@angular/core';\nimport { Clock, WebGLRenderer, WebGLRenderTarget } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { ThWrapperBase } from '../ThWrapperBase';\n\n@Component({\n  selector: 'th-effectComposerGen',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: []\n})\nexport class ThEffectComposerGen<\n  T extends EffectComposer = EffectComposer,\n  TARGS = [renderer: WebGLRenderer, renderTarget?: WebGLRenderTarget]\n> extends ThWrapperBase<T, TARGS> {\n  public getType(): Type<EffectComposer> {\n    return EffectComposer;\n  }\n\n  @Input()\n  public set renderer(value: WebGLRenderer) {\n    if (this._objRef) {\n      this._objRef.renderer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderer(): WebGLRenderer | undefined {\n    return this._objRef?.renderer;\n  }\n  @Input()\n  public set renderTarget1(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget1 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTarget1(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTarget1;\n  }\n  @Input()\n  public set renderTarget2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget2 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTarget2(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTarget2;\n  }\n  @Input()\n  public set writeBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.writeBuffer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get writeBuffer(): WebGLRenderTarget | undefined {\n    return this._objRef?.writeBuffer;\n  }\n  @Input()\n  public set readBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.readBuffer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get readBuffer(): WebGLRenderTarget | undefined {\n    return this._objRef?.readBuffer;\n  }\n  @Input()\n  public set passes(value: Pass[]) {\n    if (this._objRef) {\n      this._objRef.passes = value;\n    }\n  }\n\n  // @ts-ignore\n  public get passes(): Pass[] | undefined {\n    return this._objRef?.passes;\n  }\n  @Input()\n  public set copyPass(value: ShaderPass) {\n    if (this._objRef) {\n      this._objRef.copyPass = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyPass(): ShaderPass | undefined {\n    return this._objRef?.copyPass;\n  }\n  @Input()\n  public set clock(value: Clock) {\n    if (this._objRef) {\n      this._objRef.clock = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clock(): Clock | undefined {\n    return this._objRef?.clock;\n  }\n  @Input()\n  public set renderToScreen(value: boolean) {\n    if (this._objRef) {\n      this._objRef.renderToScreen = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderToScreen(): boolean | undefined {\n    return this._objRef?.renderToScreen;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input } from '@angular/core';\nimport { Camera, Event, Layers, Matrix4 } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-camera',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCamera) }]\n})\nexport abstract class ThCamera<T extends Camera = Camera, TARGS = []> extends ThObject3D<Event, T, TARGS> {\n  // @ts-ignore\n  public get isCamera(): true | undefined {\n    return this._objRef?.isCamera;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Camera') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set layers(value: Layers | [layer: number]) {\n    if (this._objRef) {\n      this._objRef.layers = applyValue<Layers>(this._objRef.layers, value);\n    }\n  }\n  // @ts-ignore\n  public get layers(): Layers | undefined {\n    return this._objRef?.layers;\n  }\n  @Input()\n  public set matrixWorldInverse(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrixWorldInverse = applyValue<Matrix4>(this._objRef.matrixWorldInverse, value);\n    }\n  }\n  // @ts-ignore\n  public get matrixWorldInverse(): Matrix4 | undefined {\n    return this._objRef?.matrixWorldInverse;\n  }\n  @Input()\n  public set projectionMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.projectionMatrix = applyValue<Matrix4>(this._objRef.projectionMatrix, value);\n    }\n  }\n  // @ts-ignore\n  public get projectionMatrix(): Matrix4 | undefined {\n    return this._objRef?.projectionMatrix;\n  }\n  @Input()\n  public set projectionMatrixInverse(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.projectionMatrixInverse = applyValue<Matrix4>(this._objRef.projectionMatrixInverse, value);\n    }\n  }\n  // @ts-ignore\n  public get projectionMatrixInverse(): Matrix4 | undefined {\n    return this._objRef?.projectionMatrixInverse;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Color, ColorRepresentation, CubeTexture, Event, FogBase, Material, Scene, Texture } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-scene',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThScene) }]\n})\nexport class ThScene<T extends Scene = Scene, TARGS = []> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Scene> {\n    return Scene;\n  }\n\n  // @ts-ignore\n  public get isScene(): true | undefined {\n    return this._objRef?.isScene;\n  }\n  @Input()\n  public set type(value: 'Scene') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): 'Scene' | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set fog(value: FogBase | null) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): (FogBase | null) | undefined {\n    return this._objRef?.fog;\n  }\n  @Input()\n  public set backgroundBlurriness(value: number) {\n    if (this._objRef) {\n      this._objRef.backgroundBlurriness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get backgroundBlurriness(): number | undefined {\n    return this._objRef?.backgroundBlurriness;\n  }\n  @Input()\n  public set backgroundIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.backgroundIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get backgroundIntensity(): number | undefined {\n    return this._objRef?.backgroundIntensity;\n  }\n  @Input()\n  public set overrideMaterial(value: Material | null) {\n    if (this._objRef) {\n      this._objRef.overrideMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get overrideMaterial(): (Material | null) | undefined {\n    return this._objRef?.overrideMaterial;\n  }\n  @Input()\n  public set background(value: Color | Texture | CubeTexture | null | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.background = applyValue<Color | Texture | CubeTexture | null>(this._objRef.background, value);\n    }\n  }\n  // @ts-ignore\n  public get background(): (Color | Texture | CubeTexture | null) | undefined {\n    return this._objRef?.background;\n  }\n  @Input()\n  public set environment(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.environment = value;\n    }\n  }\n\n  // @ts-ignore\n  public get environment(): (Texture | null) | undefined {\n    return this._objRef?.environment;\n  }\n}\n","import { EventEmitter, forwardRef, Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport * as THREE from 'three';\nimport { Clock, Vector4, WebGLRenderer, WebGLRendererParameters } from 'three';\nimport { ThView } from './ThView';\nimport { isObserved } from './util';\nimport { Observable, Subject, takeUntil } from 'rxjs';\n\nexport interface RenderState {\n  engine: ThEngineService;\n  delta: number;\n}\nexport interface ThRendererParameters extends Partial<WebGLRenderer> {\n  domElement: HTMLCanvasElement;\n}\n\nconst RENDERER_DEFAULTS: WebGLRendererParameters = {\n  alpha: true, // transparent background\n  antialias: true, // smooth edges\n  preserveDrawingBuffer: true\n};\n\n@Injectable()\nexport class ThEngineService implements OnDestroy {\n  public readonly beforeRender$: Observable<RenderState>;\n  public readonly resize$: Observable<{ width: number; height: number }>;\n\n  private _renderer?: THREE.WebGLRenderer;\n  private rendererParameters?: ThRendererParameters;\n  private clock = new Clock();\n  private destroyed$ = new Subject<void>();\n  private readonly resizeEmitter = new EventEmitter();\n  private readonly beforeRenderEmitter = new EventEmitter<RenderState>();\n  private views: ThView[] = [];\n\n  public get canvas(): HTMLCanvasElement | undefined {\n    return this.rendererParameters?.domElement;\n  }\n\n  private resizeObserver?: ResizeObserver;\n\n  public constructor(private ngZone: NgZone) {\n    this.beforeRender$ = this.beforeRenderEmitter.pipe(takeUntil(this.destroyed$));\n    this.resize$ = this.resizeEmitter.pipe(takeUntil(this.destroyed$));\n  }\n\n  public get renderer() {\n    return this._renderer;\n  }\n\n  public ngOnDestroy(): void {\n    if (this.resizeObserver && this.canvas) {\n      this.resizeObserver.unobserve(this.canvas);\n    }\n  }\n\n  private initResizeObserver() {\n    // We have to run this outside angular zones,\n    // because it could trigger heavy changeDetection cycles.\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.canvas) {\n        throw new Error('missing canvas element');\n      }\n\n      this.resize();\n      if (!this.resizeObserver) {\n        // @ts-ignore\n        this.resizeObserver = new ResizeObserver(() => {\n          this.resize();\n        });\n      }\n      this.resizeObserver.observe(this.canvas);\n    });\n  }\n\n  private initRenderer(): void {\n    if (this._renderer) {\n      return;\n    }\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this.rendererParameters?.domElement,\n      ...RENDERER_DEFAULTS\n    });\n\n    Object.assign(this._renderer, { ...RENDERER_DEFAULTS, ...this.rendererParameters });\n    this.resize();\n  }\n\n  public setRenderer(options: ThRendererParameters) {\n    this.rendererParameters = options;\n    this.initRenderer();\n    this.initResizeObserver();\n  }\n\n  public addView(view: ThView) {\n    this.views.push(view);\n    const canvasDimensions = this.calcRendererSize();\n    if (canvasDimensions) {\n      this.adjustViewDimensions(view, canvasDimensions.width, canvasDimensions.height);\n    }\n  }\n\n  public render(): void {\n    this.beforeRenderEmitter.emit({ engine: this, delta: this.clock.getDelta() });\n    for (const view of this.views) {\n      this.renderView(view);\n    }\n  }\n\n  protected renderView(view: ThView) {\n    if (!this._renderer) {\n      return;\n    }\n\n    const camera = view.camera;\n    const scene = view.scene;\n\n    if (!camera || !scene || !camera.objRef || !scene.objRef) {\n      return;\n    }\n\n    const renderer = this._renderer;\n\n    if (isObserved(view.onRender)) {\n      this.ngZone.run(() =>\n        view.onRender.emit({\n          renderer,\n          scene,\n          camera\n        })\n      );\n    }\n\n    this.applyRendererParametersFromView(view);\n    if (view.effectComposer) {\n      view.effectComposer.render();\n    } else {\n      this._renderer.render(scene.objRef, camera.objRef);\n    }\n  }\n\n  protected applyRendererParametersFromView(view: ThView) {\n    if (!this._renderer) {\n      return;\n    }\n    if (view.viewPort) {\n      if (view.viewPort instanceof Vector4) {\n        this._renderer.setViewport(view.viewPort);\n      } else {\n        this._renderer.setViewport(view.viewPort.x, view.viewPort.y, view.viewPort.width, view.viewPort.height);\n      }\n    }\n\n    if (view.scissor) {\n      if (view.scissor instanceof Vector4) {\n        this._renderer.setScissor(view.scissor);\n      } else {\n        this._renderer.setScissor(view.scissor.x, view.scissor.y, view.scissor.width, view.scissor.height);\n      }\n    }\n\n    if (view.scissorTest !== undefined) {\n      this._renderer.setScissorTest(view.scissorTest);\n    }\n\n    if (view.clearColor) {\n      this._renderer.setClearColor(view.clearColor);\n    }\n\n    if (view.clearAlpha !== undefined) {\n      this._renderer.setClearAlpha(view.clearAlpha);\n    }\n\n    if (view.shadow !== undefined) {\n      this._renderer.shadowMap.enabled = true;\n    }\n  }\n\n  public resize() {\n    if (!this._renderer || !this.canvas) {\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { width, height } = this.calcRendererSize()!;\n\n    this._renderer.setSize(width, height, false);\n\n    for (const view of this.views) {\n      this.adjustViewDimensions(view, width, height);\n    }\n\n    this.resizeEmitter.emit({ width, height });\n\n    return true;\n  }\n\n  protected calcRendererSize() {\n    if (!this._renderer || !this.canvas) {\n      return;\n    }\n\n    const pixelRatio = window.devicePixelRatio;\n    return {\n      width: (this.canvas.clientWidth ?? 0) * pixelRatio,\n      height: (this.canvas.clientHeight ?? 0) * pixelRatio\n    };\n  }\n\n  protected adjustViewDimensions(view: ThView, width: number, height: number) {\n    if (!view.viewPort) {\n      if (view.camera && (view.camera.objRef as any).aspect) {\n        (view.camera.objRef as any).aspect = width / height;\n        (view.camera.objRef as any).updateProjectionMatrix();\n      }\n\n      view.effectComposer?.setSize(width, height);\n    }\n  }\n}\n","import { Component, ContentChild, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { Color, Object3D, Raycaster, Vector4 } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RAYCASTER, RaycasterService } from './events/raycaster.service';\nimport { ThCamera } from './generated/ThCamera';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThScene } from './generated/ThScene';\nimport { ThEngineService } from './ThEngine.service';\n\n@Component({\n  selector: 'th-view',\n  template: '<ng-content/>',\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThView) },\n    { provide: RAYCASTER, useValue: new Raycaster() },\n    RaycasterService\n  ]\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThView implements OnInit {\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  protected _camera?: ThCamera;\n  protected _viewPort?: Vector4 | { x: number; y: number; width: number; height: number };\n\n  protected _effectComposer?: EffectComposer;\n\n  constructor(protected engServ: ThEngineService, protected raycaster: RaycasterService) {}\n\n  @Input()\n  public scene?: ThScene;\n\n  @ContentChild(ThScene)\n  public set contentScene(scene: ThScene | undefined) {\n    if (scene) {\n      this.scene = scene;\n    }\n  }\n\n  @Input()\n  public set effectComposer(effectComposer: EffectComposer | undefined) {\n    this._effectComposer = effectComposer;\n    this.configureEffectComposerRenderTarget();\n  }\n\n  public get effectComposer() {\n    return this._effectComposer;\n  }\n\n  @Input()\n  public set camera(camera: ThCamera | undefined) {\n    this._camera = camera;\n    this.initRaycaster();\n  }\n\n  public get camera() {\n    return this._camera;\n  }\n\n  @ContentChild(ThCamera)\n  public set contentCamera(camera: ThCamera<any> | undefined) {\n    if (camera) {\n      this.camera = camera;\n    }\n  }\n\n  // renderer parameters\n  // -----------------------------------------------------------------------------------------------\n  /**\n   * enable / disable shadows\n   */\n  @Input()\n  public shadow?: boolean;\n\n  @Input()\n  public set viewPort(viewPort: Vector4 | { x: number; y: number; width: number; height: number } | undefined) {\n    this._viewPort = viewPort;\n    this.configureEffectComposerRenderTarget();\n  }\n\n  public get viewPort() {\n    return this._viewPort;\n  }\n\n  @Input()\n  public scissor?: Vector4 | { x: number; y: number; width: number; height: number };\n\n  /**\n   * Enable the scissor test. When this is enabled,\n   * only the pixels within the defined scissor area will be affected by further renderer actions.\n   */\n  @Input()\n  public scissorTest?: boolean;\n\n  /**\n   * Sets the clear color\n   */\n  @Input()\n  clearColor?: Color | string | number;\n\n  /**\n   * a float with the current clear alpha. Ranges from 0 to 1.\n   */\n  @Input()\n  clearAlpha?: number;\n  // -----------------------------------------------------------------------------------------------\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output()\n  public readonly onRender = new EventEmitter<{\n    renderer: THREE.WebGLRenderer;\n    scene: ThScene;\n    camera: ThCamera;\n  }>();\n\n  ngOnInit(): void {\n    this.initRaycaster();\n  }\n\n  private initRaycaster() {\n    if (this.camera && this.engServ.canvas) {\n      this.raycaster.init(this.camera, this.engServ.canvas);\n    }\n  }\n\n  add(scene: Object3D) {\n    // nothing to do here\n  }\n\n  remove(scene: Object3D) {\n    // norhing to do\n  }\n\n  private configureEffectComposerRenderTarget() {\n    if (!this.viewPort || !this.effectComposer) {\n      return;\n    } else {\n      let width: number;\n      let height: number;\n      if (this.viewPort instanceof Vector4) {\n        width = this.viewPort.z;\n        height = this.viewPort?.width;\n      } else {\n        width = this.viewPort.width;\n        height = this.viewPort.height;\n      }\n      //TODO: check if pixel ration ha\n      this.effectComposer.setSize(width, height);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UniformsUtils, Vector4, WebGLRenderer, WebGLRenderTarget } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { ThEngineService } from '../../ThEngine.service';\nimport { ThView } from '../../ThView';\nimport { ThEffectComposerGen } from '../ThEffectComposerGen';\n\n@Component({\n  selector: 'th-effectComposer',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: []\n})\nexport class ThEffectComposer<\n  T extends EffectComposer = EffectComposer,\n  TARGS extends any[] = [renderer: WebGLRenderer, renderTarget?: WebGLRenderTarget]\n> extends ThEffectComposerGen<T, TARGS> {\n  constructor(protected view: ThView, protected engineService: ThEngineService) {\n    super();\n  }\n\n  public createThreeInstance(args?: TARGS): EffectComposer {\n    if (!args) {\n      args = new Array(5) as TARGS;\n    }\n\n    args[0] = args[0] ?? this.engineService.renderer;\n    args[1] = args[1] ?? this.initRenderTarget();\n\n    return super.createThreeInstance(args);\n  }\n\n  private initRenderTarget() {\n    if (!this.view.viewPort) {\n      return;\n    } else {\n      let width: number;\n      let height: number;\n      if (this.view.viewPort instanceof Vector4) {\n        width = this.view.viewPort.z;\n        height = this.view.viewPort?.width;\n      } else {\n        width = this.view.viewPort.width;\n        height = this.view.viewPort.height;\n      }\n      return new WebGLRenderTarget(width, height);\n    }\n  }\n\n  public addToParent() {\n    if (this._objRef) {\n      this.view.effectComposer = this._objRef;\n    }\n  }\n\n  public removeFromParent() {\n    this.view.effectComposer = undefined;\n  }\n}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { ThEffectComposer } from './generated/overrides/ThEffectComposer';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-control',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThPassBase<T extends Pass = Pass, ARGS = unknown> extends ThWrapperBase<T, ARGS> implements OnInit {\n  constructor(@Optional() protected effectComposer?: ThEffectComposer) {\n    super();\n  }\n\n  public addToParent() {\n    if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n      this.effectComposer.objRef.addPass(this._objRef);\n    }\n  }\n\n  public removeFromParent() {\n    if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n      this.effectComposer.objRef.removePass(this._objRef);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\n\n@Component({\n  selector: 'th-pass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThPass) }]\n})\nexport class ThPass<T extends Pass = Pass, TARGS = []> extends ThPassBase<T, TARGS> {\n  public getType(): Type<Pass> {\n    return Pass;\n  }\n\n  @Input()\n  public set isPass(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isPass = value;\n    }\n  }\n\n  // @ts-ignore\n  public get isPass(): boolean | undefined {\n    return this._objRef?.isPass;\n  }\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enabled(): boolean | undefined {\n    return this._objRef?.enabled;\n  }\n  @Input()\n  public set needsSwap(value: boolean) {\n    if (this._objRef) {\n      this._objRef.needsSwap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get needsSwap(): boolean | undefined {\n    return this._objRef?.needsSwap;\n  }\n  @Input()\n  public set clear(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clear(): boolean | undefined {\n    return this._objRef?.clear;\n  }\n  @Input()\n  public set renderToScreen(value: boolean) {\n    if (this._objRef) {\n      this._objRef.renderToScreen = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderToScreen(): boolean | undefined {\n    return this._objRef?.renderToScreen;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, Color, ColorRepresentation, Material, Scene } from 'three';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-renderPassGen',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThRenderPassGen) }]\n})\nexport class ThRenderPassGen<\n  T extends RenderPass = RenderPass,\n  TARGS = [scene: Scene, camera: Camera, overrideMaterial?: Material, clearColor?: Color, clearAlpha?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<RenderPass> {\n    return RenderPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): Scene | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set overrideMaterial(value: Material) {\n    if (this._objRef) {\n      this._objRef.overrideMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get overrideMaterial(): Material | undefined {\n    return this._objRef?.overrideMaterial;\n  }\n  @Input()\n  public set clearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.clearColor = applyValue<Color>(this._objRef.clearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get clearColor(): Color | undefined {\n    return this._objRef?.clearColor;\n  }\n  @Input()\n  public set clearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearAlpha(): number | undefined {\n    return this._objRef?.clearAlpha;\n  }\n  @Input()\n  public set clearDepth(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clearDepth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearDepth(): boolean | undefined {\n    return this._objRef?.clearDepth;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  AfterContentChecked,\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef\n} from '@angular/core';\nimport { Camera, Color, Material, Scene } from 'three';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { EffectComposer } from '../../generator/pass_types';\nimport { ThPassBase } from '../../ThPassBase';\nimport { ThView } from '../../ThView';\nimport { ThObject3D } from '../ThObject3D';\nimport { ThRenderPassGen } from '../ThRenderPassGen';\nimport { ThEffectComposer } from './ThEffectComposer';\n\n@Component({\n  selector: 'th-renderPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThRenderPass) }]\n})\nexport class ThRenderPass<\n    T extends RenderPass = RenderPass,\n    TARGS extends any[] = [\n      scene: Scene,\n      camera: Camera,\n      overrideMaterial?: Material,\n      clearColor?: Color,\n      clearAlpha?: number\n    ]\n  >\n  extends ThRenderPassGen<T, TARGS>\n  implements AfterContentChecked\n{\n  constructor(protected effectComposer: ThEffectComposer, private view: ThView) {\n    super(effectComposer);\n  }\n\n  public createThreeInstance(args?: TARGS): RenderPass {\n    if (!args) {\n      args = new Array(5) as TARGS;\n    }\n\n    args[0] = args[0] ?? this.view.scene;\n    args[1] = args[1] ?? this.view.camera;\n    args[2] = args[2] ?? this.overrideMaterial;\n    args[3] = args[3] ?? this.clearColor;\n    args[4] = args[4] ?? this.clearAlpha;\n\n    return super.createThreeInstance(args);\n  }\n\n  public ngAfterContentChecked() {\n    if (!this._objRef) {\n      return;\n    }\n\n    if (this.view.scene && this.view.scene.objRef) {\n      this._objRef.scene = this.view.scene.objRef;\n    }\n\n    if (this.view.camera && this.view.camera.objRef) {\n      this._objRef.camera = this.view.camera.objRef;\n    }\n  }\n}\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { Observable, Subject, takeUntil } from 'rxjs';\nimport { RenderState, ThEngineService } from '../ThEngine.service';\n\n@Injectable()\nexport class ThAnimationLoopService implements OnDestroy {\n  private active = true;\n  private frameId?: number;\n\n  public readonly beforeRender$: Observable<RenderState>;\n  private destroyed$ = new Subject<void>();\n\n  constructor(private engineService: ThEngineService, private ngZone: NgZone) {\n    this.beforeRender$ = this.engineService.beforeRender$;\n    this.engineService.resize$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.requestAnimationFrame());\n  }\n  ngOnDestroy(): void {\n    this.stop();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * start the loop\n   */\n  public start() {\n    if (!this.active) {\n      this.active = true;\n      this.requestAnimationFrame();\n    }\n  }\n\n  /**\n   * stop the loop\n   */\n  public stop() {\n    this.active = false;\n    if (this.frameId !== undefined) {\n      cancelAnimationFrame(this.frameId);\n      this.frameId = undefined;\n    }\n  }\n\n  /**\n   *\n   * @returns true if the render loop is active\n   */\n  public isActive() {\n    return this.active;\n  }\n\n  /**\n   * trigger an animation frame request\n   */\n  public requestAnimationFrame() {\n    if (this.frameId === undefined) {\n      this.ngZone.runOutsideAngular(\n        () =>\n          (this.frameId = requestAnimationFrame(() => {\n            this.frameId = undefined;\n            this.engineService.render();\n            if (this.active) {\n              this.requestAnimationFrame();\n            }\n          }))\n      );\n    }\n  }\n}\n","import {\n  AfterContentChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  isDevMode,\n  OnInit,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { Raycaster, WebGLRenderer } from 'three';\nimport { RAYCASTER, RaycasterService } from './events/raycaster.service';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThAnimationLoopService } from './renderer/th-animation-loop.service';\nimport { ThEngineService } from './ThEngine.service';\nimport { ThView } from './ThView';\n\n@Component({\n  selector: 'th-canvas',\n  styleUrls: ['./ThCanvas.scss'],\n  template: '<canvas #rendererCanvas id=\"rendererCanvas\"><ng-content *ngIf=\"isDevMode()\" ></ng-content></canvas>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThCanvas) },\n    ThEngineService,\n    ThAnimationLoopService,\n    { provide: RAYCASTER, useValue: new Raycaster() },\n    forwardRef(() => RaycasterService),\n    { provide: ThView, useExisting: forwardRef(() => ThCanvas) }\n  ]\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThCanvas extends ThView implements OnInit, AfterViewInit, AfterContentChecked {\n  public readonly isDevMode = isDevMode;\n  private static instanceCnt = 0;\n  public readonly nid = ThCanvas.instanceCnt++;\n\n  /**\n   * renderer parameters\n   * those will be applied to the renderer during construction / initialization\n   */\n  @Input()\n  rendererParameters?: Partial<WebGLRenderer>;\n\n  /**\n   * if true does not use the ThCanvas as view\n   * this is esepcially usefull if you have multiple views\n   * and want to iterate over all of them with *ngFor\n   * use statically (before ngOnInit is triggered)\n   */\n  @Input()\n  public disableDefaultView = false;\n\n  public get obj() {\n    return this;\n  }\n\n  @ContentChildren(ThView)\n  public set views(viewList: QueryList<ThView>) {\n    viewList.forEach((v) => this.engServ.addView(v));\n  }\n\n  protected _rendererCanvas?: ElementRef<HTMLCanvasElement>;\n  @ViewChild('rendererCanvas', { static: true })\n  public set rendererCanvas(canvas: ElementRef<HTMLCanvasElement> | undefined) {\n    if (!canvas) {\n      return;\n    }\n    this._rendererCanvas = canvas;\n    canvas.nativeElement.id += this.nid;\n  }\n\n  public get rendererCanvas() {\n    return this._rendererCanvas;\n  }\n\n  constructor(\n    protected engServ: ThEngineService,\n    protected animationLoop: ThAnimationLoopService,\n    @Inject(forwardRef(() => RaycasterService))\n    protected raycaster: RaycasterService\n  ) {\n    super(engServ, raycaster);\n  }\n  ngAfterContentChecked(): void {\n    this.animationLoop.requestAnimationFrame();\n  }\n\n  ngAfterViewInit(): void {\n    this.animationLoop.requestAnimationFrame();\n  }\n\n  public ngOnInit(): void {\n    this.applyRendererParameters();\n\n    super.ngOnInit();\n    if (!this.disableDefaultView) {\n      this.engServ.addView(this);\n    }\n  }\n\n  private applyRendererParameters() {\n    if (!this.rendererCanvas) {\n      throw new Error('Missing Canvas');\n    }\n\n    this.engServ.setRenderer({ ...this.rendererParameters, domElement: this.rendererCanvas.nativeElement });\n  }\n}\n","import { Component, inject, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { EventDispatcher } from 'three';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThAnimationLoopService } from './renderer/th-animation-loop.service';\nimport { ThCanvas } from './ThCanvas';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-control',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThControlBase<T, ARGS> extends ThWrapperBase<T, ARGS> implements OnDestroy {\n  protected origDispatchEventMethod?: (event: any) => void;\n  protected beforeRenderSubscription?: Subscription;\n  protected renderLoop = inject(ThAnimationLoopService);\n\n  constructor(protected _camera: ThObject3D<any>, protected canvas?: ThCanvas) {\n    super();\n  }\n\n  public createThreeInstance(args?: Iterable<any>) {\n    if (!args) {\n      args = [this._camera.objRef, this.canvas?.rendererCanvas?.nativeElement];\n    }\n    const instance: Partial<EventDispatcher> = super.createThreeInstance(args);\n    this.patchDispatchEvent(instance);\n    this.subscribeControlUpdater(instance as any);\n    return instance;\n  }\n\n  protected patchDispatchEvent(dispatcher: Partial<EventDispatcher>) {\n    if (dispatcher.dispatchEvent) {\n      const origMethod = (this.origDispatchEventMethod = dispatcher.dispatchEvent);\n      dispatcher.dispatchEvent = (event: any) => {\n        origMethod.call(dispatcher, event);\n        // request an animation frame after an event was emitted;\n        this.renderLoop.requestAnimationFrame();\n      };\n    }\n  }\n\n  public ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.unpatchDispatchEvent();\n    this.unsubscribeControlUpdater();\n  }\n\n  protected unpatchDispatchEvent() {\n    if (this.origDispatchEventMethod && this._objRef) {\n      (this._objRef as unknown as EventDispatcher).dispatchEvent = this.origDispatchEventMethod;\n    }\n  }\n\n  protected subscribeControlUpdater(control: { update: (delta: number) => void }) {\n    if (control.update !== undefined) {\n      this.beforeRenderSubscription = this.renderLoop.beforeRender$.subscribe((state) => {\n        control.update(state.delta);\n      });\n    }\n  }\n\n  protected unsubscribeControlUpdater() {\n    if (this.beforeRenderSubscription) {\n      this.beforeRenderSubscription.unsubscribe();\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, MOUSE, Object3D } from 'three';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-transformControlsGen',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThTransformControlsGen)\n    }\n  ]\n})\nexport class ThTransformControlsGen<\n  T extends TransformControls = TransformControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<TransformControls> {\n    return TransformControls;\n  }\n\n  @Input()\n  public set domElement(value: HTMLElement) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  // @ts-ignore\n  public get domElement(): HTMLElement | undefined {\n    return this._objRef?.domElement;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set object(value: Object3D | undefined) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  // @ts-ignore\n  public get object(): (Object3D | undefined) | undefined {\n    return this._objRef?.object;\n  }\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enabled(): boolean | undefined {\n    return this._objRef?.enabled;\n  }\n  @Input()\n  public set axis(value: 'X' | 'Y' | 'Z' | 'E' | 'XY' | 'YZ' | 'XZ' | 'XYZ' | 'XYZE' | null) {\n    if (this._objRef) {\n      this._objRef.axis = value;\n    }\n  }\n\n  // @ts-ignore\n  public get axis(): ('X' | 'Y' | 'Z' | 'E' | 'XY' | 'YZ' | 'XZ' | 'XYZ' | 'XYZE' | null) | undefined {\n    return this._objRef?.axis;\n  }\n  @Input()\n  public set mode(value: 'translate' | 'rotate' | 'scale') {\n    if (this._objRef) {\n      this._objRef.mode = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mode(): ('translate' | 'rotate' | 'scale') | undefined {\n    return this._objRef?.mode;\n  }\n  @Input()\n  public set translationSnap(value: number | null) {\n    if (this._objRef) {\n      this._objRef.translationSnap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get translationSnap(): (number | null) | undefined {\n    return this._objRef?.translationSnap;\n  }\n  @Input()\n  public set rotationSnap(value: number | null) {\n    if (this._objRef) {\n      this._objRef.rotationSnap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get rotationSnap(): (number | null) | undefined {\n    return this._objRef?.rotationSnap;\n  }\n  @Input()\n  public set space(value: 'world' | 'local') {\n    if (this._objRef) {\n      this._objRef.space = value;\n    }\n  }\n\n  // @ts-ignore\n  public get space(): ('world' | 'local') | undefined {\n    return this._objRef?.space;\n  }\n  @Input()\n  public set size(value: number) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n\n  // @ts-ignore\n  public get size(): number | undefined {\n    return this._objRef?.size;\n  }\n  @Input()\n  public set dragging(value: boolean) {\n    if (this._objRef) {\n      this._objRef.dragging = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dragging(): boolean | undefined {\n    return this._objRef?.dragging;\n  }\n  @Input()\n  public set showX(value: boolean) {\n    if (this._objRef) {\n      this._objRef.showX = value;\n    }\n  }\n\n  // @ts-ignore\n  public get showX(): boolean | undefined {\n    return this._objRef?.showX;\n  }\n  @Input()\n  public set showY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.showY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get showY(): boolean | undefined {\n    return this._objRef?.showY;\n  }\n  @Input()\n  public set showZ(value: boolean) {\n    if (this._objRef) {\n      this._objRef.showZ = value;\n    }\n  }\n\n  // @ts-ignore\n  public get showZ(): boolean | undefined {\n    return this._objRef?.showZ;\n  }\n  // @ts-ignore\n  public get isTransformControls(): true | undefined {\n    return this._objRef?.isTransformControls;\n  }\n  @Input()\n  public set mouseButtons(value: { LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE }) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mouseButtons(): { LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE } | undefined {\n    return this._objRef?.mouseButtons;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, Object3D } from 'three';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { ThControlBase } from '../../ThControlBase';\nimport { ThTransformControlsGen } from '../ThTransformControlsGen';\n\n@Component({\n  selector: 'th-transformControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThTransformControls)\n    }\n  ]\n})\nexport class ThTransformControls<\n  T extends TransformControls = TransformControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThTransformControlsGen<T, TARGS> {\n  public getType(): Type<TransformControls> {\n    return TransformControls;\n  }\n\n  @Input()\n  public set object(value: Object3D | undefined) {\n    if (this._objRef) {\n      this._objRef.object = value;\n      if (value) {\n        this._objRef.attach(value);\n      } else {\n        this._objRef.detach();\n      }\n    }\n  }\n\n  public addToParent(): void {\n    if (this._objRef) {\n      this.canvas?.scene?.objRef?.add(this._objRef);\n    }\n  }\n\n  public removeFromParent(): void {\n    if (this._objRef) {\n      this.canvas?.scene?.objRef?.remove(this._objRef);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { AdaptiveToneMappingPass } from 'three/examples/jsm/postprocessing/AdaptiveToneMappingPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-adaptiveToneMappingPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThPassBase,\n      useExisting: forwardRef(() => ThAdaptiveToneMappingPass)\n    }\n  ]\n})\nexport class ThAdaptiveToneMappingPass<\n  T extends AdaptiveToneMappingPass = AdaptiveToneMappingPass,\n  TARGS = [adaptive?: boolean, resolution?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<AdaptiveToneMappingPass> {\n    return AdaptiveToneMappingPass;\n  }\n\n  @Input()\n  public set adaptive(value: boolean) {\n    if (this._objRef) {\n      this._objRef.adaptive = value;\n    }\n  }\n\n  // @ts-ignore\n  public get adaptive(): boolean | undefined {\n    return this._objRef?.adaptive;\n  }\n  @Input()\n  public set resolution(value: number) {\n    if (this._objRef) {\n      this._objRef.resolution = value;\n    }\n  }\n\n  // @ts-ignore\n  public get resolution(): number | undefined {\n    return this._objRef?.resolution;\n  }\n  @Input()\n  public set needsInit(value: number) {\n    if (this._objRef) {\n      this._objRef.needsInit = value;\n    }\n  }\n\n  // @ts-ignore\n  public get needsInit(): number | undefined {\n    return this._objRef?.needsInit;\n  }\n  @Input()\n  public set luminanceRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.luminanceRT = value;\n    }\n  }\n\n  // @ts-ignore\n  public get luminanceRT(): WebGLRenderTarget | undefined {\n    return this._objRef?.luminanceRT;\n  }\n  @Input()\n  public set previousLuminanceRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.previousLuminanceRT = value;\n    }\n  }\n\n  // @ts-ignore\n  public get previousLuminanceRT(): WebGLRenderTarget | undefined {\n    return this._objRef?.previousLuminanceRT;\n  }\n  @Input()\n  public set currentLuminanceRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.currentLuminanceRT = value;\n    }\n  }\n\n  // @ts-ignore\n  public get currentLuminanceRT(): WebGLRenderTarget | undefined {\n    return this._objRef?.currentLuminanceRT;\n  }\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyUniforms(): object | undefined {\n    return this._objRef?.copyUniforms;\n  }\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialCopy(): ShaderMaterial | undefined {\n    return this._objRef?.materialCopy;\n  }\n  @Input()\n  public set materialLuminance(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialLuminance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialLuminance(): ShaderMaterial | undefined {\n    return this._objRef?.materialLuminance;\n  }\n  @Input()\n  public set adaptLuminanceShader(value: object) {\n    if (this._objRef) {\n      this._objRef.adaptLuminanceShader = value;\n    }\n  }\n\n  // @ts-ignore\n  public get adaptLuminanceShader(): object | undefined {\n    return this._objRef?.adaptLuminanceShader;\n  }\n  @Input()\n  public set materialAdaptiveLum(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialAdaptiveLum = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialAdaptiveLum(): ShaderMaterial | undefined {\n    return this._objRef?.materialAdaptiveLum;\n  }\n  @Input()\n  public set materialToneMap(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialToneMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialToneMap(): ShaderMaterial | undefined {\n    return this._objRef?.materialToneMap;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { AfterimagePass } from 'three/examples/jsm/postprocessing/AfterimagePass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-afterimagePass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThAfterimagePass) }]\n})\nexport class ThAfterimagePass<T extends AfterimagePass = AfterimagePass, TARGS = /* damp? */ number> extends ThPass<\n  T,\n  TARGS\n> {\n  public getType(): Type<AfterimagePass> {\n    return AfterimagePass;\n  }\n\n  @Input()\n  public set shader(value: object) {\n    if (this._objRef) {\n      this._objRef.shader = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shader(): object | undefined {\n    return this._objRef?.shader;\n  }\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set textureComp(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.textureComp = value;\n    }\n  }\n\n  // @ts-ignore\n  public get textureComp(): WebGLRenderTarget | undefined {\n    return this._objRef?.textureComp;\n  }\n  @Input()\n  public set textureOld(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.textureOld = value;\n    }\n  }\n\n  // @ts-ignore\n  public get textureOld(): WebGLRenderTarget | undefined {\n    return this._objRef?.textureOld;\n  }\n  @Input()\n  public set shaderMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.shaderMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shaderMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.shaderMaterial;\n  }\n  @Input()\n  public set compFsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.compFsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get compFsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.compFsQuad;\n  }\n  @Input()\n  public set copyFsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.copyFsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyFsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.copyFsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input } from '@angular/core';\nimport { Color, ColorRepresentation, Event, Light, LightShadow } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-light',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLight) }]\n})\nexport abstract class ThLight<\n  TShadowSupport extends LightShadow | undefined = LightShadow | undefined,\n  T extends Light<TShadowSupport> = Light<TShadowSupport>,\n  TARGS = [color?: ColorRepresentation, intensity?: number]\n> extends ThObject3D<Event, T, TARGS> {\n  // @ts-ignore\n  public get isLight(): true | undefined {\n    return this._objRef?.isLight;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Light') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get intensity(): number | undefined {\n    return this._objRef?.intensity;\n  }\n  @Input()\n  public set shadow(value: TShadowSupport) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shadow(): TShadowSupport | undefined {\n    return this._objRef?.shadow;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { AmbientLight, ColorRepresentation } from 'three';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-ambientLight',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLight) }]\n})\nexport class ThAmbientLight<\n  T extends AmbientLight = AmbientLight,\n  TARGS = [color?: ColorRepresentation, intensity?: number]\n> extends ThLight<undefined, T, TARGS> {\n  public getType(): Type<AmbientLight> {\n    return AmbientLight;\n  }\n\n  // @ts-ignore\n  public get isAmbientLight(): true | undefined {\n    return this._objRef?.isAmbientLight;\n  }\n  // @ts-ignore\n  public get type(): (string | 'AmbientLight') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { LightProbe, LightShadow, SphericalHarmonics3, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lightProbe',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLightProbe) }]\n})\nexport class ThLightProbe<\n  T extends LightProbe = LightProbe,\n  TARGS = [sh?: SphericalHarmonics3, intensity?: number]\n> extends ThLight<LightShadow | undefined, T, TARGS> {\n  public getType(): Type<LightProbe> {\n    return LightProbe;\n  }\n\n  // @ts-ignore\n  public get isLightProbe(): true | undefined {\n    return this._objRef?.isLightProbe;\n  }\n  @Input()\n  public set sh(value: SphericalHarmonics3 | [coefficients: Vector3[]]) {\n    if (this._objRef) {\n      this._objRef.sh = applyValue<SphericalHarmonics3>(this._objRef.sh, value);\n    }\n  }\n  // @ts-ignore\n  public get sh(): SphericalHarmonics3 | undefined {\n    return this._objRef?.sh;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { AmbientLightProbe, ColorRepresentation } from 'three';\nimport { ThLightProbe } from './ThLightProbe';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-ambientLightProbe',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLightProbe) }]\n})\nexport class ThAmbientLightProbe<\n  T extends AmbientLightProbe = AmbientLightProbe,\n  TARGS = [color?: ColorRepresentation, intensity?: number]\n> extends ThLightProbe<T, TARGS> {\n  public getType(): Type<AmbientLightProbe> {\n    return AmbientLightProbe;\n  }\n\n  // @ts-ignore\n  public get isAmbientLightProbe(): true | undefined {\n    return this._objRef?.isAmbientLightProbe;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, Scene, Vector3 } from 'three';\nimport { ArcballControls } from 'three/examples/jsm/controls/ArcballControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-arcballControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThArcballControls)\n    }\n  ]\n})\nexport class ThArcballControls<\n  T extends ArcballControls = ArcballControls,\n  TARGS = [camera: Camera, domElement: HTMLElement, scene?: Scene | null]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<ArcballControls> {\n    return ArcballControls;\n  }\n\n  @Input()\n  public set camera(value: Camera | null) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): (Camera | null) | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set domElement(value: HTMLElement) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  // @ts-ignore\n  public get domElement(): HTMLElement | undefined {\n    return this._objRef?.domElement;\n  }\n  @Input()\n  public set scene(value: Scene | null | undefined) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): (Scene | null | undefined) | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set focusAnimationTime(value: number) {\n    if (this._objRef) {\n      this._objRef.focusAnimationTime = value;\n    }\n  }\n\n  // @ts-ignore\n  public get focusAnimationTime(): number | undefined {\n    return this._objRef?.focusAnimationTime;\n  }\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enabled(): boolean | undefined {\n    return this._objRef?.enabled;\n  }\n  @Input()\n  public set enablePan(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enablePan = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enablePan(): boolean | undefined {\n    return this._objRef?.enablePan;\n  }\n  @Input()\n  public set enableRotate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableRotate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableRotate(): boolean | undefined {\n    return this._objRef?.enableRotate;\n  }\n  @Input()\n  public set enableZoom(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableZoom(): boolean | undefined {\n    return this._objRef?.enableZoom;\n  }\n  @Input()\n  public set enableGizmos(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableGizmos = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableGizmos(): boolean | undefined {\n    return this._objRef?.enableGizmos;\n  }\n  @Input()\n  public set adjustNearFar(value: boolean) {\n    if (this._objRef) {\n      this._objRef.adjustNearFar = value;\n    }\n  }\n\n  // @ts-ignore\n  public get adjustNearFar(): boolean | undefined {\n    return this._objRef?.adjustNearFar;\n  }\n  @Input()\n  public set scaleFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.scaleFactor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scaleFactor(): number | undefined {\n    return this._objRef?.scaleFactor;\n  }\n  @Input()\n  public set dampingFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.dampingFactor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dampingFactor(): number | undefined {\n    return this._objRef?.dampingFactor;\n  }\n  @Input()\n  public set wMax(value: number) {\n    if (this._objRef) {\n      this._objRef.wMax = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wMax(): number | undefined {\n    return this._objRef?.wMax;\n  }\n  @Input()\n  public set enableAnimations(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableAnimations = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableAnimations(): boolean | undefined {\n    return this._objRef?.enableAnimations;\n  }\n  @Input()\n  public set enableGrid(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableGrid = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableGrid(): boolean | undefined {\n    return this._objRef?.enableGrid;\n  }\n  @Input()\n  public set cursorZoom(value: boolean) {\n    if (this._objRef) {\n      this._objRef.cursorZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cursorZoom(): boolean | undefined {\n    return this._objRef?.cursorZoom;\n  }\n  @Input()\n  public set minFov(value: number) {\n    if (this._objRef) {\n      this._objRef.minFov = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFov(): number | undefined {\n    return this._objRef?.minFov;\n  }\n  @Input()\n  public set maxFov(value: number) {\n    if (this._objRef) {\n      this._objRef.maxFov = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxFov(): number | undefined {\n    return this._objRef?.maxFov;\n  }\n  @Input()\n  public set minDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minDistance(): number | undefined {\n    return this._objRef?.minDistance;\n  }\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxDistance(): number | undefined {\n    return this._objRef?.maxDistance;\n  }\n  @Input()\n  public set minZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.minZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minZoom(): number | undefined {\n    return this._objRef?.minZoom;\n  }\n  @Input()\n  public set maxZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.maxZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxZoom(): number | undefined {\n    return this._objRef?.maxZoom;\n  }\n  @Input()\n  public set target(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target = applyValue<Vector3>(this._objRef.target, value);\n    }\n  }\n  // @ts-ignore\n  public get target(): Vector3 | undefined {\n    return this._objRef?.target;\n  }\n  @Input()\n  public set radiusFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.radiusFactor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get radiusFactor(): number | undefined {\n    return this._objRef?.radiusFactor;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { PerspectiveCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-perspectiveCamera',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThPerspectiveCamera) },\n    { provide: ThCamera, useExisting: forwardRef(() => ThPerspectiveCamera) }\n  ]\n})\nexport class ThPerspectiveCamera<\n  T extends PerspectiveCamera = PerspectiveCamera,\n  TARGS = [fov?: number, aspect?: number, near?: number, far?: number]\n> extends ThCamera<T, TARGS> {\n  public getType(): Type<PerspectiveCamera> {\n    return PerspectiveCamera;\n  }\n\n  // @ts-ignore\n  public get isPerspectiveCamera(): true | undefined {\n    return this._objRef?.isPerspectiveCamera;\n  }\n  // @ts-ignore\n  public get type(): (string | 'PerspectiveCamera') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set zoom(value: number) {\n    if (this._objRef) {\n      this._objRef.zoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get zoom(): number | undefined {\n    return this._objRef?.zoom;\n  }\n  @Input()\n  public set fov(value: number) {\n    if (this._objRef) {\n      this._objRef.fov = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fov(): number | undefined {\n    return this._objRef?.fov;\n  }\n  @Input()\n  public set aspect(value: number) {\n    if (this._objRef) {\n      this._objRef.aspect = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aspect(): number | undefined {\n    return this._objRef?.aspect;\n  }\n  @Input()\n  public set near(value: number) {\n    if (this._objRef) {\n      this._objRef.near = value;\n    }\n  }\n\n  // @ts-ignore\n  public get near(): number | undefined {\n    return this._objRef?.near;\n  }\n  @Input()\n  public set far(value: number) {\n    if (this._objRef) {\n      this._objRef.far = value;\n    }\n  }\n\n  // @ts-ignore\n  public get far(): number | undefined {\n    return this._objRef?.far;\n  }\n  @Input()\n  public set focus(value: number) {\n    if (this._objRef) {\n      this._objRef.focus = value;\n    }\n  }\n\n  // @ts-ignore\n  public get focus(): number | undefined {\n    return this._objRef?.focus;\n  }\n  @Input()\n  public set view(\n    value: null | {\n      enabled: boolean;\n      fullWidth: number;\n      fullHeight: number;\n      offsetX: number;\n      offsetY: number;\n      width: number;\n      height: number;\n    }\n  ) {\n    if (this._objRef) {\n      this._objRef.view = value;\n    }\n  }\n\n  // @ts-ignore\n  public get view():\n    | (null | {\n        enabled: boolean;\n        fullWidth: number;\n        fullHeight: number;\n        offsetX: number;\n        offsetY: number;\n        width: number;\n        height: number;\n      })\n    | undefined {\n    return this._objRef?.view;\n  }\n  @Input()\n  public set filmGauge(value: number) {\n    if (this._objRef) {\n      this._objRef.filmGauge = value;\n    }\n  }\n\n  // @ts-ignore\n  public get filmGauge(): number | undefined {\n    return this._objRef?.filmGauge;\n  }\n  @Input()\n  public set filmOffset(value: number) {\n    if (this._objRef) {\n      this._objRef.filmOffset = value;\n    }\n  }\n\n  // @ts-ignore\n  public get filmOffset(): number | undefined {\n    return this._objRef?.filmOffset;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ArrayCamera, PerspectiveCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\nimport { ThPerspectiveCamera } from './ThPerspectiveCamera';\n\n@Component({\n  selector: 'th-arrayCamera',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThArrayCamera) },\n    { provide: ThCamera, useExisting: forwardRef(() => ThArrayCamera) }\n  ]\n})\nexport class ThArrayCamera<\n  T extends ArrayCamera = ArrayCamera,\n  TARGS = /* cameras? */ PerspectiveCamera[]\n> extends ThPerspectiveCamera<T, TARGS> {\n  public getType(): Type<ArrayCamera> {\n    return ArrayCamera;\n  }\n\n  // @ts-ignore\n  public get isArrayCamera(): true | undefined {\n    return this._objRef?.isArrayCamera;\n  }\n  @Input()\n  public set cameras(value: PerspectiveCamera[]) {\n    if (this._objRef) {\n      this._objRef.cameras = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cameras(): PerspectiveCamera[] | undefined {\n    return this._objRef?.cameras;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ArrowHelper, ColorRepresentation, Event, Line, Mesh, Vector3 } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-arrowHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThArrowHelper) }]\n})\nexport class ThArrowHelper<\n  T extends ArrowHelper = ArrowHelper,\n  TARGS = [\n    dir?: Vector3,\n    origin?: Vector3,\n    length?: number,\n    color?: ColorRepresentation,\n    headLength?: number,\n    headWidth?: number\n  ]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<ArrowHelper> {\n    return ArrowHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'ArrowHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set line(value: Line) {\n    if (this._objRef) {\n      this._objRef.line = value;\n    }\n  }\n\n  // @ts-ignore\n  public get line(): Line | undefined {\n    return this._objRef?.line;\n  }\n  @Input()\n  public set cone(value: Mesh) {\n    if (this._objRef) {\n      this._objRef.cone = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cone(): Mesh | undefined {\n    return this._objRef?.cone;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Audio, AudioContext, AudioListener, Event } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-audio',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAudio) }]\n})\nexport class ThAudio<\n  NodeType extends AudioNode = GainNode,\n  T extends Audio<NodeType> = Audio<NodeType>,\n  TARGS = /* listener */ AudioListener\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Audio<NodeType>> {\n    return Audio;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'Audio') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set listener(value: AudioListener) {\n    if (this._objRef) {\n      this._objRef.listener = value;\n    }\n  }\n\n  // @ts-ignore\n  public get listener(): AudioListener | undefined {\n    return this._objRef?.listener;\n  }\n  @Input()\n  public set context(value: AudioContext) {\n    if (this._objRef) {\n      this._objRef.context = value;\n    }\n  }\n\n  // @ts-ignore\n  public get context(): AudioContext | undefined {\n    return this._objRef?.context;\n  }\n  @Input()\n  public set gain(value: GainNode) {\n    if (this._objRef) {\n      this._objRef.gain = value;\n    }\n  }\n\n  // @ts-ignore\n  public get gain(): GainNode | undefined {\n    return this._objRef?.gain;\n  }\n  @Input()\n  public set autoplay(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoplay = value;\n    }\n  }\n\n  // @ts-ignore\n  public get autoplay(): boolean | undefined {\n    return this._objRef?.autoplay;\n  }\n  @Input()\n  public set buffer(value: AudioBuffer | null) {\n    if (this._objRef) {\n      this._objRef.buffer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get buffer(): (AudioBuffer | null) | undefined {\n    return this._objRef?.buffer;\n  }\n  @Input()\n  public set detune(value: number) {\n    if (this._objRef) {\n      this._objRef.detune = value;\n    }\n  }\n\n  // @ts-ignore\n  public get detune(): number | undefined {\n    return this._objRef?.detune;\n  }\n  @Input()\n  public set loop(value: boolean) {\n    if (this._objRef) {\n      this._objRef.loop = value;\n    }\n  }\n\n  // @ts-ignore\n  public get loop(): boolean | undefined {\n    return this._objRef?.loop;\n  }\n  @Input()\n  public set loopStart(value: number) {\n    if (this._objRef) {\n      this._objRef.loopStart = value;\n    }\n  }\n\n  // @ts-ignore\n  public get loopStart(): number | undefined {\n    return this._objRef?.loopStart;\n  }\n  @Input()\n  public set loopEnd(value: number) {\n    if (this._objRef) {\n      this._objRef.loopEnd = value;\n    }\n  }\n\n  // @ts-ignore\n  public get loopEnd(): number | undefined {\n    return this._objRef?.loopEnd;\n  }\n  @Input()\n  public set offset(value: number) {\n    if (this._objRef) {\n      this._objRef.offset = value;\n    }\n  }\n\n  // @ts-ignore\n  public get offset(): number | undefined {\n    return this._objRef?.offset;\n  }\n  @Input()\n  public set duration(value: number | undefined) {\n    if (this._objRef) {\n      this._objRef.duration = value;\n    }\n  }\n\n  // @ts-ignore\n  public get duration(): (number | undefined) | undefined {\n    return this._objRef?.duration;\n  }\n  @Input()\n  public set playbackRate(value: number) {\n    if (this._objRef) {\n      this._objRef.playbackRate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get playbackRate(): number | undefined {\n    return this._objRef?.playbackRate;\n  }\n  @Input()\n  public set isPlaying(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isPlaying = value;\n    }\n  }\n\n  // @ts-ignore\n  public get isPlaying(): boolean | undefined {\n    return this._objRef?.isPlaying;\n  }\n  @Input()\n  public set hasPlaybackControl(value: boolean) {\n    if (this._objRef) {\n      this._objRef.hasPlaybackControl = value;\n    }\n  }\n\n  // @ts-ignore\n  public get hasPlaybackControl(): boolean | undefined {\n    return this._objRef?.hasPlaybackControl;\n  }\n  @Input()\n  public set sourceType(value: string) {\n    if (this._objRef) {\n      this._objRef.sourceType = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sourceType(): string | undefined {\n    return this._objRef?.sourceType;\n  }\n  @Input()\n  public set source(value: AudioBufferSourceNode | null) {\n    if (this._objRef) {\n      this._objRef.source = value;\n    }\n  }\n\n  // @ts-ignore\n  public get source(): (AudioBufferSourceNode | null) | undefined {\n    return this._objRef?.source;\n  }\n  @Input()\n  public set filters(value: AudioNode[]) {\n    if (this._objRef) {\n      this._objRef.filters = value;\n    }\n  }\n\n  // @ts-ignore\n  public get filters(): AudioNode[] | undefined {\n    return this._objRef?.filters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { AudioContext, AudioListener, Event } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-audioListener',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAudioListener) }]\n})\nexport class ThAudioListener<T extends AudioListener = AudioListener, TARGS = []> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<AudioListener> {\n    return AudioListener;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'AudioListener') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set context(value: AudioContext) {\n    if (this._objRef) {\n      this._objRef.context = value;\n    }\n  }\n\n  // @ts-ignore\n  public get context(): AudioContext | undefined {\n    return this._objRef?.context;\n  }\n  @Input()\n  public set gain(value: GainNode) {\n    if (this._objRef) {\n      this._objRef.gain = value;\n    }\n  }\n\n  // @ts-ignore\n  public get gain(): GainNode | undefined {\n    return this._objRef?.gain;\n  }\n  @Input()\n  public set filter(value: AudioNode) {\n    if (this._objRef) {\n      this._objRef.filter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get filter(): AudioNode | undefined {\n    return this._objRef?.filter;\n  }\n  @Input()\n  public set timeDelta(value: number) {\n    if (this._objRef) {\n      this._objRef.timeDelta = value;\n    }\n  }\n\n  // @ts-ignore\n  public get timeDelta(): number | undefined {\n    return this._objRef?.timeDelta;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { BufferGeometry, Event, Line, Material } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-line',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLine) }]\n})\nexport class ThLine<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends Line<TGeometry, TMaterial> = Line<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Line<TGeometry, TMaterial>> {\n    return Line;\n  }\n\n  // @ts-ignore\n  public get isLine(): true | undefined {\n    return this._objRef?.isLine;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Line') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set geometry(value: TGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  // @ts-ignore\n  public get geometry(): TGeometry | undefined {\n    return this._objRef?.geometry;\n  }\n  @Input()\n  public set material(value: TMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): TMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set morphTargetInfluences(value: number[] | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphTargetInfluences(): (number[] | undefined) | undefined {\n    return this._objRef?.morphTargetInfluences;\n  }\n  @Input()\n  public set morphTargetDictionary(value: { [key: string]: number } | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphTargetDictionary(): ({ [key: string]: number } | undefined) | undefined {\n    return this._objRef?.morphTargetDictionary;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BufferGeometry, LineSegments, Material } from 'three';\nimport { ThLine } from './ThLine';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lineSegments',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLineSegments) }]\n})\nexport class ThLineSegments<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends LineSegments<TGeometry, TMaterial> = LineSegments<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThLine<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<LineSegments<TGeometry, TMaterial>> {\n    return LineSegments;\n  }\n\n  // @ts-ignore\n  public get isLineSegments(): true | undefined {\n    return this._objRef?.isLineSegments;\n  }\n  // @ts-ignore\n  public get type(): (string | 'LineSegments') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { AxesHelper, BufferGeometry, Material } from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-axesHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAxesHelper) }]\n})\nexport class ThAxesHelper<T extends AxesHelper = AxesHelper, TARGS = /* size? */ number> extends ThLineSegments<\n  BufferGeometry,\n  Material | Material[],\n  T,\n  TARGS\n> {\n  public getType(): Type<AxesHelper> {\n    return AxesHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'AxesHelper') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { BloomPass } from 'three/examples/jsm/postprocessing/BloomPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-bloomPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThBloomPass) }]\n})\nexport class ThBloomPass<\n  T extends BloomPass = BloomPass,\n  TARGS = [strength?: number, kernelSize?: number, sigma?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<BloomPass> {\n    return BloomPass;\n  }\n\n  @Input()\n  public set renderTargetX(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetX = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetX(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetX;\n  }\n  @Input()\n  public set renderTargetY(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetY(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetY;\n  }\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyUniforms(): object | undefined {\n    return this._objRef?.copyUniforms;\n  }\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialCopy(): ShaderMaterial | undefined {\n    return this._objRef?.materialCopy;\n  }\n  @Input()\n  public set convolutionUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.convolutionUniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get convolutionUniforms(): object | undefined {\n    return this._objRef?.convolutionUniforms;\n  }\n  @Input()\n  public set materialConvolution(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialConvolution = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialConvolution(): ShaderMaterial | undefined {\n    return this._objRef?.materialConvolution;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, Color, ColorRepresentation, MeshDepthMaterial, Scene, ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { BokehPass, BokehPassParamters } from 'three/examples/jsm/postprocessing/BokehPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-bokehPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThBokehPass) }]\n})\nexport class ThBokehPass<\n  T extends BokehPass = BokehPass,\n  TARGS = [scene: Scene, camera: Camera, params: BokehPassParamters]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<BokehPass> {\n    return BokehPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): Scene | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set renderTargetColor(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetColor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetColor(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetColor;\n  }\n  @Input()\n  public set renderTargetDepth(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetDepth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetDepth(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetDepth;\n  }\n  @Input()\n  public set materialDepth(value: MeshDepthMaterial) {\n    if (this._objRef) {\n      this._objRef.materialDepth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialDepth(): MeshDepthMaterial | undefined {\n    return this._objRef?.materialDepth;\n  }\n  @Input()\n  public set materialBokeh(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialBokeh = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialBokeh(): ShaderMaterial | undefined {\n    return this._objRef?.materialBokeh;\n  }\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get oldClearColor(): Color | undefined {\n    return this._objRef?.oldClearColor;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { Bone, Event } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-bone',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBone) }]\n})\nexport class ThBone<T extends Bone = Bone, TARGS = []> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Bone> {\n    return Bone;\n  }\n\n  // @ts-ignore\n  public get isBone(): true | undefined {\n    return this._objRef?.isBone;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Bone') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Box3, Box3Helper, BufferGeometry, Color, Material, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-box3Helper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBox3Helper) }]\n})\nexport class ThBox3Helper<T extends Box3Helper = Box3Helper, TARGS = [box: Box3, color?: Color]> extends ThLineSegments<\n  BufferGeometry,\n  Material | Material[],\n  T,\n  TARGS\n> {\n  public getType(): Type<Box3Helper> {\n    return Box3Helper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'Box3Helper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set box(value: Box3 | [min: Vector3, max: Vector3]) {\n    if (this._objRef) {\n      this._objRef.box = applyValue<Box3>(this._objRef.box, value);\n    }\n  }\n  // @ts-ignore\n  public get box(): Box3 | undefined {\n    return this._objRef?.box;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BufferGeometry } from 'three';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-geometry',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThGeometryBase<T extends BufferGeometry, ARGS> extends ThWrapperBase<T, ARGS> {\n  constructor(protected parent: ThObject3D) {\n    super();\n  }\n\n  public addToParent() {\n    if (!this.parent.objRef) {\n      return;\n      //throw new Error(\"parent object doesn't hold a three js object instance\");\n    }\n\n    (this.parent.objRef as any).geometry = this.objRef;\n    if ((this.parent.objRef as any).updateMorphTargets) {\n      (this.parent.objRef as any).updateMorphTargets();\n    }\n  }\n\n  public removeFromParent() {\n    if (this._objRef && this.parent && this.parent.objRef) {\n      (this.parent.objRef as any).geometry = undefined;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, Input, SkipSelf, Type } from '@angular/core';\nimport {\n  Box3,\n  BufferAttribute,\n  BufferGeometry,\n  GLBufferAttribute,\n  InterleavedBufferAttribute,\n  Sphere,\n  Vector3\n} from 'three';\nimport { ThGeometryBase } from '../ThGeometryBase';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-bufferGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: []\n})\nexport class ThBufferGeometry<T extends BufferGeometry = BufferGeometry, TARGS = []> extends ThGeometryBase<T, TARGS> {\n  public getType(): Type<BufferGeometry> {\n    return BufferGeometry;\n  }\n\n  @Input()\n  public set id(value: number) {\n    if (this._objRef) {\n      this._objRef.id = value;\n    }\n  }\n\n  // @ts-ignore\n  public get id(): number | undefined {\n    return this._objRef?.id;\n  }\n  @Input()\n  public set uuid(value: string) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uuid(): string | undefined {\n    return this._objRef?.uuid;\n  }\n  @Input()\n  public set name(value: string) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n\n  // @ts-ignore\n  public get name(): string | undefined {\n    return this._objRef?.name;\n  }\n  // @ts-ignore\n  public get type(): (string | 'BufferGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set index(value: BufferAttribute | null | [value: ArrayLike<number> | ArrayBufferView, offset?: number]) {\n    if (this._objRef) {\n      this._objRef.index = applyValue<BufferAttribute | null>(this._objRef.index, value);\n    }\n  }\n  // @ts-ignore\n  public get index(): (BufferAttribute | null) | undefined {\n    return this._objRef?.index;\n  }\n  @Input()\n  public set attributes(value: {\n    [name: string]: BufferAttribute | InterleavedBufferAttribute | GLBufferAttribute; // TODO Replace for 'Record<>'\n  }) {\n    if (this._objRef) {\n      this._objRef.attributes = value;\n    }\n  }\n\n  // @ts-ignore\n  public get attributes():\n    | {\n        [name: string]: BufferAttribute | InterleavedBufferAttribute | GLBufferAttribute; // TODO Replace for 'Record<>'\n      }\n    | undefined {\n    return this._objRef?.attributes;\n  }\n  @Input()\n  public set morphAttributes(value: {\n    [name: string]: Array<BufferAttribute | InterleavedBufferAttribute>; // TODO Replace for 'Record<>'\n  }) {\n    if (this._objRef) {\n      this._objRef.morphAttributes = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphAttributes():\n    | {\n        [name: string]: Array<BufferAttribute | InterleavedBufferAttribute>; // TODO Replace for 'Record<>'\n      }\n    | undefined {\n    return this._objRef?.morphAttributes;\n  }\n  @Input()\n  public set morphTargetsRelative(value: boolean) {\n    if (this._objRef) {\n      this._objRef.morphTargetsRelative = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphTargetsRelative(): boolean | undefined {\n    return this._objRef?.morphTargetsRelative;\n  }\n  @Input()\n  public set groups(\n    value: Array<{\n      /**\n       * Specifies the first element in this draw call – the first vertex for non-indexed geometry, otherwise the first triangle index.\n       *\n       * @remarks Expects a `Integer`\n       */\n      start: number;\n      /**\n       * Specifies how many vertices (or indices) are included.\n       *\n       * @remarks Expects a `Integer`\n       */\n      count: number;\n      /**\n       * Specifies the material array index to use.\n       *\n       * @remarks Expects a `Integer`\n       */\n      materialIndex?: number | undefined;\n    }>\n  ) {\n    if (this._objRef) {\n      this._objRef.groups = value;\n    }\n  }\n\n  // @ts-ignore\n  public get groups():\n    | Array<{\n        /**\n         * Specifies the first element in this draw call – the first vertex for non-indexed geometry, otherwise the first triangle index.\n         *\n         * @remarks Expects a `Integer`\n         */\n        start: number;\n        /**\n         * Specifies how many vertices (or indices) are included.\n         *\n         * @remarks Expects a `Integer`\n         */\n        count: number;\n        /**\n         * Specifies the material array index to use.\n         *\n         * @remarks Expects a `Integer`\n         */\n        materialIndex?: number | undefined;\n      }>\n    | undefined {\n    return this._objRef?.groups;\n  }\n  @Input()\n  public set boundingBox(value: Box3 | null | [min: Vector3, max: Vector3]) {\n    if (this._objRef) {\n      this._objRef.boundingBox = applyValue<Box3 | null>(this._objRef.boundingBox, value);\n    }\n  }\n  // @ts-ignore\n  public get boundingBox(): (Box3 | null) | undefined {\n    return this._objRef?.boundingBox;\n  }\n  @Input()\n  public set boundingSphere(value: Sphere | null | [center: Vector3, radius: number]) {\n    if (this._objRef) {\n      this._objRef.boundingSphere = applyValue<Sphere | null>(this._objRef.boundingSphere, value);\n    }\n  }\n  // @ts-ignore\n  public get boundingSphere(): (Sphere | null) | undefined {\n    return this._objRef?.boundingSphere;\n  }\n  @Input()\n  public set drawRange(value: { start: number; count: number }) {\n    if (this._objRef) {\n      this._objRef.drawRange = value;\n    }\n  }\n\n  // @ts-ignore\n  public get drawRange(): { start: number; count: number } | undefined {\n    return this._objRef?.drawRange;\n  }\n  @Input()\n  public set userData(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n\n  // @ts-ignore\n  public get userData(): { [key: string]: any } | undefined {\n    return this._objRef?.userData;\n  }\n  // @ts-ignore\n  public get isBufferGeometry(): true | undefined {\n    return this._objRef?.isBufferGeometry;\n  }\n\n  constructor(@SkipSelf() hostObject: ThObject3D) {\n    super(hostObject);\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BoxGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-boxGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThBufferGeometry, useExisting: forwardRef(() => ThBoxGeometry) }]\n})\nexport class ThBoxGeometry<\n  T extends BoxGeometry = BoxGeometry,\n  TARGS = [\n    width?: number,\n    height?: number,\n    depth?: number,\n    widthSegments?: number,\n    heightSegments?: number,\n    depthSegments?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<BoxGeometry> {\n    return BoxGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'BoxGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly width: number;\n        readonly height: number;\n        readonly depth: number;\n        readonly widthSegments: number;\n        readonly heightSegments: number;\n        readonly depthSegments: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BoxHelper, BufferGeometry, ColorRepresentation, Material, Object3D } from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-boxHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBoxHelper) }]\n})\nexport class ThBoxHelper<\n  T extends BoxHelper = BoxHelper,\n  TARGS = [object: Object3D, color?: ColorRepresentation]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<BoxHelper> {\n    return BoxHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'BoxHelper') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BoxLineGeometry } from 'three/examples/jsm/geometries/BoxLineGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-boxLineGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThBoxLineGeometry)\n    }\n  ]\n})\nexport class ThBoxLineGeometry<\n  T extends BoxLineGeometry = BoxLineGeometry,\n  TARGS = [\n    width?: number,\n    height?: number,\n    depth?: number,\n    widthSegments?: number,\n    heightSegments?: number,\n    depthSegments?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<BoxLineGeometry> {\n    return BoxLineGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { BufferGeometry, Camera, CameraHelper, Material, Matrix4 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-cameraHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCameraHelper) }]\n})\nexport class ThCameraHelper<T extends CameraHelper = CameraHelper, TARGS = /* camera */ Camera> extends ThLineSegments<\n  BufferGeometry,\n  Material | Material[],\n  T,\n  TARGS\n> {\n  public getType(): Type<CameraHelper> {\n    return CameraHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'CameraHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set pointMap(value: { [id: string]: number[] }) {\n    if (this._objRef) {\n      this._objRef.pointMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get pointMap(): { [id: string]: number[] } | undefined {\n    return this._objRef?.pointMap;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix4 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\n","import { Component } from '@angular/core';\nimport { Texture } from 'three';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-texture',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThTextureBase<T extends Texture, ARGS> extends ThWrapperBase<T, ARGS> {}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  AnyMapping,\n  AnyPixelFormat,\n  MagnificationTextureFilter,\n  Mapping,\n  Matrix3,\n  MinificationTextureFilter,\n  OffscreenCanvas,\n  PixelFormat,\n  PixelFormatGPU,\n  Source,\n  Texture,\n  TextureDataType,\n  TextureEncoding,\n  Vector2,\n  Wrapping\n} from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-texture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThTexture) }]\n})\nexport class ThTexture<\n  T extends Texture = Texture,\n  TARGS = [\n    image?: TexImageSource | OffscreenCanvas,\n    mapping?: Mapping,\n    wrapS?: Wrapping,\n    wrapT?: Wrapping,\n    magFilter?: MagnificationTextureFilter,\n    minFilter?: MinificationTextureFilter,\n    format?: PixelFormat,\n    type?: TextureDataType,\n    anisotropy?: number,\n    encoding?: TextureEncoding\n  ]\n> extends ThTextureBase<T, TARGS> {\n  public getType(): Type<Texture> {\n    return Texture;\n  }\n\n  // @ts-ignore\n  public get isTexture(): true | undefined {\n    return this._objRef?.isTexture;\n  }\n  // @ts-ignore\n  public get id(): number | undefined {\n    return this._objRef?.id;\n  }\n  @Input()\n  public set uuid(value: string) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uuid(): string | undefined {\n    return this._objRef?.uuid;\n  }\n  @Input()\n  public set name(value: string) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n\n  // @ts-ignore\n  public get name(): string | undefined {\n    return this._objRef?.name;\n  }\n  @Input()\n  public set source(value: Source) {\n    if (this._objRef) {\n      this._objRef.source = value;\n    }\n  }\n\n  // @ts-ignore\n  public get source(): Source | undefined {\n    return this._objRef?.source;\n  }\n  @Input()\n  public set mipmaps(value: any[]) {\n    if (this._objRef) {\n      this._objRef.mipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mipmaps(): any[] | undefined {\n    return this._objRef?.mipmaps;\n  }\n  @Input()\n  public set mapping(value: AnyMapping) {\n    if (this._objRef) {\n      this._objRef.mapping = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mapping(): AnyMapping | undefined {\n    return this._objRef?.mapping;\n  }\n  @Input()\n  public set channel(value: number) {\n    if (this._objRef) {\n      this._objRef.channel = value;\n    }\n  }\n\n  // @ts-ignore\n  public get channel(): number | undefined {\n    return this._objRef?.channel;\n  }\n  @Input()\n  public set wrapS(value: Wrapping) {\n    if (this._objRef) {\n      this._objRef.wrapS = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wrapS(): Wrapping | undefined {\n    return this._objRef?.wrapS;\n  }\n  @Input()\n  public set wrapT(value: Wrapping) {\n    if (this._objRef) {\n      this._objRef.wrapT = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wrapT(): Wrapping | undefined {\n    return this._objRef?.wrapT;\n  }\n  @Input()\n  public set magFilter(value: MagnificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get magFilter(): MagnificationTextureFilter | undefined {\n    return this._objRef?.magFilter;\n  }\n  @Input()\n  public set minFilter(value: MinificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFilter(): MinificationTextureFilter | undefined {\n    return this._objRef?.minFilter;\n  }\n  @Input()\n  public set anisotropy(value: number) {\n    if (this._objRef) {\n      this._objRef.anisotropy = value;\n    }\n  }\n\n  // @ts-ignore\n  public get anisotropy(): number | undefined {\n    return this._objRef?.anisotropy;\n  }\n  @Input()\n  public set format(value: AnyPixelFormat) {\n    if (this._objRef) {\n      this._objRef.format = value;\n    }\n  }\n\n  // @ts-ignore\n  public get format(): AnyPixelFormat | undefined {\n    return this._objRef?.format;\n  }\n  @Input()\n  public set type(value: TextureDataType) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): TextureDataType | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set internalFormat(value: PixelFormatGPU | null) {\n    if (this._objRef) {\n      this._objRef.internalFormat = value;\n    }\n  }\n\n  // @ts-ignore\n  public get internalFormat(): (PixelFormatGPU | null) | undefined {\n    return this._objRef?.internalFormat;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix3\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n31: number,\n          n32: number,\n          n33: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix3>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix3 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  @Input()\n  public set offset(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.offset = applyValue<Vector2>(this._objRef.offset, value);\n    }\n  }\n  // @ts-ignore\n  public get offset(): Vector2 | undefined {\n    return this._objRef?.offset;\n  }\n  @Input()\n  public set repeat(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.repeat = applyValue<Vector2>(this._objRef.repeat, value);\n    }\n  }\n  // @ts-ignore\n  public get repeat(): Vector2 | undefined {\n    return this._objRef?.repeat;\n  }\n  @Input()\n  public set center(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.center = applyValue<Vector2>(this._objRef.center, value);\n    }\n  }\n  // @ts-ignore\n  public get center(): Vector2 | undefined {\n    return this._objRef?.center;\n  }\n  @Input()\n  public set rotation(value: number) {\n    if (this._objRef) {\n      this._objRef.rotation = value;\n    }\n  }\n\n  // @ts-ignore\n  public get rotation(): number | undefined {\n    return this._objRef?.rotation;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n  @Input()\n  public set premultiplyAlpha(value: boolean) {\n    if (this._objRef) {\n      this._objRef.premultiplyAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get premultiplyAlpha(): boolean | undefined {\n    return this._objRef?.premultiplyAlpha;\n  }\n  @Input()\n  public set flipY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flipY(): boolean | undefined {\n    return this._objRef?.flipY;\n  }\n  @Input()\n  public set unpackAlignment(value: number) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n\n  // @ts-ignore\n  public get unpackAlignment(): number | undefined {\n    return this._objRef?.unpackAlignment;\n  }\n  @Input()\n  public set encoding(value: TextureEncoding) {\n    if (this._objRef) {\n      this._objRef.encoding = value;\n    }\n  }\n\n  // @ts-ignore\n  public get encoding(): TextureEncoding | undefined {\n    return this._objRef?.encoding;\n  }\n  @Input()\n  public set isRenderTargetTexture(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isRenderTargetTexture = value;\n    }\n  }\n\n  // @ts-ignore\n  public get isRenderTargetTexture(): boolean | undefined {\n    return this._objRef?.isRenderTargetTexture;\n  }\n  @Input()\n  public set needsPMREMUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.needsPMREMUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get needsPMREMUpdate(): boolean | undefined {\n    return this._objRef?.needsPMREMUpdate;\n  }\n  @Input()\n  public set userData(value: any) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n\n  // @ts-ignore\n  public get userData(): any | undefined {\n    return this._objRef?.userData;\n  }\n  @Input()\n  public set version(value: number) {\n    if (this._objRef) {\n      this._objRef.version = value;\n    }\n  }\n\n  // @ts-ignore\n  public get version(): number | undefined {\n    return this._objRef?.version;\n  }\n\n  public static readonly DEFAULT_ANISOTROPY = Texture.DEFAULT_ANISOTROPY;\n\n  public static readonly DEFAULT_IMAGE = Texture.DEFAULT_IMAGE;\n\n  public static readonly DEFAULT_MAPPING = Texture.DEFAULT_MAPPING;\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport {\n  CanvasTexture,\n  MagnificationTextureFilter,\n  Mapping,\n  MinificationTextureFilter,\n  OffscreenCanvas,\n  PixelFormat,\n  TextureDataType,\n  Wrapping\n} from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-canvasTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThCanvasTexture) }]\n})\nexport class ThCanvasTexture<\n  T extends CanvasTexture = CanvasTexture,\n  TARGS = [\n    canvas: TexImageSource | OffscreenCanvas,\n    mapping?: Mapping,\n    wrapS?: Wrapping,\n    wrapT?: Wrapping,\n    magFilter?: MagnificationTextureFilter,\n    minFilter?: MinificationTextureFilter,\n    format?: PixelFormat,\n    type?: TextureDataType,\n    anisotropy?: number\n  ]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<CanvasTexture> {\n    return CanvasTexture;\n  }\n\n  // @ts-ignore\n  public get isCanvasTexture(): true | undefined {\n    return this._objRef?.isCanvasTexture;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { CapsuleGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-capsuleGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThCapsuleGeometry)\n    }\n  ]\n})\nexport class ThCapsuleGeometry<\n  T extends CapsuleGeometry = CapsuleGeometry,\n  TARGS = [radius?: number, length?: number, capSegments?: number, radialSegments?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<CapsuleGeometry> {\n    return CapsuleGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'CapsuleGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly radius: number;\n        readonly length: number;\n        readonly capSegments: number;\n        readonly radialSegments: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { CircleGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-circleGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThCircleGeometry)\n    }\n  ]\n})\nexport class ThCircleGeometry<\n  T extends CircleGeometry = CircleGeometry,\n  TARGS = [radius?: number, segments?: number, thetaStart?: number, thetaLength?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<CircleGeometry> {\n    return CircleGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'CircleGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly radius: number;\n        readonly segments: number;\n        readonly thetaStart: number;\n        readonly thetaLength: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { ClearMaskPass } from 'three/examples/jsm/postprocessing/MaskPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-clearMaskPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThClearMaskPass) }]\n})\nexport class ThClearMaskPass<T extends ClearMaskPass = ClearMaskPass, TARGS = []> extends ThPass<T, TARGS> {\n  public getType(): Type<ClearMaskPass> {\n    return ClearMaskPass;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation } from 'three';\nimport { ClearPass } from 'three/examples/jsm/postprocessing/ClearPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-clearPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThClearPass) }]\n})\nexport class ThClearPass<\n  T extends ClearPass = ClearPass,\n  TARGS = [clearColor?: ColorRepresentation, clearAlpha?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<ClearPass> {\n    return ClearPass;\n  }\n\n  @Input()\n  public set clearColor(value: ColorRepresentation) {\n    if (this._objRef) {\n      this._objRef.clearColor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearColor(): ColorRepresentation | undefined {\n    return this._objRef?.clearColor;\n  }\n  @Input()\n  public set clearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearAlpha(): number | undefined {\n    return this._objRef?.clearAlpha;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  CompressedPixelFormat,\n  CompressedTexture,\n  MagnificationTextureFilter,\n  Mapping,\n  MinificationTextureFilter,\n  TextureDataType,\n  TextureEncoding,\n  Wrapping\n} from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-compressedTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThTextureBase,\n      useExisting: forwardRef(() => ThCompressedTexture)\n    }\n  ]\n})\nexport class ThCompressedTexture<\n  T extends CompressedTexture = CompressedTexture,\n  TARGS = [\n    mipmaps: ImageData[],\n    width: number,\n    height: number,\n    format: CompressedPixelFormat,\n    type?: TextureDataType,\n    mapping?: Mapping,\n    wrapS?: Wrapping,\n    wrapT?: Wrapping,\n    magFilter?: MagnificationTextureFilter,\n    minFilter?: MinificationTextureFilter,\n    anisotropy?: number,\n    encoding?: TextureEncoding\n  ]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<CompressedTexture> {\n    return CompressedTexture;\n  }\n\n  // @ts-ignore\n  public get isCompressedTexture(): true | undefined {\n    return this._objRef?.isCompressedTexture;\n  }\n  @Input()\n  public set mipmaps(value: ImageData[]) {\n    if (this._objRef) {\n      this._objRef.mipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mipmaps(): ImageData[] | undefined {\n    return this._objRef?.mipmaps;\n  }\n  @Input()\n  public set format(value: CompressedPixelFormat) {\n    if (this._objRef) {\n      this._objRef.format = value;\n    }\n  }\n\n  // @ts-ignore\n  public get format(): CompressedPixelFormat | undefined {\n    return this._objRef?.format;\n  }\n  @Input()\n  public set flipY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flipY(): boolean | undefined {\n    return this._objRef?.flipY;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { CompressedArrayTexture, CompressedPixelFormat, TextureDataType, Wrapping } from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThCompressedTexture } from './ThCompressedTexture';\n\n@Component({\n  selector: 'th-compressedArrayTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThTextureBase,\n      useExisting: forwardRef(() => ThCompressedArrayTexture)\n    }\n  ]\n})\nexport class ThCompressedArrayTexture<\n  T extends CompressedArrayTexture = CompressedArrayTexture,\n  TARGS = [\n    mipmaps: ImageData[],\n    width: number,\n    height: number,\n    depth: number,\n    format: CompressedPixelFormat,\n    type?: TextureDataType\n  ]\n> extends ThCompressedTexture<T, TARGS> {\n  public getType(): Type<CompressedArrayTexture> {\n    return CompressedArrayTexture;\n  }\n\n  // @ts-ignore\n  public get isCompressedArrayTexture(): true | undefined {\n    return this._objRef?.isCompressedArrayTexture;\n  }\n  @Input()\n  public set wrapR(value: Wrapping) {\n    if (this._objRef) {\n      this._objRef.wrapR = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wrapR(): Wrapping | undefined {\n    return this._objRef?.wrapR;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { CylinderGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-cylinderGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThCylinderGeometry)\n    }\n  ]\n})\nexport class ThCylinderGeometry<\n  T extends CylinderGeometry = CylinderGeometry,\n  TARGS = [\n    radiusTop?: number,\n    radiusBottom?: number,\n    height?: number,\n    radialSegments?: number,\n    heightSegments?: number,\n    openEnded?: boolean,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<CylinderGeometry> {\n    return CylinderGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'CylinderGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly radiusTop: number;\n        readonly radiusBottom: number;\n        readonly height: number;\n        readonly radialSegments: number;\n        readonly heightSegments: number;\n        readonly openEnded: boolean;\n        readonly thetaStart: number;\n        readonly thetaLength: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { ConeGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThCylinderGeometry } from './ThCylinderGeometry';\n\n@Component({\n  selector: 'th-coneGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThConeGeometry)\n    }\n  ]\n})\nexport class ThConeGeometry<\n  T extends ConeGeometry = ConeGeometry,\n  TARGS = [\n    radius?: number,\n    height?: number,\n    radialSegments?: number,\n    heightSegments?: number,\n    openEnded?: boolean,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThCylinderGeometry<T, TARGS> {\n  public getType(): Type<ConeGeometry> {\n    return ConeGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'ConeGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly radius: number;\n        readonly radiusTop: number;\n        readonly radiusBottom: number;\n        readonly height: number;\n        readonly radialSegments: number;\n        readonly heightSegments: number;\n        readonly openEnded: boolean;\n        readonly thetaStart: number;\n        readonly thetaLength: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { Vector3 } from 'three';\nimport { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-convexGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThConvexGeometry)\n    }\n  ]\n})\nexport class ThConvexGeometry<\n  T extends ConvexGeometry = ConvexGeometry,\n  TARGS = /* points? */ Vector3[]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ConvexGeometry> {\n    return ConvexGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { CubeCamera, Event, WebGLCubeRenderTarget } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-cubeCamera',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCubeCamera) }]\n})\nexport class ThCubeCamera<\n  T extends CubeCamera = CubeCamera,\n  TARGS = [near: number, far: number, renderTarget: WebGLCubeRenderTarget]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<CubeCamera> {\n    return CubeCamera;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'CubeCamera') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set renderTarget(value: WebGLCubeRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTarget(): WebGLCubeRenderTarget | undefined {\n    return this._objRef?.renderTarget;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  CubeTexture,\n  CubeTextureMapping,\n  MagnificationTextureFilter,\n  MinificationTextureFilter,\n  PixelFormat,\n  TextureDataType,\n  TextureEncoding,\n  Wrapping\n} from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-cubeTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThCubeTexture) }]\n})\nexport class ThCubeTexture<\n  T extends CubeTexture = CubeTexture,\n  TARGS = [\n    images?: any[],\n    mapping?: CubeTextureMapping,\n    wrapS?: Wrapping,\n    wrapT?: Wrapping,\n    magFilter?: MagnificationTextureFilter,\n    minFilter?: MinificationTextureFilter,\n    format?: PixelFormat,\n    type?: TextureDataType,\n    anisotropy?: number,\n    encoding?: TextureEncoding\n  ]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<CubeTexture> {\n    return CubeTexture;\n  }\n\n  // @ts-ignore\n  public get isCubeTexture(): true | undefined {\n    return this._objRef?.isCubeTexture;\n  }\n  @Input()\n  public set mapping(value: CubeTextureMapping) {\n    if (this._objRef) {\n      this._objRef.mapping = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mapping(): CubeTextureMapping | undefined {\n    return this._objRef?.mapping;\n  }\n  @Input()\n  public set flipY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flipY(): boolean | undefined {\n    return this._objRef?.flipY;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { CubeTexture, Mesh, PerspectiveCamera, Scene } from 'three';\nimport { CubeTexturePass } from 'three/examples/jsm/postprocessing/CubeTexturePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-cubeTexturePass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThCubeTexturePass) }]\n})\nexport class ThCubeTexturePass<\n  T extends CubeTexturePass = CubeTexturePass,\n  TARGS = [camera: PerspectiveCamera, envMap?: CubeTexture, opacity?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<CubeTexturePass> {\n    return CubeTexturePass;\n  }\n\n  @Input()\n  public set camera(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): PerspectiveCamera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set cubeShader(value: object) {\n    if (this._objRef) {\n      this._objRef.cubeShader = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cubeShader(): object | undefined {\n    return this._objRef?.cubeShader;\n  }\n  @Input()\n  public set cubeMesh(value: Mesh) {\n    if (this._objRef) {\n      this._objRef.cubeMesh = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cubeMesh(): Mesh | undefined {\n    return this._objRef?.cubeMesh;\n  }\n  @Input()\n  public set envMap(value: CubeTexture) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get envMap(): CubeTexture | undefined {\n    return this._objRef?.envMap;\n  }\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get opacity(): number | undefined {\n    return this._objRef?.opacity;\n  }\n  @Input()\n  public set cubeScene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.cubeScene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cubeScene(): Scene | undefined {\n    return this._objRef?.cubeScene;\n  }\n  @Input()\n  public set cubeCamera(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.cubeCamera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cubeCamera(): PerspectiveCamera | undefined {\n    return this._objRef?.cubeCamera;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Data3DTexture, MagnificationTextureFilter, MinificationTextureFilter, Wrapping } from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-data3DTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThData3DTexture) }]\n})\nexport class ThData3DTexture<\n  T extends Data3DTexture = Data3DTexture,\n  TARGS = [data?: BufferSource | null, width?: number, height?: number, depth?: number]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<Data3DTexture> {\n    return Data3DTexture;\n  }\n\n  // @ts-ignore\n  public get isData3DTexture(): true | undefined {\n    return this._objRef?.isData3DTexture;\n  }\n  @Input()\n  public set magFilter(value: MagnificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get magFilter(): MagnificationTextureFilter | undefined {\n    return this._objRef?.magFilter;\n  }\n  @Input()\n  public set minFilter(value: MinificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFilter(): MinificationTextureFilter | undefined {\n    return this._objRef?.minFilter;\n  }\n  @Input()\n  public set wrapR(value: Wrapping) {\n    if (this._objRef) {\n      this._objRef.wrapR = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wrapR(): Wrapping | undefined {\n    return this._objRef?.wrapR;\n  }\n  @Input()\n  public set flipY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flipY(): boolean | undefined {\n    return this._objRef?.flipY;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n  @Input()\n  public set unpackAlignment(value: number) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n\n  // @ts-ignore\n  public get unpackAlignment(): number | undefined {\n    return this._objRef?.unpackAlignment;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { DataArrayTexture, MagnificationTextureFilter, MinificationTextureFilter } from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-dataArrayTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThTextureBase,\n      useExisting: forwardRef(() => ThDataArrayTexture)\n    }\n  ]\n})\nexport class ThDataArrayTexture<\n  T extends DataArrayTexture = DataArrayTexture,\n  TARGS = [data?: BufferSource, width?: number, height?: number, depth?: number]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<DataArrayTexture> {\n    return DataArrayTexture;\n  }\n\n  // @ts-ignore\n  public get isDataArrayTexture(): true | undefined {\n    return this._objRef?.isDataArrayTexture;\n  }\n  @Input()\n  public set magFilter(value: MagnificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get magFilter(): MagnificationTextureFilter | undefined {\n    return this._objRef?.magFilter;\n  }\n  @Input()\n  public set minFilter(value: MinificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFilter(): MinificationTextureFilter | undefined {\n    return this._objRef?.minFilter;\n  }\n  @Input()\n  public set wrapR(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wrapR = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wrapR(): boolean | undefined {\n    return this._objRef?.wrapR;\n  }\n  @Input()\n  public set flipY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flipY(): boolean | undefined {\n    return this._objRef?.flipY;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n  @Input()\n  public set unpackAlignment(value: number) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n\n  // @ts-ignore\n  public get unpackAlignment(): number | undefined {\n    return this._objRef?.unpackAlignment;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  DataTexture,\n  MagnificationTextureFilter,\n  Mapping,\n  MinificationTextureFilter,\n  PixelFormat,\n  TextureDataType,\n  TextureEncoding,\n  Wrapping\n} from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-dataTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThDataTexture) }]\n})\nexport class ThDataTexture<\n  T extends DataTexture = DataTexture,\n  TARGS = [\n    data?: BufferSource | null,\n    width?: number,\n    height?: number,\n    format?: PixelFormat,\n    type?: TextureDataType,\n    mapping?: Mapping,\n    wrapS?: Wrapping,\n    wrapT?: Wrapping,\n    magFilter?: MagnificationTextureFilter,\n    minFilter?: MinificationTextureFilter,\n    anisotropy?: number,\n    encoding?: TextureEncoding\n  ]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<DataTexture> {\n    return DataTexture;\n  }\n\n  // @ts-ignore\n  public get isDataTexture(): true | undefined {\n    return this._objRef?.isDataTexture;\n  }\n  @Input()\n  public set magFilter(value: MagnificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get magFilter(): MagnificationTextureFilter | undefined {\n    return this._objRef?.magFilter;\n  }\n  @Input()\n  public set minFilter(value: MinificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFilter(): MinificationTextureFilter | undefined {\n    return this._objRef?.minFilter;\n  }\n  @Input()\n  public set flipY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flipY(): boolean | undefined {\n    return this._objRef?.flipY;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n  @Input()\n  public set unpackAlignment(value: number) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n\n  // @ts-ignore\n  public get unpackAlignment(): number | undefined {\n    return this._objRef?.unpackAlignment;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { Euler, Mesh, Vector3 } from 'three';\nimport { DecalGeometry } from 'three/examples/jsm/geometries/DecalGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-decalGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThDecalGeometry)\n    }\n  ]\n})\nexport class ThDecalGeometry<\n  T extends DecalGeometry = DecalGeometry,\n  TARGS = [mesh: Mesh, position: Vector3, orientation: Euler, size: Vector3]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<DecalGeometry> {\n    return DecalGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  DeepTexturePixelFormat,\n  DepthTexture,\n  MagnificationTextureFilter,\n  Mapping,\n  MinificationTextureFilter,\n  TextureDataType,\n  Wrapping\n} from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-depthTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThDepthTexture) }]\n})\nexport class ThDepthTexture<\n  T extends DepthTexture = DepthTexture,\n  TARGS = [\n    width: number,\n    height: number,\n    type?: TextureDataType,\n    mapping?: Mapping,\n    wrapS?: Wrapping,\n    wrapT?: Wrapping,\n    magFilter?: MagnificationTextureFilter,\n    minFilter?: MinificationTextureFilter,\n    anisotropy?: number,\n    format?: DeepTexturePixelFormat\n  ]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<DepthTexture> {\n    return DepthTexture;\n  }\n\n  // @ts-ignore\n  public get isDepthTexture(): true | undefined {\n    return this._objRef?.isDepthTexture;\n  }\n  @Input()\n  public set flipY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flipY(): boolean | undefined {\n    return this._objRef?.flipY;\n  }\n  @Input()\n  public set magFilter(value: MagnificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get magFilter(): MagnificationTextureFilter | undefined {\n    return this._objRef?.magFilter;\n  }\n  @Input()\n  public set minFilter(value: MinificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFilter(): MinificationTextureFilter | undefined {\n    return this._objRef?.minFilter;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n  @Input()\n  public set format(value: DeepTexturePixelFormat) {\n    if (this._objRef) {\n      this._objRef.format = value;\n    }\n  }\n\n  // @ts-ignore\n  public get format(): DeepTexturePixelFormat | undefined {\n    return this._objRef?.format;\n  }\n  @Input()\n  public set type(value: TextureDataType) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): TextureDataType | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, DirectionalLight, DirectionalLightShadow, Object3D, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-directionalLight',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThDirectionalLight) }]\n})\nexport class ThDirectionalLight<\n  T extends DirectionalLight = DirectionalLight,\n  TARGS = [color?: ColorRepresentation, intensity?: number]\n> extends ThLight<DirectionalLightShadow, T, TARGS> {\n  public getType(): Type<DirectionalLight> {\n    return DirectionalLight;\n  }\n\n  // @ts-ignore\n  public get isDirectionalLight(): true | undefined {\n    return this._objRef?.isDirectionalLight;\n  }\n  // @ts-ignore\n  public get type(): (string | 'DirectionalLight') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set castShadow(value: boolean) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get castShadow(): boolean | undefined {\n    return this._objRef?.castShadow;\n  }\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  public get position(): Vector3 | undefined {\n    return this._objRef?.position;\n  }\n  @Input()\n  public set shadow(value: DirectionalLightShadow) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shadow(): DirectionalLightShadow | undefined {\n    return this._objRef?.shadow;\n  }\n  @Input()\n  public set target(value: Object3D) {\n    if (this._objRef) {\n      this._objRef.target = value;\n    }\n  }\n\n  // @ts-ignore\n  public get target(): Object3D | undefined {\n    return this._objRef?.target;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, DirectionalLight, DirectionalLightHelper, Event, Line, Matrix4 } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-directionalLightHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThDirectionalLightHelper)\n    }\n  ]\n})\nexport class ThDirectionalLightHelper<\n  T extends DirectionalLightHelper = DirectionalLightHelper,\n  TARGS = [light: DirectionalLight, size?: number, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<DirectionalLightHelper> {\n    return DirectionalLightHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'DirectionalLightHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set lightPlane(value: Line) {\n    if (this._objRef) {\n      this._objRef.lightPlane = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightPlane(): Line | undefined {\n    return this._objRef?.lightPlane;\n  }\n  @Input()\n  public set light(value: DirectionalLight) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  // @ts-ignore\n  public get light(): DirectionalLight | undefined {\n    return this._objRef?.light;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix4 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n\n  // @ts-ignore\n  public get color(): (ColorRepresentation | undefined) | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set targetLine(value: Line) {\n    if (this._objRef) {\n      this._objRef.targetLine = value;\n    }\n  }\n\n  // @ts-ignore\n  public get targetLine(): Line | undefined {\n    return this._objRef?.targetLine;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { PolyhedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-polyhedronGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThPolyhedronGeometry)\n    }\n  ]\n})\nexport class ThPolyhedronGeometry<\n  T extends PolyhedronGeometry = PolyhedronGeometry,\n  TARGS = [vertices?: number[], indices?: number[], radius?: number, detail?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<PolyhedronGeometry> {\n    return PolyhedronGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'PolyhedronGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly vertices: number[];\n        readonly indices: number[];\n        readonly radius: number;\n        readonly detail: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { DodecahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-dodecahedronGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThDodecahedronGeometry)\n    }\n  ]\n})\nexport class ThDodecahedronGeometry<\n  T extends DodecahedronGeometry = DodecahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<DodecahedronGeometry> {\n    return DodecahedronGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'DodecahedronGeometry') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial, Vector2 } from 'three';\nimport { DotScreenPass } from 'three/examples/jsm/postprocessing/DotScreenPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-dotScreenPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThDotScreenPass) }]\n})\nexport class ThDotScreenPass<\n  T extends DotScreenPass = DotScreenPass,\n  TARGS = [center?: Vector2, angle?: number, scale?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<DotScreenPass> {\n    return DotScreenPass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): ShaderMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, Object3D } from 'three';\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-dragControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThDragControls) }]\n})\nexport class ThDragControls<\n  T extends DragControls = DragControls,\n  TARGS = [objects: Object3D[], camera: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<DragControls> {\n    return DragControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  // @ts-ignore\n  public get object(): Camera | undefined {\n    return this._objRef?.object;\n  }\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enabled(): boolean | undefined {\n    return this._objRef?.enabled;\n  }\n  @Input()\n  public set transformGroup(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transformGroup = value;\n    }\n  }\n\n  // @ts-ignore\n  public get transformGroup(): boolean | undefined {\n    return this._objRef?.transformGroup;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BufferGeometry, EdgesGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-edgesGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThEdgesGeometry)\n    }\n  ]\n})\nexport class ThEdgesGeometry<\n  TBufferGeometry extends BufferGeometry = BufferGeometry,\n  T extends EdgesGeometry<TBufferGeometry> = EdgesGeometry<TBufferGeometry>,\n  TARGS = [geometry?: TBufferGeometry | null, thresholdAngle?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<EdgesGeometry<TBufferGeometry>> {\n    return EdgesGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'EdgesGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly geometry: TBufferGeometry | null;\n        readonly thresholdAngle: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { ExtrudeGeometry, ExtrudeGeometryOptions, Shape } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-extrudeGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThExtrudeGeometry)\n    }\n  ]\n})\nexport class ThExtrudeGeometry<\n  T extends ExtrudeGeometry = ExtrudeGeometry,\n  TARGS = [shapes?: Shape | Shape[], options?: ExtrudeGeometryOptions]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ExtrudeGeometry> {\n    return ExtrudeGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'ExtrudeGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly shapes: Shape | Shape[];\n        readonly options: ExtrudeGeometryOptions;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-filmPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThFilmPass) }]\n})\nexport class ThFilmPass<\n  T extends FilmPass = FilmPass,\n  TARGS = [noiseIntensity?: number, scanlinesIntensity?: number, scanlinesCount?: number, grayscale?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<FilmPass> {\n    return FilmPass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): ShaderMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera } from 'three';\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-firstPersonControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThFirstPersonControls)\n    }\n  ]\n})\nexport class ThFirstPersonControls<\n  T extends FirstPersonControls = FirstPersonControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<FirstPersonControls> {\n    return FirstPersonControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  // @ts-ignore\n  public get object(): Camera | undefined {\n    return this._objRef?.object;\n  }\n  @Input()\n  public set domElement(value: HTMLElement | Document) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  // @ts-ignore\n  public get domElement(): (HTMLElement | Document) | undefined {\n    return this._objRef?.domElement;\n  }\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enabled(): boolean | undefined {\n    return this._objRef?.enabled;\n  }\n  @Input()\n  public set movementSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.movementSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get movementSpeed(): number | undefined {\n    return this._objRef?.movementSpeed;\n  }\n  @Input()\n  public set lookSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.lookSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lookSpeed(): number | undefined {\n    return this._objRef?.lookSpeed;\n  }\n  @Input()\n  public set lookVertical(value: boolean) {\n    if (this._objRef) {\n      this._objRef.lookVertical = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lookVertical(): boolean | undefined {\n    return this._objRef?.lookVertical;\n  }\n  @Input()\n  public set autoForward(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoForward = value;\n    }\n  }\n\n  // @ts-ignore\n  public get autoForward(): boolean | undefined {\n    return this._objRef?.autoForward;\n  }\n  @Input()\n  public set activeLook(value: boolean) {\n    if (this._objRef) {\n      this._objRef.activeLook = value;\n    }\n  }\n\n  // @ts-ignore\n  public get activeLook(): boolean | undefined {\n    return this._objRef?.activeLook;\n  }\n  @Input()\n  public set heightSpeed(value: boolean) {\n    if (this._objRef) {\n      this._objRef.heightSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get heightSpeed(): boolean | undefined {\n    return this._objRef?.heightSpeed;\n  }\n  @Input()\n  public set heightCoef(value: number) {\n    if (this._objRef) {\n      this._objRef.heightCoef = value;\n    }\n  }\n\n  // @ts-ignore\n  public get heightCoef(): number | undefined {\n    return this._objRef?.heightCoef;\n  }\n  @Input()\n  public set heightMin(value: number) {\n    if (this._objRef) {\n      this._objRef.heightMin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get heightMin(): number | undefined {\n    return this._objRef?.heightMin;\n  }\n  @Input()\n  public set heightMax(value: number) {\n    if (this._objRef) {\n      this._objRef.heightMax = value;\n    }\n  }\n\n  // @ts-ignore\n  public get heightMax(): number | undefined {\n    return this._objRef?.heightMax;\n  }\n  @Input()\n  public set constrainVertical(value: boolean) {\n    if (this._objRef) {\n      this._objRef.constrainVertical = value;\n    }\n  }\n\n  // @ts-ignore\n  public get constrainVertical(): boolean | undefined {\n    return this._objRef?.constrainVertical;\n  }\n  @Input()\n  public set verticalMin(value: number) {\n    if (this._objRef) {\n      this._objRef.verticalMin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get verticalMin(): number | undefined {\n    return this._objRef?.verticalMin;\n  }\n  @Input()\n  public set verticalMax(value: number) {\n    if (this._objRef) {\n      this._objRef.verticalMax = value;\n    }\n  }\n\n  // @ts-ignore\n  public get verticalMax(): number | undefined {\n    return this._objRef?.verticalMax;\n  }\n  @Input()\n  public set mouseDragOn(value: boolean) {\n    if (this._objRef) {\n      this._objRef.mouseDragOn = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mouseDragOn(): boolean | undefined {\n    return this._objRef?.mouseDragOn;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera } from 'three';\nimport { FlyControls } from 'three/examples/jsm/controls/FlyControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-flyControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThFlyControls) }]\n})\nexport class ThFlyControls<\n  T extends FlyControls = FlyControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<FlyControls> {\n    return FlyControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  // @ts-ignore\n  public get object(): Camera | undefined {\n    return this._objRef?.object;\n  }\n  @Input()\n  public set domElement(value: HTMLElement | Document) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  // @ts-ignore\n  public get domElement(): (HTMLElement | Document) | undefined {\n    return this._objRef?.domElement;\n  }\n  @Input()\n  public set movementSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.movementSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get movementSpeed(): number | undefined {\n    return this._objRef?.movementSpeed;\n  }\n  @Input()\n  public set rollSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.rollSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get rollSpeed(): number | undefined {\n    return this._objRef?.rollSpeed;\n  }\n  @Input()\n  public set dragToLook(value: boolean) {\n    if (this._objRef) {\n      this._objRef.dragToLook = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dragToLook(): boolean | undefined {\n    return this._objRef?.dragToLook;\n  }\n  @Input()\n  public set autoForward(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoForward = value;\n    }\n  }\n\n  // @ts-ignore\n  public get autoForward(): boolean | undefined {\n    return this._objRef?.autoForward;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { FramebufferTexture, MagnificationTextureFilter, MinificationTextureFilter, PixelFormat } from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-framebufferTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThTextureBase,\n      useExisting: forwardRef(() => ThFramebufferTexture)\n    }\n  ]\n})\nexport class ThFramebufferTexture<\n  T extends FramebufferTexture = FramebufferTexture,\n  TARGS = [width: number, height: number, format: PixelFormat]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<FramebufferTexture> {\n    return FramebufferTexture;\n  }\n\n  // @ts-ignore\n  public get isFramebufferTexture(): true | undefined {\n    return this._objRef?.isFramebufferTexture;\n  }\n  @Input()\n  public set magFilter(value: MagnificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get magFilter(): MagnificationTextureFilter | undefined {\n    return this._objRef?.magFilter;\n  }\n  @Input()\n  public set minFilter(value: MinificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFilter(): MinificationTextureFilter | undefined {\n    return this._objRef?.minFilter;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-glitchPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThGlitchPass) }]\n})\nexport class ThGlitchPass<T extends GlitchPass = GlitchPass, TARGS = /* dt_size? */ number> extends ThPass<T, TARGS> {\n  public getType(): Type<GlitchPass> {\n    return GlitchPass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): ShaderMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n  @Input()\n  public set goWild(value: boolean) {\n    if (this._objRef) {\n      this._objRef.goWild = value;\n    }\n  }\n\n  // @ts-ignore\n  public get goWild(): boolean | undefined {\n    return this._objRef?.goWild;\n  }\n  @Input()\n  public set curF(value: number) {\n    if (this._objRef) {\n      this._objRef.curF = value;\n    }\n  }\n\n  // @ts-ignore\n  public get curF(): number | undefined {\n    return this._objRef?.curF;\n  }\n  @Input()\n  public set randX(value: number) {\n    if (this._objRef) {\n      this._objRef.randX = value;\n    }\n  }\n\n  // @ts-ignore\n  public get randX(): number | undefined {\n    return this._objRef?.randX;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BufferGeometry, ColorRepresentation, GridHelper, Material } from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-gridHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThGridHelper) }]\n})\nexport class ThGridHelper<\n  T extends GridHelper = GridHelper,\n  TARGS = [size?: number, divisions?: number, color1?: ColorRepresentation, color2?: ColorRepresentation]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<GridHelper> {\n    return GridHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'GridHelper') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { Event, Group } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-group',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThGroup) }]\n})\nexport class ThGroup<T extends Group = Group, TARGS = []> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Group> {\n    return Group;\n  }\n\n  // @ts-ignore\n  public get isGroup(): true | undefined {\n    return this._objRef?.isGroup;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Group') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport { HalftonePass, HalftonePassParameters } from 'three/examples/jsm/postprocessing/HalftonePass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-halftonePass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThHalftonePass) }]\n})\nexport class ThHalftonePass<\n  T extends HalftonePass = HalftonePass,\n  TARGS = [width: number, height: number, params: HalftonePassParameters]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<HalftonePass> {\n    return HalftonePass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): ShaderMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Color, ColorRepresentation, HemisphereLight, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-hemisphereLight',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThHemisphereLight) }]\n})\nexport class ThHemisphereLight<\n  T extends HemisphereLight = HemisphereLight,\n  TARGS = [skyColor?: ColorRepresentation, groundColor?: ColorRepresentation, intensity?: number]\n> extends ThLight<undefined, T, TARGS> {\n  public getType(): Type<HemisphereLight> {\n    return HemisphereLight;\n  }\n\n  // @ts-ignore\n  public get isHemisphereLight(): true | undefined {\n    return this._objRef?.isHemisphereLight;\n  }\n  // @ts-ignore\n  public get type(): (string | 'HemisphereLight') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  public get position(): Vector3 | undefined {\n    return this._objRef?.position;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set groundColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.groundColor = applyValue<Color>(this._objRef.groundColor, value);\n    }\n  }\n  // @ts-ignore\n  public get groundColor(): Color | undefined {\n    return this._objRef?.groundColor;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, Event, HemisphereLight, HemisphereLightHelper, Matrix4, MeshBasicMaterial } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-hemisphereLightHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThHemisphereLightHelper)\n    }\n  ]\n})\nexport class ThHemisphereLightHelper<\n  T extends HemisphereLightHelper = HemisphereLightHelper,\n  TARGS = [light: HemisphereLight, size: number, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<HemisphereLightHelper> {\n    return HemisphereLightHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'HemisphereLightHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set light(value: HemisphereLight) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  // @ts-ignore\n  public get light(): HemisphereLight | undefined {\n    return this._objRef?.light;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix4 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  @Input()\n  public set material(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): MeshBasicMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n\n  // @ts-ignore\n  public get color(): (ColorRepresentation | undefined) | undefined {\n    return this._objRef?.color;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { ColorRepresentation, HemisphereLightProbe } from 'three';\nimport { ThLightProbe } from './ThLightProbe';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-hemisphereLightProbe',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThHemisphereLightProbe)\n    }\n  ]\n})\nexport class ThHemisphereLightProbe<\n  T extends HemisphereLightProbe = HemisphereLightProbe,\n  TARGS = [skyColor?: ColorRepresentation, groundColor?: ColorRepresentation, intensity?: number]\n> extends ThLightProbe<T, TARGS> {\n  public getType(): Type<HemisphereLightProbe> {\n    return HemisphereLightProbe;\n  }\n\n  // @ts-ignore\n  public get isHemisphereLightProbe(): true | undefined {\n    return this._objRef?.isHemisphereLightProbe;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { IcosahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-icosahedronGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThIcosahedronGeometry)\n    }\n  ]\n})\nexport class ThIcosahedronGeometry<\n  T extends IcosahedronGeometry = IcosahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<IcosahedronGeometry> {\n    return IcosahedronGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'IcosahedronGeometry') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { InstancedBufferGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-instancedBufferGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThInstancedBufferGeometry)\n    }\n  ]\n})\nexport class ThInstancedBufferGeometry<\n  T extends InstancedBufferGeometry = InstancedBufferGeometry,\n  TARGS = []\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<InstancedBufferGeometry> {\n    return InstancedBufferGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get isInstancedBufferGeometry(): true | undefined {\n    return this._objRef?.isInstancedBufferGeometry;\n  }\n  @Input()\n  public set instanceCount(value: number) {\n    if (this._objRef) {\n      this._objRef.instanceCount = value;\n    }\n  }\n\n  // @ts-ignore\n  public get instanceCount(): number | undefined {\n    return this._objRef?.instanceCount;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { BufferGeometry, Event, Material, Mesh } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-mesh',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThMesh) }]\n})\nexport class ThMesh<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends Mesh<TGeometry, TMaterial> = Mesh<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Mesh<TGeometry, TMaterial>> {\n    return Mesh;\n  }\n\n  // @ts-ignore\n  public get isMesh(): true | undefined {\n    return this._objRef?.isMesh;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Mesh') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set geometry(value: TGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  // @ts-ignore\n  public get geometry(): TGeometry | undefined {\n    return this._objRef?.geometry;\n  }\n  @Input()\n  public set material(value: TMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): TMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set morphTargetInfluences(value: number[] | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphTargetInfluences(): (number[] | undefined) | undefined {\n    return this._objRef?.morphTargetInfluences;\n  }\n  @Input()\n  public set morphTargetDictionary(value: { [key: string]: number } | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphTargetDictionary(): ({ [key: string]: number } | undefined) | undefined {\n    return this._objRef?.morphTargetDictionary;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Box3, BufferGeometry, InstancedBufferAttribute, InstancedMesh, Material, Sphere, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThMesh } from './ThMesh';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-instancedMesh',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThInstancedMesh) }]\n})\nexport class ThInstancedMesh<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends InstancedMesh<TGeometry, TMaterial> = InstancedMesh<TGeometry, TMaterial>,\n  TARGS = [geometry: TGeometry | undefined, material: TMaterial | undefined, count: number]\n> extends ThMesh<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<InstancedMesh<TGeometry, TMaterial>> {\n    return InstancedMesh;\n  }\n\n  // @ts-ignore\n  public get isInstancedMesh(): true | undefined {\n    return this._objRef?.isInstancedMesh;\n  }\n  @Input()\n  public set boundingBox(value: Box3 | null | [min: Vector3, max: Vector3]) {\n    if (this._objRef) {\n      this._objRef.boundingBox = applyValue<Box3 | null>(this._objRef.boundingBox, value);\n    }\n  }\n  // @ts-ignore\n  public get boundingBox(): (Box3 | null) | undefined {\n    return this._objRef?.boundingBox;\n  }\n  @Input()\n  public set boundingSphere(value: Sphere | null | [center: Vector3, radius: number]) {\n    if (this._objRef) {\n      this._objRef.boundingSphere = applyValue<Sphere | null>(this._objRef.boundingSphere, value);\n    }\n  }\n  // @ts-ignore\n  public get boundingSphere(): (Sphere | null) | undefined {\n    return this._objRef?.boundingSphere;\n  }\n  @Input()\n  public set count(value: number) {\n    if (this._objRef) {\n      this._objRef.count = value;\n    }\n  }\n\n  // @ts-ignore\n  public get count(): number | undefined {\n    return this._objRef?.count;\n  }\n  @Input()\n  public set instanceColor(\n    value: InstancedBufferAttribute | null | [value: ArrayLike<number> | ArrayBufferView, offset?: number]\n  ) {\n    if (this._objRef) {\n      this._objRef.instanceColor = applyValue<InstancedBufferAttribute | null>(this._objRef.instanceColor, value);\n    }\n  }\n  // @ts-ignore\n  public get instanceColor(): (InstancedBufferAttribute | null) | undefined {\n    return this._objRef?.instanceColor;\n  }\n  @Input()\n  public set instanceMatrix(\n    value: InstancedBufferAttribute | [value: ArrayLike<number> | ArrayBufferView, offset?: number]\n  ) {\n    if (this._objRef) {\n      this._objRef.instanceMatrix = applyValue<InstancedBufferAttribute>(this._objRef.instanceMatrix, value);\n    }\n  }\n  // @ts-ignore\n  public get instanceMatrix(): InstancedBufferAttribute | undefined {\n    return this._objRef?.instanceMatrix;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { LatheGeometry, Vector2 } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-latheGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThLatheGeometry)\n    }\n  ]\n})\nexport class ThLatheGeometry<\n  T extends LatheGeometry = LatheGeometry,\n  TARGS = [points?: Vector2[], segments?: number, phiStart?: number, phiLength?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<LatheGeometry> {\n    return LatheGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'LatheGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly points: Vector2[];\n        readonly segments: number;\n        readonly phiStart: number;\n        readonly phiLength: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { LightningStrike, RayParameters } from 'three/examples/jsm/geometries/LightningStrike';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-lightningStrike',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThLightningStrike)\n    }\n  ]\n})\nexport class ThLightningStrike<\n  T extends LightningStrike = LightningStrike,\n  TARGS = /* rayParameters? */ RayParameters\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<LightningStrike> {\n    return LightningStrike;\n  }\n\n  public static readonly RAY_INITIALIZED = LightningStrike.RAY_INITIALIZED;\n\n  public static readonly RAY_UNBORN = LightningStrike.RAY_UNBORN;\n\n  public static readonly RAY_PROPAGATING = LightningStrike.RAY_PROPAGATING;\n\n  public static readonly RAY_STEADY = LightningStrike.RAY_STEADY;\n\n  public static readonly RAY_VANISHING = LightningStrike.RAY_VANISHING;\n\n  public static readonly RAY_EXTINGUISHED = LightningStrike.RAY_EXTINGUISHED;\n\n  @Input()\n  public set state(value: number) {\n    if (this._objRef) {\n      this._objRef.state = value;\n    }\n  }\n\n  // @ts-ignore\n  public get state(): number | undefined {\n    return this._objRef?.state;\n  }\n}\n","import { Component } from '@angular/core';\nimport { Material, Mesh } from 'three';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-material',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThMaterialBase<T extends Material, ARGS> extends ThWrapperBase<T, ARGS> {\n  constructor(protected parent: ThObject3D<any>) {\n    super();\n  }\n\n  public addToParent() {\n    if (!this.parent.objRef) {\n      throw new Error(\"parent object doesn't hold a three js object instance\");\n    }\n\n    (this.parent.objRef as Mesh).material = this.objRef as Material;\n  }\n\n  public removeFromParent() {\n    if (this._objRef && this.parent && this.parent.objRef) {\n      (this.parent.objRef as any).material = undefined;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, Input, SkipSelf, Type } from '@angular/core';\nimport {\n  Blending,\n  BlendingDstFactor,\n  BlendingEquation,\n  BlendingSrcFactor,\n  DepthModes,\n  Material,\n  Side,\n  StencilFunc,\n  StencilOp\n} from 'three';\nimport { ThMaterialBase } from '../ThMaterialBase';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-material',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: []\n})\nexport class ThMaterial<T extends Material = Material, TARGS = []> extends ThMaterialBase<T, TARGS> {\n  public getType(): Type<Material> {\n    return Material;\n  }\n\n  @Input()\n  public set alphaTest(value: number) {\n    if (this._objRef) {\n      this._objRef.alphaTest = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaTest(): number | undefined {\n    return this._objRef?.alphaTest;\n  }\n  @Input()\n  public set alphaToCoverage(value: boolean) {\n    if (this._objRef) {\n      this._objRef.alphaToCoverage = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaToCoverage(): boolean | undefined {\n    return this._objRef?.alphaToCoverage;\n  }\n  @Input()\n  public set blendDst(value: BlendingDstFactor) {\n    if (this._objRef) {\n      this._objRef.blendDst = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blendDst(): BlendingDstFactor | undefined {\n    return this._objRef?.blendDst;\n  }\n  @Input()\n  public set blendDstAlpha(value: number | null) {\n    if (this._objRef) {\n      this._objRef.blendDstAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blendDstAlpha(): (number | null) | undefined {\n    return this._objRef?.blendDstAlpha;\n  }\n  @Input()\n  public set blendEquation(value: BlendingEquation) {\n    if (this._objRef) {\n      this._objRef.blendEquation = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blendEquation(): BlendingEquation | undefined {\n    return this._objRef?.blendEquation;\n  }\n  @Input()\n  public set blendEquationAlpha(value: number | null) {\n    if (this._objRef) {\n      this._objRef.blendEquationAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blendEquationAlpha(): (number | null) | undefined {\n    return this._objRef?.blendEquationAlpha;\n  }\n  @Input()\n  public set blending(value: Blending) {\n    if (this._objRef) {\n      this._objRef.blending = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blending(): Blending | undefined {\n    return this._objRef?.blending;\n  }\n  @Input()\n  public set blendSrc(value: BlendingSrcFactor | BlendingDstFactor) {\n    if (this._objRef) {\n      this._objRef.blendSrc = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blendSrc(): (BlendingSrcFactor | BlendingDstFactor) | undefined {\n    return this._objRef?.blendSrc;\n  }\n  @Input()\n  public set blendSrcAlpha(value: number | null) {\n    if (this._objRef) {\n      this._objRef.blendSrcAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blendSrcAlpha(): (number | null) | undefined {\n    return this._objRef?.blendSrcAlpha;\n  }\n  @Input()\n  public set clipIntersection(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clipIntersection = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clipIntersection(): boolean | undefined {\n    return this._objRef?.clipIntersection;\n  }\n  @Input()\n  public set clippingPlanes(value: any) {\n    if (this._objRef) {\n      this._objRef.clippingPlanes = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clippingPlanes(): any | undefined {\n    return this._objRef?.clippingPlanes;\n  }\n  @Input()\n  public set clipShadows(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clipShadows = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clipShadows(): boolean | undefined {\n    return this._objRef?.clipShadows;\n  }\n  @Input()\n  public set colorWrite(value: boolean) {\n    if (this._objRef) {\n      this._objRef.colorWrite = value;\n    }\n  }\n\n  // @ts-ignore\n  public get colorWrite(): boolean | undefined {\n    return this._objRef?.colorWrite;\n  }\n  @Input()\n  public set defines(value: undefined | { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  // @ts-ignore\n  public get defines(): (undefined | { [key: string]: any }) | undefined {\n    return this._objRef?.defines;\n  }\n  @Input()\n  public set depthFunc(value: DepthModes) {\n    if (this._objRef) {\n      this._objRef.depthFunc = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthFunc(): DepthModes | undefined {\n    return this._objRef?.depthFunc;\n  }\n  @Input()\n  public set depthTest(value: boolean) {\n    if (this._objRef) {\n      this._objRef.depthTest = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthTest(): boolean | undefined {\n    return this._objRef?.depthTest;\n  }\n  @Input()\n  public set depthWrite(value: boolean) {\n    if (this._objRef) {\n      this._objRef.depthWrite = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthWrite(): boolean | undefined {\n    return this._objRef?.depthWrite;\n  }\n  @Input()\n  public set id(value: number) {\n    if (this._objRef) {\n      this._objRef.id = value;\n    }\n  }\n\n  // @ts-ignore\n  public get id(): number | undefined {\n    return this._objRef?.id;\n  }\n  @Input()\n  public set stencilWrite(value: boolean) {\n    if (this._objRef) {\n      this._objRef.stencilWrite = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilWrite(): boolean | undefined {\n    return this._objRef?.stencilWrite;\n  }\n  @Input()\n  public set stencilFunc(value: StencilFunc) {\n    if (this._objRef) {\n      this._objRef.stencilFunc = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilFunc(): StencilFunc | undefined {\n    return this._objRef?.stencilFunc;\n  }\n  @Input()\n  public set stencilRef(value: number) {\n    if (this._objRef) {\n      this._objRef.stencilRef = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilRef(): number | undefined {\n    return this._objRef?.stencilRef;\n  }\n  @Input()\n  public set stencilWriteMask(value: number) {\n    if (this._objRef) {\n      this._objRef.stencilWriteMask = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilWriteMask(): number | undefined {\n    return this._objRef?.stencilWriteMask;\n  }\n  @Input()\n  public set stencilFuncMask(value: number) {\n    if (this._objRef) {\n      this._objRef.stencilFuncMask = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilFuncMask(): number | undefined {\n    return this._objRef?.stencilFuncMask;\n  }\n  @Input()\n  public set stencilFail(value: StencilOp) {\n    if (this._objRef) {\n      this._objRef.stencilFail = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilFail(): StencilOp | undefined {\n    return this._objRef?.stencilFail;\n  }\n  @Input()\n  public set stencilZFail(value: StencilOp) {\n    if (this._objRef) {\n      this._objRef.stencilZFail = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilZFail(): StencilOp | undefined {\n    return this._objRef?.stencilZFail;\n  }\n  @Input()\n  public set stencilZPass(value: StencilOp) {\n    if (this._objRef) {\n      this._objRef.stencilZPass = value;\n    }\n  }\n\n  // @ts-ignore\n  public get stencilZPass(): StencilOp | undefined {\n    return this._objRef?.stencilZPass;\n  }\n  // @ts-ignore\n  public get isMaterial(): true | undefined {\n    return this._objRef?.isMaterial;\n  }\n  @Input()\n  public set name(value: string) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n\n  // @ts-ignore\n  public get name(): string | undefined {\n    return this._objRef?.name;\n  }\n  @Input()\n  public set needsUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.needsUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get needsUpdate(): boolean | undefined {\n    return this._objRef?.needsUpdate;\n  }\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get opacity(): number | undefined {\n    return this._objRef?.opacity;\n  }\n  @Input()\n  public set polygonOffset(value: boolean) {\n    if (this._objRef) {\n      this._objRef.polygonOffset = value;\n    }\n  }\n\n  // @ts-ignore\n  public get polygonOffset(): boolean | undefined {\n    return this._objRef?.polygonOffset;\n  }\n  @Input()\n  public set polygonOffsetFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.polygonOffsetFactor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get polygonOffsetFactor(): number | undefined {\n    return this._objRef?.polygonOffsetFactor;\n  }\n  @Input()\n  public set polygonOffsetUnits(value: number) {\n    if (this._objRef) {\n      this._objRef.polygonOffsetUnits = value;\n    }\n  }\n\n  // @ts-ignore\n  public get polygonOffsetUnits(): number | undefined {\n    return this._objRef?.polygonOffsetUnits;\n  }\n  @Input()\n  public set precision(value: 'highp' | 'mediump' | 'lowp' | null) {\n    if (this._objRef) {\n      this._objRef.precision = value;\n    }\n  }\n\n  // @ts-ignore\n  public get precision(): ('highp' | 'mediump' | 'lowp' | null) | undefined {\n    return this._objRef?.precision;\n  }\n  @Input()\n  public set premultipliedAlpha(value: boolean) {\n    if (this._objRef) {\n      this._objRef.premultipliedAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get premultipliedAlpha(): boolean | undefined {\n    return this._objRef?.premultipliedAlpha;\n  }\n  @Input()\n  public set forceSinglePass(value: boolean) {\n    if (this._objRef) {\n      this._objRef.forceSinglePass = value;\n    }\n  }\n\n  // @ts-ignore\n  public get forceSinglePass(): boolean | undefined {\n    return this._objRef?.forceSinglePass;\n  }\n  @Input()\n  public set dithering(value: boolean) {\n    if (this._objRef) {\n      this._objRef.dithering = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dithering(): boolean | undefined {\n    return this._objRef?.dithering;\n  }\n  @Input()\n  public set side(value: Side) {\n    if (this._objRef) {\n      this._objRef.side = value;\n    }\n  }\n\n  // @ts-ignore\n  public get side(): Side | undefined {\n    return this._objRef?.side;\n  }\n  @Input()\n  public set shadowSide(value: Side | null) {\n    if (this._objRef) {\n      this._objRef.shadowSide = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shadowSide(): (Side | null) | undefined {\n    return this._objRef?.shadowSide;\n  }\n  @Input()\n  public set toneMapped(value: boolean) {\n    if (this._objRef) {\n      this._objRef.toneMapped = value;\n    }\n  }\n\n  // @ts-ignore\n  public get toneMapped(): boolean | undefined {\n    return this._objRef?.toneMapped;\n  }\n  @Input()\n  public set transparent(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n\n  // @ts-ignore\n  public get transparent(): boolean | undefined {\n    return this._objRef?.transparent;\n  }\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set uuid(value: string) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uuid(): string | undefined {\n    return this._objRef?.uuid;\n  }\n  @Input()\n  public set vertexColors(value: boolean) {\n    if (this._objRef) {\n      this._objRef.vertexColors = value;\n    }\n  }\n\n  // @ts-ignore\n  public get vertexColors(): boolean | undefined {\n    return this._objRef?.vertexColors;\n  }\n  @Input()\n  public set visible(value: boolean) {\n    if (this._objRef) {\n      this._objRef.visible = value;\n    }\n  }\n\n  // @ts-ignore\n  public get visible(): boolean | undefined {\n    return this._objRef?.visible;\n  }\n  @Input()\n  public set userData(value: any) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n\n  // @ts-ignore\n  public get userData(): any | undefined {\n    return this._objRef?.userData;\n  }\n  @Input()\n  public set version(value: number) {\n    if (this._objRef) {\n      this._objRef.version = value;\n    }\n  }\n\n  // @ts-ignore\n  public get version(): number | undefined {\n    return this._objRef?.version;\n  }\n\n  constructor(@SkipSelf() hostObject: ThObject3D) {\n    super(hostObject);\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Color, ColorRepresentation, LineBasicMaterial, LineBasicMaterialParameters, Texture } from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-lineBasicMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThLineBasicMaterial) }]\n})\nexport class ThLineBasicMaterial<\n  T extends LineBasicMaterial = LineBasicMaterial,\n  TARGS = /* parameters? */ LineBasicMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<LineBasicMaterial> {\n    return LineBasicMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n  @Input()\n  public set linewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.linewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get linewidth(): number | undefined {\n    return this._objRef?.linewidth;\n  }\n  @Input()\n  public set linecap(value: string) {\n    if (this._objRef) {\n      this._objRef.linecap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get linecap(): string | undefined {\n    return this._objRef?.linecap;\n  }\n  @Input()\n  public set linejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.linejoin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get linejoin(): string | undefined {\n    return this._objRef?.linejoin;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { LineDashedMaterial, LineDashedMaterialParameters } from 'three';\nimport { ThLineBasicMaterial } from './ThLineBasicMaterial';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-lineDashedMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThLineDashedMaterial)\n    }\n  ]\n})\nexport class ThLineDashedMaterial<\n  T extends LineDashedMaterial = LineDashedMaterial,\n  TARGS = /* parameters? */ LineDashedMaterialParameters\n> extends ThLineBasicMaterial<T, TARGS> {\n  public getType(): Type<LineDashedMaterial> {\n    return LineDashedMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set scale(value: number) {\n    if (this._objRef) {\n      this._objRef.scale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scale(): number | undefined {\n    return this._objRef?.scale;\n  }\n  @Input()\n  public set dashSize(value: number) {\n    if (this._objRef) {\n      this._objRef.dashSize = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dashSize(): number | undefined {\n    return this._objRef?.dashSize;\n  }\n  @Input()\n  public set gapSize(value: number) {\n    if (this._objRef) {\n      this._objRef.gapSize = value;\n    }\n  }\n\n  // @ts-ignore\n  public get gapSize(): number | undefined {\n    return this._objRef?.gapSize;\n  }\n  // @ts-ignore\n  public get isLineDashedMaterial(): true | undefined {\n    return this._objRef?.isLineDashedMaterial;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BufferGeometry, LineLoop, Material } from 'three';\nimport { ThLine } from './ThLine';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lineLoop',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLineLoop) }]\n})\nexport class ThLineLoop<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends LineLoop<TGeometry, TMaterial> = LineLoop<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThLine<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<LineLoop<TGeometry, TMaterial>> {\n    return LineLoop;\n  }\n\n  // @ts-ignore\n  public get isLineLoop(): true | undefined {\n    return this._objRef?.isLineLoop;\n  }\n  // @ts-ignore\n  public get type(): (string | 'LineLoop') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Event, LOD, Object3D } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lOD',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLOD) }]\n})\nexport class ThLOD<T extends LOD = LOD, TARGS = []> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<LOD> {\n    return LOD;\n  }\n\n  // @ts-ignore\n  public get isLOD(): true | undefined {\n    return this._objRef?.isLOD;\n  }\n  // @ts-ignore\n  public get type(): (string | 'LOD') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set levels(\n    value: Array<{\n      /** The Object3D to display at this level. */\n      object: Object3D;\n      /** The distance at which to display this level of detail. Expects a `Float`. */\n      distance: number;\n      /** Threshold used to avoid flickering at LOD boundaries, as a fraction of distance. Expects a `Float`. */\n      hysteresis: number;\n    }>\n  ) {\n    if (this._objRef) {\n      this._objRef.levels = value;\n    }\n  }\n\n  // @ts-ignore\n  public get levels():\n    | Array<{\n        /** The Object3D to display at this level. */\n        object: Object3D;\n        /** The distance at which to display this level of detail. Expects a `Float`. */\n        distance: number;\n        /** Threshold used to avoid flickering at LOD boundaries, as a fraction of distance. Expects a `Float`. */\n        hysteresis: number;\n      }>\n    | undefined {\n    return this._objRef?.levels;\n  }\n  @Input()\n  public set autoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get autoUpdate(): boolean | undefined {\n    return this._objRef?.autoUpdate;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-shaderPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThShaderPass) }]\n})\nexport class ThShaderPass<\n  T extends ShaderPass = ShaderPass,\n  TARGS = [shader: object, textureID?: string]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<ShaderPass> {\n    return ShaderPass;\n  }\n\n  @Input()\n  public set textureID(value: string) {\n    if (this._objRef) {\n      this._objRef.textureID = value;\n    }\n  }\n\n  // @ts-ignore\n  public get textureID(): string | undefined {\n    return this._objRef?.textureID;\n  }\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): ShaderMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Data3DTexture, DataTexture } from 'three';\nimport { LUTPass, LUTPassParameters } from 'three/examples/jsm/postprocessing/LUTPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThShaderPass } from './ThShaderPass';\n\n@Component({\n  selector: 'th-lUTPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThLUTPass) }]\n})\nexport class ThLUTPass<T extends LUTPass = LUTPass, TARGS = /* params */ LUTPassParameters> extends ThShaderPass<\n  T,\n  TARGS\n> {\n  public getType(): Type<LUTPass> {\n    return LUTPass;\n  }\n\n  @Input()\n  public set lut(value: DataTexture | Data3DTexture) {\n    if (this._objRef) {\n      this._objRef.lut = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lut(): (DataTexture | Data3DTexture) | undefined {\n    return this._objRef?.lut;\n  }\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get intensity(): number | undefined {\n    return this._objRef?.intensity;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, MOUSE, TOUCH, Vector3 } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-orbitControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThOrbitControls) }]\n})\nexport class ThOrbitControls<\n  T extends OrbitControls = OrbitControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<OrbitControls> {\n    return OrbitControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  // @ts-ignore\n  public get object(): Camera | undefined {\n    return this._objRef?.object;\n  }\n  @Input()\n  public set domElement(value: HTMLElement | Document) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  // @ts-ignore\n  public get domElement(): (HTMLElement | Document) | undefined {\n    return this._objRef?.domElement;\n  }\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enabled(): boolean | undefined {\n    return this._objRef?.enabled;\n  }\n  @Input()\n  public set target(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target = applyValue<Vector3>(this._objRef.target, value);\n    }\n  }\n  // @ts-ignore\n  public get target(): Vector3 | undefined {\n    return this._objRef?.target;\n  }\n  @Input()\n  public set center(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.center = applyValue<Vector3>(this._objRef.center, value);\n    }\n  }\n  // @ts-ignore\n  public get center(): Vector3 | undefined {\n    return this._objRef?.center;\n  }\n  @Input()\n  public set minDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minDistance(): number | undefined {\n    return this._objRef?.minDistance;\n  }\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxDistance(): number | undefined {\n    return this._objRef?.maxDistance;\n  }\n  @Input()\n  public set minZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.minZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minZoom(): number | undefined {\n    return this._objRef?.minZoom;\n  }\n  @Input()\n  public set maxZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.maxZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxZoom(): number | undefined {\n    return this._objRef?.maxZoom;\n  }\n  @Input()\n  public set minPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.minPolarAngle = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minPolarAngle(): number | undefined {\n    return this._objRef?.minPolarAngle;\n  }\n  @Input()\n  public set maxPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.maxPolarAngle = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxPolarAngle(): number | undefined {\n    return this._objRef?.maxPolarAngle;\n  }\n  @Input()\n  public set minAzimuthAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.minAzimuthAngle = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minAzimuthAngle(): number | undefined {\n    return this._objRef?.minAzimuthAngle;\n  }\n  @Input()\n  public set maxAzimuthAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.maxAzimuthAngle = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxAzimuthAngle(): number | undefined {\n    return this._objRef?.maxAzimuthAngle;\n  }\n  @Input()\n  public set enableDamping(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableDamping = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableDamping(): boolean | undefined {\n    return this._objRef?.enableDamping;\n  }\n  @Input()\n  public set dampingFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.dampingFactor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dampingFactor(): number | undefined {\n    return this._objRef?.dampingFactor;\n  }\n  @Input()\n  public set enableZoom(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableZoom(): boolean | undefined {\n    return this._objRef?.enableZoom;\n  }\n  @Input()\n  public set zoomSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.zoomSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get zoomSpeed(): number | undefined {\n    return this._objRef?.zoomSpeed;\n  }\n  @Input()\n  public set enableRotate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableRotate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enableRotate(): boolean | undefined {\n    return this._objRef?.enableRotate;\n  }\n  @Input()\n  public set rotateSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.rotateSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get rotateSpeed(): number | undefined {\n    return this._objRef?.rotateSpeed;\n  }\n  @Input()\n  public set enablePan(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enablePan = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enablePan(): boolean | undefined {\n    return this._objRef?.enablePan;\n  }\n  @Input()\n  public set panSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.panSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get panSpeed(): number | undefined {\n    return this._objRef?.panSpeed;\n  }\n  @Input()\n  public set screenSpacePanning(value: boolean) {\n    if (this._objRef) {\n      this._objRef.screenSpacePanning = value;\n    }\n  }\n\n  // @ts-ignore\n  public get screenSpacePanning(): boolean | undefined {\n    return this._objRef?.screenSpacePanning;\n  }\n  @Input()\n  public set keyPanSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.keyPanSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get keyPanSpeed(): number | undefined {\n    return this._objRef?.keyPanSpeed;\n  }\n  @Input()\n  public set autoRotate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoRotate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get autoRotate(): boolean | undefined {\n    return this._objRef?.autoRotate;\n  }\n  @Input()\n  public set autoRotateSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.autoRotateSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get autoRotateSpeed(): number | undefined {\n    return this._objRef?.autoRotateSpeed;\n  }\n  @Input()\n  public set keys(value: { LEFT: string; UP: string; RIGHT: string; BOTTOM: string }) {\n    if (this._objRef) {\n      this._objRef.keys = value;\n    }\n  }\n\n  // @ts-ignore\n  public get keys(): { LEFT: string; UP: string; RIGHT: string; BOTTOM: string } | undefined {\n    return this._objRef?.keys;\n  }\n  @Input()\n  public set mouseButtons(value: Partial<{ LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE }>) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mouseButtons(): Partial<{ LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE }> | undefined {\n    return this._objRef?.mouseButtons;\n  }\n  @Input()\n  public set touches(value: Partial<{ ONE: TOUCH; TWO: TOUCH }>) {\n    if (this._objRef) {\n      this._objRef.touches = value;\n    }\n  }\n\n  // @ts-ignore\n  public get touches(): Partial<{ ONE: TOUCH; TWO: TOUCH }> | undefined {\n    return this._objRef?.touches;\n  }\n  @Input()\n  public set target0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target0 = applyValue<Vector3>(this._objRef.target0, value);\n    }\n  }\n  // @ts-ignore\n  public get target0(): Vector3 | undefined {\n    return this._objRef?.target0;\n  }\n  @Input()\n  public set position0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.position0 = applyValue<Vector3>(this._objRef.position0, value);\n    }\n  }\n  // @ts-ignore\n  public get position0(): Vector3 | undefined {\n    return this._objRef?.position0;\n  }\n  @Input()\n  public set zoom0(value: number) {\n    if (this._objRef) {\n      this._objRef.zoom0 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get zoom0(): number | undefined {\n    return this._objRef?.zoom0;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { Camera } from 'three';\nimport { MapControls } from 'three/examples/jsm/controls/MapControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { ThOrbitControls } from './ThOrbitControls';\n\n@Component({\n  selector: 'th-mapControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThMapControls) }]\n})\nexport class ThMapControls<\n  T extends MapControls = MapControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThOrbitControls<T, TARGS> {\n  public getType(): Type<MapControls> {\n    return MapControls;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, Scene } from 'three';\nimport { MaskPass } from 'three/examples/jsm/postprocessing/MaskPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-maskPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThMaskPass) }]\n})\nexport class ThMaskPass<T extends MaskPass = MaskPass, TARGS = [scene: Scene, camera: Camera]> extends ThPass<\n  T,\n  TARGS\n> {\n  public getType(): Type<MaskPass> {\n    return MaskPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): Scene | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set inverse(value: boolean) {\n    if (this._objRef) {\n      this._objRef.inverse = value;\n    }\n  }\n\n  // @ts-ignore\n  public get inverse(): boolean | undefined {\n    return this._objRef?.inverse;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Color, ColorRepresentation, Combine, MeshBasicMaterial, MeshBasicMaterialParameters, Texture } from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshBasicMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshBasicMaterial) }]\n})\nexport class ThMeshBasicMaterial<\n  T extends MeshBasicMaterial = MeshBasicMaterial,\n  TARGS = /* parameters? */ MeshBasicMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshBasicMaterial> {\n    return MeshBasicMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMap(): (Texture | null) | undefined {\n    return this._objRef?.lightMap;\n  }\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMapIntensity(): number | undefined {\n    return this._objRef?.lightMapIntensity;\n  }\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMap(): (Texture | null) | undefined {\n    return this._objRef?.aoMap;\n  }\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMapIntensity(): number | undefined {\n    return this._objRef?.aoMapIntensity;\n  }\n  @Input()\n  public set specularMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get specularMap(): (Texture | null) | undefined {\n    return this._objRef?.specularMap;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get envMap(): (Texture | null) | undefined {\n    return this._objRef?.envMap;\n  }\n  @Input()\n  public set combine(value: Combine) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n\n  // @ts-ignore\n  public get combine(): Combine | undefined {\n    return this._objRef?.combine;\n  }\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get reflectivity(): number | undefined {\n    return this._objRef?.reflectivity;\n  }\n  @Input()\n  public set refractionRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n\n  // @ts-ignore\n  public get refractionRatio(): number | undefined {\n    return this._objRef?.refractionRatio;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinecap(): string | undefined {\n    return this._objRef?.wireframeLinecap;\n  }\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinejoin(): string | undefined {\n    return this._objRef?.wireframeLinejoin;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { DepthPackingStrategies, MeshDepthMaterial, MeshDepthMaterialParameters, Texture } from 'three';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshDepthMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshDepthMaterial) }]\n})\nexport class ThMeshDepthMaterial<\n  T extends MeshDepthMaterial = MeshDepthMaterial,\n  TARGS = /* parameters? */ MeshDepthMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshDepthMaterial> {\n    return MeshDepthMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set depthPacking(value: DepthPackingStrategies) {\n    if (this._objRef) {\n      this._objRef.depthPacking = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthPacking(): DepthPackingStrategies | undefined {\n    return this._objRef?.depthPacking;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { MeshDistanceMaterial, MeshDistanceMaterialParameters, Texture } from 'three';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshDistanceMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshDistanceMaterial)\n    }\n  ]\n})\nexport class ThMeshDistanceMaterial<\n  T extends MeshDistanceMaterial = MeshDistanceMaterial,\n  TARGS = /* parameters? */ MeshDistanceMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshDistanceMaterial> {\n    return MeshDistanceMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  Combine,\n  MeshLambertMaterial,\n  MeshLambertMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshLambertMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshLambertMaterial)\n    }\n  ]\n})\nexport class ThMeshLambertMaterial<\n  T extends MeshLambertMaterial = MeshLambertMaterial,\n  TARGS = /* parameters? */ MeshLambertMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshLambertMaterial> {\n    return MeshLambertMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpMap(): (Texture | null) | undefined {\n    return this._objRef?.bumpMap;\n  }\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpScale(): number | undefined {\n    return this._objRef?.bumpScale;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  public get emissive(): Color | undefined {\n    return this._objRef?.emissive;\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveIntensity(): number | undefined {\n    return this._objRef?.emissiveIntensity;\n  }\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveMap(): (Texture | null) | undefined {\n    return this._objRef?.emissiveMap;\n  }\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flatShading(): boolean | undefined {\n    return this._objRef?.flatShading;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMap(): (Texture | null) | undefined {\n    return this._objRef?.lightMap;\n  }\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMapIntensity(): number | undefined {\n    return this._objRef?.lightMapIntensity;\n  }\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMap(): (Texture | null) | undefined {\n    return this._objRef?.normalMap;\n  }\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMapType(): NormalMapTypes | undefined {\n    return this._objRef?.normalMapType;\n  }\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  public get normalScale(): Vector2 | undefined {\n    return this._objRef?.normalScale;\n  }\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMap(): (Texture | null) | undefined {\n    return this._objRef?.aoMap;\n  }\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMapIntensity(): number | undefined {\n    return this._objRef?.aoMapIntensity;\n  }\n  @Input()\n  public set specularMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get specularMap(): (Texture | null) | undefined {\n    return this._objRef?.specularMap;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get envMap(): (Texture | null) | undefined {\n    return this._objRef?.envMap;\n  }\n  @Input()\n  public set combine(value: Combine) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n\n  // @ts-ignore\n  public get combine(): Combine | undefined {\n    return this._objRef?.combine;\n  }\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get reflectivity(): number | undefined {\n    return this._objRef?.reflectivity;\n  }\n  @Input()\n  public set refractionRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n\n  // @ts-ignore\n  public get refractionRatio(): number | undefined {\n    return this._objRef?.refractionRatio;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinecap(): string | undefined {\n    return this._objRef?.wireframeLinecap;\n  }\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinejoin(): string | undefined {\n    return this._objRef?.wireframeLinejoin;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshMatcapMaterial,\n  MeshMatcapMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshMatcapMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshMatcapMaterial)\n    }\n  ]\n})\nexport class ThMeshMatcapMaterial<\n  T extends MeshMatcapMaterial = MeshMatcapMaterial,\n  TARGS = /* parameters? */ MeshMatcapMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshMatcapMaterial> {\n    return MeshMatcapMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  // @ts-ignore\n  public get defines(): { [key: string]: any } | undefined {\n    return this._objRef?.defines;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set matcap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.matcap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matcap(): (Texture | null) | undefined {\n    return this._objRef?.matcap;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpMap(): (Texture | null) | undefined {\n    return this._objRef?.bumpMap;\n  }\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpScale(): number | undefined {\n    return this._objRef?.bumpScale;\n  }\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMap(): (Texture | null) | undefined {\n    return this._objRef?.normalMap;\n  }\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMapType(): NormalMapTypes | undefined {\n    return this._objRef?.normalMapType;\n  }\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  public get normalScale(): Vector2 | undefined {\n    return this._objRef?.normalScale;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flatShading(): boolean | undefined {\n    return this._objRef?.flatShading;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { MeshNormalMaterial, MeshNormalMaterialParameters, NormalMapTypes, Texture, Vector2 } from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshNormalMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshNormalMaterial)\n    }\n  ]\n})\nexport class ThMeshNormalMaterial<\n  T extends MeshNormalMaterial = MeshNormalMaterial,\n  TARGS = /* parameters? */ MeshNormalMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshNormalMaterial> {\n    return MeshNormalMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpMap(): (Texture | null) | undefined {\n    return this._objRef?.bumpMap;\n  }\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpScale(): number | undefined {\n    return this._objRef?.bumpScale;\n  }\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMap(): (Texture | null) | undefined {\n    return this._objRef?.normalMap;\n  }\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMapType(): NormalMapTypes | undefined {\n    return this._objRef?.normalMapType;\n  }\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  public get normalScale(): Vector2 | undefined {\n    return this._objRef?.normalScale;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flatShading(): boolean | undefined {\n    return this._objRef?.flatShading;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  Combine,\n  MeshPhongMaterial,\n  MeshPhongMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshPhongMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshPhongMaterial) }]\n})\nexport class ThMeshPhongMaterial<\n  T extends MeshPhongMaterial = MeshPhongMaterial,\n  TARGS = /* parameters? */ MeshPhongMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshPhongMaterial> {\n    return MeshPhongMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set specular(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.specular = applyValue<Color>(this._objRef.specular, value);\n    }\n  }\n  // @ts-ignore\n  public get specular(): Color | undefined {\n    return this._objRef?.specular;\n  }\n  @Input()\n  public set shininess(value: number) {\n    if (this._objRef) {\n      this._objRef.shininess = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shininess(): number | undefined {\n    return this._objRef?.shininess;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMap(): (Texture | null) | undefined {\n    return this._objRef?.lightMap;\n  }\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMapIntensity(): number | undefined {\n    return this._objRef?.lightMapIntensity;\n  }\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMap(): (Texture | null) | undefined {\n    return this._objRef?.aoMap;\n  }\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMapIntensity(): number | undefined {\n    return this._objRef?.aoMapIntensity;\n  }\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  public get emissive(): Color | undefined {\n    return this._objRef?.emissive;\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveIntensity(): number | undefined {\n    return this._objRef?.emissiveIntensity;\n  }\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveMap(): (Texture | null) | undefined {\n    return this._objRef?.emissiveMap;\n  }\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpMap(): (Texture | null) | undefined {\n    return this._objRef?.bumpMap;\n  }\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpScale(): number | undefined {\n    return this._objRef?.bumpScale;\n  }\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMap(): (Texture | null) | undefined {\n    return this._objRef?.normalMap;\n  }\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMapType(): NormalMapTypes | undefined {\n    return this._objRef?.normalMapType;\n  }\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  public get normalScale(): Vector2 | undefined {\n    return this._objRef?.normalScale;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set specularMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get specularMap(): (Texture | null) | undefined {\n    return this._objRef?.specularMap;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get envMap(): (Texture | null) | undefined {\n    return this._objRef?.envMap;\n  }\n  @Input()\n  public set combine(value: Combine) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n\n  // @ts-ignore\n  public get combine(): Combine | undefined {\n    return this._objRef?.combine;\n  }\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get reflectivity(): number | undefined {\n    return this._objRef?.reflectivity;\n  }\n  @Input()\n  public set refractionRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n\n  // @ts-ignore\n  public get refractionRatio(): number | undefined {\n    return this._objRef?.refractionRatio;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinecap(): string | undefined {\n    return this._objRef?.wireframeLinecap;\n  }\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinejoin(): string | undefined {\n    return this._objRef?.wireframeLinejoin;\n  }\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flatShading(): boolean | undefined {\n    return this._objRef?.flatShading;\n  }\n  @Input()\n  public set metal(value: boolean) {\n    if (this._objRef) {\n      this._objRef.metal = value;\n    }\n  }\n\n  // @ts-ignore\n  public get metal(): boolean | undefined {\n    return this._objRef?.metal;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshStandardMaterial,\n  MeshStandardMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshStandardMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshStandardMaterial)\n    }\n  ]\n})\nexport class ThMeshStandardMaterial<\n  T extends MeshStandardMaterial = MeshStandardMaterial,\n  TARGS = /* parameters? */ MeshStandardMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshStandardMaterial> {\n    return MeshStandardMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  // @ts-ignore\n  public get defines(): { [key: string]: any } | undefined {\n    return this._objRef?.defines;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set roughness(value: number) {\n    if (this._objRef) {\n      this._objRef.roughness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get roughness(): number | undefined {\n    return this._objRef?.roughness;\n  }\n  @Input()\n  public set metalness(value: number) {\n    if (this._objRef) {\n      this._objRef.metalness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get metalness(): number | undefined {\n    return this._objRef?.metalness;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMap(): (Texture | null) | undefined {\n    return this._objRef?.lightMap;\n  }\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMapIntensity(): number | undefined {\n    return this._objRef?.lightMapIntensity;\n  }\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMap(): (Texture | null) | undefined {\n    return this._objRef?.aoMap;\n  }\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMapIntensity(): number | undefined {\n    return this._objRef?.aoMapIntensity;\n  }\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  public get emissive(): Color | undefined {\n    return this._objRef?.emissive;\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveIntensity(): number | undefined {\n    return this._objRef?.emissiveIntensity;\n  }\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveMap(): (Texture | null) | undefined {\n    return this._objRef?.emissiveMap;\n  }\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpMap(): (Texture | null) | undefined {\n    return this._objRef?.bumpMap;\n  }\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpScale(): number | undefined {\n    return this._objRef?.bumpScale;\n  }\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMap(): (Texture | null) | undefined {\n    return this._objRef?.normalMap;\n  }\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMapType(): NormalMapTypes | undefined {\n    return this._objRef?.normalMapType;\n  }\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  public get normalScale(): Vector2 | undefined {\n    return this._objRef?.normalScale;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set roughnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.roughnessMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get roughnessMap(): (Texture | null) | undefined {\n    return this._objRef?.roughnessMap;\n  }\n  @Input()\n  public set metalnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.metalnessMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get metalnessMap(): (Texture | null) | undefined {\n    return this._objRef?.metalnessMap;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get envMap(): (Texture | null) | undefined {\n    return this._objRef?.envMap;\n  }\n  @Input()\n  public set envMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.envMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get envMapIntensity(): number | undefined {\n    return this._objRef?.envMapIntensity;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinecap(): string | undefined {\n    return this._objRef?.wireframeLinecap;\n  }\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinejoin(): string | undefined {\n    return this._objRef?.wireframeLinejoin;\n  }\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n\n  // @ts-ignore\n  public get flatShading(): boolean | undefined {\n    return this._objRef?.flatShading;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n  @Input()\n  public set isMeshStandardMaterial(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isMeshStandardMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get isMeshStandardMaterial(): boolean | undefined {\n    return this._objRef?.isMeshStandardMaterial;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshPhysicalMaterial,\n  MeshPhysicalMaterialParameters,\n  Texture,\n  Vector2\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\nimport { ThMeshStandardMaterial } from './ThMeshStandardMaterial';\n\n@Component({\n  selector: 'th-meshPhysicalMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshPhysicalMaterial)\n    }\n  ]\n})\nexport class ThMeshPhysicalMaterial<\n  T extends MeshPhysicalMaterial = MeshPhysicalMaterial,\n  TARGS = /* parameters? */ MeshPhysicalMaterialParameters\n> extends ThMeshStandardMaterial<T, TARGS> {\n  public getType(): Type<MeshPhysicalMaterial> {\n    return MeshPhysicalMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  // @ts-ignore\n  public get defines(): { [key: string]: any } | undefined {\n    return this._objRef?.defines;\n  }\n  @Input()\n  public set clearcoat(value: number) {\n    if (this._objRef) {\n      this._objRef.clearcoat = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearcoat(): number | undefined {\n    return this._objRef?.clearcoat;\n  }\n  @Input()\n  public set clearcoatMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.clearcoatMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearcoatMap(): (Texture | null) | undefined {\n    return this._objRef?.clearcoatMap;\n  }\n  @Input()\n  public set clearcoatRoughness(value: number) {\n    if (this._objRef) {\n      this._objRef.clearcoatRoughness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearcoatRoughness(): number | undefined {\n    return this._objRef?.clearcoatRoughness;\n  }\n  @Input()\n  public set clearcoatRoughnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.clearcoatRoughnessMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearcoatRoughnessMap(): (Texture | null) | undefined {\n    return this._objRef?.clearcoatRoughnessMap;\n  }\n  @Input()\n  public set clearcoatNormalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.clearcoatNormalScale = applyValue<Vector2>(this._objRef.clearcoatNormalScale, value);\n    }\n  }\n  // @ts-ignore\n  public get clearcoatNormalScale(): Vector2 | undefined {\n    return this._objRef?.clearcoatNormalScale;\n  }\n  @Input()\n  public set clearcoatNormalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.clearcoatNormalMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearcoatNormalMap(): (Texture | null) | undefined {\n    return this._objRef?.clearcoatNormalMap;\n  }\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get reflectivity(): number | undefined {\n    return this._objRef?.reflectivity;\n  }\n  @Input()\n  public set ior(value: number) {\n    if (this._objRef) {\n      this._objRef.ior = value;\n    }\n  }\n\n  // @ts-ignore\n  public get ior(): number | undefined {\n    return this._objRef?.ior;\n  }\n  @Input()\n  public set sheen(value: number) {\n    if (this._objRef) {\n      this._objRef.sheen = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sheen(): number | undefined {\n    return this._objRef?.sheen;\n  }\n  @Input()\n  public set sheenColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.sheenColor = applyValue<Color>(this._objRef.sheenColor, value);\n    }\n  }\n  // @ts-ignore\n  public get sheenColor(): Color | undefined {\n    return this._objRef?.sheenColor;\n  }\n  @Input()\n  public set sheenColorMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.sheenColorMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sheenColorMap(): (Texture | null) | undefined {\n    return this._objRef?.sheenColorMap;\n  }\n  @Input()\n  public set sheenRoughness(value: number) {\n    if (this._objRef) {\n      this._objRef.sheenRoughness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sheenRoughness(): number | undefined {\n    return this._objRef?.sheenRoughness;\n  }\n  @Input()\n  public set sheenRoughnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.sheenRoughnessMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sheenRoughnessMap(): (Texture | null) | undefined {\n    return this._objRef?.sheenRoughnessMap;\n  }\n  @Input()\n  public set transmission(value: number) {\n    if (this._objRef) {\n      this._objRef.transmission = value;\n    }\n  }\n\n  // @ts-ignore\n  public get transmission(): number | undefined {\n    return this._objRef?.transmission;\n  }\n  @Input()\n  public set transmissionMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.transmissionMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get transmissionMap(): (Texture | null) | undefined {\n    return this._objRef?.transmissionMap;\n  }\n  @Input()\n  public set thickness(value: number) {\n    if (this._objRef) {\n      this._objRef.thickness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get thickness(): number | undefined {\n    return this._objRef?.thickness;\n  }\n  @Input()\n  public set thicknessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.thicknessMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get thicknessMap(): (Texture | null) | undefined {\n    return this._objRef?.thicknessMap;\n  }\n  @Input()\n  public set attenuationDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.attenuationDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get attenuationDistance(): number | undefined {\n    return this._objRef?.attenuationDistance;\n  }\n  @Input()\n  public set attenuationColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.attenuationColor = applyValue<Color>(this._objRef.attenuationColor, value);\n    }\n  }\n  // @ts-ignore\n  public get attenuationColor(): Color | undefined {\n    return this._objRef?.attenuationColor;\n  }\n  @Input()\n  public set specularIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.specularIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get specularIntensity(): number | undefined {\n    return this._objRef?.specularIntensity;\n  }\n  @Input()\n  public set specularColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.specularColor = applyValue<Color>(this._objRef.specularColor, value);\n    }\n  }\n  // @ts-ignore\n  public get specularColor(): Color | undefined {\n    return this._objRef?.specularColor;\n  }\n  @Input()\n  public set specularIntensityMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularIntensityMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get specularIntensityMap(): (Texture | null) | undefined {\n    return this._objRef?.specularIntensityMap;\n  }\n  @Input()\n  public set specularColorMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularColorMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get specularColorMap(): (Texture | null) | undefined {\n    return this._objRef?.specularColorMap;\n  }\n  @Input()\n  public set iridescenceMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.iridescenceMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get iridescenceMap(): (Texture | null) | undefined {\n    return this._objRef?.iridescenceMap;\n  }\n  @Input()\n  public set iridescenceIOR(value: number) {\n    if (this._objRef) {\n      this._objRef.iridescenceIOR = value;\n    }\n  }\n\n  // @ts-ignore\n  public get iridescenceIOR(): number | undefined {\n    return this._objRef?.iridescenceIOR;\n  }\n  @Input()\n  public set iridescence(value: number) {\n    if (this._objRef) {\n      this._objRef.iridescence = value;\n    }\n  }\n\n  // @ts-ignore\n  public get iridescence(): number | undefined {\n    return this._objRef?.iridescence;\n  }\n  @Input()\n  public set iridescenceThicknessRange(value: [number, number]) {\n    if (this._objRef) {\n      this._objRef.iridescenceThicknessRange = value;\n    }\n  }\n\n  // @ts-ignore\n  public get iridescenceThicknessRange(): [number, number] | undefined {\n    return this._objRef?.iridescenceThicknessRange;\n  }\n  @Input()\n  public set iridescenceThicknessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.iridescenceThicknessMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get iridescenceThicknessMap(): (Texture | null) | undefined {\n    return this._objRef?.iridescenceThicknessMap;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshToonMaterial,\n  MeshToonMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshToonMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshToonMaterial) }]\n})\nexport class ThMeshToonMaterial<\n  T extends MeshToonMaterial = MeshToonMaterial,\n  TARGS = /* parameters? */ MeshToonMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshToonMaterial> {\n    return MeshToonMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  // @ts-ignore\n  public get defines(): { [key: string]: any } | undefined {\n    return this._objRef?.defines;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set gradientMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.gradientMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get gradientMap(): (Texture | null) | undefined {\n    return this._objRef?.gradientMap;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMap(): (Texture | null) | undefined {\n    return this._objRef?.lightMap;\n  }\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lightMapIntensity(): number | undefined {\n    return this._objRef?.lightMapIntensity;\n  }\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMap(): (Texture | null) | undefined {\n    return this._objRef?.aoMap;\n  }\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aoMapIntensity(): number | undefined {\n    return this._objRef?.aoMapIntensity;\n  }\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  public get emissive(): Color | undefined {\n    return this._objRef?.emissive;\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveIntensity(): number | undefined {\n    return this._objRef?.emissiveIntensity;\n  }\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get emissiveMap(): (Texture | null) | undefined {\n    return this._objRef?.emissiveMap;\n  }\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpMap(): (Texture | null) | undefined {\n    return this._objRef?.bumpMap;\n  }\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bumpScale(): number | undefined {\n    return this._objRef?.bumpScale;\n  }\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMap(): (Texture | null) | undefined {\n    return this._objRef?.normalMap;\n  }\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMapType(): NormalMapTypes | undefined {\n    return this._objRef?.normalMapType;\n  }\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  public get normalScale(): Vector2 | undefined {\n    return this._objRef?.normalScale;\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementMap(): (Texture | null) | undefined {\n    return this._objRef?.displacementMap;\n  }\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementScale(): number | undefined {\n    return this._objRef?.displacementScale;\n  }\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  // @ts-ignore\n  public get displacementBias(): number | undefined {\n    return this._objRef?.displacementBias;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinecap(): string | undefined {\n    return this._objRef?.wireframeLinecap;\n  }\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinejoin(): string | undefined {\n    return this._objRef?.wireframeLinejoin;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { OctahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-octahedronGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThOctahedronGeometry)\n    }\n  ]\n})\nexport class ThOctahedronGeometry<\n  T extends OctahedronGeometry = OctahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<OctahedronGeometry> {\n    return OctahedronGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'OctahedronGeometry') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { OrthographicCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-orthographicCamera',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThOrthographicCamera)\n    },\n    { provide: ThCamera, useExisting: forwardRef(() => ThOrthographicCamera) }\n  ]\n})\nexport class ThOrthographicCamera<\n  T extends OrthographicCamera = OrthographicCamera,\n  TARGS = [left?: number, right?: number, top?: number, bottom?: number, near?: number, far?: number]\n> extends ThCamera<T, TARGS> {\n  public getType(): Type<OrthographicCamera> {\n    return OrthographicCamera;\n  }\n\n  // @ts-ignore\n  public get isOrthographicCamera(): true | undefined {\n    return this._objRef?.isOrthographicCamera;\n  }\n  // @ts-ignore\n  public get type(): (string | 'OrthographicCamera') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set zoom(value: number) {\n    if (this._objRef) {\n      this._objRef.zoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get zoom(): number | undefined {\n    return this._objRef?.zoom;\n  }\n  @Input()\n  public set view(\n    value: null | {\n      enabled: boolean;\n      fullWidth: number;\n      fullHeight: number;\n      offsetX: number;\n      offsetY: number;\n      width: number;\n      height: number;\n    }\n  ) {\n    if (this._objRef) {\n      this._objRef.view = value;\n    }\n  }\n\n  // @ts-ignore\n  public get view():\n    | (null | {\n        enabled: boolean;\n        fullWidth: number;\n        fullHeight: number;\n        offsetX: number;\n        offsetY: number;\n        width: number;\n        height: number;\n      })\n    | undefined {\n    return this._objRef?.view;\n  }\n  @Input()\n  public set left(value: number) {\n    if (this._objRef) {\n      this._objRef.left = value;\n    }\n  }\n\n  // @ts-ignore\n  public get left(): number | undefined {\n    return this._objRef?.left;\n  }\n  @Input()\n  public set right(value: number) {\n    if (this._objRef) {\n      this._objRef.right = value;\n    }\n  }\n\n  // @ts-ignore\n  public get right(): number | undefined {\n    return this._objRef?.right;\n  }\n  @Input()\n  public set top(value: number) {\n    if (this._objRef) {\n      this._objRef.top = value;\n    }\n  }\n\n  // @ts-ignore\n  public get top(): number | undefined {\n    return this._objRef?.top;\n  }\n  @Input()\n  public set bottom(value: number) {\n    if (this._objRef) {\n      this._objRef.bottom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bottom(): number | undefined {\n    return this._objRef?.bottom;\n  }\n  @Input()\n  public set near(value: number) {\n    if (this._objRef) {\n      this._objRef.near = value;\n    }\n  }\n\n  // @ts-ignore\n  public get near(): number | undefined {\n    return this._objRef?.near;\n  }\n  @Input()\n  public set far(value: number) {\n    if (this._objRef) {\n      this._objRef.far = value;\n    }\n  }\n\n  // @ts-ignore\n  public get far(): number | undefined {\n    return this._objRef?.far;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  Matrix4,\n  MeshBasicMaterial,\n  MeshDepthMaterial,\n  Object3D,\n  Scene,\n  ShaderMaterial,\n  Texture,\n  Vector2,\n  WebGLRenderTarget\n} from 'three';\nimport { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-outlinePass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThOutlinePass) }]\n})\nexport class ThOutlinePass<\n  T extends OutlinePass = OutlinePass,\n  TARGS = [resolution: Vector2, scene: Scene, camera: Camera, selectedObjects?: Object3D[]]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<OutlinePass> {\n    return OutlinePass;\n  }\n\n  @Input()\n  public set renderScene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.renderScene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderScene(): Scene | undefined {\n    return this._objRef?.renderScene;\n  }\n  @Input()\n  public set renderCamera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.renderCamera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderCamera(): Camera | undefined {\n    return this._objRef?.renderCamera;\n  }\n  @Input()\n  public set selectedObjects(value: Object3D[]) {\n    if (this._objRef) {\n      this._objRef.selectedObjects = value;\n    }\n  }\n\n  // @ts-ignore\n  public get selectedObjects(): Object3D[] | undefined {\n    return this._objRef?.selectedObjects;\n  }\n  @Input()\n  public set visibleEdgeColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.visibleEdgeColor = applyValue<Color>(this._objRef.visibleEdgeColor, value);\n    }\n  }\n  // @ts-ignore\n  public get visibleEdgeColor(): Color | undefined {\n    return this._objRef?.visibleEdgeColor;\n  }\n  @Input()\n  public set hiddenEdgeColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.hiddenEdgeColor = applyValue<Color>(this._objRef.hiddenEdgeColor, value);\n    }\n  }\n  // @ts-ignore\n  public get hiddenEdgeColor(): Color | undefined {\n    return this._objRef?.hiddenEdgeColor;\n  }\n  @Input()\n  public set edgeGlow(value: number) {\n    if (this._objRef) {\n      this._objRef.edgeGlow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get edgeGlow(): number | undefined {\n    return this._objRef?.edgeGlow;\n  }\n  @Input()\n  public set usePatternTexture(value: boolean) {\n    if (this._objRef) {\n      this._objRef.usePatternTexture = value;\n    }\n  }\n\n  // @ts-ignore\n  public get usePatternTexture(): boolean | undefined {\n    return this._objRef?.usePatternTexture;\n  }\n  @Input()\n  public set edgeThickness(value: number) {\n    if (this._objRef) {\n      this._objRef.edgeThickness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get edgeThickness(): number | undefined {\n    return this._objRef?.edgeThickness;\n  }\n  @Input()\n  public set edgeStrength(value: number) {\n    if (this._objRef) {\n      this._objRef.edgeStrength = value;\n    }\n  }\n\n  // @ts-ignore\n  public get edgeStrength(): number | undefined {\n    return this._objRef?.edgeStrength;\n  }\n  @Input()\n  public set downSampleRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.downSampleRatio = value;\n    }\n  }\n\n  // @ts-ignore\n  public get downSampleRatio(): number | undefined {\n    return this._objRef?.downSampleRatio;\n  }\n  @Input()\n  public set pulsePeriod(value: number) {\n    if (this._objRef) {\n      this._objRef.pulsePeriod = value;\n    }\n  }\n\n  // @ts-ignore\n  public get pulsePeriod(): number | undefined {\n    return this._objRef?.pulsePeriod;\n  }\n  @Input()\n  public set resolution(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue<Vector2>(this._objRef.resolution, value);\n    }\n  }\n  // @ts-ignore\n  public get resolution(): Vector2 | undefined {\n    return this._objRef?.resolution;\n  }\n  @Input()\n  public set patternTexture(value: Texture) {\n    if (this._objRef) {\n      this._objRef.patternTexture = value;\n    }\n  }\n\n  // @ts-ignore\n  public get patternTexture(): Texture | undefined {\n    return this._objRef?.patternTexture;\n  }\n  @Input()\n  public set maskBufferMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.maskBufferMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maskBufferMaterial(): MeshBasicMaterial | undefined {\n    return this._objRef?.maskBufferMaterial;\n  }\n  @Input()\n  public set renderTargetMaskBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetMaskBuffer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetMaskBuffer(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetMaskBuffer;\n  }\n  @Input()\n  public set depthMaterial(value: MeshDepthMaterial) {\n    if (this._objRef) {\n      this._objRef.depthMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthMaterial(): MeshDepthMaterial | undefined {\n    return this._objRef?.depthMaterial;\n  }\n  @Input()\n  public set prepareMaskMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.prepareMaskMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get prepareMaskMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.prepareMaskMaterial;\n  }\n  @Input()\n  public set renderTargetDepthBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetDepthBuffer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetDepthBuffer(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetDepthBuffer;\n  }\n  @Input()\n  public set renderTargetMaskDownSampleBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetMaskDownSampleBuffer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetMaskDownSampleBuffer(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetMaskDownSampleBuffer;\n  }\n  @Input()\n  public set renderTargetBlurBuffer1(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetBlurBuffer1 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetBlurBuffer1(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetBlurBuffer1;\n  }\n  @Input()\n  public set renderTargetBlurBuffer2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetBlurBuffer2 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetBlurBuffer2(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetBlurBuffer2;\n  }\n  @Input()\n  public set edgeDetectionMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.edgeDetectionMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get edgeDetectionMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.edgeDetectionMaterial;\n  }\n  @Input()\n  public set renderTargetEdgeBuffer1(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetEdgeBuffer1 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetEdgeBuffer1(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetEdgeBuffer1;\n  }\n  @Input()\n  public set renderTargetEdgeBuffer2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetEdgeBuffer2 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetEdgeBuffer2(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetEdgeBuffer2;\n  }\n  @Input()\n  public set separableBlurMaterial1(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterial1 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get separableBlurMaterial1(): ShaderMaterial | undefined {\n    return this._objRef?.separableBlurMaterial1;\n  }\n  @Input()\n  public set separableBlurMaterial2(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterial2 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get separableBlurMaterial2(): ShaderMaterial | undefined {\n    return this._objRef?.separableBlurMaterial2;\n  }\n  @Input()\n  public set overlayMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.overlayMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get overlayMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.overlayMaterial;\n  }\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyUniforms(): object | undefined {\n    return this._objRef?.copyUniforms;\n  }\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialCopy(): ShaderMaterial | undefined {\n    return this._objRef?.materialCopy;\n  }\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get oldClearColor(): Color | undefined {\n    return this._objRef?.oldClearColor;\n  }\n  @Input()\n  public set oldClearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get oldClearAlpha(): number | undefined {\n    return this._objRef?.oldClearAlpha;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n  @Input()\n  public set tempPulseColor1(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.tempPulseColor1 = applyValue<Color>(this._objRef.tempPulseColor1, value);\n    }\n  }\n  // @ts-ignore\n  public get tempPulseColor1(): Color | undefined {\n    return this._objRef?.tempPulseColor1;\n  }\n  @Input()\n  public set tempPulseColor2(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.tempPulseColor2 = applyValue<Color>(this._objRef.tempPulseColor2, value);\n    }\n  }\n  // @ts-ignore\n  public get tempPulseColor2(): Color | undefined {\n    return this._objRef?.tempPulseColor2;\n  }\n  @Input()\n  public set textureMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.textureMatrix = applyValue<Matrix4>(this._objRef.textureMatrix, value);\n    }\n  }\n  // @ts-ignore\n  public get textureMatrix(): Matrix4 | undefined {\n    return this._objRef?.textureMatrix;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Vector3 } from 'three';\nimport { ParametricGeometry } from 'three/examples/jsm/geometries/ParametricGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-parametricGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThParametricGeometry)\n    }\n  ]\n})\nexport class ThParametricGeometry<\n  T extends ParametricGeometry = ParametricGeometry,\n  TARGS = [func?: (u: number, v: number, target: Vector3) => void, slices?: number, stacks?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ParametricGeometry> {\n    return ParametricGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set parameters(value: {\n    func: (u: number, v: number, dest: Vector3) => void;\n    slices: number;\n    stacks: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n\n  // @ts-ignore\n  public get parameters():\n    | {\n        func: (u: number, v: number, dest: Vector3) => void;\n        slices: number;\n        stacks: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { PlaneGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-planeGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThPlaneGeometry)\n    }\n  ]\n})\nexport class ThPlaneGeometry<\n  T extends PlaneGeometry = PlaneGeometry,\n  TARGS = [width?: number, height?: number, widthSegments?: number, heightSegments?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<PlaneGeometry> {\n    return PlaneGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'PlaneGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly width: number;\n        readonly height: number;\n        readonly widthSegments: number;\n        readonly heightSegments: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { BufferGeometry, Material, Plane, PlaneHelper, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-planeHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPlaneHelper) }]\n})\nexport class ThPlaneHelper<\n  T extends PlaneHelper = PlaneHelper,\n  TARGS = [plane: Plane, size?: number, hex?: number]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<PlaneHelper> {\n    return PlaneHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'PlaneHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set plane(value: Plane | [normal: Vector3, constant: number]) {\n    if (this._objRef) {\n      this._objRef.plane = applyValue<Plane>(this._objRef.plane, value);\n    }\n  }\n  // @ts-ignore\n  public get plane(): Plane | undefined {\n    return this._objRef?.plane;\n  }\n  @Input()\n  public set size(value: number) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n\n  // @ts-ignore\n  public get size(): number | undefined {\n    return this._objRef?.size;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera } from 'three';\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-pointerLockControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThPointerLockControls)\n    }\n  ]\n})\nexport class ThPointerLockControls<\n  T extends PointerLockControls = PointerLockControls,\n  TARGS = [camera: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<PointerLockControls> {\n    return PointerLockControls;\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set domElement(value: HTMLElement) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  // @ts-ignore\n  public get domElement(): HTMLElement | undefined {\n    return this._objRef?.domElement;\n  }\n  @Input()\n  public set isLocked(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isLocked = value;\n    }\n  }\n\n  // @ts-ignore\n  public get isLocked(): boolean | undefined {\n    return this._objRef?.isLocked;\n  }\n  @Input()\n  public set minPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.minPolarAngle = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minPolarAngle(): number | undefined {\n    return this._objRef?.minPolarAngle;\n  }\n  @Input()\n  public set maxPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.maxPolarAngle = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxPolarAngle(): number | undefined {\n    return this._objRef?.maxPolarAngle;\n  }\n  @Input()\n  public set pointerSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.pointerSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get pointerSpeed(): number | undefined {\n    return this._objRef?.pointerSpeed;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, PointLight, PointLightShadow } from 'three';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-pointLight',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPointLight) }]\n})\nexport class ThPointLight<\n  T extends PointLight = PointLight,\n  TARGS = [color?: ColorRepresentation, intensity?: number, distance?: number, decay?: number]\n> extends ThLight<PointLightShadow, T, TARGS> {\n  public getType(): Type<PointLight> {\n    return PointLight;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get intensity(): number | undefined {\n    return this._objRef?.intensity;\n  }\n  @Input()\n  public set distance(value: number) {\n    if (this._objRef) {\n      this._objRef.distance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get distance(): number | undefined {\n    return this._objRef?.distance;\n  }\n  @Input()\n  public set castShadow(value: boolean) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get castShadow(): boolean | undefined {\n    return this._objRef?.castShadow;\n  }\n  @Input()\n  public set decay(value: number) {\n    if (this._objRef) {\n      this._objRef.decay = value;\n    }\n  }\n\n  // @ts-ignore\n  public get decay(): number | undefined {\n    return this._objRef?.decay;\n  }\n  @Input()\n  public set shadow(value: PointLightShadow) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shadow(): PointLightShadow | undefined {\n    return this._objRef?.shadow;\n  }\n  @Input()\n  public set power(value: number) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n\n  // @ts-ignore\n  public get power(): number | undefined {\n    return this._objRef?.power;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, Event, Matrix4, PointLight, PointLightHelper } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-pointLightHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPointLightHelper) }]\n})\nexport class ThPointLightHelper<\n  T extends PointLightHelper = PointLightHelper,\n  TARGS = [light: PointLight, sphereSize?: number, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<PointLightHelper> {\n    return PointLightHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'PointLightHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set light(value: PointLight) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  // @ts-ignore\n  public get light(): PointLight | undefined {\n    return this._objRef?.light;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix4 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n\n  // @ts-ignore\n  public get color(): (ColorRepresentation | undefined) | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { BufferGeometry, Event, Material, Points } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-points',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPoints) }]\n})\nexport class ThPoints<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends Points<TGeometry, TMaterial> = Points<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Points<TGeometry, TMaterial>> {\n    return Points;\n  }\n\n  // @ts-ignore\n  public get isPoints(): true | undefined {\n    return this._objRef?.isPoints;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Points') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set morphTargetInfluences(value: number[] | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphTargetInfluences(): (number[] | undefined) | undefined {\n    return this._objRef?.morphTargetInfluences;\n  }\n  @Input()\n  public set morphTargetDictionary(value: { [key: string]: number } | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n\n  // @ts-ignore\n  public get morphTargetDictionary(): ({ [key: string]: number } | undefined) | undefined {\n    return this._objRef?.morphTargetDictionary;\n  }\n  @Input()\n  public set geometry(value: TGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  // @ts-ignore\n  public get geometry(): TGeometry | undefined {\n    return this._objRef?.geometry;\n  }\n  @Input()\n  public set material(value: TMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): TMaterial | undefined {\n    return this._objRef?.material;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Color, ColorRepresentation, PointsMaterial, PointsMaterialParameters, Texture } from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-pointsMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThPointsMaterial) }]\n})\nexport class ThPointsMaterial<\n  T extends PointsMaterial = PointsMaterial,\n  TARGS = /* parameters? */ PointsMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<PointsMaterial> {\n    return PointsMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set size(value: number) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n\n  // @ts-ignore\n  public get size(): number | undefined {\n    return this._objRef?.size;\n  }\n  @Input()\n  public set sizeAttenuation(value: boolean) {\n    if (this._objRef) {\n      this._objRef.sizeAttenuation = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sizeAttenuation(): boolean | undefined {\n    return this._objRef?.sizeAttenuation;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BufferGeometry, ColorRepresentation, Material, PolarGridHelper } from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-polarGridHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPolarGridHelper) }]\n})\nexport class ThPolarGridHelper<\n  T extends PolarGridHelper = PolarGridHelper,\n  TARGS = [\n    radius?: number,\n    radials?: number,\n    circles?: number,\n    divisions?: number,\n    color1?: ColorRepresentation,\n    color2?: ColorRepresentation\n  ]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<PolarGridHelper> {\n    return PolarGridHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'PolarGridHelper') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { AudioListener, PositionalAudio } from 'three';\nimport { ThAudio } from './ThAudio';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-positionalAudio',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPositionalAudio) }]\n})\nexport class ThPositionalAudio<\n  T extends PositionalAudio = PositionalAudio,\n  TARGS = /* listener */ AudioListener\n> extends ThAudio<PannerNode, T, TARGS> {\n  public getType(): Type<PositionalAudio> {\n    return PositionalAudio;\n  }\n\n  @Input()\n  public set panner(value: PannerNode) {\n    if (this._objRef) {\n      this._objRef.panner = value;\n    }\n  }\n\n  // @ts-ignore\n  public get panner(): PannerNode | undefined {\n    return this._objRef?.panner;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { GLSLVersion, IUniform, ShaderMaterial, ShaderMaterialParameters } from 'three';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-shaderMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThShaderMaterial) }]\n})\nexport class ThShaderMaterial<\n  T extends ShaderMaterial = ShaderMaterial,\n  TARGS = /* parameters? */ ShaderMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<ShaderMaterial> {\n    return ShaderMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  // @ts-ignore\n  public get defines(): { [key: string]: any } | undefined {\n    return this._objRef?.defines;\n  }\n  @Input()\n  public set uniforms(value: { [uniform: string]: IUniform }) {\n    if (this._objRef) {\n      this._objRef.uniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [uniform: string]: IUniform } | undefined {\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set vertexShader(value: string) {\n    if (this._objRef) {\n      this._objRef.vertexShader = value;\n    }\n  }\n\n  // @ts-ignore\n  public get vertexShader(): string | undefined {\n    return this._objRef?.vertexShader;\n  }\n  @Input()\n  public set fragmentShader(value: string) {\n    if (this._objRef) {\n      this._objRef.fragmentShader = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fragmentShader(): string | undefined {\n    return this._objRef?.fragmentShader;\n  }\n  @Input()\n  public set linewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.linewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get linewidth(): number | undefined {\n    return this._objRef?.linewidth;\n  }\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframe(): boolean | undefined {\n    return this._objRef?.wireframe;\n  }\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  // @ts-ignore\n  public get wireframeLinewidth(): number | undefined {\n    return this._objRef?.wireframeLinewidth;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n  @Input()\n  public set lights(value: boolean) {\n    if (this._objRef) {\n      this._objRef.lights = value;\n    }\n  }\n\n  // @ts-ignore\n  public get lights(): boolean | undefined {\n    return this._objRef?.lights;\n  }\n  @Input()\n  public set clipping(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clipping = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clipping(): boolean | undefined {\n    return this._objRef?.clipping;\n  }\n  @Input()\n  public set derivatives(value: any) {\n    if (this._objRef) {\n      this._objRef.derivatives = value;\n    }\n  }\n\n  // @ts-ignore\n  public get derivatives(): any | undefined {\n    return this._objRef?.derivatives;\n  }\n  @Input()\n  public set extensions(value: {\n    derivatives: boolean;\n    fragDepth: boolean;\n    drawBuffers: boolean;\n    shaderTextureLOD: boolean;\n  }) {\n    if (this._objRef) {\n      this._objRef.extensions = value;\n    }\n  }\n\n  // @ts-ignore\n  public get extensions():\n    | {\n        derivatives: boolean;\n        fragDepth: boolean;\n        drawBuffers: boolean;\n        shaderTextureLOD: boolean;\n      }\n    | undefined {\n    return this._objRef?.extensions;\n  }\n  @Input()\n  public set defaultAttributeValues(value: any) {\n    if (this._objRef) {\n      this._objRef.defaultAttributeValues = value;\n    }\n  }\n\n  // @ts-ignore\n  public get defaultAttributeValues(): any | undefined {\n    return this._objRef?.defaultAttributeValues;\n  }\n  @Input()\n  public set index0AttributeName(value: string | undefined) {\n    if (this._objRef) {\n      this._objRef.index0AttributeName = value;\n    }\n  }\n\n  // @ts-ignore\n  public get index0AttributeName(): (string | undefined) | undefined {\n    return this._objRef?.index0AttributeName;\n  }\n  @Input()\n  public set uniformsNeedUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.uniformsNeedUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uniformsNeedUpdate(): boolean | undefined {\n    return this._objRef?.uniformsNeedUpdate;\n  }\n  @Input()\n  public set glslVersion(value: GLSLVersion | null) {\n    if (this._objRef) {\n      this._objRef.glslVersion = value;\n    }\n  }\n\n  // @ts-ignore\n  public get glslVersion(): (GLSLVersion | null) | undefined {\n    return this._objRef?.glslVersion;\n  }\n  @Input()\n  public set isShaderMaterial(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isShaderMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get isShaderMaterial(): boolean | undefined {\n    return this._objRef?.isShaderMaterial;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { RawShaderMaterial, ShaderMaterialParameters } from 'three';\nimport { ThMaterial } from './ThMaterial';\nimport { ThShaderMaterial } from './ThShaderMaterial';\n\n@Component({\n  selector: 'th-rawShaderMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThRawShaderMaterial) }]\n})\nexport class ThRawShaderMaterial<\n  T extends RawShaderMaterial = RawShaderMaterial,\n  TARGS = /* parameters? */ ShaderMaterialParameters\n> extends ThShaderMaterial<T, TARGS> {\n  public getType(): Type<RawShaderMaterial> {\n    return RawShaderMaterial;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, RectAreaLight } from 'three';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-rectAreaLight',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThRectAreaLight) }]\n})\nexport class ThRectAreaLight<\n  T extends RectAreaLight = RectAreaLight,\n  TARGS = [color?: ColorRepresentation, intensity?: number, width?: number, height?: number]\n> extends ThLight<undefined, T, TARGS> {\n  public getType(): Type<RectAreaLight> {\n    return RectAreaLight;\n  }\n\n  // @ts-ignore\n  public get isRectAreaLight(): true | undefined {\n    return this._objRef?.isRectAreaLight;\n  }\n  // @ts-ignore\n  public get type(): (string | 'RectAreaLight') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set width(value: number) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n\n  // @ts-ignore\n  public get width(): number | undefined {\n    return this._objRef?.width;\n  }\n  @Input()\n  public set height(value: number) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n\n  // @ts-ignore\n  public get height(): number | undefined {\n    return this._objRef?.height;\n  }\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get intensity(): number | undefined {\n    return this._objRef?.intensity;\n  }\n  @Input()\n  public set power(value: number) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n\n  // @ts-ignore\n  public get power(): number | undefined {\n    return this._objRef?.power;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { RingGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-ringGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThRingGeometry)\n    }\n  ]\n})\nexport class ThRingGeometry<\n  T extends RingGeometry = RingGeometry,\n  TARGS = [\n    innerRadius?: number,\n    outerRadius?: number,\n    thetaSegments?: number,\n    phiSegments?: number,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<RingGeometry> {\n    return RingGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'RingGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly innerRadius: number;\n        readonly outerRadius: number;\n        readonly thetaSegments: number;\n        readonly phiSegments: number;\n        readonly thetaStart: number;\n        readonly thetaLength: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';\nimport { ThBoxGeometry } from './ThBoxGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-roundedBoxGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThRoundedBoxGeometry)\n    }\n  ]\n})\nexport class ThRoundedBoxGeometry<\n  T extends RoundedBoxGeometry = RoundedBoxGeometry,\n  TARGS = [width?: number, height?: number, depth?: number, segments?: number, radius?: number]\n> extends ThBoxGeometry<T, TARGS> {\n  public getType(): Type<RoundedBoxGeometry> {\n    return RoundedBoxGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  MeshDepthMaterial,\n  MeshNormalMaterial,\n  Scene,\n  ShaderMaterial,\n  Vector2,\n  WebGLRenderTarget\n} from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { SAOPass, SAOPassParams } from 'three/examples/jsm/postprocessing/SAOPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sAOPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSAOPass) }]\n})\nexport class ThSAOPass<\n  T extends SAOPass = SAOPass,\n  TARGS = [scene: Scene, camera: Camera, depthTexture?: boolean, useNormals?: boolean, resolution?: Vector2]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SAOPass> {\n    return SAOPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): Scene | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set supportsDepthTextureExtension(value: boolean) {\n    if (this._objRef) {\n      this._objRef.supportsDepthTextureExtension = value;\n    }\n  }\n\n  // @ts-ignore\n  public get supportsDepthTextureExtension(): boolean | undefined {\n    return this._objRef?.supportsDepthTextureExtension;\n  }\n  @Input()\n  public set supportsNormalTexture(value: boolean) {\n    if (this._objRef) {\n      this._objRef.supportsNormalTexture = value;\n    }\n  }\n\n  // @ts-ignore\n  public get supportsNormalTexture(): boolean | undefined {\n    return this._objRef?.supportsNormalTexture;\n  }\n  @Input()\n  public set originalClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue<Color>(this._objRef.originalClearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get originalClearColor(): Color | undefined {\n    return this._objRef?.originalClearColor;\n  }\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get oldClearColor(): Color | undefined {\n    return this._objRef?.oldClearColor;\n  }\n  @Input()\n  public set oldClearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get oldClearAlpha(): number | undefined {\n    return this._objRef?.oldClearAlpha;\n  }\n  @Input()\n  public set resolution(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue<Vector2>(this._objRef.resolution, value);\n    }\n  }\n  // @ts-ignore\n  public get resolution(): Vector2 | undefined {\n    return this._objRef?.resolution;\n  }\n  @Input()\n  public set saoRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.saoRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get saoRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.saoRenderTarget;\n  }\n  @Input()\n  public set blurIntermediateRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurIntermediateRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blurIntermediateRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.blurIntermediateRenderTarget;\n  }\n  @Input()\n  public set beautyRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get beautyRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.beautyRenderTarget;\n  }\n  @Input()\n  public set normalRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.normalRenderTarget;\n  }\n  @Input()\n  public set depthRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.depthRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.depthRenderTarget;\n  }\n  @Input()\n  public set depthMaterial(value: MeshDepthMaterial) {\n    if (this._objRef) {\n      this._objRef.depthMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthMaterial(): MeshDepthMaterial | undefined {\n    return this._objRef?.depthMaterial;\n  }\n  @Input()\n  public set normalMaterial(value: MeshNormalMaterial) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMaterial(): MeshNormalMaterial | undefined {\n    return this._objRef?.normalMaterial;\n  }\n  @Input()\n  public set saoMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.saoMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get saoMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.saoMaterial;\n  }\n  @Input()\n  public set vBlurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.vBlurMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get vBlurMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.vBlurMaterial;\n  }\n  @Input()\n  public set hBlurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.hBlurMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get hBlurMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.hBlurMaterial;\n  }\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialCopy(): ShaderMaterial | undefined {\n    return this._objRef?.materialCopy;\n  }\n  @Input()\n  public set depthCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.depthCopy = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthCopy(): ShaderMaterial | undefined {\n    return this._objRef?.depthCopy;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n  @Input()\n  public set params(value: SAOPassParams) {\n    if (this._objRef) {\n      this._objRef.params = value;\n    }\n  }\n\n  // @ts-ignore\n  public get params(): SAOPassParams | undefined {\n    return this._objRef?.params;\n  }\n\n  public static readonly OUTPUT = SAOPass.OUTPUT;\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { SavePass } from 'three/examples/jsm/postprocessing/SavePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-savePass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSavePass) }]\n})\nexport class ThSavePass<T extends SavePass = SavePass, TARGS = /* renderTarget? */ WebGLRenderTarget> extends ThPass<\n  T,\n  TARGS\n> {\n  public getType(): Type<SavePass> {\n    return SavePass;\n  }\n\n  @Input()\n  public set textureID(value: string) {\n    if (this._objRef) {\n      this._objRef.textureID = value;\n    }\n  }\n\n  // @ts-ignore\n  public get textureID(): string | undefined {\n    return this._objRef?.textureID;\n  }\n  @Input()\n  public set renderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTarget;\n  }\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): ShaderMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Color, ColorRepresentation, ShadowMaterial, ShadowMaterialParameters } from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-shadowMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThShadowMaterial) }]\n})\nexport class ThShadowMaterial<\n  T extends ShadowMaterial = ShadowMaterial,\n  TARGS = /* parameters? */ ShadowMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<ShadowMaterial> {\n    return ShadowMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set transparent(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n\n  // @ts-ignore\n  public get transparent(): boolean | undefined {\n    return this._objRef?.transparent;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { Shape, ShapeGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-shapeGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThShapeGeometry)\n    }\n  ]\n})\nexport class ThShapeGeometry<\n  T extends ShapeGeometry = ShapeGeometry,\n  TARGS = [shapes?: Shape | Shape[], curveSegments?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ShapeGeometry> {\n    return ShapeGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'ShapeGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly shapes: Shape | Shape[];\n        readonly curveSegments: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Bone, BufferGeometry, Material, Matrix4, Object3D, SkeletonHelper, SkinnedMesh } from 'three';\nimport { applyValue } from '../util';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-skeletonHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSkeletonHelper) }]\n})\nexport class ThSkeletonHelper<\n  T extends SkeletonHelper = SkeletonHelper,\n  TARGS = /* object */ SkinnedMesh | Object3D\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<SkeletonHelper> {\n    return SkeletonHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'SkeletonHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set bones(value: Bone[]) {\n    if (this._objRef) {\n      this._objRef.bones = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bones(): Bone[] | undefined {\n    return this._objRef?.bones;\n  }\n  @Input()\n  public set root(value: SkinnedMesh | Object3D) {\n    if (this._objRef) {\n      this._objRef.root = value;\n    }\n  }\n\n  // @ts-ignore\n  public get root(): (SkinnedMesh | Object3D) | undefined {\n    return this._objRef?.root;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix4 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Box3, BufferGeometry, Material, Matrix4, Skeleton, SkinnedMesh, Sphere, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThMesh } from './ThMesh';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-skinnedMesh',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSkinnedMesh) }]\n})\nexport class ThSkinnedMesh<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends SkinnedMesh<TGeometry, TMaterial> = SkinnedMesh<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial, useVertexTexture?: boolean]\n> extends ThMesh<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<SkinnedMesh<TGeometry, TMaterial>> {\n    return SkinnedMesh;\n  }\n\n  // @ts-ignore\n  public get isSkinnedMesh(): true | undefined {\n    return this._objRef?.isSkinnedMesh;\n  }\n  // @ts-ignore\n  public get type(): (string | 'SkinnedMesh') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set bindMode(value: 'attached' | 'detached') {\n    if (this._objRef) {\n      this._objRef.bindMode = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bindMode(): ('attached' | 'detached') | undefined {\n    return this._objRef?.bindMode;\n  }\n  @Input()\n  public set bindMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.bindMatrix = applyValue<Matrix4>(this._objRef.bindMatrix, value);\n    }\n  }\n  // @ts-ignore\n  public get bindMatrix(): Matrix4 | undefined {\n    return this._objRef?.bindMatrix;\n  }\n  @Input()\n  public set bindMatrixInverse(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.bindMatrixInverse = applyValue<Matrix4>(this._objRef.bindMatrixInverse, value);\n    }\n  }\n  // @ts-ignore\n  public get bindMatrixInverse(): Matrix4 | undefined {\n    return this._objRef?.bindMatrixInverse;\n  }\n  @Input()\n  public set boundingBox(value: Box3 | [min: Vector3, max: Vector3]) {\n    if (this._objRef) {\n      this._objRef.boundingBox = applyValue<Box3>(this._objRef.boundingBox, value);\n    }\n  }\n  // @ts-ignore\n  public get boundingBox(): Box3 | undefined {\n    return this._objRef?.boundingBox;\n  }\n  @Input()\n  public set boundingSphere(value: Sphere | [center: Vector3, radius: number]) {\n    if (this._objRef) {\n      this._objRef.boundingSphere = applyValue<Sphere>(this._objRef.boundingSphere, value);\n    }\n  }\n  // @ts-ignore\n  public get boundingSphere(): Sphere | undefined {\n    return this._objRef?.boundingSphere;\n  }\n  @Input()\n  public set skeleton(value: Skeleton) {\n    if (this._objRef) {\n      this._objRef.skeleton = value;\n    }\n  }\n\n  // @ts-ignore\n  public get skeleton(): Skeleton | undefined {\n    return this._objRef?.skeleton;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial, Texture, WebGLRenderTarget } from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sMAAPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSMAAPass) }]\n})\nexport class ThSMAAPass<T extends SMAAPass = SMAAPass, TARGS = [width: number, height: number]> extends ThPass<\n  T,\n  TARGS\n> {\n  public getType(): Type<SMAAPass> {\n    return SMAAPass;\n  }\n\n  @Input()\n  public set edgesRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.edgesRT = value;\n    }\n  }\n\n  // @ts-ignore\n  public get edgesRT(): WebGLRenderTarget | undefined {\n    return this._objRef?.edgesRT;\n  }\n  @Input()\n  public set weightsRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.weightsRT = value;\n    }\n  }\n\n  // @ts-ignore\n  public get weightsRT(): WebGLRenderTarget | undefined {\n    return this._objRef?.weightsRT;\n  }\n  @Input()\n  public set areaTexture(value: Texture) {\n    if (this._objRef) {\n      this._objRef.areaTexture = value;\n    }\n  }\n\n  // @ts-ignore\n  public get areaTexture(): Texture | undefined {\n    return this._objRef?.areaTexture;\n  }\n  @Input()\n  public set searchTexture(value: Texture) {\n    if (this._objRef) {\n      this._objRef.searchTexture = value;\n    }\n  }\n\n  // @ts-ignore\n  public get searchTexture(): Texture | undefined {\n    return this._objRef?.searchTexture;\n  }\n  @Input()\n  public set uniformsEdges(value: object) {\n    if (this._objRef) {\n      this._objRef.uniformsEdges = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uniformsEdges(): object | undefined {\n    return this._objRef?.uniformsEdges;\n  }\n  @Input()\n  public set materialEdges(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialEdges = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialEdges(): ShaderMaterial | undefined {\n    return this._objRef?.materialEdges;\n  }\n  @Input()\n  public set uniformsWeights(value: object) {\n    if (this._objRef) {\n      this._objRef.uniformsWeights = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uniformsWeights(): object | undefined {\n    return this._objRef?.uniformsWeights;\n  }\n  @Input()\n  public set materialWeights(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialWeights = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialWeights(): ShaderMaterial | undefined {\n    return this._objRef?.materialWeights;\n  }\n  @Input()\n  public set uniformsBlend(value: object) {\n    if (this._objRef) {\n      this._objRef.uniformsBlend = value;\n    }\n  }\n\n  // @ts-ignore\n  public get uniformsBlend(): object | undefined {\n    return this._objRef?.uniformsBlend;\n  }\n  @Input()\n  public set materialBlend(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialBlend = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialBlend(): ShaderMaterial | undefined {\n    return this._objRef?.materialBlend;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { SphereGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-sphereGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThSphereGeometry)\n    }\n  ]\n})\nexport class ThSphereGeometry<\n  T extends SphereGeometry = SphereGeometry,\n  TARGS = [\n    radius?: number,\n    widthSegments?: number,\n    heightSegments?: number,\n    phiStart?: number,\n    phiLength?: number,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<SphereGeometry> {\n    return SphereGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'SphereGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly radius: number;\n        readonly widthSegments: number;\n        readonly heightSegments: number;\n        readonly phiStart: number;\n        readonly phiLength: number;\n        readonly thetaStart: number;\n        readonly thetaLength: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, Object3D, SpotLight, SpotLightShadow, Texture, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-spotLight',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSpotLight) }]\n})\nexport class ThSpotLight<\n  T extends SpotLight = SpotLight,\n  TARGS = [\n    color?: ColorRepresentation,\n    intensity?: number,\n    distance?: number,\n    angle?: number,\n    penumbra?: number,\n    decay?: number\n  ]\n> extends ThLight<SpotLightShadow, T, TARGS> {\n  public getType(): Type<SpotLight> {\n    return SpotLight;\n  }\n\n  // @ts-ignore\n  public get isSpotLight(): true | undefined {\n    return this._objRef?.isSpotLight;\n  }\n  // @ts-ignore\n  public get type(): (string | 'SpotLight') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.position = applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  public get position(): Vector3 | undefined {\n    return this._objRef?.position;\n  }\n  @Input()\n  public set target(value: Object3D) {\n    if (this._objRef) {\n      this._objRef.target = value;\n    }\n  }\n\n  // @ts-ignore\n  public get target(): Object3D | undefined {\n    return this._objRef?.target;\n  }\n  @Input()\n  public set castShadow(value: boolean) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get castShadow(): boolean | undefined {\n    return this._objRef?.castShadow;\n  }\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get intensity(): number | undefined {\n    return this._objRef?.intensity;\n  }\n  @Input()\n  public set distance(value: number) {\n    if (this._objRef) {\n      this._objRef.distance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get distance(): number | undefined {\n    return this._objRef?.distance;\n  }\n  @Input()\n  public set angle(value: number) {\n    if (this._objRef) {\n      this._objRef.angle = value;\n    }\n  }\n\n  // @ts-ignore\n  public get angle(): number | undefined {\n    return this._objRef?.angle;\n  }\n  @Input()\n  public set decay(value: number) {\n    if (this._objRef) {\n      this._objRef.decay = value;\n    }\n  }\n\n  // @ts-ignore\n  public get decay(): number | undefined {\n    return this._objRef?.decay;\n  }\n  @Input()\n  public set shadow(value: SpotLightShadow) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get shadow(): SpotLightShadow | undefined {\n    return this._objRef?.shadow;\n  }\n  @Input()\n  public set power(value: number) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n\n  // @ts-ignore\n  public get power(): number | undefined {\n    return this._objRef?.power;\n  }\n  @Input()\n  public set penumbra(value: number) {\n    if (this._objRef) {\n      this._objRef.penumbra = value;\n    }\n  }\n\n  // @ts-ignore\n  public get penumbra(): number | undefined {\n    return this._objRef?.penumbra;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ColorRepresentation, Event, Light, LineSegments, Matrix4, SpotLightHelper } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-spotLightHelper',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSpotLightHelper) }]\n})\nexport class ThSpotLightHelper<\n  T extends SpotLightHelper = SpotLightHelper,\n  TARGS = [light: Light, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<SpotLightHelper> {\n    return SpotLightHelper;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'SpotLightHelper') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set cone(value: LineSegments) {\n    if (this._objRef) {\n      this._objRef.cone = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cone(): LineSegments | undefined {\n    return this._objRef?.cone;\n  }\n  @Input()\n  public set light(value: Light) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  // @ts-ignore\n  public get light(): Light | undefined {\n    return this._objRef?.light;\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  public get matrix(): Matrix4 | undefined {\n    return this._objRef?.matrix;\n  }\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n\n  // @ts-ignore\n  public get color(): (ColorRepresentation | undefined) | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get matrixAutoUpdate(): boolean | undefined {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { BufferGeometry, Event, Sprite, SpriteMaterial, Vector2 } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-sprite',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSprite) }]\n})\nexport class ThSprite<T extends Sprite = Sprite, TARGS = /* material? */ SpriteMaterial> extends ThObject3D<\n  Event,\n  T,\n  TARGS\n> {\n  public getType(): Type<Sprite> {\n    return Sprite;\n  }\n\n  // @ts-ignore\n  public get isSprite(): true | undefined {\n    return this._objRef?.isSprite;\n  }\n  // @ts-ignore\n  public get type(): (string | 'Sprite') | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set castShadow(value: false) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n\n  // @ts-ignore\n  public get castShadow(): false | undefined {\n    return this._objRef?.castShadow;\n  }\n  @Input()\n  public set geometry(value: BufferGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  // @ts-ignore\n  public get geometry(): BufferGeometry | undefined {\n    return this._objRef?.geometry;\n  }\n  @Input()\n  public set material(value: SpriteMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): SpriteMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set center(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.center = applyValue<Vector2>(this._objRef.center, value);\n    }\n  }\n  // @ts-ignore\n  public get center(): Vector2 | undefined {\n    return this._objRef?.center;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Color, ColorRepresentation, SpriteMaterial, SpriteMaterialParameters, Texture } from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-spriteMaterial',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThSpriteMaterial) }]\n})\nexport class ThSpriteMaterial<\n  T extends SpriteMaterial = SpriteMaterial,\n  TARGS = /* parameters? */ SpriteMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<SpriteMaterial> {\n    return SpriteMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): string | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  public get color(): Color | undefined {\n    return this._objRef?.color;\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): (Texture | null) | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  // @ts-ignore\n  public get alphaMap(): (Texture | null) | undefined {\n    return this._objRef?.alphaMap;\n  }\n  @Input()\n  public set rotation(value: number) {\n    if (this._objRef) {\n      this._objRef.rotation = value;\n    }\n  }\n\n  // @ts-ignore\n  public get rotation(): number | undefined {\n    return this._objRef?.rotation;\n  }\n  @Input()\n  public set sizeAttenuation(value: boolean) {\n    if (this._objRef) {\n      this._objRef.sizeAttenuation = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sizeAttenuation(): boolean | undefined {\n    return this._objRef?.sizeAttenuation;\n  }\n  @Input()\n  public set transparent(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n\n  // @ts-ignore\n  public get transparent(): boolean | undefined {\n    return this._objRef?.transparent;\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fog(): boolean | undefined {\n    return this._objRef?.fog;\n  }\n  // @ts-ignore\n  public get isSpriteMaterial(): true | undefined {\n    return this._objRef?.isSpriteMaterial;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, ColorRepresentation, Scene, ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { SSAARenderPass } from 'three/examples/jsm/postprocessing/SSAARenderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sSAARenderPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSAARenderPass) }]\n})\nexport class ThSSAARenderPass<\n  T extends SSAARenderPass = SSAARenderPass,\n  TARGS = [scene: Scene, camera: Camera, clearColor?: ColorRepresentation, clearAlpha?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SSAARenderPass> {\n    return SSAARenderPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): Scene | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set sampleLevel(value: number) {\n    if (this._objRef) {\n      this._objRef.sampleLevel = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sampleLevel(): number | undefined {\n    return this._objRef?.sampleLevel;\n  }\n  @Input()\n  public set unbiased(value: boolean) {\n    if (this._objRef) {\n      this._objRef.unbiased = value;\n    }\n  }\n\n  // @ts-ignore\n  public get unbiased(): boolean | undefined {\n    return this._objRef?.unbiased;\n  }\n  @Input()\n  public set clearColor(value: ColorRepresentation) {\n    if (this._objRef) {\n      this._objRef.clearColor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearColor(): ColorRepresentation | undefined {\n    return this._objRef?.clearColor;\n  }\n  @Input()\n  public set clearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clearAlpha(): number | undefined {\n    return this._objRef?.clearAlpha;\n  }\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyUniforms(): object | undefined {\n    return this._objRef?.copyUniforms;\n  }\n  @Input()\n  public set copyMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.copyMaterial;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n  @Input()\n  public set sampleRenderTarget(value: undefined | WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.sampleRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get sampleRenderTarget(): (undefined | WebGLRenderTarget) | undefined {\n    return this._objRef?.sampleRenderTarget;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  DataTexture,\n  MeshNormalMaterial,\n  Scene,\n  ShaderMaterial,\n  Vector3,\n  WebGLRenderTarget\n} from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { SSAOPass, SSAOPassOUTPUT } from 'three/examples/jsm/postprocessing/SSAOPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sSAOPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSAOPass) }]\n})\nexport class ThSSAOPass<\n  T extends SSAOPass = SSAOPass,\n  TARGS = [scene: Scene, camera: Camera, width?: number, height?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SSAOPass> {\n    return SSAOPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): Scene | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set width(value: number) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n\n  // @ts-ignore\n  public get width(): number | undefined {\n    return this._objRef?.width;\n  }\n  @Input()\n  public set height(value: boolean) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n\n  // @ts-ignore\n  public get height(): boolean | undefined {\n    return this._objRef?.height;\n  }\n  @Input()\n  public set clear(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clear(): boolean | undefined {\n    return this._objRef?.clear;\n  }\n  @Input()\n  public set kernelRadius(value: number) {\n    if (this._objRef) {\n      this._objRef.kernelRadius = value;\n    }\n  }\n\n  // @ts-ignore\n  public get kernelRadius(): number | undefined {\n    return this._objRef?.kernelRadius;\n  }\n  @Input()\n  public set kernelSize(value: number) {\n    if (this._objRef) {\n      this._objRef.kernelSize = value;\n    }\n  }\n\n  // @ts-ignore\n  public get kernelSize(): number | undefined {\n    return this._objRef?.kernelSize;\n  }\n  @Input()\n  public set kernel(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.kernel = value;\n    }\n  }\n\n  // @ts-ignore\n  public get kernel(): Vector3[] | undefined {\n    return this._objRef?.kernel;\n  }\n  @Input()\n  public set noiseTexture(value: DataTexture) {\n    if (this._objRef) {\n      this._objRef.noiseTexture = value;\n    }\n  }\n\n  // @ts-ignore\n  public get noiseTexture(): DataTexture | undefined {\n    return this._objRef?.noiseTexture;\n  }\n  @Input()\n  public set output(value: SSAOPassOUTPUT) {\n    if (this._objRef) {\n      this._objRef.output = value;\n    }\n  }\n\n  // @ts-ignore\n  public get output(): SSAOPassOUTPUT | undefined {\n    return this._objRef?.output;\n  }\n  @Input()\n  public set minDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minDistance(): number | undefined {\n    return this._objRef?.minDistance;\n  }\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxDistance(): number | undefined {\n    return this._objRef?.maxDistance;\n  }\n  @Input()\n  public set beautyRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get beautyRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.beautyRenderTarget;\n  }\n  @Input()\n  public set normalRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.normalRenderTarget;\n  }\n  @Input()\n  public set ssaoRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.ssaoRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get ssaoRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.ssaoRenderTarget;\n  }\n  @Input()\n  public set blurRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blurRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.blurRenderTarget;\n  }\n  @Input()\n  public set ssaoMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.ssaoMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get ssaoMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.ssaoMaterial;\n  }\n  @Input()\n  public set normalMaterial(value: MeshNormalMaterial) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMaterial(): MeshNormalMaterial | undefined {\n    return this._objRef?.normalMaterial;\n  }\n  @Input()\n  public set blurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.blurMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blurMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.blurMaterial;\n  }\n  @Input()\n  public set depthRenderMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.depthRenderMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthRenderMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.depthRenderMaterial;\n  }\n  @Input()\n  public set copyMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.copyMaterial;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n  @Input()\n  public set originalClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue<Color>(this._objRef.originalClearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get originalClearColor(): Color | undefined {\n    return this._objRef?.originalClearColor;\n  }\n\n  public static readonly OUTPUT = SSAOPass.OUTPUT;\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  Material,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  Scene,\n  ShaderMaterial,\n  WebGLRenderer,\n  WebGLRenderTarget\n} from 'three';\nimport { ReflectorForSSRPass } from 'three/examples/jsm/objects/ReflectorForSSRPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { SSRPass, SSRPassParams } from 'three/examples/jsm/postprocessing/SSRPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sSRPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSRPass) }]\n})\nexport class ThSSRPass<T extends SSRPass = SSRPass, TARGS = /* params */ SSRPassParams> extends ThPass<T, TARGS> {\n  public getType(): Type<SSRPass> {\n    return SSRPass;\n  }\n\n  @Input()\n  public set width(value: number) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n\n  // @ts-ignore\n  public get width(): number | undefined {\n    return this._objRef?.width;\n  }\n  @Input()\n  public set height(value: number) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n\n  // @ts-ignore\n  public get height(): number | undefined {\n    return this._objRef?.height;\n  }\n  @Input()\n  public set clear(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n\n  // @ts-ignore\n  public get clear(): boolean | undefined {\n    return this._objRef?.clear;\n  }\n  @Input()\n  public set renderer(value: WebGLRenderer) {\n    if (this._objRef) {\n      this._objRef.renderer = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderer(): WebGLRenderer | undefined {\n    return this._objRef?.renderer;\n  }\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  // @ts-ignore\n  public get scene(): Scene | undefined {\n    return this._objRef?.scene;\n  }\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  // @ts-ignore\n  public get camera(): Camera | undefined {\n    return this._objRef?.camera;\n  }\n  @Input()\n  public set groundReflector(value: ReflectorForSSRPass | null) {\n    if (this._objRef) {\n      this._objRef.groundReflector = value;\n    }\n  }\n\n  // @ts-ignore\n  public get groundReflector(): (ReflectorForSSRPass | null) | undefined {\n    return this._objRef?.groundReflector;\n  }\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get opacity(): number | undefined {\n    return this._objRef?.opacity;\n  }\n  @Input()\n  public set output(value: number) {\n    if (this._objRef) {\n      this._objRef.output = value;\n    }\n  }\n\n  // @ts-ignore\n  public get output(): number | undefined {\n    return this._objRef?.output;\n  }\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxDistance(): number | undefined {\n    return this._objRef?.maxDistance;\n  }\n  @Input()\n  public set thickness(value: number) {\n    if (this._objRef) {\n      this._objRef.thickness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get thickness(): number | undefined {\n    return this._objRef?.thickness;\n  }\n  @Input()\n  public set tempColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.tempColor = applyValue<Color>(this._objRef.tempColor, value);\n    }\n  }\n  // @ts-ignore\n  public get tempColor(): Color | undefined {\n    return this._objRef?.tempColor;\n  }\n  @Input()\n  public set selective(value: boolean) {\n    if (this._objRef) {\n      this._objRef.selective = value;\n    }\n  }\n\n  // @ts-ignore\n  public get selective(): boolean | undefined {\n    return this._objRef?.selective;\n  }\n  @Input()\n  public set blur(value: boolean) {\n    if (this._objRef) {\n      this._objRef.blur = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blur(): boolean | undefined {\n    return this._objRef?.blur;\n  }\n  @Input()\n  public set thickTolerance(value: number) {\n    if (this._objRef) {\n      this._objRef.thickTolerance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get thickTolerance(): number | undefined {\n    return this._objRef?.thickTolerance;\n  }\n  @Input()\n  public set beautyRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get beautyRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.beautyRenderTarget;\n  }\n  @Input()\n  public set prevRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.prevRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get prevRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.prevRenderTarget;\n  }\n  @Input()\n  public set normalRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.normalRenderTarget;\n  }\n  @Input()\n  public set metalnessRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.metalnessRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get metalnessRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.metalnessRenderTarget;\n  }\n  @Input()\n  public set ssrRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.ssrRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get ssrRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.ssrRenderTarget;\n  }\n  @Input()\n  public set blurRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blurRenderTarget(): WebGLRenderTarget | undefined {\n    return this._objRef?.blurRenderTarget;\n  }\n  @Input()\n  public set blurRenderTarget2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget2 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blurRenderTarget2(): WebGLRenderTarget | undefined {\n    return this._objRef?.blurRenderTarget2;\n  }\n  @Input()\n  public set ssrMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.ssrMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get ssrMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.ssrMaterial;\n  }\n  @Input()\n  public set normalMaterial(value: MeshNormalMaterial) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normalMaterial(): MeshNormalMaterial | undefined {\n    return this._objRef?.normalMaterial;\n  }\n  @Input()\n  public set metalnessOnMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.metalnessOnMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get metalnessOnMaterial(): MeshBasicMaterial | undefined {\n    return this._objRef?.metalnessOnMaterial;\n  }\n  @Input()\n  public set metalnessOffMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.metalnessOffMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get metalnessOffMaterial(): MeshBasicMaterial | undefined {\n    return this._objRef?.metalnessOffMaterial;\n  }\n  @Input()\n  public set blurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.blurMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blurMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.blurMaterial;\n  }\n  @Input()\n  public set blurMaterial2(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.blurMaterial2 = value;\n    }\n  }\n\n  // @ts-ignore\n  public get blurMaterial2(): ShaderMaterial | undefined {\n    return this._objRef?.blurMaterial2;\n  }\n  @Input()\n  public set depthRenderMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.depthRenderMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get depthRenderMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.depthRenderMaterial;\n  }\n  @Input()\n  public set copyMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.copyMaterial;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n  @Input()\n  public set originalClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue<Color>(this._objRef.originalClearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get originalClearColor(): Color | undefined {\n    return this._objRef?.originalClearColor;\n  }\n\n  public static readonly OUTPUT = SSRPass.OUTPUT;\n\n  @Input()\n  public set dispose(value: () => void) {\n    if (this._objRef) {\n      this._objRef.dispose = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dispose(): (() => void) | undefined {\n    return this._objRef?.dispose;\n  }\n  @Input()\n  public set renderPass(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderPass = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderPass():\n    | ((\n        renderer: WebGLRenderer,\n        passMaterial: Material,\n        renderTarget: WebGLRenderTarget,\n        clearColor: ColorRepresentation,\n        clearAlpha: ColorRepresentation\n      ) => void)\n    | undefined {\n    return this._objRef?.renderPass;\n  }\n  @Input()\n  public set renderOverride(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderOverride = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderOverride():\n    | ((\n        renderer: WebGLRenderer,\n        passMaterial: Material,\n        renderTarget: WebGLRenderTarget,\n        clearColor: ColorRepresentation,\n        clearAlpha: ColorRepresentation\n      ) => void)\n    | undefined {\n    return this._objRef?.renderOverride;\n  }\n  @Input()\n  public set renderMetalness(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderMetalness = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderMetalness():\n    | ((\n        renderer: WebGLRenderer,\n        passMaterial: Material,\n        renderTarget: WebGLRenderTarget,\n        clearColor: ColorRepresentation,\n        clearAlpha: ColorRepresentation\n      ) => void)\n    | undefined {\n    return this._objRef?.renderMetalness;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { PerspectiveCamera, StereoCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-stereoCamera',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThStereoCamera) },\n    { provide: ThCamera, useExisting: forwardRef(() => ThStereoCamera) }\n  ]\n})\nexport class ThStereoCamera<T extends StereoCamera = StereoCamera, TARGS = []> extends ThCamera<T, TARGS> {\n  public getType(): Type<StereoCamera> {\n    return StereoCamera;\n  }\n\n  @Input()\n  public set type(value: 'StereoCamera') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  // @ts-ignore\n  public get type(): 'StereoCamera' | undefined {\n    return this._objRef?.type;\n  }\n  @Input()\n  public set aspect(value: number) {\n    if (this._objRef) {\n      this._objRef.aspect = value;\n    }\n  }\n\n  // @ts-ignore\n  public get aspect(): number | undefined {\n    return this._objRef?.aspect;\n  }\n  @Input()\n  public set eyeSep(value: number) {\n    if (this._objRef) {\n      this._objRef.eyeSep = value;\n    }\n  }\n\n  // @ts-ignore\n  public get eyeSep(): number | undefined {\n    return this._objRef?.eyeSep;\n  }\n  @Input()\n  public set cameraL(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.cameraL = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cameraL(): PerspectiveCamera | undefined {\n    return this._objRef?.cameraL;\n  }\n  @Input()\n  public set cameraR(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.cameraR = value;\n    }\n  }\n\n  // @ts-ignore\n  public get cameraR(): PerspectiveCamera | undefined {\n    return this._objRef?.cameraR;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, ColorRepresentation, Scene } from 'three';\nimport { TAARenderPass } from 'three/examples/jsm/postprocessing/TAARenderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThSSAARenderPass } from './ThSSAARenderPass';\n\n@Component({\n  selector: 'th-tAARenderPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThTAARenderPass) }]\n})\nexport class ThTAARenderPass<\n  T extends TAARenderPass = TAARenderPass,\n  TARGS = [scene: Scene, camera: Camera, clearColor: ColorRepresentation, clearAlpha: number]\n> extends ThSSAARenderPass<T, TARGS> {\n  public getType(): Type<TAARenderPass> {\n    return TAARenderPass;\n  }\n\n  @Input()\n  public set accumulate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.accumulate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get accumulate(): boolean | undefined {\n    return this._objRef?.accumulate;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { TeapotGeometry } from 'three/examples/jsm/geometries/TeapotGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-teapotGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTeapotGeometry)\n    }\n  ]\n})\nexport class ThTeapotGeometry<\n  T extends TeapotGeometry = TeapotGeometry,\n  TARGS = [\n    size?: number,\n    segments?: number,\n    bottom?: boolean,\n    lid?: boolean,\n    body?: boolean,\n    fitLid?: boolean,\n    blinn?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TeapotGeometry> {\n    return TeapotGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { TetrahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-tetrahedronGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTetrahedronGeometry)\n    }\n  ]\n})\nexport class ThTetrahedronGeometry<\n  T extends TetrahedronGeometry = TetrahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<TetrahedronGeometry> {\n    return TetrahedronGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'TetrahedronGeometry') | undefined {\n    return this._objRef?.type;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { Shape } from 'three';\nimport { TextGeometry, TextGeometryParameters } from 'three/examples/jsm/geometries/TextGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThExtrudeGeometry } from './ThExtrudeGeometry';\n\n@Component({\n  selector: 'th-textGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTextGeometry)\n    }\n  ]\n})\nexport class ThTextGeometry<\n  T extends TextGeometry = TextGeometry,\n  TARGS = [text: string, parameters?: TextGeometryParameters]\n> extends ThExtrudeGeometry<T, TARGS> {\n  public getType(): Type<TextGeometry> {\n    return TextGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'TextGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly shapes: Shape | Shape[];\n        readonly options: TextGeometryParameters;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { ShaderMaterial, Texture } from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { TexturePass } from 'three/examples/jsm/postprocessing/TexturePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-texturePass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThTexturePass) }]\n})\nexport class ThTexturePass<\n  T extends TexturePass = TexturePass,\n  TARGS = [map: Texture, opacity?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<TexturePass> {\n    return TexturePass;\n  }\n\n  @Input()\n  public set map(value: Texture) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  // @ts-ignore\n  public get map(): Texture | undefined {\n    return this._objRef?.map;\n  }\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  // @ts-ignore\n  public get opacity(): number | undefined {\n    return this._objRef?.opacity;\n  }\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  // @ts-ignore\n  public get uniforms(): { [name: string]: { value: any } } | undefined {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  // @ts-ignore\n  public get material(): ShaderMaterial | undefined {\n    return this._objRef?.material;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { TorusGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-torusGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTorusGeometry)\n    }\n  ]\n})\nexport class ThTorusGeometry<\n  T extends TorusGeometry = TorusGeometry,\n  TARGS = [radius?: number, tube?: number, radialSegments?: number, tubularSegments?: number, arc?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TorusGeometry> {\n    return TorusGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'TorusGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly radius: number;\n        readonly tube: number;\n        readonly radialSegments: number;\n        readonly tubularSegments: number;\n        readonly arc: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { TorusKnotGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-torusKnotGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTorusKnotGeometry)\n    }\n  ]\n})\nexport class ThTorusKnotGeometry<\n  T extends TorusKnotGeometry = TorusKnotGeometry,\n  TARGS = [radius?: number, tube?: number, tubularSegments?: number, radialSegments?: number, p?: number, q?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TorusKnotGeometry> {\n    return TorusKnotGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'TorusKnotGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly radius: number;\n        readonly tube: number;\n        readonly tubularSegments: number;\n        readonly radialSegments: number;\n        readonly p: number;\n        readonly q: number;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Camera, MOUSE, Vector3 } from 'three';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-trackballControls',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThTrackballControls)\n    }\n  ]\n})\nexport class ThTrackballControls<\n  T extends TrackballControls = TrackballControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<TrackballControls> {\n    return TrackballControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  // @ts-ignore\n  public get object(): Camera | undefined {\n    return this._objRef?.object;\n  }\n  @Input()\n  public set domElement(value: HTMLElement) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  // @ts-ignore\n  public get domElement(): HTMLElement | undefined {\n    return this._objRef?.domElement;\n  }\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  // @ts-ignore\n  public get enabled(): boolean | undefined {\n    return this._objRef?.enabled;\n  }\n  @Input()\n  public set screen(value: { left: number; top: number; width: number; height: number }) {\n    if (this._objRef) {\n      this._objRef.screen = value;\n    }\n  }\n\n  // @ts-ignore\n  public get screen(): { left: number; top: number; width: number; height: number } | undefined {\n    return this._objRef?.screen;\n  }\n  @Input()\n  public set rotateSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.rotateSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get rotateSpeed(): number | undefined {\n    return this._objRef?.rotateSpeed;\n  }\n  @Input()\n  public set zoomSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.zoomSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get zoomSpeed(): number | undefined {\n    return this._objRef?.zoomSpeed;\n  }\n  @Input()\n  public set panSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.panSpeed = value;\n    }\n  }\n\n  // @ts-ignore\n  public get panSpeed(): number | undefined {\n    return this._objRef?.panSpeed;\n  }\n  @Input()\n  public set noRotate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noRotate = value;\n    }\n  }\n\n  // @ts-ignore\n  public get noRotate(): boolean | undefined {\n    return this._objRef?.noRotate;\n  }\n  @Input()\n  public set noZoom(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get noZoom(): boolean | undefined {\n    return this._objRef?.noZoom;\n  }\n  @Input()\n  public set noPan(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noPan = value;\n    }\n  }\n\n  // @ts-ignore\n  public get noPan(): boolean | undefined {\n    return this._objRef?.noPan;\n  }\n  @Input()\n  public set noRoll(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noRoll = value;\n    }\n  }\n\n  // @ts-ignore\n  public get noRoll(): boolean | undefined {\n    return this._objRef?.noRoll;\n  }\n  @Input()\n  public set staticMoving(value: boolean) {\n    if (this._objRef) {\n      this._objRef.staticMoving = value;\n    }\n  }\n\n  // @ts-ignore\n  public get staticMoving(): boolean | undefined {\n    return this._objRef?.staticMoving;\n  }\n  @Input()\n  public set dynamicDampingFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.dynamicDampingFactor = value;\n    }\n  }\n\n  // @ts-ignore\n  public get dynamicDampingFactor(): number | undefined {\n    return this._objRef?.dynamicDampingFactor;\n  }\n  @Input()\n  public set minDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minDistance(): number | undefined {\n    return this._objRef?.minDistance;\n  }\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxDistance(): number | undefined {\n    return this._objRef?.maxDistance;\n  }\n  @Input()\n  public set minZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.minZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minZoom(): number | undefined {\n    return this._objRef?.minZoom;\n  }\n  @Input()\n  public set maxZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.maxZoom = value;\n    }\n  }\n\n  // @ts-ignore\n  public get maxZoom(): number | undefined {\n    return this._objRef?.maxZoom;\n  }\n  @Input()\n  public set keys(value: string[]) {\n    if (this._objRef) {\n      this._objRef.keys = value;\n    }\n  }\n\n  // @ts-ignore\n  public get keys(): string[] | undefined {\n    return this._objRef?.keys;\n  }\n  @Input()\n  public set mouseButtons(value: { LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE }) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n\n  // @ts-ignore\n  public get mouseButtons(): { LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE } | undefined {\n    return this._objRef?.mouseButtons;\n  }\n  @Input()\n  public set target(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target = applyValue<Vector3>(this._objRef.target, value);\n    }\n  }\n  // @ts-ignore\n  public get target(): Vector3 | undefined {\n    return this._objRef?.target;\n  }\n  @Input()\n  public set position0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.position0 = applyValue<Vector3>(this._objRef.position0, value);\n    }\n  }\n  // @ts-ignore\n  public get position0(): Vector3 | undefined {\n    return this._objRef?.position0;\n  }\n  @Input()\n  public set target0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target0 = applyValue<Vector3>(this._objRef.target0, value);\n    }\n  }\n  // @ts-ignore\n  public get target0(): Vector3 | undefined {\n    return this._objRef?.target0;\n  }\n  @Input()\n  public set up0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.up0 = applyValue<Vector3>(this._objRef.up0, value);\n    }\n  }\n  // @ts-ignore\n  public get up0(): Vector3 | undefined {\n    return this._objRef?.up0;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport { Curve, TubeGeometry, Vector3 } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-tubeGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTubeGeometry)\n    }\n  ]\n})\nexport class ThTubeGeometry<\n  T extends TubeGeometry = TubeGeometry,\n  TARGS = [path?: Curve<Vector3>, tubularSegments?: number, radius?: number, radialSegments?: number, closed?: boolean]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TubeGeometry> {\n    return TubeGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'TubeGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly path: Curve<Vector3>;\n        readonly tubularSegments: number;\n        readonly radius: number;\n        readonly radialSegments: number;\n        readonly closed: boolean;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n  @Input()\n  public set tangents(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.tangents = value;\n    }\n  }\n\n  // @ts-ignore\n  public get tangents(): Vector3[] | undefined {\n    return this._objRef?.tangents;\n  }\n  @Input()\n  public set normals(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.normals = value;\n    }\n  }\n\n  // @ts-ignore\n  public get normals(): Vector3[] | undefined {\n    return this._objRef?.normals;\n  }\n  @Input()\n  public set binormals(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.binormals = value;\n    }\n  }\n\n  // @ts-ignore\n  public get binormals(): Vector3[] | undefined {\n    return this._objRef?.binormals;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshBasicMaterial,\n  ShaderMaterial,\n  Vector2,\n  Vector3,\n  WebGLRenderTarget\n} from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-unrealBloomPass',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThUnrealBloomPass) }]\n})\nexport class ThUnrealBloomPass<\n  T extends UnrealBloomPass = UnrealBloomPass,\n  TARGS = [resolution: Vector2, strength: number, radius: number, threshold: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<UnrealBloomPass> {\n    return UnrealBloomPass;\n  }\n\n  @Input()\n  public set resolution(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue<Vector2>(this._objRef.resolution, value);\n    }\n  }\n  // @ts-ignore\n  public get resolution(): Vector2 | undefined {\n    return this._objRef?.resolution;\n  }\n  @Input()\n  public set strength(value: number) {\n    if (this._objRef) {\n      this._objRef.strength = value;\n    }\n  }\n\n  // @ts-ignore\n  public get strength(): number | undefined {\n    return this._objRef?.strength;\n  }\n  @Input()\n  public set radius(value: number) {\n    if (this._objRef) {\n      this._objRef.radius = value;\n    }\n  }\n\n  // @ts-ignore\n  public get radius(): number | undefined {\n    return this._objRef?.radius;\n  }\n  @Input()\n  public set threshold(value: number) {\n    if (this._objRef) {\n      this._objRef.threshold = value;\n    }\n  }\n\n  // @ts-ignore\n  public get threshold(): number | undefined {\n    return this._objRef?.threshold;\n  }\n  @Input()\n  public set clearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.clearColor = applyValue<Color>(this._objRef.clearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get clearColor(): Color | undefined {\n    return this._objRef?.clearColor;\n  }\n  @Input()\n  public set renderTargetsHorizontal(value: WebGLRenderTarget[]) {\n    if (this._objRef) {\n      this._objRef.renderTargetsHorizontal = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetsHorizontal(): WebGLRenderTarget[] | undefined {\n    return this._objRef?.renderTargetsHorizontal;\n  }\n  @Input()\n  public set renderTargetsVertical(value: WebGLRenderTarget[]) {\n    if (this._objRef) {\n      this._objRef.renderTargetsVertical = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetsVertical(): WebGLRenderTarget[] | undefined {\n    return this._objRef?.renderTargetsVertical;\n  }\n  @Input()\n  public set nMips(value: number) {\n    if (this._objRef) {\n      this._objRef.nMips = value;\n    }\n  }\n\n  // @ts-ignore\n  public get nMips(): number | undefined {\n    return this._objRef?.nMips;\n  }\n  @Input()\n  public set renderTargetBright(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetBright = value;\n    }\n  }\n\n  // @ts-ignore\n  public get renderTargetBright(): WebGLRenderTarget | undefined {\n    return this._objRef?.renderTargetBright;\n  }\n  @Input()\n  public set highPassUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.highPassUniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get highPassUniforms(): object | undefined {\n    return this._objRef?.highPassUniforms;\n  }\n  @Input()\n  public set materialHighPassFilter(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialHighPassFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialHighPassFilter(): ShaderMaterial | undefined {\n    return this._objRef?.materialHighPassFilter;\n  }\n  @Input()\n  public set separableBlurMaterials(value: ShaderMaterial[]) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterials = value;\n    }\n  }\n\n  // @ts-ignore\n  public get separableBlurMaterials(): ShaderMaterial[] | undefined {\n    return this._objRef?.separableBlurMaterials;\n  }\n  @Input()\n  public set compositeMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.compositeMaterial = value;\n    }\n  }\n\n  // @ts-ignore\n  public get compositeMaterial(): ShaderMaterial | undefined {\n    return this._objRef?.compositeMaterial;\n  }\n  @Input()\n  public set bloomTintColors(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.bloomTintColors = value;\n    }\n  }\n\n  // @ts-ignore\n  public get bloomTintColors(): Vector3[] | undefined {\n    return this._objRef?.bloomTintColors;\n  }\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  // @ts-ignore\n  public get copyUniforms(): object | undefined {\n    return this._objRef?.copyUniforms;\n  }\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  // @ts-ignore\n  public get materialCopy(): ShaderMaterial | undefined {\n    return this._objRef?.materialCopy;\n  }\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  public get oldClearColor(): Color | undefined {\n    return this._objRef?.oldClearColor;\n  }\n  @Input()\n  public set oldClearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n\n  // @ts-ignore\n  public get oldClearAlpha(): number | undefined {\n    return this._objRef?.oldClearAlpha;\n  }\n  @Input()\n  public set basic(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.basic = value;\n    }\n  }\n\n  // @ts-ignore\n  public get basic(): MeshBasicMaterial | undefined {\n    return this._objRef?.basic;\n  }\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  // @ts-ignore\n  public get fsQuad(): FullScreenQuad | undefined {\n    return this._objRef?.fsQuad;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Input, Type } from '@angular/core';\nimport {\n  MagnificationTextureFilter,\n  Mapping,\n  MinificationTextureFilter,\n  PixelFormat,\n  TextureDataType,\n  VideoTexture,\n  Wrapping\n} from 'three';\nimport { ThTextureBase } from '../ThTextureBase';\nimport { ThTexture } from './ThTexture';\n\n@Component({\n  selector: 'th-videoTexture',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThVideoTexture) }]\n})\nexport class ThVideoTexture<\n  T extends VideoTexture = VideoTexture,\n  TARGS = [\n    video: HTMLVideoElement,\n    mapping?: Mapping,\n    wrapS?: Wrapping,\n    wrapT?: Wrapping,\n    magFilter?: MagnificationTextureFilter,\n    minFilter?: MinificationTextureFilter,\n    format?: PixelFormat,\n    type?: TextureDataType,\n    anisotropy?: number\n  ]\n> extends ThTexture<T, TARGS> {\n  public getType(): Type<VideoTexture> {\n    return VideoTexture;\n  }\n\n  // @ts-ignore\n  public get isVideoTexture(): true | undefined {\n    return this._objRef?.isVideoTexture;\n  }\n  @Input()\n  public set magFilter(value: MagnificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get magFilter(): MagnificationTextureFilter | undefined {\n    return this._objRef?.magFilter;\n  }\n  @Input()\n  public set minFilter(value: MinificationTextureFilter) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n\n  // @ts-ignore\n  public get minFilter(): MinificationTextureFilter | undefined {\n    return this._objRef?.minFilter;\n  }\n  @Input()\n  public set generateMipmaps(value: boolean) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n\n  // @ts-ignore\n  public get generateMipmaps(): boolean | undefined {\n    return this._objRef?.generateMipmaps;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, forwardRef, Type } from '@angular/core';\nimport { BufferGeometry, WireframeGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-wireframeGeometry',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThWireframeGeometry)\n    }\n  ]\n})\nexport class ThWireframeGeometry<\n  TBufferGeometry extends BufferGeometry = BufferGeometry,\n  T extends WireframeGeometry<TBufferGeometry> = WireframeGeometry<TBufferGeometry>,\n  TARGS = /* geometry? */ TBufferGeometry\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<WireframeGeometry<TBufferGeometry>> {\n    return WireframeGeometry;\n  }\n\n  // @ts-ignore\n  public get type(): (string | 'WireframeGeometry') | undefined {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  public get parameters():\n    | {\n        readonly geometry: TBufferGeometry;\n      }\n    | undefined {\n    return this._objRef?.parameters;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ThEffectComposer } from './overrides/ThEffectComposer';\nimport { ThRenderPass } from './overrides/ThRenderPass';\nimport { ThTransformControls } from './overrides/ThTransformControls';\nimport { ThAdaptiveToneMappingPass } from './ThAdaptiveToneMappingPass';\nimport { ThAfterimagePass } from './ThAfterimagePass';\nimport { ThAmbientLight } from './ThAmbientLight';\nimport { ThAmbientLightProbe } from './ThAmbientLightProbe';\nimport { ThArcballControls } from './ThArcballControls';\nimport { ThArrayCamera } from './ThArrayCamera';\nimport { ThArrowHelper } from './ThArrowHelper';\nimport { ThAudio } from './ThAudio';\nimport { ThAudioListener } from './ThAudioListener';\nimport { ThAxesHelper } from './ThAxesHelper';\nimport { ThBloomPass } from './ThBloomPass';\nimport { ThBokehPass } from './ThBokehPass';\nimport { ThBone } from './ThBone';\nimport { ThBox3Helper } from './ThBox3Helper';\nimport { ThBoxGeometry } from './ThBoxGeometry';\nimport { ThBoxHelper } from './ThBoxHelper';\nimport { ThBoxLineGeometry } from './ThBoxLineGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThCameraHelper } from './ThCameraHelper';\nimport { ThCanvasTexture } from './ThCanvasTexture';\nimport { ThCapsuleGeometry } from './ThCapsuleGeometry';\nimport { ThCircleGeometry } from './ThCircleGeometry';\nimport { ThClearMaskPass } from './ThClearMaskPass';\nimport { ThClearPass } from './ThClearPass';\nimport { ThCompressedArrayTexture } from './ThCompressedArrayTexture';\nimport { ThCompressedTexture } from './ThCompressedTexture';\nimport { ThConeGeometry } from './ThConeGeometry';\nimport { ThConvexGeometry } from './ThConvexGeometry';\nimport { ThCubeCamera } from './ThCubeCamera';\nimport { ThCubeTexture } from './ThCubeTexture';\nimport { ThCubeTexturePass } from './ThCubeTexturePass';\nimport { ThCylinderGeometry } from './ThCylinderGeometry';\nimport { ThData3DTexture } from './ThData3DTexture';\nimport { ThDataArrayTexture } from './ThDataArrayTexture';\nimport { ThDataTexture } from './ThDataTexture';\nimport { ThDecalGeometry } from './ThDecalGeometry';\nimport { ThDepthTexture } from './ThDepthTexture';\nimport { ThDirectionalLight } from './ThDirectionalLight';\nimport { ThDirectionalLightHelper } from './ThDirectionalLightHelper';\nimport { ThDodecahedronGeometry } from './ThDodecahedronGeometry';\nimport { ThDotScreenPass } from './ThDotScreenPass';\nimport { ThDragControls } from './ThDragControls';\nimport { ThEdgesGeometry } from './ThEdgesGeometry';\nimport { ThEffectComposerGen } from './ThEffectComposerGen';\nimport { ThExtrudeGeometry } from './ThExtrudeGeometry';\nimport { ThFilmPass } from './ThFilmPass';\nimport { ThFirstPersonControls } from './ThFirstPersonControls';\nimport { ThFlyControls } from './ThFlyControls';\nimport { ThFramebufferTexture } from './ThFramebufferTexture';\nimport { ThGlitchPass } from './ThGlitchPass';\nimport { ThGridHelper } from './ThGridHelper';\nimport { ThGroup } from './ThGroup';\nimport { ThHalftonePass } from './ThHalftonePass';\nimport { ThHemisphereLight } from './ThHemisphereLight';\nimport { ThHemisphereLightHelper } from './ThHemisphereLightHelper';\nimport { ThHemisphereLightProbe } from './ThHemisphereLightProbe';\nimport { ThIcosahedronGeometry } from './ThIcosahedronGeometry';\nimport { ThInstancedBufferGeometry } from './ThInstancedBufferGeometry';\nimport { ThInstancedMesh } from './ThInstancedMesh';\nimport { ThLatheGeometry } from './ThLatheGeometry';\nimport { ThLightningStrike } from './ThLightningStrike';\nimport { ThLightProbe } from './ThLightProbe';\nimport { ThLine } from './ThLine';\nimport { ThLineBasicMaterial } from './ThLineBasicMaterial';\nimport { ThLineDashedMaterial } from './ThLineDashedMaterial';\nimport { ThLineLoop } from './ThLineLoop';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThLOD } from './ThLOD';\nimport { ThLUTPass } from './ThLUTPass';\nimport { ThMapControls } from './ThMapControls';\nimport { ThMaskPass } from './ThMaskPass';\nimport { ThMaterial } from './ThMaterial';\nimport { ThMesh } from './ThMesh';\nimport { ThMeshBasicMaterial } from './ThMeshBasicMaterial';\nimport { ThMeshDepthMaterial } from './ThMeshDepthMaterial';\nimport { ThMeshDistanceMaterial } from './ThMeshDistanceMaterial';\nimport { ThMeshLambertMaterial } from './ThMeshLambertMaterial';\nimport { ThMeshMatcapMaterial } from './ThMeshMatcapMaterial';\nimport { ThMeshNormalMaterial } from './ThMeshNormalMaterial';\nimport { ThMeshPhongMaterial } from './ThMeshPhongMaterial';\nimport { ThMeshPhysicalMaterial } from './ThMeshPhysicalMaterial';\nimport { ThMeshStandardMaterial } from './ThMeshStandardMaterial';\nimport { ThMeshToonMaterial } from './ThMeshToonMaterial';\nimport { ThObject3D } from './ThObject3D';\nimport { ThOctahedronGeometry } from './ThOctahedronGeometry';\nimport { ThOrbitControls } from './ThOrbitControls';\nimport { ThOrthographicCamera } from './ThOrthographicCamera';\nimport { ThOutlinePass } from './ThOutlinePass';\nimport { ThParametricGeometry } from './ThParametricGeometry';\nimport { ThPass } from './ThPass';\nimport { ThPerspectiveCamera } from './ThPerspectiveCamera';\nimport { ThPlaneGeometry } from './ThPlaneGeometry';\nimport { ThPlaneHelper } from './ThPlaneHelper';\nimport { ThPointerLockControls } from './ThPointerLockControls';\nimport { ThPointLight } from './ThPointLight';\nimport { ThPointLightHelper } from './ThPointLightHelper';\nimport { ThPoints } from './ThPoints';\nimport { ThPointsMaterial } from './ThPointsMaterial';\nimport { ThPolarGridHelper } from './ThPolarGridHelper';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\nimport { ThPositionalAudio } from './ThPositionalAudio';\nimport { ThRawShaderMaterial } from './ThRawShaderMaterial';\nimport { ThRectAreaLight } from './ThRectAreaLight';\nimport { ThRenderPassGen } from './ThRenderPassGen';\nimport { ThRingGeometry } from './ThRingGeometry';\nimport { ThRoundedBoxGeometry } from './ThRoundedBoxGeometry';\nimport { ThSAOPass } from './ThSAOPass';\nimport { ThSavePass } from './ThSavePass';\nimport { ThScene } from './ThScene';\nimport { ThShaderMaterial } from './ThShaderMaterial';\nimport { ThShaderPass } from './ThShaderPass';\nimport { ThShadowMaterial } from './ThShadowMaterial';\nimport { ThShapeGeometry } from './ThShapeGeometry';\nimport { ThSkeletonHelper } from './ThSkeletonHelper';\nimport { ThSkinnedMesh } from './ThSkinnedMesh';\nimport { ThSMAAPass } from './ThSMAAPass';\nimport { ThSphereGeometry } from './ThSphereGeometry';\nimport { ThSpotLight } from './ThSpotLight';\nimport { ThSpotLightHelper } from './ThSpotLightHelper';\nimport { ThSprite } from './ThSprite';\nimport { ThSpriteMaterial } from './ThSpriteMaterial';\nimport { ThSSAARenderPass } from './ThSSAARenderPass';\nimport { ThSSAOPass } from './ThSSAOPass';\nimport { ThSSRPass } from './ThSSRPass';\nimport { ThStereoCamera } from './ThStereoCamera';\nimport { ThTAARenderPass } from './ThTAARenderPass';\nimport { ThTeapotGeometry } from './ThTeapotGeometry';\nimport { ThTetrahedronGeometry } from './ThTetrahedronGeometry';\nimport { ThTextGeometry } from './ThTextGeometry';\nimport { ThTexture } from './ThTexture';\nimport { ThTexturePass } from './ThTexturePass';\nimport { ThTorusGeometry } from './ThTorusGeometry';\nimport { ThTorusKnotGeometry } from './ThTorusKnotGeometry';\nimport { ThTrackballControls } from './ThTrackballControls';\nimport { ThTransformControlsGen } from './ThTransformControlsGen';\nimport { ThTubeGeometry } from './ThTubeGeometry';\nimport { ThUnrealBloomPass } from './ThUnrealBloomPass';\nimport { ThVideoTexture } from './ThVideoTexture';\nimport { ThWireframeGeometry } from './ThWireframeGeometry';\n\n@NgModule({\n  declarations: [\n    ThTransformControlsGen,\n    ThTransformControls,\n    ThArcballControls,\n    ThDragControls,\n    ThFirstPersonControls,\n    ThFlyControls,\n    ThOrbitControls,\n    ThMapControls,\n    ThPointerLockControls,\n    ThTrackballControls,\n    ThAudioListener,\n    ThPositionalAudio,\n    ThAudio,\n    ThStereoCamera,\n    ThPerspectiveCamera,\n    ThOrthographicCamera,\n    ThCubeCamera,\n    ThArrayCamera,\n    ThObject3D,\n    ThSpotLightHelper,\n    ThSkeletonHelper,\n    ThPointLightHelper,\n    ThHemisphereLightHelper,\n    ThGridHelper,\n    ThPolarGridHelper,\n    ThDirectionalLightHelper,\n    ThCameraHelper,\n    ThBoxHelper,\n    ThBox3Helper,\n    ThPlaneHelper,\n    ThArrowHelper,\n    ThAxesHelper,\n    ThSpotLight,\n    ThPointLight,\n    ThRectAreaLight,\n    ThHemisphereLight,\n    ThDirectionalLight,\n    ThAmbientLight,\n    ThAmbientLightProbe,\n    ThHemisphereLightProbe,\n    ThLightProbe,\n    ThSprite,\n    ThLOD,\n    ThInstancedMesh,\n    ThSkinnedMesh,\n    ThBone,\n    ThMesh,\n    ThLineSegments,\n    ThLineLoop,\n    ThLine,\n    ThPoints,\n    ThGroup,\n    ThScene,\n    ThShadowMaterial,\n    ThSpriteMaterial,\n    ThRawShaderMaterial,\n    ThShaderMaterial,\n    ThPointsMaterial,\n    ThMeshPhysicalMaterial,\n    ThMeshStandardMaterial,\n    ThMeshPhongMaterial,\n    ThMeshToonMaterial,\n    ThMeshNormalMaterial,\n    ThMeshLambertMaterial,\n    ThMeshDepthMaterial,\n    ThMeshDistanceMaterial,\n    ThMeshBasicMaterial,\n    ThMeshMatcapMaterial,\n    ThLineDashedMaterial,\n    ThLineBasicMaterial,\n    ThMaterial,\n    ThInstancedBufferGeometry,\n    ThBufferGeometry,\n    ThBoxGeometry,\n    ThCapsuleGeometry,\n    ThCircleGeometry,\n    ThConeGeometry,\n    ThCylinderGeometry,\n    ThDodecahedronGeometry,\n    ThEdgesGeometry,\n    ThExtrudeGeometry,\n    ThIcosahedronGeometry,\n    ThLatheGeometry,\n    ThOctahedronGeometry,\n    ThPlaneGeometry,\n    ThPolyhedronGeometry,\n    ThRingGeometry,\n    ThShapeGeometry,\n    ThSphereGeometry,\n    ThTetrahedronGeometry,\n    ThTorusGeometry,\n    ThTorusKnotGeometry,\n    ThTubeGeometry,\n    ThWireframeGeometry,\n    ThBoxLineGeometry,\n    ThConvexGeometry,\n    ThDecalGeometry,\n    ThLightningStrike,\n    ThParametricGeometry,\n    ThRoundedBoxGeometry,\n    ThTeapotGeometry,\n    ThTextGeometry,\n    ThPass,\n    ThEffectComposerGen,\n    ThEffectComposer,\n    ThAdaptiveToneMappingPass,\n    ThAfterimagePass,\n    ThBloomPass,\n    ThBokehPass,\n    ThClearPass,\n    ThCubeTexturePass,\n    ThDotScreenPass,\n    ThFilmPass,\n    ThGlitchPass,\n    ThHalftonePass,\n    ThLUTPass,\n    ThMaskPass,\n    ThClearMaskPass,\n    ThOutlinePass,\n    ThRenderPassGen,\n    ThRenderPass,\n    ThSAOPass,\n    ThSMAAPass,\n    ThSSAARenderPass,\n    ThSSAOPass,\n    ThSSRPass,\n    ThSavePass,\n    ThShaderPass,\n    ThTAARenderPass,\n    ThTexturePass,\n    ThUnrealBloomPass,\n    ThVideoTexture,\n    ThCompressedArrayTexture,\n    ThDataTexture,\n    ThCompressedTexture,\n    ThCubeTexture,\n    ThData3DTexture,\n    ThDataArrayTexture,\n    ThCanvasTexture,\n    ThDepthTexture,\n    ThFramebufferTexture,\n    ThTexture,\n  ],\n  exports: [\n    ThTransformControlsGen,\n    ThTransformControls,\n    ThArcballControls,\n    ThDragControls,\n    ThFirstPersonControls,\n    ThFlyControls,\n    ThOrbitControls,\n    ThMapControls,\n    ThPointerLockControls,\n    ThTrackballControls,\n    ThAudioListener,\n    ThPositionalAudio,\n    ThAudio,\n    ThStereoCamera,\n    ThPerspectiveCamera,\n    ThOrthographicCamera,\n    ThCubeCamera,\n    ThArrayCamera,\n    ThObject3D,\n    ThSpotLightHelper,\n    ThSkeletonHelper,\n    ThPointLightHelper,\n    ThHemisphereLightHelper,\n    ThGridHelper,\n    ThPolarGridHelper,\n    ThDirectionalLightHelper,\n    ThCameraHelper,\n    ThBoxHelper,\n    ThBox3Helper,\n    ThPlaneHelper,\n    ThArrowHelper,\n    ThAxesHelper,\n    ThSpotLight,\n    ThPointLight,\n    ThRectAreaLight,\n    ThHemisphereLight,\n    ThDirectionalLight,\n    ThAmbientLight,\n    ThAmbientLightProbe,\n    ThHemisphereLightProbe,\n    ThLightProbe,\n    ThSprite,\n    ThLOD,\n    ThInstancedMesh,\n    ThSkinnedMesh,\n    ThBone,\n    ThMesh,\n    ThLineSegments,\n    ThLineLoop,\n    ThLine,\n    ThPoints,\n    ThGroup,\n    ThScene,\n    ThShadowMaterial,\n    ThSpriteMaterial,\n    ThRawShaderMaterial,\n    ThShaderMaterial,\n    ThPointsMaterial,\n    ThMeshPhysicalMaterial,\n    ThMeshStandardMaterial,\n    ThMeshPhongMaterial,\n    ThMeshToonMaterial,\n    ThMeshNormalMaterial,\n    ThMeshLambertMaterial,\n    ThMeshDepthMaterial,\n    ThMeshDistanceMaterial,\n    ThMeshBasicMaterial,\n    ThMeshMatcapMaterial,\n    ThLineDashedMaterial,\n    ThLineBasicMaterial,\n    ThMaterial,\n    ThInstancedBufferGeometry,\n    ThBufferGeometry,\n    ThBoxGeometry,\n    ThCapsuleGeometry,\n    ThCircleGeometry,\n    ThConeGeometry,\n    ThCylinderGeometry,\n    ThDodecahedronGeometry,\n    ThEdgesGeometry,\n    ThExtrudeGeometry,\n    ThIcosahedronGeometry,\n    ThLatheGeometry,\n    ThOctahedronGeometry,\n    ThPlaneGeometry,\n    ThPolyhedronGeometry,\n    ThRingGeometry,\n    ThShapeGeometry,\n    ThSphereGeometry,\n    ThTetrahedronGeometry,\n    ThTorusGeometry,\n    ThTorusKnotGeometry,\n    ThTubeGeometry,\n    ThWireframeGeometry,\n    ThBoxLineGeometry,\n    ThConvexGeometry,\n    ThDecalGeometry,\n    ThLightningStrike,\n    ThParametricGeometry,\n    ThRoundedBoxGeometry,\n    ThTeapotGeometry,\n    ThTextGeometry,\n    ThPass,\n    ThEffectComposerGen,\n    ThEffectComposer,\n    ThAdaptiveToneMappingPass,\n    ThAfterimagePass,\n    ThBloomPass,\n    ThBokehPass,\n    ThClearPass,\n    ThCubeTexturePass,\n    ThDotScreenPass,\n    ThFilmPass,\n    ThGlitchPass,\n    ThHalftonePass,\n    ThLUTPass,\n    ThMaskPass,\n    ThClearMaskPass,\n    ThOutlinePass,\n    ThRenderPassGen,\n    ThRenderPass,\n    ThSAOPass,\n    ThSMAAPass,\n    ThSSAARenderPass,\n    ThSSAOPass,\n    ThSSRPass,\n    ThSavePass,\n    ThShaderPass,\n    ThTAARenderPass,\n    ThTexturePass,\n    ThUnrealBloomPass,\n    ThVideoTexture,\n    ThCompressedArrayTexture,\n    ThDataTexture,\n    ThCompressedTexture,\n    ThCubeTexture,\n    ThData3DTexture,\n    ThDataArrayTexture,\n    ThCanvasTexture,\n    ThDepthTexture,\n    ThFramebufferTexture,\n    ThTexture,\n  ],\n})\nexport class NgxThreeGeneratedModule {}\n","import { Type } from '@angular/core';\nimport { Loader } from 'three';\n\nexport abstract class ThLoader<T extends Loader> {\n  public abstract readonly clazz: Type<T>;\n\n  protected crossOrigin?: string;\n  protected withCredentials?: boolean;\n\n  public setCrossOrigin(cors: string) {\n    this.crossOrigin = cors;\n  }\n\n  public setWithCredentials(credentials: boolean) {\n    this.withCredentials = credentials;\n  }\n\n  public createLoaderInstance(): T {\n    const loader = new this.clazz();\n    if (this.crossOrigin) {\n      loader.setCrossOrigin(this.crossOrigin);\n    }\n    if (this.withCredentials !== undefined) {\n      loader.setWithCredentials(this.withCredentials);\n    }\n    return loader;\n  }\n}\n","import { Directive, EventEmitter, Host, Input, NgZone, OnInit, Output, PipeTransform, Type } from '@angular/core';\nimport { Loader } from 'three';\nimport { isObserved } from '../util';\nimport { ThLoader } from './ThLoaderBase';\n\ninterface CallBackLoader extends Loader {\n  load(\n    url: string | string[],\n    onLoad?: (...args: any) => void,\n    onProgress?: (event: ProgressEvent) => void,\n    onError?: (event: ErrorEvent) => void\n  ): any;\n}\n\nexport abstract class ThCallbackLoaderService<T extends CallBackLoader> extends ThLoader<T> {\n  public load(...args: Parameters<T['load']>): ReturnType<T['load']> {\n    const loader = this.createLoaderInstance();\n    return loader.load(...(args as Parameters<CallBackLoader['load']>));\n  }\n}\n\nexport abstract class ThCallbackLoaderBasePipe<T extends CallBackLoader> implements PipeTransform {\n  protected abstract service: ThCallbackLoaderService<T>;\n\n  public transform(...args: Parameters<T['load']>) {\n    return this.service.load(...args);\n  }\n}\n\n@Directive({})\nexport abstract class ThCallbackLoaderBaseDirective<T extends CallBackLoader> implements OnInit {\n  protected abstract service: ThCallbackLoaderService<T>;\n\n  private initialized = false;\n  private _url?: Parameters<T['load']>[0];\n\n  protected onLoaded$?: EventEmitter<ReturnType<T['load']>>;\n  protected onProgress$?: EventEmitter<ProgressEvent>;\n\n  @Input()\n  set url(url: Parameters<T['load']>[0] | undefined) {\n    this._url = url;\n    this.load();\n  }\n\n  get url() {\n    return this._url;\n  }\n\n  @Output() get onLoaded() {\n    if (!this.onLoaded$) {\n      this.onLoaded$ = new EventEmitter();\n    }\n    return this.onLoaded$;\n  }\n\n  @Output() get onProgress() {\n    if (!this.onProgress$) {\n      this.onProgress$ = new EventEmitter();\n    }\n    return this.onProgress$;\n  }\n\n  constructor(@Host() protected host: { objRef: any }, protected zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.initialized = true;\n    this.load();\n    // this.zone.runOutsideAngular(() => );\n  }\n\n  protected async load() {\n    if (!this.initialized) {\n      return;\n    }\n\n    if (this._url === undefined) {\n      throw new Error('missing url');\n    }\n\n    const url = this._url;\n\n    const onProgress = isObserved(this.onProgress$)\n      ? (progress: ProgressEvent<EventTarget>) => {\n          this.onProgress$?.next(progress);\n        }\n      : undefined;\n\n    const onLoad = isObserved(this.onLoaded$)\n      ? (...args: any) => {\n          this.onLoaded$?.next(args[0]);\n        }\n      : undefined;\n\n    this.host.objRef = this.zone.runOutsideAngular(() =>\n      (this.service as ThCallbackLoaderService<CallBackLoader>).load(url, onProgress, onLoad)\n    );\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { DDSLoader } from 'three/examples/jsm/loaders/DDSLoader';\nimport { ThCompressedTexture } from '../../generated/ThCompressedTexture';\nimport { ThTexture } from '../../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DDSLoaderService extends ThCallbackLoaderService<DDSLoader> {\n  public clazz = DDSLoader;\n}\n\n@Pipe({\n  name: 'loadDDSTexture',\n  pure: true\n})\nexport class ThDDSLoaderPipe extends ThCallbackLoaderBasePipe<DDSLoader> implements PipeTransform {\n  constructor(protected service: DDSLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadDDSTexture]'\n})\nexport class ThDDSLoaderDirective extends ThCallbackLoaderBaseDirective<DDSLoader> {\n  constructor(\n    @Host() protected host: ThCompressedTexture,\n    protected zone: NgZone,\n    protected service: DDSLoaderService\n  ) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader';\nimport { ThTexture } from '../../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KTX2LoaderService extends ThCallbackLoaderService<KTX2Loader> {\n  public readonly clazz = KTX2Loader;\n\n  protected transcoderPath = '';\n\n  public setDecoderPath(path: string) {\n    this.transcoderPath = path;\n  }\n\n  public createLoaderInstance(): KTX2Loader {\n    const loader = super.createLoaderInstance();\n    loader.setTranscoderPath(this.transcoderPath);\n    return loader;\n  }\n}\n\n@Pipe({\n  name: 'loadKTX2Texture',\n  pure: true\n})\nexport class ThKTX2LoaderPipe extends ThCallbackLoaderBasePipe<KTX2Loader> implements PipeTransform {\n  constructor(protected service: KTX2LoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadKTX2Texture]'\n})\nexport class ThKTX2LoaderDirective extends ThCallbackLoaderBaseDirective<KTX2Loader> {\n  constructor(@Host() protected host: ThTexture, protected zone: NgZone, protected service: KTX2LoaderService) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { KTXLoader } from 'three/examples/jsm/loaders/KTXLoader';\nimport { ThCompressedTexture } from '../../generated/ThCompressedTexture';\nimport { ThTexture } from '../../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KTXLoaderService extends ThCallbackLoaderService<KTXLoader> {\n  public clazz = KTXLoader;\n}\n\n@Pipe({\n  name: 'loadKTXTexture',\n  pure: true\n})\nexport class ThKTXLoaderPipe extends ThCallbackLoaderBasePipe<KTXLoader> implements PipeTransform {\n  constructor(protected service: KTXLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadKTXTexture]'\n})\nexport class ThKTXLoaderDirective extends ThCallbackLoaderBaseDirective<KTXLoader> {\n  constructor(\n    @Host() protected host: ThCompressedTexture,\n    protected zone: NgZone,\n    protected service: KTXLoaderService\n  ) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { PVRLoader } from 'three/examples/jsm/loaders/PVRLoader';\nimport { ThCompressedTexture } from '../../generated/ThCompressedTexture';\nimport { ThTexture } from '../../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PVRLoaderService extends ThCallbackLoaderService<PVRLoader> {\n  public clazz = PVRLoader;\n}\n\n@Pipe({\n  name: 'loadPVRTexture',\n  pure: true\n})\nexport class ThPVRLoaderPipe extends ThCallbackLoaderBasePipe<PVRLoader> implements PipeTransform {\n  constructor(protected service: PVRLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadPVRTexture]'\n})\nexport class ThPVRLoaderDirective extends ThCallbackLoaderBaseDirective<PVRLoader> {\n  constructor(\n    @Host() protected host: ThCompressedTexture,\n    protected zone: NgZone,\n    protected service: PVRLoaderService\n  ) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader';\nimport { ThDataTexture } from '../../generated/ThDataTexture';\nimport {\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe,\n  ThCallbackLoaderService\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EXRLoaderService extends ThCallbackLoaderService<EXRLoader> {\n  public clazz = EXRLoader;\n}\n\n@Pipe({\n  name: 'loadEXRTexture',\n  pure: true\n})\nexport class ThEXRLoaderPipe extends ThCallbackLoaderBasePipe<EXRLoader> implements PipeTransform {\n  constructor(protected service: EXRLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadEXRTexture]'\n})\nexport class ThEXRLoaderDirective extends ThCallbackLoaderBaseDirective<EXRLoader> {\n  constructor(@Host() protected host: ThDataTexture, protected zone: NgZone, protected service: EXRLoaderService) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { DataTextureLoader } from 'three';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { ThDataTexture } from '../../generated/ThDataTexture';\nimport { ThTexture } from '../../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RGBELoaderService extends ThCallbackLoaderService<RGBELoader> {\n  public clazz = RGBELoader;\n}\n\n@Pipe({\n  name: 'loadRGBETexture',\n  pure: true\n})\nexport class ThRGBELoaderPipe extends ThCallbackLoaderBasePipe<RGBELoader> implements PipeTransform {\n  constructor(protected service: RGBELoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadRGBETexture]'\n})\nexport class ThRGBELoaderDirective extends ThCallbackLoaderBaseDirective<RGBELoader> {\n  constructor(@Host() protected host: ThDataTexture, protected zone: NgZone, protected service: RGBELoaderService) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { RGBMLoader } from 'three/examples/jsm/loaders/RGBMLoader';\nimport { ThDataTexture } from '../../generated/ThDataTexture';\nimport { ThTexture } from '../../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RGBMLoaderService extends ThCallbackLoaderService<RGBMLoader> {\n  public clazz = RGBMLoader;\n}\n\n@Pipe({\n  name: 'loadRGBMTexture',\n  pure: true\n})\nexport class ThRGBMLoaderPipe extends ThCallbackLoaderBasePipe<RGBMLoader> implements PipeTransform {\n  constructor(protected service: RGBMLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadRGBMTexture]'\n})\nexport class ThRGBMLoaderDirective extends ThCallbackLoaderBaseDirective<RGBMLoader> {\n  constructor(@Host() protected host: ThDataTexture, protected zone: NgZone, protected service: RGBMLoaderService) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { DataTextureLoader, Texture } from 'three';\nimport { ThDataTexture } from '../../generated/ThDataTexture';\nimport { TGALoader } from 'three/examples/jsm/loaders/TGALoader';\nimport { ThTexture } from '../../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TGALoaderService extends ThCallbackLoaderService<TGALoader> {\n  public clazz = TGALoader;\n}\n\n@Pipe({\n  name: 'loadTGATexture',\n  pure: true\n})\nexport class ThTGALoaderPipe extends ThCallbackLoaderBasePipe<TGALoader> implements PipeTransform {\n  constructor(protected service: TGALoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadTGATexture]'\n})\nexport class ThTGALoaderDirective extends ThCallbackLoaderBaseDirective<TGALoader> {\n  constructor(@Host() protected host: ThDataTexture, protected zone: NgZone, protected service: TGALoaderService) {\n    super(host, zone);\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { CubeTextureLoader, Texture } from 'three';\nimport { ThTexture } from '../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from './ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CubeTextureLoaderService extends ThCallbackLoaderService<CubeTextureLoader> {\n  public clazz = CubeTextureLoader;\n}\n\n@Pipe({\n  name: 'loadCubeTexture',\n  pure: true\n})\nexport class ThCubeTextureLoaderPipe extends ThCallbackLoaderBasePipe<CubeTextureLoader> implements PipeTransform {\n  constructor(protected service: CubeTextureLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadCubeTexture]'\n})\nexport class ThCubeTextureLoaderDirective extends ThCallbackLoaderBaseDirective<CubeTextureLoader> {\n  constructor(\n    @Host() protected host: ThTexture<Texture>,\n    protected zone: NgZone,\n    protected service: CubeTextureLoaderService\n  ) {\n    super(host, zone);\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n  PipeTransform,\n  Type\n} from '@angular/core';\nimport { Loader } from 'three';\nimport { ThAnimationLoopService } from '../renderer/th-animation-loop.service';\nimport { isObserved } from '../util';\nimport { createLazyObject3DProxy, LazyObject3DProxy } from './LazyObject3dProxy';\nimport { ThLoader } from './ThLoaderBase';\n\ninterface AsyncLoader<T = any> extends Loader {\n  loadAsync(url: string, onProgress?: (event: ProgressEvent) => void): Promise<T>;\n}\ntype Awaited<T> = T extends PromiseLike<infer U> ? U : T;\n\n@Injectable()\nexport abstract class ThAsyncLoaderService<T extends AsyncLoader> extends ThLoader<T> {\n  public load(...args: Parameters<T['loadAsync']>): ReturnType<T['loadAsync']> {\n    const loader = this.createLoaderInstance();\n    return loader.loadAsync(...(args as Parameters<AsyncLoader['loadAsync']>)) as ReturnType<T['loadAsync']>;\n  }\n}\n\nexport abstract class ThAsyncLoaderBasePipe<T extends AsyncLoader> implements PipeTransform {\n  protected abstract service: ThAsyncLoaderService<T>;\n  private animationLoop = inject(ThAnimationLoopService);\n  constructor() {}\n\n  public transform(...args: Parameters<T['loadAsync']>) {\n    return this.service.load(...args).then((response) => {\n      this.animationLoop.requestAnimationFrame();\n      return response;\n    });\n  }\n}\n\n@Directive({})\nexport abstract class ThAsyncLoaderBaseDirective<T extends AsyncLoader> implements OnInit {\n  protected abstract service: ThAsyncLoaderService<T>;\n\n  protected abstract getRefFromResponse(response: Awaited<ReturnType<T['loadAsync']>>): any;\n\n  protected initialized = false;\n  protected _url?: Parameters<T['loadAsync']>[0];\n\n  protected onLoaded$?: EventEmitter<Awaited<ReturnType<T['loadAsync']>>>;\n  protected onProgress$?: EventEmitter<ProgressEvent>;\n  protected proxy: LazyObject3DProxy;\n\n  protected animationLoop = inject(ThAnimationLoopService);\n\n  @Input()\n  set url(url: Parameters<T['loadAsync']>[0] | undefined) {\n    this._url = url;\n    this.load();\n  }\n\n  get url() {\n    return this._url;\n  }\n\n  @Output() get onLoaded() {\n    if (!this.onLoaded$) {\n      this.onLoaded$ = new EventEmitter();\n    }\n    return this.onLoaded$;\n  }\n\n  @Output() get onProgress() {\n    if (!this.onProgress$) {\n      this.onProgress$ = new EventEmitter();\n    }\n    return this.onProgress$;\n  }\n\n  constructor(@Host() protected host: { objRef: any }, protected zone: NgZone) {\n    this.proxy = createLazyObject3DProxy();\n    host.objRef = this.proxy;\n  }\n\n  ngOnInit(): void {\n    this.initialized = true;\n    this.load();\n    // this.zone.runOutsideAngular(() => );\n  }\n\n  protected async load() {\n    if (!this.initialized) {\n      return;\n    }\n\n    if (this._url === undefined) {\n      throw new Error('missing url');\n    }\n\n    if (!this.proxy) {\n      return;\n    }\n\n    const url = this._url;\n\n    const onProgress = isObserved(this.onProgress$)\n      ? (progress: ProgressEvent<EventTarget>) => {\n          this.zone.run(() => {\n            this.onProgress$?.next(progress);\n          });\n        }\n      : undefined;\n\n    const result = await this.zone.runOutsideAngular(() =>\n      (this.service as ThAsyncLoaderService<AsyncLoader>).load(url, onProgress)\n    );\n\n    this.animationLoop.requestAnimationFrame();\n    this.proxy.objRef = this.getRefFromResponse(result);\n    // add the new object to the parent and\n    // emit a loaded event directly on the three.js object and on objRef$\n    this.host.objRef = this.proxy;\n\n    if (this.onLoaded$ && result !== undefined) {\n      this.zone.run(() => this.onLoaded$?.next(result));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport { ThCallbackLoaderService } from '../ThCallbackLoaderBase';\n\nexport interface DRACODecoderConfig {\n  type: 'js' | 'wasm';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DRACOLoaderService extends ThCallbackLoaderService<DRACOLoader> {\n  public readonly clazz = DRACOLoader;\n  protected decoderPath = '';\n  protected decoderConfig?: DRACODecoderConfig;\n  protected workerLimit?: number;\n  protected reuseInstance = true;\n\n  protected instance?: DRACOLoader;\n\n  public setDecoderPath(path: string) {\n    this.decoderPath = path;\n  }\n\n  public setDecoderConfig(config: DRACODecoderConfig) {\n    this.decoderConfig = config;\n  }\n\n  public setWorkerLimit(limit: number) {\n    this.workerLimit = limit;\n  }\n\n  public setReuseInstance(reuse: boolean) {\n    this.reuseInstance = reuse;\n  }\n\n  public createLoaderInstance(): DRACOLoader {\n    if (this.reuseInstance && this.instance) {\n      return this.instance;\n    }\n\n    const loader = super.createLoaderInstance();\n    loader.setDecoderPath(this.decoderPath);\n\n    if (this.decoderConfig) {\n      loader.setDecoderConfig(this.decoderConfig);\n    }\n\n    if (this.workerLimit) {\n      loader.setWorkerLimit(this.workerLimit);\n    }\n\n    if (this.reuseInstance) {\n      this.instance = loader;\n    }\n\n    return loader;\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ThObject3D } from '../generated/ThObject3D';\nimport { DRACOLoaderService } from './compressed-texture/ThDRACOLoader';\nimport { ThAsyncLoaderBaseDirective, ThAsyncLoaderBasePipe, ThAsyncLoaderService } from './ThAsyncLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GLTFLoaderService extends ThAsyncLoaderService<GLTFLoader> {\n  public clazz = GLTFLoader;\n\n  constructor(protected dracoLoaderService: DRACOLoaderService) {\n    super();\n  }\n\n  public createLoaderInstance(): GLTFLoader {\n    const loader = super.createLoaderInstance();\n    loader.setDRACOLoader(this.dracoLoaderService.createLoaderInstance());\n    return loader;\n  }\n}\n\n@Pipe({\n  name: 'loadGLTF',\n  pure: true\n})\nexport class ThGLTFLoaderPipe extends ThAsyncLoaderBasePipe<GLTFLoader> implements PipeTransform {\n  constructor(protected service: GLTFLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadGLTF]'\n})\nexport class ThGLTFLoaderDirective extends ThAsyncLoaderBaseDirective<GLTFLoader> {\n  constructor(@Host() protected host: ThObject3D, protected zone: NgZone, protected service: GLTFLoaderService) {\n    super(host, zone);\n  }\n\n  protected getRefFromResponse(response: GLTF) {\n    return response.scene;\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { Texture, TextureLoader } from 'three';\nimport { ThTexture } from '../generated/ThTexture';\nimport {\n  ThCallbackLoaderService,\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe\n} from './ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextureLoaderService extends ThCallbackLoaderService<TextureLoader> {\n  public clazz = TextureLoader;\n}\n\n@Pipe({\n  name: 'loadTexture',\n  pure: true\n})\nexport class ThTextureLoaderPipe extends ThCallbackLoaderBasePipe<TextureLoader> implements PipeTransform {\n  constructor(protected service: TextureLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadTexture]'\n})\nexport class ThTextureLoaderDirective extends ThCallbackLoaderBaseDirective<TextureLoader> {\n  constructor(\n    @Host() protected host: ThTexture<Texture>,\n    protected zone: NgZone,\n    protected service: TextureLoaderService\n  ) {\n    super(host, zone);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ThWrapperBase } from '../ThWrapperBase';\n\n/**\n * create a clone of any \"cloneable\" three.js class (or from it's ngx-three warpper)\n */\n@Pipe({\n  name: 'clone'\n})\nexport class ClonePipe implements PipeTransform {\n  transform<T extends { clone(): T }>(value?: ThWrapperBase<T, any> | T | null): T | undefined {\n    if (!value) {\n      return;\n    }\n\n    if (value instanceof ThWrapperBase) {\n      return value.objRef?.clone();\n    } else {\n      return value.clone();\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Color, ColorRepresentation } from 'three';\n\n/**\n * constructs a color of it's constructor parameters\n */\n@Pipe({\n  name: 'color',\n  pure: true\n})\nexport class ColorPipe implements PipeTransform {\n  /* ContructorProperties does not support multiple constructors --> */\n  transform(args: ColorRepresentation | [r: number, g: number, b: number]): Color {\n    if (Array.isArray(args)) {\n      return new Color(...args);\n    } else {\n      return new Color(args);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Fog } from 'three';\n\n@Pipe({\n  name: 'fog',\n  pure: true\n})\nexport class FogPipe implements PipeTransform {\n  transform(args: ConstructorParameters<typeof Fog>): Fog {\n    return new Fog(...args);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Vector2, Vector3, Vector4 } from 'three';\n\n/**\n * transform arrays to vectors\n */\n@Pipe({\n  name: 'vector2',\n  pure: true\n})\nexport class Vector2Pipe implements PipeTransform {\n  transform(args: ConstructorParameters<typeof Vector2>): Vector2 {\n    return new Vector2(...args);\n  }\n}\n\n@Pipe({\n  name: 'vector3',\n  pure: true\n})\nexport class Vector3Pipe implements PipeTransform {\n  transform(args: ConstructorParameters<typeof Vector3>): Vector3 {\n    return new Vector3(...args);\n  }\n}\n\n@Pipe({\n  name: 'vector4',\n  pure: true\n})\nexport class Vector4Pipe implements PipeTransform {\n  transform(args: ConstructorParameters<typeof Vector4>): Vector4 {\n    return new Vector4(...args);\n  }\n}\n","import { Directive, Input, Output } from '@angular/core';\nimport { ThEngineService } from '../ThEngine.service';\nimport { ThAnimationLoopService } from './th-animation-loop.service';\n\n@Directive({\n  selector: '[beforeRender], [onResize], [renderOnDemand]'\n})\nexport class ThRenderDirective {\n  constructor(private engineService: ThEngineService, private animationLoopService: ThAnimationLoopService) {}\n\n  @Output()\n  public get beforeRender() {\n    return this.engineService.beforeRender$;\n  }\n\n  @Output()\n  public get onResize() {\n    return this.engineService.resize$;\n  }\n\n  @Input()\n  public set renderOnDemand(onDemand: boolean) {\n    if (onDemand) {\n      this.animationLoopService.stop();\n    } else {\n      this.animationLoopService.start();\n    }\n  }\n\n  public get renderOnDemand() {\n    return !this.animationLoopService.isActive();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ThEngineService } from '../ThEngine.service';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[thStats]'\n})\nexport class StatsDirective implements OnInit, OnDestroy {\n  private stats: Stats;\n  private renderSubscription?: Subscription;\n  constructor(private engineService: ThEngineService) {\n    this.stats = new Stats();\n  }\n  ngOnDestroy(): void {\n    if (this.renderSubscription) {\n      this.renderSubscription.unsubscribe();\n    }\n  }\n  ngOnInit(): void {\n    if (!this.engineService.canvas) {\n      throw new Error('No canvas present');\n    }\n\n    const parentElement = this.engineService.canvas.parentElement;\n    if (parentElement) {\n      parentElement.style.position = 'relative';\n      this.stats.dom.style.position = 'absolute';\n      this.stats.showPanel(0);\n      this.engineService.canvas.parentElement?.appendChild(this.stats.dom);\n      this.renderSubscription = this.engineService.beforeRender$.subscribe(() => {\n        this.stats.update();\n      });\n    }\n  }\n\n  @Input()\n  public set thStats(enabled: boolean) {\n    if (!enabled) {\n      this.stats.dom.style.visibility = 'hidden';\n    } else {\n      this.stats.dom.style.visibility = 'visible';\n    }\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\n\nimport { ThObject3D } from '../generated/ThObject3D';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { ThAsyncLoaderBaseDirective, ThAsyncLoaderBasePipe, ThAsyncLoaderService } from './ThAsyncLoaderBase';\nimport { Group } from 'three';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OBJLoaderService extends ThAsyncLoaderService<OBJLoader> {\n  public clazz = OBJLoader;\n}\n\n@Pipe({\n  name: 'loadObj',\n  pure: true\n})\nexport class ThObjLoaderPipe extends ThAsyncLoaderBasePipe<OBJLoader> implements PipeTransform {\n  constructor(protected service: OBJLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadObj]'\n})\nexport class ThObjLoaderDirective extends ThAsyncLoaderBaseDirective<OBJLoader> {\n  constructor(@Host() protected host: ThObject3D, protected zone: NgZone, protected service: OBJLoaderService) {\n    super(host, zone);\n  }\n\n  protected getRefFromResponse(response: Group) {\n    return response;\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\n\nimport { ThObject3D } from '../generated/ThObject3D';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { ThAsyncLoaderBaseDirective, ThAsyncLoaderBasePipe, ThAsyncLoaderService } from './ThAsyncLoaderBase';\nimport { Group } from 'three';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FBXLoaderService extends ThAsyncLoaderService<FBXLoader> {\n  public clazz = FBXLoader;\n}\n\n@Pipe({\n  name: 'loadFBX',\n  pure: true\n})\nexport class ThFBXLoaderPipe extends ThAsyncLoaderBasePipe<FBXLoader> implements PipeTransform {\n  constructor(protected service: FBXLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadFBX]'\n})\nexport class ThFBXLoaderDirective extends ThAsyncLoaderBaseDirective<FBXLoader> {\n  constructor(@Host() protected host: ThObject3D, protected zone: NgZone, protected service: FBXLoaderService) {\n    super(host, zone);\n  }\n\n  protected getRefFromResponse(response: Group) {\n    return response;\n  }\n}\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { ThDataTexture } from '../../generated/ThDataTexture';\nimport { LogLuvLoader } from 'three/examples/jsm/loaders/LogLuvLoader';\nimport {\n  ThCallbackLoaderBaseDirective,\n  ThCallbackLoaderBasePipe,\n  ThCallbackLoaderService\n} from '../ThCallbackLoaderBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogLuvLoaderService extends ThCallbackLoaderService<LogLuvLoader> {\n  public clazz = LogLuvLoader;\n}\n\n@Pipe({\n  name: 'loadLogLuvTexture',\n  pure: true\n})\nexport class ThLogLuvLoaderPipe extends ThCallbackLoaderBasePipe<LogLuvLoader> implements PipeTransform {\n  constructor(protected service: LogLuvLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadLogLuvTexture]'\n})\nexport class ThLogLuvLoaderDirective extends ThCallbackLoaderBaseDirective<LogLuvLoader> {\n  constructor(@Host() protected host: ThDataTexture, protected zone: NgZone, protected service: LogLuvLoaderService) {\n    super(host, zone);\n  }\n}\n","/*\n          Generated, modifications will get overwritten\n        */\n\nexport * from './overrides/ThEffectComposer';\nexport * from './overrides/ThRenderPass';\nexport * from './overrides/ThTransformControls';\nexport * from './ThAdaptiveToneMappingPass';\nexport * from './ThAfterimagePass';\nexport * from './ThAmbientLight';\nexport * from './ThAmbientLightProbe';\nexport * from './ThArcballControls';\nexport * from './ThArrayCamera';\nexport * from './ThArrowHelper';\nexport * from './ThAudio';\nexport * from './ThAudioListener';\nexport * from './ThAxesHelper';\nexport * from './ThBloomPass';\nexport * from './ThBokehPass';\nexport * from './ThBone';\nexport * from './ThBox3Helper';\nexport * from './ThBoxGeometry';\nexport * from './ThBoxHelper';\nexport * from './ThBoxLineGeometry';\nexport * from './ThBufferGeometry';\nexport * from './ThCamera';\nexport * from './ThCameraHelper';\nexport * from './ThCanvasTexture';\nexport * from './ThCapsuleGeometry';\nexport * from './ThCircleGeometry';\nexport * from './ThClearMaskPass';\nexport * from './ThClearPass';\nexport * from './ThCompressedArrayTexture';\nexport * from './ThCompressedTexture';\nexport * from './ThConeGeometry';\nexport * from './ThConvexGeometry';\nexport * from './ThCubeCamera';\nexport * from './ThCubeTexture';\nexport * from './ThCubeTexturePass';\nexport * from './ThCylinderGeometry';\nexport * from './ThData3DTexture';\nexport * from './ThDataArrayTexture';\nexport * from './ThDataTexture';\nexport * from './ThDecalGeometry';\nexport * from './ThDepthTexture';\nexport * from './ThDirectionalLight';\nexport * from './ThDirectionalLightHelper';\nexport * from './ThDodecahedronGeometry';\nexport * from './ThDotScreenPass';\nexport * from './ThDragControls';\nexport * from './ThEdgesGeometry';\nexport * from './ThEffectComposerGen';\nexport * from './ThExtrudeGeometry';\nexport * from './ThFilmPass';\nexport * from './ThFirstPersonControls';\nexport * from './ThFlyControls';\nexport * from './ThFramebufferTexture';\nexport * from './ThGlitchPass';\nexport * from './ThGridHelper';\nexport * from './ThGroup';\nexport * from './ThHalftonePass';\nexport * from './ThHemisphereLight';\nexport * from './ThHemisphereLightHelper';\nexport * from './ThHemisphereLightProbe';\nexport * from './ThIcosahedronGeometry';\nexport * from './ThInstancedBufferGeometry';\nexport * from './ThInstancedMesh';\nexport * from './ThLatheGeometry';\nexport * from './ThLight';\nexport * from './ThLightningStrike';\nexport * from './ThLightProbe';\nexport * from './ThLine';\nexport * from './ThLineBasicMaterial';\nexport * from './ThLineDashedMaterial';\nexport * from './ThLineLoop';\nexport * from './ThLineSegments';\nexport * from './ThLOD';\nexport * from './ThLUTPass';\nexport * from './ThMapControls';\nexport * from './ThMaskPass';\nexport * from './ThMaterial';\nexport * from './ThMesh';\nexport * from './ThMeshBasicMaterial';\nexport * from './ThMeshDepthMaterial';\nexport * from './ThMeshDistanceMaterial';\nexport * from './ThMeshLambertMaterial';\nexport * from './ThMeshMatcapMaterial';\nexport * from './ThMeshNormalMaterial';\nexport * from './ThMeshPhongMaterial';\nexport * from './ThMeshPhysicalMaterial';\nexport * from './ThMeshStandardMaterial';\nexport * from './ThMeshToonMaterial';\nexport * from './ThObject3D';\nexport * from './ThOctahedronGeometry';\nexport * from './ThOrbitControls';\nexport * from './ThOrthographicCamera';\nexport * from './ThOutlinePass';\nexport * from './ThParametricGeometry';\nexport * from './ThPass';\nexport * from './ThPerspectiveCamera';\nexport * from './ThPlaneGeometry';\nexport * from './ThPlaneHelper';\nexport * from './ThPointerLockControls';\nexport * from './ThPointLight';\nexport * from './ThPointLightHelper';\nexport * from './ThPoints';\nexport * from './ThPointsMaterial';\nexport * from './ThPolarGridHelper';\nexport * from './ThPolyhedronGeometry';\nexport * from './ThPositionalAudio';\nexport * from './ThRawShaderMaterial';\nexport * from './ThRectAreaLight';\nexport * from './ThRenderPassGen';\nexport * from './ThRingGeometry';\nexport * from './ThRoundedBoxGeometry';\nexport * from './ThSAOPass';\nexport * from './ThSavePass';\nexport * from './ThScene';\nexport * from './ThShaderMaterial';\nexport * from './ThShaderPass';\nexport * from './ThShadowMaterial';\nexport * from './ThShapeGeometry';\nexport * from './ThSkeletonHelper';\nexport * from './ThSkinnedMesh';\nexport * from './ThSMAAPass';\nexport * from './ThSphereGeometry';\nexport * from './ThSpotLight';\nexport * from './ThSpotLightHelper';\nexport * from './ThSprite';\nexport * from './ThSpriteMaterial';\nexport * from './ThSSAARenderPass';\nexport * from './ThSSAOPass';\nexport * from './ThSSRPass';\nexport * from './ThStereoCamera';\nexport * from './ThTAARenderPass';\nexport * from './ThTeapotGeometry';\nexport * from './ThTetrahedronGeometry';\nexport * from './ThTextGeometry';\nexport * from './ThTexture';\nexport * from './ThTexturePass';\nexport * from './ThTorusGeometry';\nexport * from './ThTorusKnotGeometry';\nexport * from './ThTrackballControls';\nexport * from './ThTransformControlsGen';\nexport * from './ThTubeGeometry';\nexport * from './ThUnrealBloomPass';\nexport * from './ThVideoTexture';\nexport * from './ThWireframeGeometry';\n","import { Directive, Host, Injectable, NgZone, Pipe, PipeTransform } from '@angular/core';\n\nimport { ThObject3D } from '../generated/ThObject3D';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\nimport { ThAsyncLoaderBaseDirective, ThAsyncLoaderBasePipe, ThAsyncLoaderService } from './ThAsyncLoaderBase';\nimport { BufferGeometry } from 'three';\nimport { ThBufferGeometry } from '../generated';\nimport { isObserved } from '../util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PLYLoaderService extends ThAsyncLoaderService<PLYLoader> {\n  public clazz = PLYLoader;\n}\n\n@Pipe({\n  name: 'loadPLY',\n  pure: true\n})\nexport class ThPLYLoaderPipe extends ThAsyncLoaderBasePipe<PLYLoader> implements PipeTransform {\n  constructor(protected service: PLYLoaderService) {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[loadPLY]'\n})\nexport class ThPLYLoaderDirective extends ThAsyncLoaderBaseDirective<PLYLoader> {\n  constructor(@Host() protected host: ThBufferGeometry, protected zone: NgZone, protected service: PLYLoaderService) {\n    super(host, zone);\n  }\n\n  protected getRefFromResponse(response: BufferGeometry) {\n    response.computeVertexNormals();\n    return response;\n  }\n\n  protected async load() {\n    if (!this.initialized) {\n      return;\n    }\n\n    if (this._url === undefined) {\n      throw new Error('missing url');\n    }\n\n    const url = this._url;\n\n    const onProgress = isObserved(this.onProgress$)\n      ? (progress: ProgressEvent<EventTarget>) => {\n          this.onProgress$?.next(progress);\n        }\n      : undefined;\n\n    const result = await this.zone.runOutsideAngular(() => this.service.load(url, onProgress));\n\n    // add the new object to the parent and\n    // emit a loaded event directly on the three.js object and on objRef$\n    this.host.objRef = this.getRefFromResponse(result);\n\n    if (this.onLoaded$ && result !== undefined) {\n      this.onLoaded$?.next(result);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bind'\n})\nexport class BindPipe implements PipeTransform {\n  transform(methodToBind: (...anyArgs: unknown[]) => unknown, instance: unknown) {\n    return methodToBind.bind(instance);\n  }\n}\n","/**\n * The following code is ported from pmndrs/drei and adapted to work with Angular and ngx-three\n * Many thanks to pmndrs/drei at its contributors!\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SkipSelf,\n  ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  Camera,\n  Group,\n  Matrix4,\n  Object3D,\n  OrthographicCamera,\n  PerspectiveCamera,\n  Raycaster,\n  Vector2,\n  Vector3\n} from 'three';\nimport { RAYCASTER } from '../../events/raycaster.service';\nimport { ThGroup, ThObject3D } from '../../generated';\nimport { ThCanvas } from '../../ThCanvas';\nimport { ThView } from '../../ThView';\nimport { NgChanges } from '../../util';\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction defaultCalculatePosition(el: Object3D, camera: Camera, size: { width: number; height: number }) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nexport type CalculatePosition = typeof defaultCalculatePosition;\n\nfunction isObjectBehindCamera(el: Object3D, camera: Camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction isObjectVisible(el: Object3D, camera: Camera, raycaster: Raycaster, occlude: Object3D[]) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos as unknown as Vector2, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n  return true;\n}\n\nfunction objectScale(el: Object3D, camera: Camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = (camera.fov * Math.PI) / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\n\nfunction objectZIndex(el: Object3D, camera: Camera, zIndexRange: Array<number>) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n  return undefined;\n}\n\nconst epsilon = (value: number) => (Math.abs(value) < 1e-10 ? 0 : value);\n\nfunction getCSSMatrix(matrix: Matrix4, multipliers: number[], prepend = '') {\n  let matrix3d = 'matrix3d(';\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n  return prepend + matrix3d;\n}\n\nconst getCameraCSSMatrix = (\n  (multipliers: number[]) => (matrix: Matrix4) =>\n    getCSSMatrix(matrix, multipliers)\n)([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\n\nconst getObjectCSSMatrix = (\n  (scaleMultipliers: (n: number) => number[]) => (matrix: Matrix4, factor: number) =>\n    getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)')\n)((f: number) => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n\ntype PointerEventsProperties =\n  | 'auto'\n  | 'none'\n  | 'visiblePainted'\n  | 'visibleFill'\n  | 'visibleStroke'\n  | 'visible'\n  | 'painted'\n  | 'fill'\n  | 'stroke'\n  | 'all'\n  | 'inherit';\n\n/**\n * A port of the pmndrs/drei Html component\n *\n * Add Html content to any three.js object3d node\n */\n@Component({\n  selector: 'th-html',\n  templateUrl: './html.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HtmlComponent extends ThGroup<Group> implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  @Input() prepend = false; // Project content behind the canvas (default: false)\n  @Input() center = false; // Adds a -50%/-50% css transform (default: false) [ignored in transform mode]\n  @Input() fullscreen = false; // Aligns to the upper-left corner, fills the screen (default:false) [ignored in transform mode]\n  eps = 0.001;\n  @Input() portal?: HTMLElement; // Reference to target container (default=undefined)\n  /* If set (default: undefined), children will be scaled by\n   * this factor, and also by distance to a PerspectiveCamera / zoom by a OrthographicCamera.\n   */\n  @Input() distanceFactor?: number;\n  @Input() sprite = false; // Renders as sprite, but only in transform mode (default=false)\n  @Input() transform = false; // If true, applies matrix3d transformations (default=false)\n  @Input() zIndexRange: [number, number] = [16777271, 0]; // Z-order range (default=[16777271, 0])\n\n  @Input() style?: Partial<CSSStyleDeclaration>;\n  @Input() className?: string;\n\n  /**\n   * Can be true or a Object3D>[]|ThObject3D[], true occludes the entire scene (default: undefined)\n   */\n  @Input() occlude?: Object3D[] | ThObject3D[] | boolean;\n  @Output()\n  public onOcclude = new EventEmitter<boolean>();\n\n  /**\n   * Override default positioning function. [ignored in transform mode]\n   */\n  @Input() calculatePosition: CalculatePosition = defaultCalculatePosition;\n  @Input() as = 'div'; // Wrapping element (default: 'div')\n  @Input() wrapperClass?: string; // The className of the wrapping element (default: undefined)\n  @Input() pointerEvents: PointerEventsProperties = 'auto';\n\n  protected transformInnerStyles = this.computeInnerStyles();\n  protected styles: Record<string, any> | null = null;\n\n  private oldZoom = 0;\n  private oldPosition = [0, 0];\n  private notOccluded = true;\n\n  @ViewChild('outerRef')\n  private transformOuterRef?: ElementRef<HTMLDivElement>;\n  @ViewChild('innerRef')\n  private transformInnerRef?: ElementRef<HTMLDivElement>;\n  private el?: HTMLElement;\n  private target?: HTMLElement | null;\n  private frameSubscription?: Subscription;\n  private raycaster = inject(RAYCASTER);\n\n  constructor(private view: ThView, private canvas: ThCanvas, @SkipSelf() parent: ThObject3D) {\n    super(parent);\n  }\n\n  public ngOnInit(): void {\n    super.ngOnInit();\n    this.styles = this.computeStyles();\n  }\n\n  public ngAfterViewInit() {\n    this.el = document.createElement(this.as);\n    this.frameSubscription = this.view.onRender.subscribe(() => this.onFrame());\n    if (this.transformOuterRef) {\n      this.el.appendChild(this.transformOuterRef.nativeElement);\n    }\n    if (this.el && !this.target) {\n      this.appendElement(this.el);\n    }\n  }\n\n  protected onResize() {\n    this.styles = this.computeStyles();\n  }\n\n  public ngOnChanges(changes: NgChanges<HtmlComponent>): void {\n    super.ngOnChanges(changes);\n    /*\n    if(this.el) {\n      if(changes.portal || changes.transform) {\n        this.appendElement(this.el);\n      }\n\n      if(changes.wrapperClass) {\n        this.el.className = changes.wrapperClass.currentValue ?? '';\n      }\n\n      if(changes.pointerEvents) {\n        this.transformInnerStyles = this.computeInnerStyles();\n      }\n    }\n    */\n  }\n\n  private appendElement(el: HTMLElement) {\n    if (!this.el || !this.objRef || !this.canvas.rendererCanvas || !this.view.camera) {\n      return;\n    }\n    this.target = this.portal ?? this.canvas.rendererCanvas?.nativeElement.parentElement;\n    this.view.scene?.objRef?.updateMatrixWorld();\n    if (this.transform) {\n      el.style.cssText = 'position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;';\n    } else {\n      const vec = this.calculatePosition(this.objRef, this.view.camera.objRef as Camera, this.getSize());\n      el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n    }\n    if (this.target) {\n      if (this.prepend) {\n        this.target.prepend(el);\n      } else {\n        this.target.appendChild(el);\n      }\n    }\n  }\n\n  public onFrame() {\n    const camera = this.view.camera?.objRef as PerspectiveCamera | OrthographicCamera | undefined;\n    const scene = this.view.scene?.objRef;\n    const group = this._objRef;\n    const size = this.getSize();\n    if (!camera || !group || !scene || !this.el) {\n      return;\n    }\n\n    camera.updateMatrixWorld();\n    group.updateWorldMatrix(true, false);\n    const vec = this.transform ? this.oldPosition : this.calculatePosition(group, camera, size);\n\n    if (\n      this.transform ||\n      Math.abs(this.oldZoom - camera.zoom) > this.eps ||\n      Math.abs(this.oldPosition[0] - vec[0]) > this.eps ||\n      Math.abs(this.oldPosition[1] - vec[1]) > this.eps\n    ) {\n      const isBehindCamera = isObjectBehindCamera(group, camera);\n      let raytraceTarget: null | undefined | boolean | Object3D[] = false;\n      if (typeof this.occlude === 'boolean') {\n        if (this.occlude === true) {\n          raytraceTarget = [scene];\n        }\n      } else if (Array.isArray(this.occlude)) {\n        raytraceTarget = this.occlude.map((item) => (item as Partial<ThObject3D>).objRef ?? item) as Object3D[];\n      }\n\n      const previouslyVisible = this.notOccluded;\n      if (raytraceTarget) {\n        this.notOccluded = !isBehindCamera && isObjectVisible(group, camera, this.raycaster, raytraceTarget);\n      } else {\n        this.notOccluded = !isBehindCamera;\n      }\n\n      if (previouslyVisible !== this.notOccluded) {\n        if (this.onOcclude.length > 0) {\n          this.onOcclude.next(!this.notOccluded);\n        } else {\n          this.el.style.display = this.notOccluded ? 'block' : 'none';\n        }\n      }\n\n      this.el.style.zIndex = `${objectZIndex(group, camera, this.zIndexRange)}`;\n      if (this.transform) {\n        const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n        const fov = camera.projectionMatrix.elements[5] * heightHalf;\n        const { isOrthographicCamera, top, left, bottom, right } = camera as OrthographicCamera;\n        const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n        const cameraTransform = isOrthographicCamera\n          ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)`\n          : `translateZ(${fov}px)`;\n        let matrix = group.matrixWorld;\n        if (this.sprite) {\n          matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.scale);\n          matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n          matrix.elements[15] = 1;\n        }\n        this.el.style.width = size.width + 'px';\n        this.el.style.height = size.height + 'px';\n        this.el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n        if (this.transformOuterRef && this.transformInnerRef) {\n          // eslint-disable-next-line max-len\n          this.transformOuterRef.nativeElement.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n          this.transformInnerRef.nativeElement.style.transform = getObjectCSSMatrix(\n            matrix,\n            1 / ((this.distanceFactor || 10) / 400)\n          );\n        }\n      } else {\n        const scale = this.distanceFactor === undefined ? 1 : objectScale(group, camera) * this.distanceFactor;\n        this.el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n      }\n      this.oldPosition = vec;\n      this.oldZoom = camera.zoom;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.el?.remove();\n    this.frameSubscription?.unsubscribe();\n  }\n\n  private computeStyles() {\n    const size = this.getSize();\n    if (this.transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width + 'px',\n        height: size.height + 'px',\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: this.center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(this.fullscreen && {\n          top: -size.height / 2 + 'px',\n          left: -size.width / 2 + 'px',\n          width: size.width + 'px',\n          height: size.height + 'px'\n        }),\n        ...this.style\n      };\n    }\n  }\n\n  private computeInnerStyles() {\n    return { position: 'absolute', pointerEvents: this.pointerEvents };\n  }\n\n  private getSize() {\n    return (\n      this.view.viewPort ?? this.canvas.rendererCanvas?.nativeElement.getBoundingClientRect() ?? { width: 0, height: 0 }\n    );\n  }\n}\n","<div [ngStyle]=\"styles\" #outerRef *ngIf=\"transform;  else noTransform\" (onResize)=\"onResize()\">\n    <div #innerRef [ngStyle]=\"transformInnerStyles\" >\n        <div [style]=\"style\" [className]=\"className\">\n            <ng-container *ngTemplateOutlet=\"tempOutlet\" ></ng-container>\n        </div>\n    </div>\n</div>\n<ng-template #noTransform>\n    <div [ngStyle]=\"styles\" [className]=\"className\" #outerRef>\n        <ng-container *ngTemplateOutlet=\"tempOutlet\" ></ng-container>\n    </div>\n</ng-template>\n\n<ng-template #tempOutlet>\n    <ng-content></ng-content>\n</ng-template>\n","import { Directive, Input, OnDestroy, Self, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Object3D } from 'three';\nimport { ThObject3D } from '../generated';\nimport { createLazyObject3DProxy, isLazyObject3dProxy } from '../loaders/LazyObject3dProxy';\n\n@Directive({\n  selector: '[refById]'\n})\nexport class RefByIdDirective implements OnDestroy {\n  protected subscription?: Subscription;\n  protected parentObj?: Object3D;\n  protected id?: string;\n  constructor(@Self() private host: ThObject3D, @SkipSelf() private parent: ThObject3D) {\n    this.host.autoAddToParent = false;\n    this.host.autoDispose = false;\n    this.host.objRef = createLazyObject3DProxy();\n  }\n\n  @Input()\n  set refById(id: string | undefined) {\n    this.id = id;\n    this.subscription?.unsubscribe();\n    this.subscription = this.parent.objRef$.subscribe((obj) => {\n      this.parentObj = obj;\n      this.applyRef();\n    });\n  }\n\n  applyRef() {\n    if (!this.parentObj || this.id === undefined) {\n      return;\n    }\n\n    const ref = this.findById(this.parentObj, this.id);\n    if (ref) {\n      this.setRef(this.host, ref);\n    }\n  }\n\n  protected findById(parentObj: Object3D, id: string): Object3D | undefined {\n    if ((parentObj.name ?? parentObj.uuid) === id) {\n      return parentObj;\n    }\n\n    for (const child of parentObj.children) {\n      const object = this.findById(child, id);\n      if (object !== undefined) {\n        return object;\n      }\n    }\n    return undefined;\n  }\n\n  protected setRef(host: ThObject3D, ref: Object3D) {\n    const objRef = host.objRef;\n    if (!objRef) {\n      return;\n    }\n    if (isLazyObject3dProxy(objRef)) {\n      objRef.objRef = ref;\n      host.objRef = objRef;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Plane, Vector3 } from 'three';\n\n/**\n * creates a plane from a normal vector3 and a constant:\n * https://threejs.org/docs/#api/en/math/Plane\n */\n@Pipe({\n  name: 'plane'\n})\nexport class PlanePipe implements PipeTransform {\n  transform(normal: [number, number?, number?], constant?: number) {\n    return new Plane(new Vector3(...normal), constant);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RaycasterEventDirective } from './events/raycaster.events.directive';\nimport { NgxThreeGeneratedModule } from './generated/ngx-three-generated.module';\nimport { ThDDSLoaderDirective, ThDDSLoaderPipe } from './loaders/compressed-texture/ThDDSLoader';\nimport { ThKTX2LoaderDirective, ThKTX2LoaderPipe } from './loaders/compressed-texture/ThKTX2Loader';\nimport { ThKTXLoaderDirective, ThKTXLoaderPipe } from './loaders/compressed-texture/ThKTXLoader';\nimport { ThPVRLoaderDirective, ThPVRLoaderPipe } from './loaders/compressed-texture/ThPVRLoader';\nimport { ThEXRLoaderDirective, ThEXRLoaderPipe } from './loaders/data-texture/ThEXRLoader';\nimport { ThRGBELoaderDirective, ThRGBELoaderPipe } from './loaders/data-texture/ThRGBELoader';\nimport { ThRGBMLoaderDirective, ThRGBMLoaderPipe } from './loaders/data-texture/ThRGBMLoader';\nimport { ThTGALoaderDirective, ThTGALoaderPipe } from './loaders/data-texture/ThTGALoader';\nimport { ThCubeTextureLoaderDirective, ThCubeTextureLoaderPipe } from './loaders/ThCubeTextureLoader';\nimport { ThGLTFLoaderDirective, ThGLTFLoaderPipe } from './loaders/ThGLTFLoader';\nimport { ThTextureLoaderDirective, ThTextureLoaderPipe } from './loaders/ThTextureLoader';\nimport { ClonePipe } from './pipes/clone.pipe';\nimport { ColorPipe } from './pipes/color.pipe';\nimport { FogPipe } from './pipes/fog.pipe';\nimport { Vector2Pipe, Vector3Pipe, Vector4Pipe } from './pipes/vector.pipe';\nimport { ThRenderDirective } from './renderer/th-render.directive';\nimport { StatsDirective } from './stats/stats.directive';\nimport { ThObjLoaderDirective, ThObjLoaderPipe } from './loaders/ThOBJLoader';\nimport { ThCanvas } from './ThCanvas';\nimport { ThMaterialBase } from './ThMaterialBase';\nimport { ThObjectBase } from './ThObjectBase';\nimport { ThView } from './ThView';\nimport { ThWrapperBase } from './ThWrapperBase';\nimport { ThFBXLoaderDirective, ThFBXLoaderPipe } from './loaders/ThFBXLoader';\nimport { ThLogLuvLoaderDirective, ThLogLuvLoaderPipe } from './loaders/data-texture/ThLogLuvLoader';\nimport { ThPLYLoaderDirective, ThPLYLoaderPipe } from './loaders/ThPLYLoader';\nimport { BindPipe } from './pipes/bind.pipe';\nimport { HtmlComponent } from './extra/web/html.component';\nimport { CommonModule } from '@angular/common';\nimport { RefByIdDirective } from './directives/ref-by-id.directive';\nimport { PlanePipe } from './pipes/plane.pipe';\n\n@NgModule({\n  declarations: [\n    ThCanvas,\n    ThView,\n    ThObjectBase,\n    ThMaterialBase,\n    ThWrapperBase,\n    ThGLTFLoaderDirective,\n    ThGLTFLoaderPipe,\n    ThObjLoaderPipe,\n    ThObjLoaderDirective,\n    ThFBXLoaderDirective,\n    ThFBXLoaderPipe,\n    ThPLYLoaderDirective,\n    ThPLYLoaderPipe,\n    RaycasterEventDirective,\n    ColorPipe,\n    Vector2Pipe,\n    Vector3Pipe,\n    Vector4Pipe,\n    ClonePipe,\n    FogPipe,\n    BindPipe,\n    PlanePipe,\n    StatsDirective,\n    ThRenderDirective,\n    // texture loaders\n    ThTextureLoaderDirective,\n    ThTextureLoaderPipe,\n    ThCubeTextureLoaderDirective,\n    ThCubeTextureLoaderPipe,\n    // compressed texture loaders\n    ThDDSLoaderDirective,\n    ThDDSLoaderPipe,\n    ThKTXLoaderDirective,\n    ThKTXLoaderPipe,\n    ThKTX2LoaderDirective,\n    ThKTX2LoaderPipe,\n    ThPVRLoaderDirective,\n    ThPVRLoaderPipe,\n    // data texture loaders\n    ThEXRLoaderDirective,\n    ThEXRLoaderPipe,\n    ThRGBELoaderDirective,\n    ThRGBELoaderPipe,\n    ThRGBMLoaderDirective,\n    ThRGBMLoaderPipe,\n    ThTGALoaderDirective,\n    ThTGALoaderPipe,\n    ThLogLuvLoaderDirective,\n    ThLogLuvLoaderPipe,\n    // directives\n    RefByIdDirective,\n    //extras\n    HtmlComponent\n  ],\n  imports: [NgxThreeGeneratedModule, CommonModule],\n  exports: [\n    NgxThreeGeneratedModule,\n    ThCanvas,\n    ThView,\n    ThGLTFLoaderDirective,\n    ThGLTFLoaderPipe,\n    ThObjLoaderDirective,\n    ThObjLoaderPipe,\n    ThFBXLoaderDirective,\n    ThFBXLoaderPipe,\n    ThPLYLoaderDirective,\n    ThPLYLoaderPipe,\n    RaycasterEventDirective,\n    ColorPipe,\n    Vector2Pipe,\n    Vector3Pipe,\n    Vector4Pipe,\n    ClonePipe,\n    FogPipe,\n    BindPipe,\n    PlanePipe,\n    ThRenderDirective,\n    StatsDirective,\n    // texture loaders\n    ThTextureLoaderDirective,\n    ThTextureLoaderPipe,\n    ThCubeTextureLoaderDirective,\n    ThCubeTextureLoaderPipe,\n    // compressed texture loaders\n    ThDDSLoaderDirective,\n    ThDDSLoaderPipe,\n    ThKTXLoaderDirective,\n    ThKTXLoaderPipe,\n    ThKTX2LoaderDirective,\n    ThKTX2LoaderPipe,\n    ThPVRLoaderDirective,\n    ThPVRLoaderPipe,\n    // data texture loaders\n    ThEXRLoaderDirective,\n    ThEXRLoaderPipe,\n    ThRGBELoaderDirective,\n    ThRGBELoaderPipe,\n    ThRGBMLoaderDirective,\n    ThRGBMLoaderPipe,\n    ThTGALoaderDirective,\n    ThTGALoaderPipe,\n    ThLogLuvLoaderDirective,\n    ThLogLuvLoaderPipe,\n    // directives\n    RefByIdDirective,\n    // extra\n    HtmlComponent\n  ]\n})\nexport class NgxThreeModule {}\n","import { forwardRef, Provider, Type } from '@angular/core';\nimport { Object3D } from 'three';\nimport { ThCamera } from './generated/ThCamera';\nimport { ThObject3D } from './generated/ThObject3D';\n\nexport function createThProviderArray(cls: InstanceType<any>, baseCls: InstanceType<any>) {\n  const providers: Provider[] = [];\n  if (ThObject3D.isPrototypeOf(baseCls) || Object3D === baseCls) {\n    providers.push({ provide: ThObject3D, useExisting: forwardRef(() => cls) });\n\n    if (ThCamera.isPrototypeOf(baseCls) || ThCamera === baseCls) {\n      providers.push({ provide: ThCamera, useExisting: forwardRef(() => cls) });\n    }\n  }\n}\n\n/**\n * usage:\n *\n * @Component({\n *  providers: createObj3DProviderArray(forwardRef(() => TheComponent)))\n * })\n * export class TheComponent {\n * ...\n * }\n * @param type the Object3D derived Class to be provided\n */\nexport function createObj3DProviderArray(type: Type<any>) {\n  return [{ provide: ThObject3D, useExisting: forwardRef(() => type) }];\n}\n\nexport function createCameraProviderArray(type: Type<any>) {\n  return [\n    { provide: ThObject3D, useExisting: forwardRef(() => type) },\n    { provide: ThCamera, useExisting: forwardRef(() => type) }\n  ];\n}\n","/*\n * Public API Surface of ngx-three\n */\n\nexport * from './lib/ngx-three.module';\n\n// renderer specific functionality\nexport * from './lib/ThCanvas';\nexport * from './lib/ThEngine.service';\nexport * from './lib/ThView';\nexport * from './lib/renderer/th-render.directive';\n\n// loaders\nexport * from './lib/loaders/LazyObject3dProxy';\nexport * from './lib/loaders/ThAsyncLoaderBase';\nexport * from './lib/loaders/ThCallbackLoaderBase';\nexport * from './lib/loaders/ThGLTFLoader';\nexport * from './lib/loaders/ThOBJLoader';\nexport * from './lib/loaders/ThFBXLoader';\n\n// generated\nexport * from './lib/generated';\nexport * from './lib/generated/ngx-three-generated.module';\n\nexport * from './lib/events/raycaster.events.directive';\n\n// component helpers\n\nexport * from './lib/component.helpers';\n\n// utility pipes and directives\n\nexport * from './lib/pipes/clone.pipe';\nexport * from './lib/pipes/color.pipe';\nexport * from './lib/pipes/vector.pipe';\nexport * from './lib/pipes/fog.pipe';\nexport * from './lib/pipes/bind.pipe';\nexport * from './lib/pipes/plane.pipe';\n\nexport * from './lib/stats/stats.directive';\n\n// texture loaders\nexport * from './lib/loaders/ThTextureLoader';\nexport * from './lib/loaders/data-texture/ThTGALoader';\nexport * from './lib/loaders/ThCubeTextureLoader';\nexport * from './lib/loaders/compressed-texture/ThDDSLoader';\nexport * from './lib/loaders/compressed-texture/ThKTX2Loader';\nexport * from './lib/loaders/compressed-texture/ThKTXLoader';\nexport * from './lib/loaders/compressed-texture/ThPVRLoader';\nexport * from './lib/loaders/compressed-texture/ThDRACOLoader';\nexport * from './lib/loaders/data-texture/ThEXRLoader';\nexport * from './lib/loaders/data-texture/ThRGBELoader';\nexport * from './lib/loaders/data-texture/ThRGBMLoader';\nexport * from './lib/loaders/data-texture/ThTGALoader';\nexport * from './lib/loaders/data-texture/ThLogLuvLoader';\nexport * from './lib/loaders/ThPLYLoader';\n\nexport * from './lib/directives/ref-by-id.directive';\n\n// extras\n\n// web\nexport * from './lib/extra/web/html.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ThObject3D","i2.RaycasterService","i1.ThEngineService","i1.ThView","i2.ThEngineService","i1.ThEffectComposer","i2.ThView","i3","i2.ThCanvas","i1.ThCompressedTexture","i1.ThTexture","i1.ThDataTexture","i1.DRACOLoaderService","i2.ThObject3D","i2.ThAnimationLoopService","i1.ThBufferGeometry","i3.ThObject3D","i5.ThRenderDirective"],"mappings":"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"}