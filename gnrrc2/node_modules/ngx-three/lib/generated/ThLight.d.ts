import { Color, ColorRepresentation, Event, Light, LightShadow } from 'three';
import { ThObject3D } from './ThObject3D';
import * as i0 from "@angular/core";
export declare abstract class ThLight<TShadowSupport extends LightShadow | undefined = LightShadow | undefined, T extends Light<TShadowSupport> = Light<TShadowSupport>, TARGS = [color?: ColorRepresentation, intensity?: number]> extends ThObject3D<Event, T, TARGS> {
    get isLight(): true | undefined;
    get type(): (string | 'Light') | undefined;
    set color(value: Color | [color: ColorRepresentation]);
    get color(): Color | undefined;
    set intensity(value: number);
    get intensity(): number | undefined;
    set shadow(value: TShadowSupport);
    get shadow(): TShadowSupport | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThLight<any, any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThLight<any, any, any>, "th-light", never, { "color": "color"; "intensity": "intensity"; "shadow": "shadow"; }, {}, never, ["*"], false, never>;
}
