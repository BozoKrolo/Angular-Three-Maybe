import { Type } from '@angular/core';
import { Camera, MOUSE, Object3D } from 'three';
import { TransformControls } from 'three/examples/jsm/controls/TransformControls';
import { ThControlBase } from '../ThControlBase';
import * as i0 from "@angular/core";
export declare class ThTransformControlsGen<T extends TransformControls = TransformControls, TARGS = [object: Camera, domElement?: HTMLElement]> extends ThControlBase<T, TARGS> {
    getType(): Type<TransformControls>;
    set domElement(value: HTMLElement);
    get domElement(): HTMLElement | undefined;
    set camera(value: Camera);
    get camera(): Camera | undefined;
    set object(value: Object3D | undefined);
    get object(): (Object3D | undefined) | undefined;
    set enabled(value: boolean);
    get enabled(): boolean | undefined;
    set axis(value: 'X' | 'Y' | 'Z' | 'E' | 'XY' | 'YZ' | 'XZ' | 'XYZ' | 'XYZE' | null);
    get axis(): ('X' | 'Y' | 'Z' | 'E' | 'XY' | 'YZ' | 'XZ' | 'XYZ' | 'XYZE' | null) | undefined;
    set mode(value: 'translate' | 'rotate' | 'scale');
    get mode(): ('translate' | 'rotate' | 'scale') | undefined;
    set translationSnap(value: number | null);
    get translationSnap(): (number | null) | undefined;
    set rotationSnap(value: number | null);
    get rotationSnap(): (number | null) | undefined;
    set space(value: 'world' | 'local');
    get space(): ('world' | 'local') | undefined;
    set size(value: number);
    get size(): number | undefined;
    set dragging(value: boolean);
    get dragging(): boolean | undefined;
    set showX(value: boolean);
    get showX(): boolean | undefined;
    set showY(value: boolean);
    get showY(): boolean | undefined;
    set showZ(value: boolean);
    get showZ(): boolean | undefined;
    get isTransformControls(): true | undefined;
    set mouseButtons(value: {
        LEFT: MOUSE;
        MIDDLE: MOUSE;
        RIGHT: MOUSE;
    });
    get mouseButtons(): {
        LEFT: MOUSE;
        MIDDLE: MOUSE;
        RIGHT: MOUSE;
    } | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThTransformControlsGen<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThTransformControlsGen<any, any>, "th-transformControlsGen", never, { "domElement": "domElement"; "camera": "camera"; "object": "object"; "enabled": "enabled"; "axis": "axis"; "mode": "mode"; "translationSnap": "translationSnap"; "rotationSnap": "rotationSnap"; "space": "space"; "size": "size"; "dragging": "dragging"; "showX": "showX"; "showY": "showY"; "showZ": "showZ"; "mouseButtons": "mouseButtons"; }, {}, never, ["*"], false, never>;
}
