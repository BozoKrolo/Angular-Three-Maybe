{"ast":null,"code":"import { Color, HalfFloatType, MeshDepthMaterial, NearestFilter, NoBlending, RGBADepthPacking, ShaderMaterial, UniformsUtils, WebGLRenderTarget } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\n/**\n * Depth-of-field post-process with bokeh shader\n */\n\nclass BokehPass extends Pass {\n  constructor(scene, camera, params) {\n    super();\n    this.scene = scene;\n    this.camera = camera;\n    const focus = params.focus !== undefined ? params.focus : 1.0;\n    const aspect = params.aspect !== undefined ? params.aspect : camera.aspect;\n    const aperture = params.aperture !== undefined ? params.aperture : 0.025;\n    const maxblur = params.maxblur !== undefined ? params.maxblur : 1.0;\n\n    // render targets\n\n    this.renderTargetDepth = new WebGLRenderTarget(1, 1, {\n      // will be resized later\n      minFilter: NearestFilter,\n      magFilter: NearestFilter,\n      type: HalfFloatType\n    });\n    this.renderTargetDepth.texture.name = 'BokehPass.depth';\n\n    // depth material\n\n    this.materialDepth = new MeshDepthMaterial();\n    this.materialDepth.depthPacking = RGBADepthPacking;\n    this.materialDepth.blending = NoBlending;\n\n    // bokeh material\n\n    const bokehShader = BokehShader;\n    const bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n    bokehUniforms['tDepth'].value = this.renderTargetDepth.texture;\n    bokehUniforms['focus'].value = focus;\n    bokehUniforms['aspect'].value = aspect;\n    bokehUniforms['aperture'].value = aperture;\n    bokehUniforms['maxblur'].value = maxblur;\n    bokehUniforms['nearClip'].value = camera.near;\n    bokehUniforms['farClip'].value = camera.far;\n    this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader\n    });\n    this.uniforms = bokehUniforms;\n    this.fsQuad = new FullScreenQuad(this.materialBokeh);\n    this._oldClearColor = new Color();\n  }\n  render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive*/) {\n    // Render depth into texture\n\n    this.scene.overrideMaterial = this.materialDepth;\n    renderer.getClearColor(this._oldClearColor);\n    const oldClearAlpha = renderer.getClearAlpha();\n    const oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    renderer.setClearColor(0xffffff);\n    renderer.setClearAlpha(1.0);\n    renderer.setRenderTarget(this.renderTargetDepth);\n    renderer.clear();\n    renderer.render(this.scene, this.camera);\n\n    // Render bokeh composite\n\n    this.uniforms['tColor'].value = readBuffer.texture;\n    this.uniforms['nearClip'].value = this.camera.near;\n    this.uniforms['farClip'].value = this.camera.far;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    this.scene.overrideMaterial = null;\n    renderer.setClearColor(this._oldClearColor);\n    renderer.setClearAlpha(oldClearAlpha);\n    renderer.autoClear = oldAutoClear;\n  }\n  setSize(width, height) {\n    this.renderTargetDepth.setSize(width, height);\n  }\n  dispose() {\n    this.renderTargetDepth.dispose();\n    this.materialDepth.dispose();\n    this.materialBokeh.dispose();\n    this.fsQuad.dispose();\n  }\n}\nexport { BokehPass };","map":{"version":3,"names":["Color","HalfFloatType","MeshDepthMaterial","NearestFilter","NoBlending","RGBADepthPacking","ShaderMaterial","UniformsUtils","WebGLRenderTarget","Pass","FullScreenQuad","BokehShader","BokehPass","constructor","scene","camera","params","focus","undefined","aspect","aperture","maxblur","renderTargetDepth","minFilter","magFilter","type","texture","name","materialDepth","depthPacking","blending","bokehShader","bokehUniforms","clone","uniforms","value","near","far","materialBokeh","defines","Object","assign","vertexShader","fragmentShader","fsQuad","_oldClearColor","render","renderer","writeBuffer","readBuffer","overrideMaterial","getClearColor","oldClearAlpha","getClearAlpha","oldAutoClear","autoClear","setClearColor","setClearAlpha","setRenderTarget","clear","renderToScreen","setSize","width","height","dispose"],"sources":["C:/Users/bozok/Desktop/AngularProject/gnrrc2/node_modules/three/examples/jsm/postprocessing/BokehPass.js"],"sourcesContent":["import {\n\tColor,\n\tHalfFloatType,\n\tMeshDepthMaterial,\n\tNearestFilter,\n\tNoBlending,\n\tRGBADepthPacking,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\n/**\n * Depth-of-field post-process with bokeh shader\n */\n\nclass BokehPass extends Pass {\n\n\tconstructor( scene, camera, params ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tconst focus = ( params.focus !== undefined ) ? params.focus : 1.0;\n\t\tconst aspect = ( params.aspect !== undefined ) ? params.aspect : camera.aspect;\n\t\tconst aperture = ( params.aperture !== undefined ) ? params.aperture : 0.025;\n\t\tconst maxblur = ( params.maxblur !== undefined ) ? params.maxblur : 1.0;\n\n\t\t// render targets\n\n\t\tthis.renderTargetDepth = new WebGLRenderTarget( 1, 1, { // will be resized later\n\t\t\tminFilter: NearestFilter,\n\t\t\tmagFilter: NearestFilter,\n\t\t\ttype: HalfFloatType\n\t\t} );\n\n\t\tthis.renderTargetDepth.texture.name = 'BokehPass.depth';\n\n\t\t// depth material\n\n\t\tthis.materialDepth = new MeshDepthMaterial();\n\t\tthis.materialDepth.depthPacking = RGBADepthPacking;\n\t\tthis.materialDepth.blending = NoBlending;\n\n\t\t// bokeh material\n\n\t\tconst bokehShader = BokehShader;\n\t\tconst bokehUniforms = UniformsUtils.clone( bokehShader.uniforms );\n\n\t\tbokehUniforms[ 'tDepth' ].value = this.renderTargetDepth.texture;\n\n\t\tbokehUniforms[ 'focus' ].value = focus;\n\t\tbokehUniforms[ 'aspect' ].value = aspect;\n\t\tbokehUniforms[ 'aperture' ].value = aperture;\n\t\tbokehUniforms[ 'maxblur' ].value = maxblur;\n\t\tbokehUniforms[ 'nearClip' ].value = camera.near;\n\t\tbokehUniforms[ 'farClip' ].value = camera.far;\n\n\t\tthis.materialBokeh = new ShaderMaterial( {\n\t\t\tdefines: Object.assign( {}, bokehShader.defines ),\n\t\t\tuniforms: bokehUniforms,\n\t\t\tvertexShader: bokehShader.vertexShader,\n\t\t\tfragmentShader: bokehShader.fragmentShader\n\t\t} );\n\n\t\tthis.uniforms = bokehUniforms;\n\n\t\tthis.fsQuad = new FullScreenQuad( this.materialBokeh );\n\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n\t\t// Render depth into texture\n\n\t\tthis.scene.overrideMaterial = this.materialDepth;\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tconst oldClearAlpha = renderer.getClearAlpha();\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( 0xffffff );\n\t\trenderer.setClearAlpha( 1.0 );\n\t\trenderer.setRenderTarget( this.renderTargetDepth );\n\t\trenderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// Render bokeh composite\n\n\t\tthis.uniforms[ 'tColor' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'nearClip' ].value = this.camera.near;\n\t\tthis.uniforms[ 'farClip' ].value = this.camera.far;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.setClearColor( this._oldClearColor );\n\t\trenderer.setClearAlpha( oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis.renderTargetDepth.setSize( width, height );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.renderTargetDepth.dispose();\n\n\t\tthis.materialDepth.dispose();\n\t\tthis.materialBokeh.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { BokehPass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}