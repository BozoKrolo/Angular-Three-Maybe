{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/bozok/Desktop/AngularProject/gnrrc2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injectable, EventEmitter, Component, Input, Output, ChangeDetectionStrategy, SkipSelf, Directive, Host, forwardRef, ContentChild, Optional, isDevMode, Inject, ContentChildren, ViewChild, NgModule, Pipe, Self } from '@angular/core';\nimport * as THREE from 'three';\nimport { Raycaster, Object3D, Scene, Clock, Vector4, WebGLRenderTarget, AmbientLight, LightProbe, AmbientLightProbe, PerspectiveCamera, ArrayCamera, ArrowHelper, Audio, AudioListener, Line, LineSegments, AxesHelper, Bone, Box3Helper, BufferGeometry, BoxGeometry, BoxHelper, CameraHelper, Texture, CanvasTexture, CapsuleGeometry, CircleGeometry, CompressedTexture, CompressedArrayTexture, CylinderGeometry, ConeGeometry, CubeCamera, CubeTexture, Data3DTexture, DataArrayTexture, DataTexture, DepthTexture, DirectionalLight, DirectionalLightHelper, PolyhedronGeometry, DodecahedronGeometry, EdgesGeometry, ExtrudeGeometry, FramebufferTexture, GridHelper, Group, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, InstancedBufferGeometry, Mesh, InstancedMesh, LatheGeometry, Material, LineBasicMaterial, LineDashedMaterial, LineLoop, LOD, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshStandardMaterial, MeshPhysicalMaterial, MeshToonMaterial, OctahedronGeometry, OrthographicCamera, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PositionalAudio, ShaderMaterial, RawShaderMaterial, RectAreaLight, RingGeometry, ShadowMaterial, ShapeGeometry, SkeletonHelper, SkinnedMesh, SphereGeometry, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, StereoCamera, TetrahedronGeometry, TorusGeometry, TorusKnotGeometry, TubeGeometry, VideoTexture, WireframeGeometry, CubeTextureLoader, TextureLoader, Color, Fog, Vector2, Vector3, Plane } from 'three';\nimport { ReplaySubject, Subject, takeUntil } from 'rxjs';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { AdaptiveToneMappingPass } from 'three/examples/jsm/postprocessing/AdaptiveToneMappingPass';\nimport { AfterimagePass } from 'three/examples/jsm/postprocessing/AfterimagePass';\nimport { ArcballControls } from 'three/examples/jsm/controls/ArcballControls';\nimport { BloomPass } from 'three/examples/jsm/postprocessing/BloomPass';\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass';\nimport { BoxLineGeometry } from 'three/examples/jsm/geometries/BoxLineGeometry';\nimport { ClearMaskPass, MaskPass } from 'three/examples/jsm/postprocessing/MaskPass';\nimport { ClearPass } from 'three/examples/jsm/postprocessing/ClearPass';\nimport { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry';\nimport { CubeTexturePass } from 'three/examples/jsm/postprocessing/CubeTexturePass';\nimport { DecalGeometry } from 'three/examples/jsm/geometries/DecalGeometry';\nimport { DotScreenPass } from 'three/examples/jsm/postprocessing/DotScreenPass';\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls';\nimport { FlyControls } from 'three/examples/jsm/controls/FlyControls';\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass';\nimport { HalftonePass } from 'three/examples/jsm/postprocessing/HalftonePass';\nimport { LightningStrike } from 'three/examples/jsm/geometries/LightningStrike';\nimport { LUTPass } from 'three/examples/jsm/postprocessing/LUTPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { MapControls } from 'three/examples/jsm/controls/MapControls';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass';\nimport { ParametricGeometry } from 'three/examples/jsm/geometries/ParametricGeometry';\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';\nimport { SAOPass } from 'three/examples/jsm/postprocessing/SAOPass';\nimport { SavePass } from 'three/examples/jsm/postprocessing/SavePass';\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass';\nimport { SSAARenderPass } from 'three/examples/jsm/postprocessing/SSAARenderPass';\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass';\nimport { SSRPass } from 'three/examples/jsm/postprocessing/SSRPass';\nimport { TAARenderPass } from 'three/examples/jsm/postprocessing/TAARenderPass';\nimport { TeapotGeometry } from 'three/examples/jsm/geometries/TeapotGeometry';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TexturePass } from 'three/examples/jsm/postprocessing/TexturePass';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { DDSLoader } from 'three/examples/jsm/loaders/DDSLoader';\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader';\nimport { KTXLoader } from 'three/examples/jsm/loaders/KTXLoader';\nimport { PVRLoader } from 'three/examples/jsm/loaders/PVRLoader';\nimport { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { RGBMLoader } from 'three/examples/jsm/loaders/RGBMLoader';\nimport { TGALoader } from 'three/examples/jsm/loaders/TGALoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { LogLuvLoader } from 'three/examples/jsm/loaders/LogLuvLoader';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\n\n// eslint-disable-next-line no-shadow\nconst _c0 = [\"*\"];\nconst _c1 = [\"rendererCanvas\"];\nfunction ThCanvas_ng_content_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"isDevMode()\"]);\n  }\n}\nconst _c2 = [\"outerRef\"];\nconst _c3 = [\"innerRef\"];\nfunction HtmlComponent_div_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction HtmlComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3, 4);\n    i0.ɵɵlistener(\"onResize\", function HtmlComponent_div_0_Template_div_onResize_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onResize());\n    });\n    i0.ɵɵelementStart(2, \"div\", 5, 6)(4, \"div\", 7);\n    i0.ɵɵtemplate(5, HtmlComponent_div_0_ng_container_5_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.styles);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.transformInnerStyles);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(ctx_r0.style);\n    i0.ɵɵproperty(\"className\", ctx_r0.className);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\nfunction HtmlComponent_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction HtmlComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9, 4);\n    i0.ɵɵtemplate(2, HtmlComponent_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.styles)(\"className\", ctx_r2.className);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\nfunction HtmlComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nvar RaycasterEvent;\n(function (RaycasterEvent) {\n  RaycasterEvent[\"mouseEnter\"] = \"mouseEnter\";\n  RaycasterEvent[\"mouseExit\"] = \"mouseExit\";\n  RaycasterEvent[\"click\"] = \"click\";\n  RaycasterEvent[\"pointerDown\"] = \"pointerDown\";\n  RaycasterEvent[\"pointerUp\"] = \"pointerUp\";\n})(RaycasterEvent || (RaycasterEvent = {}));\nconst RAYCASTER = new InjectionToken('A reference to the raycaster object', {\n  factory: () => new Raycaster()\n});\nclass RaycasterService {\n  constructor() {\n    this.raycaster = inject(RAYCASTER);\n    this.selected = null;\n    this.enabled = true;\n    this.groups = [];\n    this.paused = false;\n    this.maxClickDistance = 23;\n    this.nid = RaycasterService.instanceCnt++;\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n  }\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n  subscribe() {\n    if (!this.canvas) {\n      throw new Error('missing canvas');\n    }\n    this.canvas.addEventListener('pointermove', this.onPointerMove);\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.canvas.addEventListener('pointerup', this.onPointerUp);\n  }\n  unsubscribe() {\n    if (!this.canvas) {\n      throw new Error('missing canvas');\n    }\n    this.canvas.removeEventListener('pointermove', this.onPointerMove);\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.canvas.removeEventListener('pointerup', this.onPointerUp);\n  }\n  enable() {\n    this.enabled = true;\n  }\n  disable() {\n    this.enabled = false;\n  }\n  pause() {\n    this.paused = true;\n  }\n  resume() {\n    this.paused = false;\n  }\n  get isEnabled() {\n    return this.enabled;\n  }\n  init(camera, canvas) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n    this.canvas = canvas;\n    this.subscribe();\n  }\n  addEventTarget(target) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(target);\n  }\n  removeEventTarget(target) {\n    const index = this.groups.indexOf(target);\n    if (index >= 0) {\n      this.groups.splice(index, 1);\n    }\n  }\n  onPointerMove(event /*MouseEvent  & { layerX: number, layerY: number}*/) {\n    if (!this.isReady()) {\n      return;\n    }\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.mouseEnter);\n    if (!this.selected || this.selected !== i?.target) {\n      if (this.selected) {\n        this.selected.host.objRef?.dispatchEvent({\n          type: RaycasterEvent.mouseExit,\n          component: this.selected.host\n        });\n        this.selected.emitOnMouseExit();\n        this.selected = null;\n      }\n      if (i && i.target) {\n        this.selected = i.target;\n        const evt = {\n          type: RaycasterEvent.mouseEnter,\n          component: i.target.host,\n          ...i\n        };\n        this.selected.host.objRef?.dispatchEvent(evt);\n        this.selected.emitOnMouseEnter(evt);\n      }\n    }\n  }\n  onPointerDown(event) {\n    this.maxClickDistance = event.width;\n    this.pointerDownEvent = event;\n    if (!this.isReady()) {\n      return;\n    }\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.pointerDown);\n    if (i && i.target && i.target.host.objRef) {\n      const evt = {\n        type: RaycasterEvent.pointerDown,\n        component: i.target.host,\n        ...i\n      };\n      i.target.host.objRef.dispatchEvent(evt);\n      i.target.emitOnPointerDown(evt);\n    }\n  }\n  onPointerUp(event) {\n    const downEvent = this.pointerDownEvent;\n    this.pointerDownEvent = undefined;\n    if (!this.isReady()) {\n      return;\n    }\n    // pointer up\n    let i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.pointerUp);\n    if (i && i.target && i.target.host.objRef) {\n      const evt = {\n        type: RaycasterEvent.pointerUp,\n        component: i.target.host,\n        ...i\n      };\n      i.target.host.objRef.dispatchEvent(evt);\n      i.target.emitOnPointerUp(evt);\n    }\n    // click\n    if (this.calcPointerDownUpDinstance(event, downEvent) > this.maxClickDistance) {\n      return;\n    }\n    i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.click);\n    if (i && i.target && i.target.host.objRef) {\n      const evt = {\n        type: RaycasterEvent.click,\n        component: i.target.host,\n        ...i\n      };\n      i.target.host.objRef.dispatchEvent(evt);\n      i.target.emitOnClick(evt);\n    }\n  }\n  isReady(ignorePaused) {\n    return !!(this.enabled && (ignorePaused || !this.paused) && this.camera && this.camera.objRef && this.groups && this.groups.length > 0);\n  }\n  calcPointerDownUpDinstance(upEvent, downEvent) {\n    if (!downEvent) {\n      return Number.MAX_VALUE;\n    }\n    const xDist = upEvent.layerX - downEvent.layerX;\n    const yDist = upEvent.layerY - downEvent.layerY;\n    return Math.sqrt(xDist * xDist + yDist * yDist);\n  }\n  getFirstIntersectedGroup(x, y, event) {\n    if (!this.camera || !this.canvas || !this.camera.objRef) {\n      return;\n    }\n    x = x / this.canvas.clientWidth * 2 - 1;\n    y = -(y / this.canvas.clientHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector2(x, y);\n    this.raycaster.setFromCamera(mouseVector, this.camera.objRef);\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection;\n    let nearestGroup;\n    for (const group of this.groups) {\n      const i = group.host.objRef;\n      if (!group[event] || !i) {\n        continue;\n      }\n      const intersection = this.raycaster.intersectObject(i, true);\n      if (intersection.length > 0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        nearestGroup = group;\n      }\n    }\n    // return the group with nearest distance\n    if (nearestGroup && nearestIntersection) {\n      return {\n        target: nearestGroup,\n        ...nearestIntersection\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\nRaycasterService.instanceCnt = 0;\nRaycasterService.ɵfac = function RaycasterService_Factory(t) {\n  return new (t || RaycasterService)();\n};\nRaycasterService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RaycasterService,\n  factory: RaycasterService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RaycasterService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction isSettable(obj) {\n  return !!(obj && obj.set); // && obj.copy;\n}\n/**\n * tries to apply the new value to the target.\n * if the new value is 'setter arguments' then it uses set on the target.\n * else it tries to use the 'copy' method of the target if available\n * else it return the newValue as new target\n * if newValue is undefined the old target is returned\n *\n * @param target the target for the new value\n * @param newValue the value to be set\n * @returns the new target(value)\n */\nfunction applyValue(target, newValue) {\n  if (isSettable(target)) {\n    if (newValue === undefined) {\n      return target;\n    }\n    if (Array.isArray(newValue)) {\n      target.set(...newValue);\n      return target;\n    }\n    if (target.copy && newValue) {\n      target.copy(newValue);\n      return target;\n    }\n    // just set the value\n    if (newValue !== undefined) {\n      target.set(newValue);\n      return target;\n    }\n  } else {\n    // apply the value\n    return newValue;\n  }\n  // nothing to do\n  return target;\n}\nfunction isDisposable(obj) {\n  if (obj && typeof obj.dispose === 'function') {\n    return true;\n  }\n  return false;\n}\n/**\n * compatibility function for checking if a subject is observed\n * works with RxJs 6.x.x and RxJs 7+\n *\n * @param s the subject\n * @returns true if the subject is observed\n */\nfunction isObserved(s) {\n  return s !== undefined && (s.observed /* <-- needs at least RxJs 7.x.x */ || s.observers?.length > 0) /* <-- for RxJs < 7.x.x */;\n}\n// This can live anywhere in your codebase:\nfunction applyMixins(derivedCtor, constructors) {\n  constructors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n      Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null));\n    });\n  });\n}\nclass Object3DProxyHandler {\n  constructor(target) {\n    this.memberMap = new Map();\n    this.children = [];\n    this.eventListener = {};\n    this.loaded = false;\n    this.add = (...object) => {\n      if (this.objRef) {\n        this.objRef.add(...object);\n      }\n      this.children.push(...object);\n      return this;\n    };\n    this.remove = (...object) => {\n      if (this.objRef) {\n        this.objRef.remove(...object);\n      }\n      for (const obj of object) {\n        const index = this.children.indexOf(obj);\n        if (index >= 0) {\n          this.children = this.children.splice(index, 1);\n        }\n      }\n      return this;\n    };\n    this.applyToObject3D = objRef => {\n      this.memberMap.forEach((value, key) => {\n        const member = objRef[key];\n        if (isSettable(member)) {\n          applyValue(member, value);\n        } else {\n          objRef[key] = value;\n        }\n      });\n      this.children.forEach(child => objRef.add(child));\n      if (this.objRef?.parent) {\n        const parent = this.objRef?.parent;\n        parent.remove(this.objRef);\n        parent.add(objRef);\n      }\n    };\n    /**\n     * Adds a listener to an event type.\n     *\n     * @param type The type of event to listen to.\n     * @param listener The function that gets called when the event is fired.\n     */\n    this.addEventListener = (type, listener) => {\n      let arr = this.eventListener[type];\n      if (!arr) {\n        arr = [];\n        this.eventListener[type] = arr;\n      }\n      arr.push(listener);\n      if (this.objRef) {\n        this.objRef.addEventListener(type, listener);\n      }\n    };\n    /**\n     * Removes a listener from an event type.\n     *\n     * @param type The type of the listener that gets removed.\n     * @param listener The listener function that gets removed.\n     */\n    this.removeEventListener = (type, listener) => {\n      const arr = this.eventListener[type];\n      if (!arr) {\n        return;\n      }\n      const index = arr.indexOf(listener);\n      if (index >= 0) {\n        arr.splice(index, 1);\n      }\n    };\n    this.objRef = target;\n  }\n  get(_target, p, receiver) {\n    switch (p) {\n      case '__isProxy':\n        return true;\n      case 'applyToObject3D':\n        return this.applyToObject3D;\n      case 'objRef':\n        if (this.loaded) {\n          return this.objRef;\n        } else {\n          return undefined;\n        }\n      case 'add':\n        return this.add;\n      case 'remove':\n        return this.remove;\n      case 'children':\n        return this.objRef ? this.objRef.children : this.children;\n      default:\n        {\n          const objKey = p;\n          const value = this.objRef[objKey];\n          if (value !== undefined) {\n            // this is necessary for complex members\n            // (returned by reference, they might be altered, we have to reapply them to the real object )\n            this.memberMap.set(objKey, value);\n          }\n          return value;\n        }\n    }\n  }\n  set(_target, p, value, _receiver) {\n    if (p === 'objRef') {\n      if (value) {\n        this.applyToObject3D(value);\n      }\n      this.loaded = true;\n      this.objRef = value;\n    } else {\n      // store to the member map\n      this.memberMap.set(p, value);\n      if (this.objRef) {\n        // and apply to the real object if present\n        this.objRef[p] = value;\n      }\n    }\n    return true;\n  }\n}\nfunction createLazyObject3DProxy(target = new Object3D()) {\n  const handler = new Object3DProxyHandler(target);\n  return new Proxy(handler, handler);\n}\nfunction isLazyObject3dProxy(object) {\n  return (\n    // eslint-disable-next-line no-underscore-dangle\n    object.__isProxy === true && object.objRef === undefined\n  );\n}\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThWrapperBase {\n  set objRef(ref) {\n    this.applyObjRef(ref);\n  }\n  get objRef() {\n    return this._objRef;\n  }\n  constructor() {\n    this.autoAddToParent = true;\n    this.autoDispose = true;\n    // nothing to do\n  }\n\n  addToParent() {\n    // nothing to do, implement it in a derived class\n  }\n  removeFromParent() {\n    // nothing to do, implement it in a derived class\n  }\n  set threeEvents(eventMap) {\n    this.removeEvents();\n    this.eventListeners = eventMap;\n    this.applyEvents();\n  }\n  get threeEvents() {\n    return this.eventListeners;\n  }\n  get onUpdate() {\n    if (!this.updateEmitter) {\n      this.updateEmitter = new EventEmitter();\n    }\n    return this.updateEmitter;\n  }\n  /**\n   * emits the last assigned object ref\n   */\n  get objRef$() {\n    if (!this._objRef$) {\n      this._objRef$ = new ReplaySubject(1);\n    }\n    return this._objRef$;\n  }\n  ngOnInit() {\n    if (!this.objRef) {\n      this.objRef = this.createThreeInstance(this.args);\n    }\n  }\n  // Override this\n  getType() {\n    throw new Error('derive me');\n  }\n  createThreeInstance(args) {\n    if (Array.isArray(args)) {\n      return new (this.getType())(...args);\n    } else {\n      return new (this.getType())(args);\n    }\n  }\n  ngOnChanges(changes) {\n    // console.log('on changes');\n    if (this.objRef && !isLazyObject3dProxy(this.objRef)) {\n      // the object is already set and it is no proxy\n      // emit the changes\n      this.emitPropertyChanges(changes);\n      // TODO: request animation frame\n      return;\n    }\n    if (!this.objRef) {\n      // no object and no proxy is set --> create an instance\n      this.objRef = this.createThreeInstance(changes.args?.currentValue);\n    }\n    // eslint-disable-next-line guard-for-in\n    for (const key in changes) {\n      this[key] = changes[key].currentValue;\n    }\n    this.emitPropertyChanges(changes);\n  }\n  disposeObjRef() {\n    if (isDisposable(this.objRef)) {\n      this.objRef.dispose();\n    }\n  }\n  ngOnDestroy() {\n    this.removeEvents();\n    this.removeFromParent();\n    if (this.autoDispose) {\n      this.disposeObjRef();\n    }\n  }\n  applyObjRef(objRef) {\n    if (this._objRef !== objRef) {\n      this.removeFromParent();\n      this._objRef = objRef;\n      if (this.autoAddToParent) {\n        this.addToParent();\n      }\n    }\n    this.emitObjRefChange();\n  }\n  emitObjRefChange() {\n    // only emit change if _objRef is no proxy,\n    // and trigger emit over objRef event emitter\n    if (this._objRef && !isLazyObject3dProxy(this._objRef)) {\n      this._objRef.dispatchEvent?.({\n        type: 'loaded',\n        object: this._objRef\n      });\n      if (this._objRef$) {\n        this._objRef$.next(this._objRef);\n      }\n    }\n  }\n  emitPropertyChanges(changes) {\n    if (this._objRef) {\n      this._objRef.dispatchEvent?.({\n        type: 'changes',\n        changes\n      });\n    }\n    if (this.updateEmitter) {\n      this.updateEmitter.next(changes);\n    }\n  }\n  removeEvents() {\n    if (this.eventListeners && this._objRef) {\n      for (const entry of Object.entries(this.eventListeners)) {\n        this._objRef.removeEventListener(entry[0], entry[1]);\n      }\n      this.eventListeners = undefined;\n    }\n  }\n  applyEvents() {\n    if (this.eventListeners && this._objRef) {\n      for (const entry of Object.entries(this.eventListeners)) {\n        this._objRef.addEventListener(entry[0], entry[1]);\n      }\n    }\n  }\n}\nThWrapperBase.ɵfac = function ThWrapperBase_Factory(t) {\n  return new (t || ThWrapperBase)();\n};\nThWrapperBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThWrapperBase,\n  selectors: [[\"th-abs-wrapper\"]],\n  inputs: {\n    autoAddToParent: \"autoAddToParent\",\n    autoDispose: \"autoDispose\",\n    objRef: \"objRef\",\n    args: \"args\",\n    threeEvents: \"threeEvents\"\n  },\n  outputs: {\n    onUpdate: \"onUpdate\",\n    objRef$: \"objRef$\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function ThWrapperBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThWrapperBase, [{\n    type: Component,\n    args: [{\n      selector: 'th-abs-wrapper',\n      template: ''\n    }]\n  }], function () {\n    return [];\n  }, {\n    autoAddToParent: [{\n      type: Input\n    }],\n    autoDispose: [{\n      type: Input\n    }],\n    objRef: [{\n      type: Input\n    }],\n    args: [{\n      type: Input\n    }],\n    threeEvents: [{\n      type: Input\n    }],\n    onUpdate: [{\n      type: Output\n    }],\n    objRef$: [{\n      type: Output\n    }]\n  });\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThObjectBase extends ThWrapperBase {\n  constructor(parent) {\n    super();\n    this.parent = parent;\n  }\n  addToParent() {\n    if (this._objRef && this.parent.objRef && (!this._objRef.parent || this._objRef.parent.uuid !== this.parent.objRef.uuid)) {\n      this.parent.objRef.add(this._objRef);\n    }\n  }\n  removeFromParent() {\n    this._objRef?.parent?.remove(this._objRef);\n  }\n  applyObjRef(objRef) {\n    if (this._objRef !== objRef || this._objRef?.parent?.uuid !== this.parent.objRef.uuid) {\n      this.removeFromParent();\n      this._objRef = objRef;\n      if (this.autoAddToParent) {\n        this.addToParent();\n      }\n    }\n    this.emitObjRefChange();\n  }\n  attachToParent(newRef, oldRef) {\n    if (!this.parent.objRef || newRef === oldRef && oldRef?.parent?.uuid === this.parent.objRef.uuid) {\n      return;\n    }\n    // remove old obj from parent\n    if (oldRef && oldRef.parent) {\n      oldRef.parent.remove(oldRef);\n    }\n    // add new obj to parent\n    if (newRef && (!newRef.parent || newRef.parent && newRef.parent.uuid !== this.parent.objRef.uuid)) {\n      this.parent.objRef.add(newRef);\n    }\n  }\n  // object 3d methods\n  set lookAt(vector) {\n    Promise.resolve().then(() => {\n      // execute next microtick, to assume all\n      // position changes already happend,\n      // because lookAt triggers a world matrix calculation\n      if (!this.objRef) {\n        return;\n      }\n      if (Array.isArray(vector)) {\n        this.objRef.lookAt(...vector);\n      } else {\n        this.objRef.lookAt(vector);\n      }\n    });\n  }\n}\nThObjectBase.ɵfac = function ThObjectBase_Factory(t) {\n  return new (t || ThObjectBase)(i0.ɵɵdirectiveInject(ThObjectBase));\n};\nThObjectBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThObjectBase,\n  selectors: [[\"th-abs-object\"]],\n  inputs: {\n    lookAt: \"lookAt\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThObjectBase_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThObjectBase, [{\n    type: Component,\n    args: [{\n      selector: 'th-abs-object',\n      template: '<ng-content/>'\n    }]\n  }], function () {\n    return [{\n      type: ThObjectBase\n    }];\n  }, {\n    lookAt: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThObject3D extends ThObjectBase {\n  getType() {\n    return Object3D;\n  }\n  // @ts-ignore\n  get isObject3D() {\n    return this._objRef?.isObject3D;\n  }\n  // @ts-ignore\n  get id() {\n    return this._objRef?.id;\n  }\n  set uuid(value) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n  // @ts-ignore\n  get uuid() {\n    return this._objRef?.uuid;\n  }\n  set name(value) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n  // @ts-ignore\n  get name() {\n    return this._objRef?.name;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set children(value) {\n    if (this._objRef) {\n      this._objRef.children = value;\n    }\n  }\n  // @ts-ignore\n  get children() {\n    return this._objRef?.children;\n  }\n  set up(value) {\n    if (this._objRef) {\n      this._objRef.up = applyValue(this._objRef.up, value);\n    }\n  }\n  // @ts-ignore\n  get up() {\n    return this._objRef?.up;\n  }\n  set position(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  get position() {\n    return this._objRef?.position;\n  }\n  set rotation(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.rotation, value);\n    }\n  }\n  // @ts-ignore\n  get rotation() {\n    return this._objRef?.rotation;\n  }\n  set quaternion(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.quaternion, value);\n    }\n  }\n  // @ts-ignore\n  get quaternion() {\n    return this._objRef?.quaternion;\n  }\n  set scale(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.scale, value);\n    }\n  }\n  // @ts-ignore\n  get scale() {\n    return this._objRef?.scale;\n  }\n  set modelViewMatrix(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.modelViewMatrix, value);\n    }\n  }\n  // @ts-ignore\n  get modelViewMatrix() {\n    return this._objRef?.modelViewMatrix;\n  }\n  set normalMatrix(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.normalMatrix, value);\n    }\n  }\n  // @ts-ignore\n  get normalMatrix() {\n    return this._objRef?.normalMatrix;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set matrixWorld(value) {\n    if (this._objRef) {\n      this._objRef.matrixWorld = applyValue(this._objRef.matrixWorld, value);\n    }\n  }\n  // @ts-ignore\n  get matrixWorld() {\n    return this._objRef?.matrixWorld;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  set matrixWorldAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixWorldAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixWorldAutoUpdate() {\n    return this._objRef?.matrixWorldAutoUpdate;\n  }\n  set matrixWorldNeedsUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixWorldNeedsUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixWorldNeedsUpdate() {\n    return this._objRef?.matrixWorldNeedsUpdate;\n  }\n  set layers(value) {\n    if (this._objRef) {\n      this._objRef.layers = applyValue(this._objRef.layers, value);\n    }\n  }\n  // @ts-ignore\n  get layers() {\n    return this._objRef?.layers;\n  }\n  set visible(value) {\n    if (this._objRef) {\n      this._objRef.visible = value;\n    }\n  }\n  // @ts-ignore\n  get visible() {\n    return this._objRef?.visible;\n  }\n  set castShadow(value) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n  // @ts-ignore\n  get castShadow() {\n    return this._objRef?.castShadow;\n  }\n  set receiveShadow(value) {\n    if (this._objRef) {\n      this._objRef.receiveShadow = value;\n    }\n  }\n  // @ts-ignore\n  get receiveShadow() {\n    return this._objRef?.receiveShadow;\n  }\n  set frustumCulled(value) {\n    if (this._objRef) {\n      this._objRef.frustumCulled = value;\n    }\n  }\n  // @ts-ignore\n  get frustumCulled() {\n    return this._objRef?.frustumCulled;\n  }\n  set renderOrder(value) {\n    if (this._objRef) {\n      this._objRef.renderOrder = value;\n    }\n  }\n  // @ts-ignore\n  get renderOrder() {\n    return this._objRef?.renderOrder;\n  }\n  set animations(value) {\n    if (this._objRef) {\n      this._objRef.animations = value;\n    }\n  }\n  // @ts-ignore\n  get animations() {\n    return this._objRef?.animations;\n  }\n  set userData(value) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n  // @ts-ignore\n  get userData() {\n    return this._objRef?.userData;\n  }\n  set customDepthMaterial(value) {\n    if (this._objRef) {\n      this._objRef.customDepthMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get customDepthMaterial() {\n    return this._objRef?.customDepthMaterial;\n  }\n  set customDistanceMaterial(value) {\n    if (this._objRef) {\n      this._objRef.customDistanceMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get customDistanceMaterial() {\n    return this._objRef?.customDistanceMaterial;\n  }\n  set onBeforeRender(value) {\n    if (this._objRef) {\n      this._objRef.onBeforeRender = value;\n    }\n  }\n  // @ts-ignore\n  get onBeforeRender() {\n    return this._objRef?.onBeforeRender;\n  }\n  set onAfterRender(value) {\n    if (this._objRef) {\n      this._objRef.onAfterRender = value;\n    }\n  }\n  // @ts-ignore\n  get onAfterRender() {\n    return this._objRef?.onAfterRender;\n  }\n  constructor(parent) {\n    super(parent);\n  }\n}\nThObject3D.DEFAULT_UP = Object3D.DEFAULT_UP;\nThObject3D.DEFAULT_MATRIX_AUTO_UPDATE = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\nThObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE;\nThObject3D.ɵfac = function ThObject3D_Factory(t) {\n  return new (t || ThObject3D)(i0.ɵɵdirectiveInject(ThObject3D, 4));\n};\nThObject3D.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThObject3D,\n  selectors: [[\"th-object3D\"]],\n  inputs: {\n    uuid: \"uuid\",\n    name: \"name\",\n    children: \"children\",\n    up: \"up\",\n    position: \"position\",\n    rotation: \"rotation\",\n    quaternion: \"quaternion\",\n    scale: \"scale\",\n    modelViewMatrix: \"modelViewMatrix\",\n    normalMatrix: \"normalMatrix\",\n    matrix: \"matrix\",\n    matrixWorld: \"matrixWorld\",\n    matrixAutoUpdate: \"matrixAutoUpdate\",\n    matrixWorldAutoUpdate: \"matrixWorldAutoUpdate\",\n    matrixWorldNeedsUpdate: \"matrixWorldNeedsUpdate\",\n    layers: \"layers\",\n    visible: \"visible\",\n    castShadow: \"castShadow\",\n    receiveShadow: \"receiveShadow\",\n    frustumCulled: \"frustumCulled\",\n    renderOrder: \"renderOrder\",\n    animations: \"animations\",\n    userData: \"userData\",\n    customDepthMaterial: \"customDepthMaterial\",\n    customDistanceMaterial: \"customDistanceMaterial\",\n    onBeforeRender: \"onBeforeRender\",\n    onAfterRender: \"onAfterRender\"\n  },\n  features: [i0.ɵɵProvidersFeature([]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThObject3D_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThObject3D, [{\n    type: Component,\n    args: [{\n      selector: 'th-object3D',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }];\n  }, {\n    uuid: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    children: [{\n      type: Input\n    }],\n    up: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    rotation: [{\n      type: Input\n    }],\n    quaternion: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    modelViewMatrix: [{\n      type: Input\n    }],\n    normalMatrix: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    matrixWorld: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }],\n    matrixWorldAutoUpdate: [{\n      type: Input\n    }],\n    matrixWorldNeedsUpdate: [{\n      type: Input\n    }],\n    layers: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    castShadow: [{\n      type: Input\n    }],\n    receiveShadow: [{\n      type: Input\n    }],\n    frustumCulled: [{\n      type: Input\n    }],\n    renderOrder: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    userData: [{\n      type: Input\n    }],\n    customDepthMaterial: [{\n      type: Input\n    }],\n    customDistanceMaterial: [{\n      type: Input\n    }],\n    onBeforeRender: [{\n      type: Input\n    }],\n    onAfterRender: [{\n      type: Input\n    }]\n  });\n})();\nclass RaycasterEventDirective {\n  get onMouseEnter() {\n    if (!this.mouseEnter) {\n      this.mouseEnter = new EventEmitter();\n    }\n    return this.mouseEnter;\n  }\n  get onMouseExit() {\n    if (!this.mouseExit) {\n      this.mouseExit = new EventEmitter();\n    }\n    return this.mouseExit;\n  }\n  get onClick() {\n    if (!this.click) {\n      this.click = new EventEmitter();\n    }\n    return this.click;\n  }\n  get onPointerDown() {\n    if (!this.pointerDown) {\n      this.pointerDown = new EventEmitter();\n    }\n    return this.pointerDown;\n  }\n  get onPointerUp() {\n    if (!this.pointerUp) {\n      this.pointerUp = new EventEmitter();\n    }\n    return this.pointerUp;\n  }\n  constructor(host, raycasterService) {\n    this.host = host;\n    this.raycasterService = raycasterService;\n    this.emitOnMouseEnter = this.emitOnMouseEnter.bind(this);\n    this.emitOnMouseExit = this.emitOnMouseExit.bind(this);\n    this.emitOnClick = this.emitOnClick.bind(this);\n  }\n  ngAfterViewInit() {\n    this.subscribeEvents();\n  }\n  subscribeEvents() {\n    this.raycasterService.addEventTarget(this);\n  }\n  unSubscribeEvents() {\n    this.raycasterService.removeEventTarget(this);\n  }\n  emitOnMouseExit() {\n    this.mouseExit?.emit({\n      component: this.host,\n      type: RaycasterEvent.mouseExit\n    });\n  }\n  emitOnMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter?.emit(event);\n  }\n  emitOnClick(event) {\n    // console.log('onClick', event);\n    this.click?.emit(event);\n  }\n  emitOnPointerDown(event) {\n    // console.log('onClick', event);\n    this.pointerDown?.emit(event);\n  }\n  emitOnPointerUp(event) {\n    // console.log('onClick', event);\n    this.pointerUp?.emit(event);\n  }\n  ngOnDestroy() {\n    this.unSubscribeEvents();\n  }\n}\nRaycasterEventDirective.ɵfac = function RaycasterEventDirective_Factory(t) {\n  return new (t || RaycasterEventDirective)(i0.ɵɵdirectiveInject(ThObject3D, 1), i0.ɵɵdirectiveInject(RaycasterService));\n};\nRaycasterEventDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RaycasterEventDirective,\n  selectors: [[\"\", \"onClick\", \"\"], [\"\", \"onMouseEnter\", \"\"], [\"\", \"onMouseExit\", \"\"], [\"\", \"onPointerDown\", \"\"], [\"\", \"onPointerUp\", \"\"]],\n  outputs: {\n    onMouseEnter: \"onMouseEnter\",\n    onMouseExit: \"onMouseExit\",\n    onClick: \"onClick\",\n    onPointerDown: \"onPointerDown\",\n    onPointerUp: \"onPointerUp\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RaycasterEventDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[onClick], [onMouseEnter], [onMouseExit], [onPointerDown], [onPointerUp]'\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: RaycasterService\n    }];\n  }, {\n    onMouseEnter: [{\n      type: Output\n    }],\n    onMouseExit: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onPointerDown: [{\n      type: Output\n    }],\n    onPointerUp: [{\n      type: Output\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThEffectComposerGen extends ThWrapperBase {\n  getType() {\n    return EffectComposer;\n  }\n  set renderer(value) {\n    if (this._objRef) {\n      this._objRef.renderer = value;\n    }\n  }\n  // @ts-ignore\n  get renderer() {\n    return this._objRef?.renderer;\n  }\n  set renderTarget1(value) {\n    if (this._objRef) {\n      this._objRef.renderTarget1 = value;\n    }\n  }\n  // @ts-ignore\n  get renderTarget1() {\n    return this._objRef?.renderTarget1;\n  }\n  set renderTarget2(value) {\n    if (this._objRef) {\n      this._objRef.renderTarget2 = value;\n    }\n  }\n  // @ts-ignore\n  get renderTarget2() {\n    return this._objRef?.renderTarget2;\n  }\n  set writeBuffer(value) {\n    if (this._objRef) {\n      this._objRef.writeBuffer = value;\n    }\n  }\n  // @ts-ignore\n  get writeBuffer() {\n    return this._objRef?.writeBuffer;\n  }\n  set readBuffer(value) {\n    if (this._objRef) {\n      this._objRef.readBuffer = value;\n    }\n  }\n  // @ts-ignore\n  get readBuffer() {\n    return this._objRef?.readBuffer;\n  }\n  set passes(value) {\n    if (this._objRef) {\n      this._objRef.passes = value;\n    }\n  }\n  // @ts-ignore\n  get passes() {\n    return this._objRef?.passes;\n  }\n  set copyPass(value) {\n    if (this._objRef) {\n      this._objRef.copyPass = value;\n    }\n  }\n  // @ts-ignore\n  get copyPass() {\n    return this._objRef?.copyPass;\n  }\n  set clock(value) {\n    if (this._objRef) {\n      this._objRef.clock = value;\n    }\n  }\n  // @ts-ignore\n  get clock() {\n    return this._objRef?.clock;\n  }\n  set renderToScreen(value) {\n    if (this._objRef) {\n      this._objRef.renderToScreen = value;\n    }\n  }\n  // @ts-ignore\n  get renderToScreen() {\n    return this._objRef?.renderToScreen;\n  }\n}\nThEffectComposerGen.ɵfac = /* @__PURE__ */function () {\n  let ɵThEffectComposerGen_BaseFactory;\n  return function ThEffectComposerGen_Factory(t) {\n    return (ɵThEffectComposerGen_BaseFactory || (ɵThEffectComposerGen_BaseFactory = i0.ɵɵgetInheritedFactory(ThEffectComposerGen)))(t || ThEffectComposerGen);\n  };\n}();\nThEffectComposerGen.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThEffectComposerGen,\n  selectors: [[\"th-effectComposerGen\"]],\n  inputs: {\n    renderer: \"renderer\",\n    renderTarget1: \"renderTarget1\",\n    renderTarget2: \"renderTarget2\",\n    writeBuffer: \"writeBuffer\",\n    readBuffer: \"readBuffer\",\n    passes: \"passes\",\n    copyPass: \"copyPass\",\n    clock: \"clock\",\n    renderToScreen: \"renderToScreen\"\n  },\n  features: [i0.ɵɵProvidersFeature([]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThEffectComposerGen_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThEffectComposerGen, [{\n    type: Component,\n    args: [{\n      selector: 'th-effectComposerGen',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: []\n    }]\n  }], null, {\n    renderer: [{\n      type: Input\n    }],\n    renderTarget1: [{\n      type: Input\n    }],\n    renderTarget2: [{\n      type: Input\n    }],\n    writeBuffer: [{\n      type: Input\n    }],\n    readBuffer: [{\n      type: Input\n    }],\n    passes: [{\n      type: Input\n    }],\n    copyPass: [{\n      type: Input\n    }],\n    clock: [{\n      type: Input\n    }],\n    renderToScreen: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCamera extends ThObject3D {\n  // @ts-ignore\n  get isCamera() {\n    return this._objRef?.isCamera;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set layers(value) {\n    if (this._objRef) {\n      this._objRef.layers = applyValue(this._objRef.layers, value);\n    }\n  }\n  // @ts-ignore\n  get layers() {\n    return this._objRef?.layers;\n  }\n  set matrixWorldInverse(value) {\n    if (this._objRef) {\n      this._objRef.matrixWorldInverse = applyValue(this._objRef.matrixWorldInverse, value);\n    }\n  }\n  // @ts-ignore\n  get matrixWorldInverse() {\n    return this._objRef?.matrixWorldInverse;\n  }\n  set projectionMatrix(value) {\n    if (this._objRef) {\n      this._objRef.projectionMatrix = applyValue(this._objRef.projectionMatrix, value);\n    }\n  }\n  // @ts-ignore\n  get projectionMatrix() {\n    return this._objRef?.projectionMatrix;\n  }\n  set projectionMatrixInverse(value) {\n    if (this._objRef) {\n      this._objRef.projectionMatrixInverse = applyValue(this._objRef.projectionMatrixInverse, value);\n    }\n  }\n  // @ts-ignore\n  get projectionMatrixInverse() {\n    return this._objRef?.projectionMatrixInverse;\n  }\n}\nThCamera.ɵfac = /* @__PURE__ */function () {\n  let ɵThCamera_BaseFactory;\n  return function ThCamera_Factory(t) {\n    return (ɵThCamera_BaseFactory || (ɵThCamera_BaseFactory = i0.ɵɵgetInheritedFactory(ThCamera)))(t || ThCamera);\n  };\n}();\nThCamera.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCamera,\n  selectors: [[\"th-camera\"]],\n  inputs: {\n    layers: \"layers\",\n    matrixWorldInverse: \"matrixWorldInverse\",\n    projectionMatrix: \"projectionMatrix\",\n    projectionMatrixInverse: \"projectionMatrixInverse\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThCamera)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCamera_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCamera, [{\n    type: Component,\n    args: [{\n      selector: 'th-camera',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThCamera)\n      }]\n    }]\n  }], null, {\n    layers: [{\n      type: Input\n    }],\n    matrixWorldInverse: [{\n      type: Input\n    }],\n    projectionMatrix: [{\n      type: Input\n    }],\n    projectionMatrixInverse: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThScene extends ThObject3D {\n  getType() {\n    return Scene;\n  }\n  // @ts-ignore\n  get isScene() {\n    return this._objRef?.isScene;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n  set backgroundBlurriness(value) {\n    if (this._objRef) {\n      this._objRef.backgroundBlurriness = value;\n    }\n  }\n  // @ts-ignore\n  get backgroundBlurriness() {\n    return this._objRef?.backgroundBlurriness;\n  }\n  set backgroundIntensity(value) {\n    if (this._objRef) {\n      this._objRef.backgroundIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get backgroundIntensity() {\n    return this._objRef?.backgroundIntensity;\n  }\n  set overrideMaterial(value) {\n    if (this._objRef) {\n      this._objRef.overrideMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get overrideMaterial() {\n    return this._objRef?.overrideMaterial;\n  }\n  set background(value) {\n    if (this._objRef) {\n      this._objRef.background = applyValue(this._objRef.background, value);\n    }\n  }\n  // @ts-ignore\n  get background() {\n    return this._objRef?.background;\n  }\n  set environment(value) {\n    if (this._objRef) {\n      this._objRef.environment = value;\n    }\n  }\n  // @ts-ignore\n  get environment() {\n    return this._objRef?.environment;\n  }\n}\nThScene.ɵfac = /* @__PURE__ */function () {\n  let ɵThScene_BaseFactory;\n  return function ThScene_Factory(t) {\n    return (ɵThScene_BaseFactory || (ɵThScene_BaseFactory = i0.ɵɵgetInheritedFactory(ThScene)))(t || ThScene);\n  };\n}();\nThScene.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThScene,\n  selectors: [[\"th-scene\"]],\n  inputs: {\n    type: \"type\",\n    fog: \"fog\",\n    backgroundBlurriness: \"backgroundBlurriness\",\n    backgroundIntensity: \"backgroundIntensity\",\n    overrideMaterial: \"overrideMaterial\",\n    background: \"background\",\n    environment: \"environment\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThScene)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThScene_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThScene, [{\n    type: Component,\n    args: [{\n      selector: 'th-scene',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThScene)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }],\n    backgroundBlurriness: [{\n      type: Input\n    }],\n    backgroundIntensity: [{\n      type: Input\n    }],\n    overrideMaterial: [{\n      type: Input\n    }],\n    background: [{\n      type: Input\n    }],\n    environment: [{\n      type: Input\n    }]\n  });\n})();\nconst RENDERER_DEFAULTS = {\n  alpha: true,\n  antialias: true,\n  preserveDrawingBuffer: true\n};\nclass ThEngineService {\n  get canvas() {\n    return this.rendererParameters?.domElement;\n  }\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.clock = new Clock();\n    this.destroyed$ = new Subject();\n    this.resizeEmitter = new EventEmitter();\n    this.beforeRenderEmitter = new EventEmitter();\n    this.views = [];\n    this.beforeRender$ = this.beforeRenderEmitter.pipe(takeUntil(this.destroyed$));\n    this.resize$ = this.resizeEmitter.pipe(takeUntil(this.destroyed$));\n  }\n  get renderer() {\n    return this._renderer;\n  }\n  ngOnDestroy() {\n    if (this.resizeObserver && this.canvas) {\n      this.resizeObserver.unobserve(this.canvas);\n    }\n  }\n  initResizeObserver() {\n    // We have to run this outside angular zones,\n    // because it could trigger heavy changeDetection cycles.\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.canvas) {\n        throw new Error('missing canvas element');\n      }\n      this.resize();\n      if (!this.resizeObserver) {\n        // @ts-ignore\n        this.resizeObserver = new ResizeObserver(() => {\n          this.resize();\n        });\n      }\n      this.resizeObserver.observe(this.canvas);\n    });\n  }\n  initRenderer() {\n    if (this._renderer) {\n      return;\n    }\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this.rendererParameters?.domElement,\n      ...RENDERER_DEFAULTS\n    });\n    Object.assign(this._renderer, {\n      ...RENDERER_DEFAULTS,\n      ...this.rendererParameters\n    });\n    this.resize();\n  }\n  setRenderer(options) {\n    this.rendererParameters = options;\n    this.initRenderer();\n    this.initResizeObserver();\n  }\n  addView(view) {\n    this.views.push(view);\n    const canvasDimensions = this.calcRendererSize();\n    if (canvasDimensions) {\n      this.adjustViewDimensions(view, canvasDimensions.width, canvasDimensions.height);\n    }\n  }\n  render() {\n    this.beforeRenderEmitter.emit({\n      engine: this,\n      delta: this.clock.getDelta()\n    });\n    for (const view of this.views) {\n      this.renderView(view);\n    }\n  }\n  renderView(view) {\n    if (!this._renderer) {\n      return;\n    }\n    const camera = view.camera;\n    const scene = view.scene;\n    if (!camera || !scene || !camera.objRef || !scene.objRef) {\n      return;\n    }\n    const renderer = this._renderer;\n    if (isObserved(view.onRender)) {\n      this.ngZone.run(() => view.onRender.emit({\n        renderer,\n        scene,\n        camera\n      }));\n    }\n    this.applyRendererParametersFromView(view);\n    if (view.effectComposer) {\n      view.effectComposer.render();\n    } else {\n      this._renderer.render(scene.objRef, camera.objRef);\n    }\n  }\n  applyRendererParametersFromView(view) {\n    if (!this._renderer) {\n      return;\n    }\n    if (view.viewPort) {\n      if (view.viewPort instanceof Vector4) {\n        this._renderer.setViewport(view.viewPort);\n      } else {\n        this._renderer.setViewport(view.viewPort.x, view.viewPort.y, view.viewPort.width, view.viewPort.height);\n      }\n    }\n    if (view.scissor) {\n      if (view.scissor instanceof Vector4) {\n        this._renderer.setScissor(view.scissor);\n      } else {\n        this._renderer.setScissor(view.scissor.x, view.scissor.y, view.scissor.width, view.scissor.height);\n      }\n    }\n    if (view.scissorTest !== undefined) {\n      this._renderer.setScissorTest(view.scissorTest);\n    }\n    if (view.clearColor) {\n      this._renderer.setClearColor(view.clearColor);\n    }\n    if (view.clearAlpha !== undefined) {\n      this._renderer.setClearAlpha(view.clearAlpha);\n    }\n    if (view.shadow !== undefined) {\n      this._renderer.shadowMap.enabled = true;\n    }\n  }\n  resize() {\n    if (!this._renderer || !this.canvas) {\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const {\n      width,\n      height\n    } = this.calcRendererSize();\n    this._renderer.setSize(width, height, false);\n    for (const view of this.views) {\n      this.adjustViewDimensions(view, width, height);\n    }\n    this.resizeEmitter.emit({\n      width,\n      height\n    });\n    return true;\n  }\n  calcRendererSize() {\n    if (!this._renderer || !this.canvas) {\n      return;\n    }\n    const pixelRatio = window.devicePixelRatio;\n    return {\n      width: (this.canvas.clientWidth ?? 0) * pixelRatio,\n      height: (this.canvas.clientHeight ?? 0) * pixelRatio\n    };\n  }\n  adjustViewDimensions(view, width, height) {\n    if (!view.viewPort) {\n      if (view.camera && view.camera.objRef.aspect) {\n        view.camera.objRef.aspect = width / height;\n        view.camera.objRef.updateProjectionMatrix();\n      }\n      view.effectComposer?.setSize(width, height);\n    }\n  }\n}\nThEngineService.ɵfac = function ThEngineService_Factory(t) {\n  return new (t || ThEngineService)(i0.ɵɵinject(i0.NgZone));\n};\nThEngineService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ThEngineService,\n  factory: ThEngineService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThEngineService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThView {\n  constructor(engServ, raycaster) {\n    this.engServ = engServ;\n    this.raycaster = raycaster;\n    // -----------------------------------------------------------------------------------------------\n    // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n    this.onRender = new EventEmitter();\n  }\n  set contentScene(scene) {\n    if (scene) {\n      this.scene = scene;\n    }\n  }\n  set effectComposer(effectComposer) {\n    this._effectComposer = effectComposer;\n    this.configureEffectComposerRenderTarget();\n  }\n  get effectComposer() {\n    return this._effectComposer;\n  }\n  set camera(camera) {\n    this._camera = camera;\n    this.initRaycaster();\n  }\n  get camera() {\n    return this._camera;\n  }\n  set contentCamera(camera) {\n    if (camera) {\n      this.camera = camera;\n    }\n  }\n  set viewPort(viewPort) {\n    this._viewPort = viewPort;\n    this.configureEffectComposerRenderTarget();\n  }\n  get viewPort() {\n    return this._viewPort;\n  }\n  ngOnInit() {\n    this.initRaycaster();\n  }\n  initRaycaster() {\n    if (this.camera && this.engServ.canvas) {\n      this.raycaster.init(this.camera, this.engServ.canvas);\n    }\n  }\n  add(scene) {\n    // nothing to do here\n  }\n  remove(scene) {\n    // norhing to do\n  }\n  configureEffectComposerRenderTarget() {\n    if (!this.viewPort || !this.effectComposer) {\n      return;\n    } else {\n      let width;\n      let height;\n      if (this.viewPort instanceof Vector4) {\n        width = this.viewPort.z;\n        height = this.viewPort?.width;\n      } else {\n        width = this.viewPort.width;\n        height = this.viewPort.height;\n      }\n      //TODO: check if pixel ration ha\n      this.effectComposer.setSize(width, height);\n    }\n  }\n}\nThView.ɵfac = function ThView_Factory(t) {\n  return new (t || ThView)(i0.ɵɵdirectiveInject(ThEngineService), i0.ɵɵdirectiveInject(RaycasterService));\n};\nThView.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThView,\n  selectors: [[\"th-view\"]],\n  contentQueries: function ThView_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ThScene, 5);\n      i0.ɵɵcontentQuery(dirIndex, ThCamera, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentScene = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentCamera = _t.first);\n    }\n  },\n  inputs: {\n    scene: \"scene\",\n    effectComposer: \"effectComposer\",\n    camera: \"camera\",\n    shadow: \"shadow\",\n    viewPort: \"viewPort\",\n    scissor: \"scissor\",\n    scissorTest: \"scissorTest\",\n    clearColor: \"clearColor\",\n    clearAlpha: \"clearAlpha\"\n  },\n  outputs: {\n    onRender: \"onRender\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThView)\n  }, {\n    provide: RAYCASTER,\n    useValue: new Raycaster()\n  }, RaycasterService])],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThView_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThView, [{\n    type: Component,\n    args: [{\n      selector: 'th-view',\n      template: '<ng-content/>',\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThView)\n      }, {\n        provide: RAYCASTER,\n        useValue: new Raycaster()\n      }, RaycasterService]\n    }]\n  }], function () {\n    return [{\n      type: ThEngineService\n    }, {\n      type: RaycasterService\n    }];\n  }, {\n    scene: [{\n      type: Input\n    }],\n    contentScene: [{\n      type: ContentChild,\n      args: [ThScene]\n    }],\n    effectComposer: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    contentCamera: [{\n      type: ContentChild,\n      args: [ThCamera]\n    }],\n    shadow: [{\n      type: Input\n    }],\n    viewPort: [{\n      type: Input\n    }],\n    scissor: [{\n      type: Input\n    }],\n    scissorTest: [{\n      type: Input\n    }],\n    clearColor: [{\n      type: Input\n    }],\n    clearAlpha: [{\n      type: Input\n    }],\n    onRender: [{\n      type: Output\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThEffectComposer extends ThEffectComposerGen {\n  constructor(view, engineService) {\n    super();\n    this.view = view;\n    this.engineService = engineService;\n  }\n  createThreeInstance(args) {\n    if (!args) {\n      args = new Array(5);\n    }\n    args[0] = args[0] ?? this.engineService.renderer;\n    args[1] = args[1] ?? this.initRenderTarget();\n    return super.createThreeInstance(args);\n  }\n  initRenderTarget() {\n    if (!this.view.viewPort) {\n      return;\n    } else {\n      let width;\n      let height;\n      if (this.view.viewPort instanceof Vector4) {\n        width = this.view.viewPort.z;\n        height = this.view.viewPort?.width;\n      } else {\n        width = this.view.viewPort.width;\n        height = this.view.viewPort.height;\n      }\n      return new WebGLRenderTarget(width, height);\n    }\n  }\n  addToParent() {\n    if (this._objRef) {\n      this.view.effectComposer = this._objRef;\n    }\n  }\n  removeFromParent() {\n    this.view.effectComposer = undefined;\n  }\n}\nThEffectComposer.ɵfac = function ThEffectComposer_Factory(t) {\n  return new (t || ThEffectComposer)(i0.ɵɵdirectiveInject(ThView), i0.ɵɵdirectiveInject(ThEngineService));\n};\nThEffectComposer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThEffectComposer,\n  selectors: [[\"th-effectComposer\"]],\n  features: [i0.ɵɵProvidersFeature([]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThEffectComposer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThEffectComposer, [{\n    type: Component,\n    args: [{\n      selector: 'th-effectComposer',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: ThView\n    }, {\n      type: ThEngineService\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThPassBase extends ThWrapperBase {\n  constructor(effectComposer) {\n    super();\n    this.effectComposer = effectComposer;\n  }\n  addToParent() {\n    if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n      this.effectComposer.objRef.addPass(this._objRef);\n    }\n  }\n  removeFromParent() {\n    if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n      this.effectComposer.objRef.removePass(this._objRef);\n    }\n  }\n}\nThPassBase.ɵfac = function ThPassBase_Factory(t) {\n  return new (t || ThPassBase)(i0.ɵɵdirectiveInject(ThEffectComposer, 8));\n};\nThPassBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPassBase,\n  selectors: [[\"th-abs-control\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ThPassBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPassBase, [{\n    type: Component,\n    args: [{\n      selector: 'th-abs-control',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: ThEffectComposer,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThPass extends ThPassBase {\n  getType() {\n    return Pass;\n  }\n  set isPass(value) {\n    if (this._objRef) {\n      this._objRef.isPass = value;\n    }\n  }\n  // @ts-ignore\n  get isPass() {\n    return this._objRef?.isPass;\n  }\n  set enabled(value) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n  // @ts-ignore\n  get enabled() {\n    return this._objRef?.enabled;\n  }\n  set needsSwap(value) {\n    if (this._objRef) {\n      this._objRef.needsSwap = value;\n    }\n  }\n  // @ts-ignore\n  get needsSwap() {\n    return this._objRef?.needsSwap;\n  }\n  set clear(value) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n  // @ts-ignore\n  get clear() {\n    return this._objRef?.clear;\n  }\n  set renderToScreen(value) {\n    if (this._objRef) {\n      this._objRef.renderToScreen = value;\n    }\n  }\n  // @ts-ignore\n  get renderToScreen() {\n    return this._objRef?.renderToScreen;\n  }\n}\nThPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThPass_BaseFactory;\n  return function ThPass_Factory(t) {\n    return (ɵThPass_BaseFactory || (ɵThPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThPass)))(t || ThPass);\n  };\n}();\nThPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPass,\n  selectors: [[\"th-pass\"]],\n  inputs: {\n    isPass: \"isPass\",\n    enabled: \"enabled\",\n    needsSwap: \"needsSwap\",\n    clear: \"clear\",\n    renderToScreen: \"renderToScreen\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-pass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThPass)\n      }]\n    }]\n  }], null, {\n    isPass: [{\n      type: Input\n    }],\n    enabled: [{\n      type: Input\n    }],\n    needsSwap: [{\n      type: Input\n    }],\n    clear: [{\n      type: Input\n    }],\n    renderToScreen: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThRenderPassGen extends ThPass {\n  getType() {\n    return RenderPass;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set overrideMaterial(value) {\n    if (this._objRef) {\n      this._objRef.overrideMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get overrideMaterial() {\n    return this._objRef?.overrideMaterial;\n  }\n  set clearColor(value) {\n    if (this._objRef) {\n      this._objRef.clearColor = applyValue(this._objRef.clearColor, value);\n    }\n  }\n  // @ts-ignore\n  get clearColor() {\n    return this._objRef?.clearColor;\n  }\n  set clearAlpha(value) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get clearAlpha() {\n    return this._objRef?.clearAlpha;\n  }\n  set clearDepth(value) {\n    if (this._objRef) {\n      this._objRef.clearDepth = value;\n    }\n  }\n  // @ts-ignore\n  get clearDepth() {\n    return this._objRef?.clearDepth;\n  }\n}\nThRenderPassGen.ɵfac = /* @__PURE__ */function () {\n  let ɵThRenderPassGen_BaseFactory;\n  return function ThRenderPassGen_Factory(t) {\n    return (ɵThRenderPassGen_BaseFactory || (ɵThRenderPassGen_BaseFactory = i0.ɵɵgetInheritedFactory(ThRenderPassGen)))(t || ThRenderPassGen);\n  };\n}();\nThRenderPassGen.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThRenderPassGen,\n  selectors: [[\"th-renderPassGen\"]],\n  inputs: {\n    scene: \"scene\",\n    camera: \"camera\",\n    overrideMaterial: \"overrideMaterial\",\n    clearColor: \"clearColor\",\n    clearAlpha: \"clearAlpha\",\n    clearDepth: \"clearDepth\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThRenderPassGen)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThRenderPassGen_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRenderPassGen, [{\n    type: Component,\n    args: [{\n      selector: 'th-renderPassGen',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThRenderPassGen)\n      }]\n    }]\n  }], null, {\n    scene: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    overrideMaterial: [{\n      type: Input\n    }],\n    clearColor: [{\n      type: Input\n    }],\n    clearAlpha: [{\n      type: Input\n    }],\n    clearDepth: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRenderPass extends ThRenderPassGen {\n  constructor(effectComposer, view) {\n    super(effectComposer);\n    this.effectComposer = effectComposer;\n    this.view = view;\n  }\n  createThreeInstance(args) {\n    if (!args) {\n      args = new Array(5);\n    }\n    args[0] = args[0] ?? this.view.scene;\n    args[1] = args[1] ?? this.view.camera;\n    args[2] = args[2] ?? this.overrideMaterial;\n    args[3] = args[3] ?? this.clearColor;\n    args[4] = args[4] ?? this.clearAlpha;\n    return super.createThreeInstance(args);\n  }\n  ngAfterContentChecked() {\n    if (!this._objRef) {\n      return;\n    }\n    if (this.view.scene && this.view.scene.objRef) {\n      this._objRef.scene = this.view.scene.objRef;\n    }\n    if (this.view.camera && this.view.camera.objRef) {\n      this._objRef.camera = this.view.camera.objRef;\n    }\n  }\n}\nThRenderPass.ɵfac = function ThRenderPass_Factory(t) {\n  return new (t || ThRenderPass)(i0.ɵɵdirectiveInject(ThEffectComposer), i0.ɵɵdirectiveInject(ThView));\n};\nThRenderPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThRenderPass,\n  selectors: [[\"th-renderPass\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThRenderPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThRenderPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRenderPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-renderPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThRenderPass)\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ThEffectComposer\n    }, {\n      type: ThView\n    }];\n  }, null);\n})();\nclass ThAnimationLoopService {\n  constructor(engineService, ngZone) {\n    this.engineService = engineService;\n    this.ngZone = ngZone;\n    this.active = true;\n    this.destroyed$ = new Subject();\n    this.beforeRender$ = this.engineService.beforeRender$;\n    this.engineService.resize$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.requestAnimationFrame());\n  }\n  ngOnDestroy() {\n    this.stop();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n  /**\n   * start the loop\n   */\n  start() {\n    if (!this.active) {\n      this.active = true;\n      this.requestAnimationFrame();\n    }\n  }\n  /**\n   * stop the loop\n   */\n  stop() {\n    this.active = false;\n    if (this.frameId !== undefined) {\n      cancelAnimationFrame(this.frameId);\n      this.frameId = undefined;\n    }\n  }\n  /**\n   *\n   * @returns true if the render loop is active\n   */\n  isActive() {\n    return this.active;\n  }\n  /**\n   * trigger an animation frame request\n   */\n  requestAnimationFrame() {\n    if (this.frameId === undefined) {\n      this.ngZone.runOutsideAngular(() => this.frameId = requestAnimationFrame(() => {\n        this.frameId = undefined;\n        this.engineService.render();\n        if (this.active) {\n          this.requestAnimationFrame();\n        }\n      }));\n    }\n  }\n}\nThAnimationLoopService.ɵfac = function ThAnimationLoopService_Factory(t) {\n  return new (t || ThAnimationLoopService)(i0.ɵɵinject(ThEngineService), i0.ɵɵinject(i0.NgZone));\n};\nThAnimationLoopService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ThAnimationLoopService,\n  factory: ThAnimationLoopService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAnimationLoopService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ThEngineService\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThCanvas extends ThView {\n  get obj() {\n    return this;\n  }\n  set views(viewList) {\n    viewList.forEach(v => this.engServ.addView(v));\n  }\n  set rendererCanvas(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this._rendererCanvas = canvas;\n    canvas.nativeElement.id += this.nid;\n  }\n  get rendererCanvas() {\n    return this._rendererCanvas;\n  }\n  constructor(engServ, animationLoop, raycaster) {\n    super(engServ, raycaster);\n    this.engServ = engServ;\n    this.animationLoop = animationLoop;\n    this.raycaster = raycaster;\n    this.isDevMode = isDevMode;\n    this.nid = ThCanvas.instanceCnt++;\n    /**\n     * if true does not use the ThCanvas as view\n     * this is esepcially usefull if you have multiple views\n     * and want to iterate over all of them with *ngFor\n     * use statically (before ngOnInit is triggered)\n     */\n    this.disableDefaultView = false;\n  }\n  ngAfterContentChecked() {\n    this.animationLoop.requestAnimationFrame();\n  }\n  ngAfterViewInit() {\n    this.animationLoop.requestAnimationFrame();\n  }\n  ngOnInit() {\n    this.applyRendererParameters();\n    super.ngOnInit();\n    if (!this.disableDefaultView) {\n      this.engServ.addView(this);\n    }\n  }\n  applyRendererParameters() {\n    if (!this.rendererCanvas) {\n      throw new Error('Missing Canvas');\n    }\n    this.engServ.setRenderer({\n      ...this.rendererParameters,\n      domElement: this.rendererCanvas.nativeElement\n    });\n  }\n}\nThCanvas.instanceCnt = 0;\nThCanvas.ɵfac = function ThCanvas_Factory(t) {\n  return new (t || ThCanvas)(i0.ɵɵdirectiveInject(ThEngineService), i0.ɵɵdirectiveInject(ThAnimationLoopService), i0.ɵɵdirectiveInject(forwardRef(() => RaycasterService)));\n};\nThCanvas.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCanvas,\n  selectors: [[\"th-canvas\"]],\n  contentQueries: function ThCanvas_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ThView, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.views = _t);\n    }\n  },\n  viewQuery: function ThCanvas_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rendererCanvas = _t.first);\n    }\n  },\n  inputs: {\n    rendererParameters: \"rendererParameters\",\n    disableDefaultView: \"disableDefaultView\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThCanvas)\n  }, ThEngineService, ThAnimationLoopService, {\n    provide: RAYCASTER,\n    useValue: new Raycaster()\n  }, forwardRef(() => RaycasterService), {\n    provide: ThView,\n    useExisting: forwardRef(() => ThCanvas)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 1,\n  consts: [[\"id\", \"rendererCanvas\"], [\"rendererCanvas\", \"\"], [4, \"ngIf\"]],\n  template: function ThCanvas_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"canvas\", 0, 1);\n      i0.ɵɵtemplate(2, ThCanvas_ng_content_2_Template, 1, 0, \"ng-content\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDevMode());\n    }\n  },\n  dependencies: [i4.NgIf],\n  styles: [\"[_nghost-%COMP%]{display:flex;flex:auto;line-height:0;height:100%}canvas[_ngcontent-%COMP%]{flex:auto;outline:none;width:100%;height:100%}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCanvas, [{\n    type: Component,\n    args: [{\n      selector: 'th-canvas',\n      template: '<canvas #rendererCanvas id=\"rendererCanvas\"><ng-content *ngIf=\"isDevMode()\" ></ng-content></canvas>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThCanvas)\n      }, ThEngineService, ThAnimationLoopService, {\n        provide: RAYCASTER,\n        useValue: new Raycaster()\n      }, forwardRef(() => RaycasterService), {\n        provide: ThView,\n        useExisting: forwardRef(() => ThCanvas)\n      }],\n      styles: [\":host{display:flex;flex:auto;line-height:0;height:100%}canvas{flex:auto;outline:none;width:100%;height:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ThEngineService\n    }, {\n      type: ThAnimationLoopService\n    }, {\n      type: RaycasterService,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => RaycasterService)]\n      }]\n    }];\n  }, {\n    rendererParameters: [{\n      type: Input\n    }],\n    disableDefaultView: [{\n      type: Input\n    }],\n    views: [{\n      type: ContentChildren,\n      args: [ThView]\n    }],\n    rendererCanvas: [{\n      type: ViewChild,\n      args: ['rendererCanvas', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThControlBase extends ThWrapperBase {\n  constructor(_camera, canvas) {\n    super();\n    this._camera = _camera;\n    this.canvas = canvas;\n    this.renderLoop = inject(ThAnimationLoopService);\n  }\n  createThreeInstance(args) {\n    if (!args) {\n      args = [this._camera.objRef, this.canvas?.rendererCanvas?.nativeElement];\n    }\n    const instance = super.createThreeInstance(args);\n    this.patchDispatchEvent(instance);\n    this.subscribeControlUpdater(instance);\n    return instance;\n  }\n  patchDispatchEvent(dispatcher) {\n    if (dispatcher.dispatchEvent) {\n      const origMethod = this.origDispatchEventMethod = dispatcher.dispatchEvent;\n      dispatcher.dispatchEvent = event => {\n        origMethod.call(dispatcher, event);\n        // request an animation frame after an event was emitted;\n        this.renderLoop.requestAnimationFrame();\n      };\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.unpatchDispatchEvent();\n    this.unsubscribeControlUpdater();\n  }\n  unpatchDispatchEvent() {\n    if (this.origDispatchEventMethod && this._objRef) {\n      this._objRef.dispatchEvent = this.origDispatchEventMethod;\n    }\n  }\n  subscribeControlUpdater(control) {\n    if (control.update !== undefined) {\n      this.beforeRenderSubscription = this.renderLoop.beforeRender$.subscribe(state => {\n        control.update(state.delta);\n      });\n    }\n  }\n  unsubscribeControlUpdater() {\n    if (this.beforeRenderSubscription) {\n      this.beforeRenderSubscription.unsubscribe();\n    }\n  }\n}\nThControlBase.ɵfac = function ThControlBase_Factory(t) {\n  return new (t || ThControlBase)(i0.ɵɵdirectiveInject(ThObject3D), i0.ɵɵdirectiveInject(ThCanvas));\n};\nThControlBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThControlBase,\n  selectors: [[\"th-abs-control\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ThControlBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThControlBase, [{\n    type: Component,\n    args: [{\n      selector: 'th-abs-control',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D\n    }, {\n      type: ThCanvas\n    }];\n  }, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTransformControlsGen extends ThControlBase {\n  getType() {\n    return TransformControls;\n  }\n  set domElement(value) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n  // @ts-ignore\n  get domElement() {\n    return this._objRef?.domElement;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set object(value) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n  // @ts-ignore\n  get object() {\n    return this._objRef?.object;\n  }\n  set enabled(value) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n  // @ts-ignore\n  get enabled() {\n    return this._objRef?.enabled;\n  }\n  set axis(value) {\n    if (this._objRef) {\n      this._objRef.axis = value;\n    }\n  }\n  // @ts-ignore\n  get axis() {\n    return this._objRef?.axis;\n  }\n  set mode(value) {\n    if (this._objRef) {\n      this._objRef.mode = value;\n    }\n  }\n  // @ts-ignore\n  get mode() {\n    return this._objRef?.mode;\n  }\n  set translationSnap(value) {\n    if (this._objRef) {\n      this._objRef.translationSnap = value;\n    }\n  }\n  // @ts-ignore\n  get translationSnap() {\n    return this._objRef?.translationSnap;\n  }\n  set rotationSnap(value) {\n    if (this._objRef) {\n      this._objRef.rotationSnap = value;\n    }\n  }\n  // @ts-ignore\n  get rotationSnap() {\n    return this._objRef?.rotationSnap;\n  }\n  set space(value) {\n    if (this._objRef) {\n      this._objRef.space = value;\n    }\n  }\n  // @ts-ignore\n  get space() {\n    return this._objRef?.space;\n  }\n  set size(value) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n  // @ts-ignore\n  get size() {\n    return this._objRef?.size;\n  }\n  set dragging(value) {\n    if (this._objRef) {\n      this._objRef.dragging = value;\n    }\n  }\n  // @ts-ignore\n  get dragging() {\n    return this._objRef?.dragging;\n  }\n  set showX(value) {\n    if (this._objRef) {\n      this._objRef.showX = value;\n    }\n  }\n  // @ts-ignore\n  get showX() {\n    return this._objRef?.showX;\n  }\n  set showY(value) {\n    if (this._objRef) {\n      this._objRef.showY = value;\n    }\n  }\n  // @ts-ignore\n  get showY() {\n    return this._objRef?.showY;\n  }\n  set showZ(value) {\n    if (this._objRef) {\n      this._objRef.showZ = value;\n    }\n  }\n  // @ts-ignore\n  get showZ() {\n    return this._objRef?.showZ;\n  }\n  // @ts-ignore\n  get isTransformControls() {\n    return this._objRef?.isTransformControls;\n  }\n  set mouseButtons(value) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n  // @ts-ignore\n  get mouseButtons() {\n    return this._objRef?.mouseButtons;\n  }\n}\nThTransformControlsGen.ɵfac = /* @__PURE__ */function () {\n  let ɵThTransformControlsGen_BaseFactory;\n  return function ThTransformControlsGen_Factory(t) {\n    return (ɵThTransformControlsGen_BaseFactory || (ɵThTransformControlsGen_BaseFactory = i0.ɵɵgetInheritedFactory(ThTransformControlsGen)))(t || ThTransformControlsGen);\n  };\n}();\nThTransformControlsGen.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTransformControlsGen,\n  selectors: [[\"th-transformControlsGen\"]],\n  inputs: {\n    domElement: \"domElement\",\n    camera: \"camera\",\n    object: \"object\",\n    enabled: \"enabled\",\n    axis: \"axis\",\n    mode: \"mode\",\n    translationSnap: \"translationSnap\",\n    rotationSnap: \"rotationSnap\",\n    space: \"space\",\n    size: \"size\",\n    dragging: \"dragging\",\n    showX: \"showX\",\n    showY: \"showY\",\n    showZ: \"showZ\",\n    mouseButtons: \"mouseButtons\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThTransformControlsGen)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTransformControlsGen_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTransformControlsGen, [{\n    type: Component,\n    args: [{\n      selector: 'th-transformControlsGen',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThTransformControlsGen)\n      }]\n    }]\n  }], null, {\n    domElement: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    object: [{\n      type: Input\n    }],\n    enabled: [{\n      type: Input\n    }],\n    axis: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    translationSnap: [{\n      type: Input\n    }],\n    rotationSnap: [{\n      type: Input\n    }],\n    space: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    dragging: [{\n      type: Input\n    }],\n    showX: [{\n      type: Input\n    }],\n    showY: [{\n      type: Input\n    }],\n    showZ: [{\n      type: Input\n    }],\n    mouseButtons: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTransformControls extends ThTransformControlsGen {\n  getType() {\n    return TransformControls;\n  }\n  set object(value) {\n    if (this._objRef) {\n      this._objRef.object = value;\n      if (value) {\n        this._objRef.attach(value);\n      } else {\n        this._objRef.detach();\n      }\n    }\n  }\n  addToParent() {\n    if (this._objRef) {\n      this.canvas?.scene?.objRef?.add(this._objRef);\n    }\n  }\n  removeFromParent() {\n    if (this._objRef) {\n      this.canvas?.scene?.objRef?.remove(this._objRef);\n    }\n  }\n}\nThTransformControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThTransformControls_BaseFactory;\n  return function ThTransformControls_Factory(t) {\n    return (ɵThTransformControls_BaseFactory || (ɵThTransformControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThTransformControls)))(t || ThTransformControls);\n  };\n}();\nThTransformControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTransformControls,\n  selectors: [[\"th-transformControls\"]],\n  inputs: {\n    object: \"object\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThTransformControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTransformControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTransformControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-transformControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThTransformControls)\n      }]\n    }]\n  }], null, {\n    object: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThAdaptiveToneMappingPass extends ThPass {\n  getType() {\n    return AdaptiveToneMappingPass;\n  }\n  set adaptive(value) {\n    if (this._objRef) {\n      this._objRef.adaptive = value;\n    }\n  }\n  // @ts-ignore\n  get adaptive() {\n    return this._objRef?.adaptive;\n  }\n  set resolution(value) {\n    if (this._objRef) {\n      this._objRef.resolution = value;\n    }\n  }\n  // @ts-ignore\n  get resolution() {\n    return this._objRef?.resolution;\n  }\n  set needsInit(value) {\n    if (this._objRef) {\n      this._objRef.needsInit = value;\n    }\n  }\n  // @ts-ignore\n  get needsInit() {\n    return this._objRef?.needsInit;\n  }\n  set luminanceRT(value) {\n    if (this._objRef) {\n      this._objRef.luminanceRT = value;\n    }\n  }\n  // @ts-ignore\n  get luminanceRT() {\n    return this._objRef?.luminanceRT;\n  }\n  set previousLuminanceRT(value) {\n    if (this._objRef) {\n      this._objRef.previousLuminanceRT = value;\n    }\n  }\n  // @ts-ignore\n  get previousLuminanceRT() {\n    return this._objRef?.previousLuminanceRT;\n  }\n  set currentLuminanceRT(value) {\n    if (this._objRef) {\n      this._objRef.currentLuminanceRT = value;\n    }\n  }\n  // @ts-ignore\n  get currentLuminanceRT() {\n    return this._objRef?.currentLuminanceRT;\n  }\n  set copyUniforms(value) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n  // @ts-ignore\n  get copyUniforms() {\n    return this._objRef?.copyUniforms;\n  }\n  set materialCopy(value) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n  // @ts-ignore\n  get materialCopy() {\n    return this._objRef?.materialCopy;\n  }\n  set materialLuminance(value) {\n    if (this._objRef) {\n      this._objRef.materialLuminance = value;\n    }\n  }\n  // @ts-ignore\n  get materialLuminance() {\n    return this._objRef?.materialLuminance;\n  }\n  set adaptLuminanceShader(value) {\n    if (this._objRef) {\n      this._objRef.adaptLuminanceShader = value;\n    }\n  }\n  // @ts-ignore\n  get adaptLuminanceShader() {\n    return this._objRef?.adaptLuminanceShader;\n  }\n  set materialAdaptiveLum(value) {\n    if (this._objRef) {\n      this._objRef.materialAdaptiveLum = value;\n    }\n  }\n  // @ts-ignore\n  get materialAdaptiveLum() {\n    return this._objRef?.materialAdaptiveLum;\n  }\n  set materialToneMap(value) {\n    if (this._objRef) {\n      this._objRef.materialToneMap = value;\n    }\n  }\n  // @ts-ignore\n  get materialToneMap() {\n    return this._objRef?.materialToneMap;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThAdaptiveToneMappingPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThAdaptiveToneMappingPass_BaseFactory;\n  return function ThAdaptiveToneMappingPass_Factory(t) {\n    return (ɵThAdaptiveToneMappingPass_BaseFactory || (ɵThAdaptiveToneMappingPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThAdaptiveToneMappingPass)))(t || ThAdaptiveToneMappingPass);\n  };\n}();\nThAdaptiveToneMappingPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThAdaptiveToneMappingPass,\n  selectors: [[\"th-adaptiveToneMappingPass\"]],\n  inputs: {\n    adaptive: \"adaptive\",\n    resolution: \"resolution\",\n    needsInit: \"needsInit\",\n    luminanceRT: \"luminanceRT\",\n    previousLuminanceRT: \"previousLuminanceRT\",\n    currentLuminanceRT: \"currentLuminanceRT\",\n    copyUniforms: \"copyUniforms\",\n    materialCopy: \"materialCopy\",\n    materialLuminance: \"materialLuminance\",\n    adaptLuminanceShader: \"adaptLuminanceShader\",\n    materialAdaptiveLum: \"materialAdaptiveLum\",\n    materialToneMap: \"materialToneMap\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThAdaptiveToneMappingPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThAdaptiveToneMappingPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAdaptiveToneMappingPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-adaptiveToneMappingPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThAdaptiveToneMappingPass)\n      }]\n    }]\n  }], null, {\n    adaptive: [{\n      type: Input\n    }],\n    resolution: [{\n      type: Input\n    }],\n    needsInit: [{\n      type: Input\n    }],\n    luminanceRT: [{\n      type: Input\n    }],\n    previousLuminanceRT: [{\n      type: Input\n    }],\n    currentLuminanceRT: [{\n      type: Input\n    }],\n    copyUniforms: [{\n      type: Input\n    }],\n    materialCopy: [{\n      type: Input\n    }],\n    materialLuminance: [{\n      type: Input\n    }],\n    adaptLuminanceShader: [{\n      type: Input\n    }],\n    materialAdaptiveLum: [{\n      type: Input\n    }],\n    materialToneMap: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThAfterimagePass extends ThPass {\n  getType() {\n    return AfterimagePass;\n  }\n  set shader(value) {\n    if (this._objRef) {\n      this._objRef.shader = value;\n    }\n  }\n  // @ts-ignore\n  get shader() {\n    return this._objRef?.shader;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set textureComp(value) {\n    if (this._objRef) {\n      this._objRef.textureComp = value;\n    }\n  }\n  // @ts-ignore\n  get textureComp() {\n    return this._objRef?.textureComp;\n  }\n  set textureOld(value) {\n    if (this._objRef) {\n      this._objRef.textureOld = value;\n    }\n  }\n  // @ts-ignore\n  get textureOld() {\n    return this._objRef?.textureOld;\n  }\n  set shaderMaterial(value) {\n    if (this._objRef) {\n      this._objRef.shaderMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get shaderMaterial() {\n    return this._objRef?.shaderMaterial;\n  }\n  set compFsQuad(value) {\n    if (this._objRef) {\n      this._objRef.compFsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get compFsQuad() {\n    return this._objRef?.compFsQuad;\n  }\n  set copyFsQuad(value) {\n    if (this._objRef) {\n      this._objRef.copyFsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get copyFsQuad() {\n    return this._objRef?.copyFsQuad;\n  }\n}\nThAfterimagePass.ɵfac = /* @__PURE__ */function () {\n  let ɵThAfterimagePass_BaseFactory;\n  return function ThAfterimagePass_Factory(t) {\n    return (ɵThAfterimagePass_BaseFactory || (ɵThAfterimagePass_BaseFactory = i0.ɵɵgetInheritedFactory(ThAfterimagePass)))(t || ThAfterimagePass);\n  };\n}();\nThAfterimagePass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThAfterimagePass,\n  selectors: [[\"th-afterimagePass\"]],\n  inputs: {\n    shader: \"shader\",\n    uniforms: \"uniforms\",\n    textureComp: \"textureComp\",\n    textureOld: \"textureOld\",\n    shaderMaterial: \"shaderMaterial\",\n    compFsQuad: \"compFsQuad\",\n    copyFsQuad: \"copyFsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThAfterimagePass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThAfterimagePass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAfterimagePass, [{\n    type: Component,\n    args: [{\n      selector: 'th-afterimagePass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThAfterimagePass)\n      }]\n    }]\n  }], null, {\n    shader: [{\n      type: Input\n    }],\n    uniforms: [{\n      type: Input\n    }],\n    textureComp: [{\n      type: Input\n    }],\n    textureOld: [{\n      type: Input\n    }],\n    shaderMaterial: [{\n      type: Input\n    }],\n    compFsQuad: [{\n      type: Input\n    }],\n    copyFsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLight extends ThObject3D {\n  // @ts-ignore\n  get isLight() {\n    return this._objRef?.isLight;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set intensity(value) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n  // @ts-ignore\n  get intensity() {\n    return this._objRef?.intensity;\n  }\n  set shadow(value) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n  // @ts-ignore\n  get shadow() {\n    return this._objRef?.shadow;\n  }\n}\nThLight.ɵfac = /* @__PURE__ */function () {\n  let ɵThLight_BaseFactory;\n  return function ThLight_Factory(t) {\n    return (ɵThLight_BaseFactory || (ɵThLight_BaseFactory = i0.ɵɵgetInheritedFactory(ThLight)))(t || ThLight);\n  };\n}();\nThLight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLight,\n  selectors: [[\"th-light\"]],\n  inputs: {\n    color: \"color\",\n    intensity: \"intensity\",\n    shadow: \"shadow\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThLight)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLight, [{\n    type: Component,\n    args: [{\n      selector: 'th-light',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThLight)\n      }]\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    intensity: [{\n      type: Input\n    }],\n    shadow: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAmbientLight extends ThLight {\n  getType() {\n    return AmbientLight;\n  }\n  // @ts-ignore\n  get isAmbientLight() {\n    return this._objRef?.isAmbientLight;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThAmbientLight.ɵfac = /* @__PURE__ */function () {\n  let ɵThAmbientLight_BaseFactory;\n  return function ThAmbientLight_Factory(t) {\n    return (ɵThAmbientLight_BaseFactory || (ɵThAmbientLight_BaseFactory = i0.ɵɵgetInheritedFactory(ThAmbientLight)))(t || ThAmbientLight);\n  };\n}();\nThAmbientLight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThAmbientLight,\n  selectors: [[\"th-ambientLight\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThAmbientLight)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThAmbientLight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAmbientLight, [{\n    type: Component,\n    args: [{\n      selector: 'th-ambientLight',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThAmbientLight)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLightProbe extends ThLight {\n  getType() {\n    return LightProbe;\n  }\n  // @ts-ignore\n  get isLightProbe() {\n    return this._objRef?.isLightProbe;\n  }\n  set sh(value) {\n    if (this._objRef) {\n      this._objRef.sh = applyValue(this._objRef.sh, value);\n    }\n  }\n  // @ts-ignore\n  get sh() {\n    return this._objRef?.sh;\n  }\n}\nThLightProbe.ɵfac = /* @__PURE__ */function () {\n  let ɵThLightProbe_BaseFactory;\n  return function ThLightProbe_Factory(t) {\n    return (ɵThLightProbe_BaseFactory || (ɵThLightProbe_BaseFactory = i0.ɵɵgetInheritedFactory(ThLightProbe)))(t || ThLightProbe);\n  };\n}();\nThLightProbe.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLightProbe,\n  selectors: [[\"th-lightProbe\"]],\n  inputs: {\n    sh: \"sh\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThLightProbe)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLightProbe_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLightProbe, [{\n    type: Component,\n    args: [{\n      selector: 'th-lightProbe',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThLightProbe)\n      }]\n    }]\n  }], null, {\n    sh: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAmbientLightProbe extends ThLightProbe {\n  getType() {\n    return AmbientLightProbe;\n  }\n  // @ts-ignore\n  get isAmbientLightProbe() {\n    return this._objRef?.isAmbientLightProbe;\n  }\n}\nThAmbientLightProbe.ɵfac = /* @__PURE__ */function () {\n  let ɵThAmbientLightProbe_BaseFactory;\n  return function ThAmbientLightProbe_Factory(t) {\n    return (ɵThAmbientLightProbe_BaseFactory || (ɵThAmbientLightProbe_BaseFactory = i0.ɵɵgetInheritedFactory(ThAmbientLightProbe)))(t || ThAmbientLightProbe);\n  };\n}();\nThAmbientLightProbe.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThAmbientLightProbe,\n  selectors: [[\"th-ambientLightProbe\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThAmbientLightProbe)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThAmbientLightProbe_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAmbientLightProbe, [{\n    type: Component,\n    args: [{\n      selector: 'th-ambientLightProbe',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThAmbientLightProbe)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThArcballControls extends ThControlBase {\n  getType() {\n    return ArcballControls;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set domElement(value) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n  // @ts-ignore\n  get domElement() {\n    return this._objRef?.domElement;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set focusAnimationTime(value) {\n    if (this._objRef) {\n      this._objRef.focusAnimationTime = value;\n    }\n  }\n  // @ts-ignore\n  get focusAnimationTime() {\n    return this._objRef?.focusAnimationTime;\n  }\n  set enabled(value) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n  // @ts-ignore\n  get enabled() {\n    return this._objRef?.enabled;\n  }\n  set enablePan(value) {\n    if (this._objRef) {\n      this._objRef.enablePan = value;\n    }\n  }\n  // @ts-ignore\n  get enablePan() {\n    return this._objRef?.enablePan;\n  }\n  set enableRotate(value) {\n    if (this._objRef) {\n      this._objRef.enableRotate = value;\n    }\n  }\n  // @ts-ignore\n  get enableRotate() {\n    return this._objRef?.enableRotate;\n  }\n  set enableZoom(value) {\n    if (this._objRef) {\n      this._objRef.enableZoom = value;\n    }\n  }\n  // @ts-ignore\n  get enableZoom() {\n    return this._objRef?.enableZoom;\n  }\n  set enableGizmos(value) {\n    if (this._objRef) {\n      this._objRef.enableGizmos = value;\n    }\n  }\n  // @ts-ignore\n  get enableGizmos() {\n    return this._objRef?.enableGizmos;\n  }\n  set adjustNearFar(value) {\n    if (this._objRef) {\n      this._objRef.adjustNearFar = value;\n    }\n  }\n  // @ts-ignore\n  get adjustNearFar() {\n    return this._objRef?.adjustNearFar;\n  }\n  set scaleFactor(value) {\n    if (this._objRef) {\n      this._objRef.scaleFactor = value;\n    }\n  }\n  // @ts-ignore\n  get scaleFactor() {\n    return this._objRef?.scaleFactor;\n  }\n  set dampingFactor(value) {\n    if (this._objRef) {\n      this._objRef.dampingFactor = value;\n    }\n  }\n  // @ts-ignore\n  get dampingFactor() {\n    return this._objRef?.dampingFactor;\n  }\n  set wMax(value) {\n    if (this._objRef) {\n      this._objRef.wMax = value;\n    }\n  }\n  // @ts-ignore\n  get wMax() {\n    return this._objRef?.wMax;\n  }\n  set enableAnimations(value) {\n    if (this._objRef) {\n      this._objRef.enableAnimations = value;\n    }\n  }\n  // @ts-ignore\n  get enableAnimations() {\n    return this._objRef?.enableAnimations;\n  }\n  set enableGrid(value) {\n    if (this._objRef) {\n      this._objRef.enableGrid = value;\n    }\n  }\n  // @ts-ignore\n  get enableGrid() {\n    return this._objRef?.enableGrid;\n  }\n  set cursorZoom(value) {\n    if (this._objRef) {\n      this._objRef.cursorZoom = value;\n    }\n  }\n  // @ts-ignore\n  get cursorZoom() {\n    return this._objRef?.cursorZoom;\n  }\n  set minFov(value) {\n    if (this._objRef) {\n      this._objRef.minFov = value;\n    }\n  }\n  // @ts-ignore\n  get minFov() {\n    return this._objRef?.minFov;\n  }\n  set maxFov(value) {\n    if (this._objRef) {\n      this._objRef.maxFov = value;\n    }\n  }\n  // @ts-ignore\n  get maxFov() {\n    return this._objRef?.maxFov;\n  }\n  set minDistance(value) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n  // @ts-ignore\n  get minDistance() {\n    return this._objRef?.minDistance;\n  }\n  set maxDistance(value) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n  // @ts-ignore\n  get maxDistance() {\n    return this._objRef?.maxDistance;\n  }\n  set minZoom(value) {\n    if (this._objRef) {\n      this._objRef.minZoom = value;\n    }\n  }\n  // @ts-ignore\n  get minZoom() {\n    return this._objRef?.minZoom;\n  }\n  set maxZoom(value) {\n    if (this._objRef) {\n      this._objRef.maxZoom = value;\n    }\n  }\n  // @ts-ignore\n  get maxZoom() {\n    return this._objRef?.maxZoom;\n  }\n  set target(value) {\n    if (this._objRef) {\n      this._objRef.target = applyValue(this._objRef.target, value);\n    }\n  }\n  // @ts-ignore\n  get target() {\n    return this._objRef?.target;\n  }\n  set radiusFactor(value) {\n    if (this._objRef) {\n      this._objRef.radiusFactor = value;\n    }\n  }\n  // @ts-ignore\n  get radiusFactor() {\n    return this._objRef?.radiusFactor;\n  }\n}\nThArcballControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThArcballControls_BaseFactory;\n  return function ThArcballControls_Factory(t) {\n    return (ɵThArcballControls_BaseFactory || (ɵThArcballControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThArcballControls)))(t || ThArcballControls);\n  };\n}();\nThArcballControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThArcballControls,\n  selectors: [[\"th-arcballControls\"]],\n  inputs: {\n    camera: \"camera\",\n    domElement: \"domElement\",\n    scene: \"scene\",\n    focusAnimationTime: \"focusAnimationTime\",\n    enabled: \"enabled\",\n    enablePan: \"enablePan\",\n    enableRotate: \"enableRotate\",\n    enableZoom: \"enableZoom\",\n    enableGizmos: \"enableGizmos\",\n    adjustNearFar: \"adjustNearFar\",\n    scaleFactor: \"scaleFactor\",\n    dampingFactor: \"dampingFactor\",\n    wMax: \"wMax\",\n    enableAnimations: \"enableAnimations\",\n    enableGrid: \"enableGrid\",\n    cursorZoom: \"cursorZoom\",\n    minFov: \"minFov\",\n    maxFov: \"maxFov\",\n    minDistance: \"minDistance\",\n    maxDistance: \"maxDistance\",\n    minZoom: \"minZoom\",\n    maxZoom: \"maxZoom\",\n    target: \"target\",\n    radiusFactor: \"radiusFactor\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThArcballControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThArcballControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThArcballControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-arcballControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThArcballControls)\n      }]\n    }]\n  }], null, {\n    camera: [{\n      type: Input\n    }],\n    domElement: [{\n      type: Input\n    }],\n    scene: [{\n      type: Input\n    }],\n    focusAnimationTime: [{\n      type: Input\n    }],\n    enabled: [{\n      type: Input\n    }],\n    enablePan: [{\n      type: Input\n    }],\n    enableRotate: [{\n      type: Input\n    }],\n    enableZoom: [{\n      type: Input\n    }],\n    enableGizmos: [{\n      type: Input\n    }],\n    adjustNearFar: [{\n      type: Input\n    }],\n    scaleFactor: [{\n      type: Input\n    }],\n    dampingFactor: [{\n      type: Input\n    }],\n    wMax: [{\n      type: Input\n    }],\n    enableAnimations: [{\n      type: Input\n    }],\n    enableGrid: [{\n      type: Input\n    }],\n    cursorZoom: [{\n      type: Input\n    }],\n    minFov: [{\n      type: Input\n    }],\n    maxFov: [{\n      type: Input\n    }],\n    minDistance: [{\n      type: Input\n    }],\n    maxDistance: [{\n      type: Input\n    }],\n    minZoom: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }],\n    radiusFactor: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPerspectiveCamera extends ThCamera {\n  getType() {\n    return PerspectiveCamera;\n  }\n  // @ts-ignore\n  get isPerspectiveCamera() {\n    return this._objRef?.isPerspectiveCamera;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set zoom(value) {\n    if (this._objRef) {\n      this._objRef.zoom = value;\n    }\n  }\n  // @ts-ignore\n  get zoom() {\n    return this._objRef?.zoom;\n  }\n  set fov(value) {\n    if (this._objRef) {\n      this._objRef.fov = value;\n    }\n  }\n  // @ts-ignore\n  get fov() {\n    return this._objRef?.fov;\n  }\n  set aspect(value) {\n    if (this._objRef) {\n      this._objRef.aspect = value;\n    }\n  }\n  // @ts-ignore\n  get aspect() {\n    return this._objRef?.aspect;\n  }\n  set near(value) {\n    if (this._objRef) {\n      this._objRef.near = value;\n    }\n  }\n  // @ts-ignore\n  get near() {\n    return this._objRef?.near;\n  }\n  set far(value) {\n    if (this._objRef) {\n      this._objRef.far = value;\n    }\n  }\n  // @ts-ignore\n  get far() {\n    return this._objRef?.far;\n  }\n  set focus(value) {\n    if (this._objRef) {\n      this._objRef.focus = value;\n    }\n  }\n  // @ts-ignore\n  get focus() {\n    return this._objRef?.focus;\n  }\n  set view(value) {\n    if (this._objRef) {\n      this._objRef.view = value;\n    }\n  }\n  // @ts-ignore\n  get view() {\n    return this._objRef?.view;\n  }\n  set filmGauge(value) {\n    if (this._objRef) {\n      this._objRef.filmGauge = value;\n    }\n  }\n  // @ts-ignore\n  get filmGauge() {\n    return this._objRef?.filmGauge;\n  }\n  set filmOffset(value) {\n    if (this._objRef) {\n      this._objRef.filmOffset = value;\n    }\n  }\n  // @ts-ignore\n  get filmOffset() {\n    return this._objRef?.filmOffset;\n  }\n}\nThPerspectiveCamera.ɵfac = /* @__PURE__ */function () {\n  let ɵThPerspectiveCamera_BaseFactory;\n  return function ThPerspectiveCamera_Factory(t) {\n    return (ɵThPerspectiveCamera_BaseFactory || (ɵThPerspectiveCamera_BaseFactory = i0.ɵɵgetInheritedFactory(ThPerspectiveCamera)))(t || ThPerspectiveCamera);\n  };\n}();\nThPerspectiveCamera.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPerspectiveCamera,\n  selectors: [[\"th-perspectiveCamera\"]],\n  inputs: {\n    zoom: \"zoom\",\n    fov: \"fov\",\n    aspect: \"aspect\",\n    near: \"near\",\n    far: \"far\",\n    focus: \"focus\",\n    view: \"view\",\n    filmGauge: \"filmGauge\",\n    filmOffset: \"filmOffset\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThPerspectiveCamera)\n  }, {\n    provide: ThCamera,\n    useExisting: forwardRef(() => ThPerspectiveCamera)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPerspectiveCamera_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPerspectiveCamera, [{\n    type: Component,\n    args: [{\n      selector: 'th-perspectiveCamera',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThPerspectiveCamera)\n      }, {\n        provide: ThCamera,\n        useExisting: forwardRef(() => ThPerspectiveCamera)\n      }]\n    }]\n  }], null, {\n    zoom: [{\n      type: Input\n    }],\n    fov: [{\n      type: Input\n    }],\n    aspect: [{\n      type: Input\n    }],\n    near: [{\n      type: Input\n    }],\n    far: [{\n      type: Input\n    }],\n    focus: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    filmGauge: [{\n      type: Input\n    }],\n    filmOffset: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThArrayCamera extends ThPerspectiveCamera {\n  getType() {\n    return ArrayCamera;\n  }\n  // @ts-ignore\n  get isArrayCamera() {\n    return this._objRef?.isArrayCamera;\n  }\n  set cameras(value) {\n    if (this._objRef) {\n      this._objRef.cameras = value;\n    }\n  }\n  // @ts-ignore\n  get cameras() {\n    return this._objRef?.cameras;\n  }\n}\nThArrayCamera.ɵfac = /* @__PURE__ */function () {\n  let ɵThArrayCamera_BaseFactory;\n  return function ThArrayCamera_Factory(t) {\n    return (ɵThArrayCamera_BaseFactory || (ɵThArrayCamera_BaseFactory = i0.ɵɵgetInheritedFactory(ThArrayCamera)))(t || ThArrayCamera);\n  };\n}();\nThArrayCamera.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThArrayCamera,\n  selectors: [[\"th-arrayCamera\"]],\n  inputs: {\n    cameras: \"cameras\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThArrayCamera)\n  }, {\n    provide: ThCamera,\n    useExisting: forwardRef(() => ThArrayCamera)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThArrayCamera_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThArrayCamera, [{\n    type: Component,\n    args: [{\n      selector: 'th-arrayCamera',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThArrayCamera)\n      }, {\n        provide: ThCamera,\n        useExisting: forwardRef(() => ThArrayCamera)\n      }]\n    }]\n  }], null, {\n    cameras: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThArrowHelper extends ThObject3D {\n  getType() {\n    return ArrowHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set line(value) {\n    if (this._objRef) {\n      this._objRef.line = value;\n    }\n  }\n  // @ts-ignore\n  get line() {\n    return this._objRef?.line;\n  }\n  set cone(value) {\n    if (this._objRef) {\n      this._objRef.cone = value;\n    }\n  }\n  // @ts-ignore\n  get cone() {\n    return this._objRef?.cone;\n  }\n}\nThArrowHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThArrowHelper_BaseFactory;\n  return function ThArrowHelper_Factory(t) {\n    return (ɵThArrowHelper_BaseFactory || (ɵThArrowHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThArrowHelper)))(t || ThArrowHelper);\n  };\n}();\nThArrowHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThArrowHelper,\n  selectors: [[\"th-arrowHelper\"]],\n  inputs: {\n    line: \"line\",\n    cone: \"cone\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThArrowHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThArrowHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThArrowHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-arrowHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThArrowHelper)\n      }]\n    }]\n  }], null, {\n    line: [{\n      type: Input\n    }],\n    cone: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAudio extends ThObject3D {\n  getType() {\n    return Audio;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set listener(value) {\n    if (this._objRef) {\n      this._objRef.listener = value;\n    }\n  }\n  // @ts-ignore\n  get listener() {\n    return this._objRef?.listener;\n  }\n  set context(value) {\n    if (this._objRef) {\n      this._objRef.context = value;\n    }\n  }\n  // @ts-ignore\n  get context() {\n    return this._objRef?.context;\n  }\n  set gain(value) {\n    if (this._objRef) {\n      this._objRef.gain = value;\n    }\n  }\n  // @ts-ignore\n  get gain() {\n    return this._objRef?.gain;\n  }\n  set autoplay(value) {\n    if (this._objRef) {\n      this._objRef.autoplay = value;\n    }\n  }\n  // @ts-ignore\n  get autoplay() {\n    return this._objRef?.autoplay;\n  }\n  set buffer(value) {\n    if (this._objRef) {\n      this._objRef.buffer = value;\n    }\n  }\n  // @ts-ignore\n  get buffer() {\n    return this._objRef?.buffer;\n  }\n  set detune(value) {\n    if (this._objRef) {\n      this._objRef.detune = value;\n    }\n  }\n  // @ts-ignore\n  get detune() {\n    return this._objRef?.detune;\n  }\n  set loop(value) {\n    if (this._objRef) {\n      this._objRef.loop = value;\n    }\n  }\n  // @ts-ignore\n  get loop() {\n    return this._objRef?.loop;\n  }\n  set loopStart(value) {\n    if (this._objRef) {\n      this._objRef.loopStart = value;\n    }\n  }\n  // @ts-ignore\n  get loopStart() {\n    return this._objRef?.loopStart;\n  }\n  set loopEnd(value) {\n    if (this._objRef) {\n      this._objRef.loopEnd = value;\n    }\n  }\n  // @ts-ignore\n  get loopEnd() {\n    return this._objRef?.loopEnd;\n  }\n  set offset(value) {\n    if (this._objRef) {\n      this._objRef.offset = value;\n    }\n  }\n  // @ts-ignore\n  get offset() {\n    return this._objRef?.offset;\n  }\n  set duration(value) {\n    if (this._objRef) {\n      this._objRef.duration = value;\n    }\n  }\n  // @ts-ignore\n  get duration() {\n    return this._objRef?.duration;\n  }\n  set playbackRate(value) {\n    if (this._objRef) {\n      this._objRef.playbackRate = value;\n    }\n  }\n  // @ts-ignore\n  get playbackRate() {\n    return this._objRef?.playbackRate;\n  }\n  set isPlaying(value) {\n    if (this._objRef) {\n      this._objRef.isPlaying = value;\n    }\n  }\n  // @ts-ignore\n  get isPlaying() {\n    return this._objRef?.isPlaying;\n  }\n  set hasPlaybackControl(value) {\n    if (this._objRef) {\n      this._objRef.hasPlaybackControl = value;\n    }\n  }\n  // @ts-ignore\n  get hasPlaybackControl() {\n    return this._objRef?.hasPlaybackControl;\n  }\n  set sourceType(value) {\n    if (this._objRef) {\n      this._objRef.sourceType = value;\n    }\n  }\n  // @ts-ignore\n  get sourceType() {\n    return this._objRef?.sourceType;\n  }\n  set source(value) {\n    if (this._objRef) {\n      this._objRef.source = value;\n    }\n  }\n  // @ts-ignore\n  get source() {\n    return this._objRef?.source;\n  }\n  set filters(value) {\n    if (this._objRef) {\n      this._objRef.filters = value;\n    }\n  }\n  // @ts-ignore\n  get filters() {\n    return this._objRef?.filters;\n  }\n}\nThAudio.ɵfac = /* @__PURE__ */function () {\n  let ɵThAudio_BaseFactory;\n  return function ThAudio_Factory(t) {\n    return (ɵThAudio_BaseFactory || (ɵThAudio_BaseFactory = i0.ɵɵgetInheritedFactory(ThAudio)))(t || ThAudio);\n  };\n}();\nThAudio.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThAudio,\n  selectors: [[\"th-audio\"]],\n  inputs: {\n    listener: \"listener\",\n    context: \"context\",\n    gain: \"gain\",\n    autoplay: \"autoplay\",\n    buffer: \"buffer\",\n    detune: \"detune\",\n    loop: \"loop\",\n    loopStart: \"loopStart\",\n    loopEnd: \"loopEnd\",\n    offset: \"offset\",\n    duration: \"duration\",\n    playbackRate: \"playbackRate\",\n    isPlaying: \"isPlaying\",\n    hasPlaybackControl: \"hasPlaybackControl\",\n    sourceType: \"sourceType\",\n    source: \"source\",\n    filters: \"filters\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThAudio)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThAudio_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAudio, [{\n    type: Component,\n    args: [{\n      selector: 'th-audio',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThAudio)\n      }]\n    }]\n  }], null, {\n    listener: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    gain: [{\n      type: Input\n    }],\n    autoplay: [{\n      type: Input\n    }],\n    buffer: [{\n      type: Input\n    }],\n    detune: [{\n      type: Input\n    }],\n    loop: [{\n      type: Input\n    }],\n    loopStart: [{\n      type: Input\n    }],\n    loopEnd: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }],\n    playbackRate: [{\n      type: Input\n    }],\n    isPlaying: [{\n      type: Input\n    }],\n    hasPlaybackControl: [{\n      type: Input\n    }],\n    sourceType: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    filters: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAudioListener extends ThObject3D {\n  getType() {\n    return AudioListener;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set context(value) {\n    if (this._objRef) {\n      this._objRef.context = value;\n    }\n  }\n  // @ts-ignore\n  get context() {\n    return this._objRef?.context;\n  }\n  set gain(value) {\n    if (this._objRef) {\n      this._objRef.gain = value;\n    }\n  }\n  // @ts-ignore\n  get gain() {\n    return this._objRef?.gain;\n  }\n  set filter(value) {\n    if (this._objRef) {\n      this._objRef.filter = value;\n    }\n  }\n  // @ts-ignore\n  get filter() {\n    return this._objRef?.filter;\n  }\n  set timeDelta(value) {\n    if (this._objRef) {\n      this._objRef.timeDelta = value;\n    }\n  }\n  // @ts-ignore\n  get timeDelta() {\n    return this._objRef?.timeDelta;\n  }\n}\nThAudioListener.ɵfac = /* @__PURE__ */function () {\n  let ɵThAudioListener_BaseFactory;\n  return function ThAudioListener_Factory(t) {\n    return (ɵThAudioListener_BaseFactory || (ɵThAudioListener_BaseFactory = i0.ɵɵgetInheritedFactory(ThAudioListener)))(t || ThAudioListener);\n  };\n}();\nThAudioListener.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThAudioListener,\n  selectors: [[\"th-audioListener\"]],\n  inputs: {\n    context: \"context\",\n    gain: \"gain\",\n    filter: \"filter\",\n    timeDelta: \"timeDelta\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThAudioListener)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThAudioListener_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAudioListener, [{\n    type: Component,\n    args: [{\n      selector: 'th-audioListener',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThAudioListener)\n      }]\n    }]\n  }], null, {\n    context: [{\n      type: Input\n    }],\n    gain: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    timeDelta: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLine extends ThObject3D {\n  getType() {\n    return Line;\n  }\n  // @ts-ignore\n  get isLine() {\n    return this._objRef?.isLine;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set geometry(value) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n  // @ts-ignore\n  get geometry() {\n    return this._objRef?.geometry;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set morphTargetInfluences(value) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n  // @ts-ignore\n  get morphTargetInfluences() {\n    return this._objRef?.morphTargetInfluences;\n  }\n  set morphTargetDictionary(value) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n  // @ts-ignore\n  get morphTargetDictionary() {\n    return this._objRef?.morphTargetDictionary;\n  }\n}\nThLine.ɵfac = /* @__PURE__ */function () {\n  let ɵThLine_BaseFactory;\n  return function ThLine_Factory(t) {\n    return (ɵThLine_BaseFactory || (ɵThLine_BaseFactory = i0.ɵɵgetInheritedFactory(ThLine)))(t || ThLine);\n  };\n}();\nThLine.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLine,\n  selectors: [[\"th-line\"]],\n  inputs: {\n    geometry: \"geometry\",\n    material: \"material\",\n    morphTargetInfluences: \"morphTargetInfluences\",\n    morphTargetDictionary: \"morphTargetDictionary\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThLine)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLine_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLine, [{\n    type: Component,\n    args: [{\n      selector: 'th-line',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThLine)\n      }]\n    }]\n  }], null, {\n    geometry: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    morphTargetInfluences: [{\n      type: Input\n    }],\n    morphTargetDictionary: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineSegments extends ThLine {\n  getType() {\n    return LineSegments;\n  }\n  // @ts-ignore\n  get isLineSegments() {\n    return this._objRef?.isLineSegments;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThLineSegments.ɵfac = /* @__PURE__ */function () {\n  let ɵThLineSegments_BaseFactory;\n  return function ThLineSegments_Factory(t) {\n    return (ɵThLineSegments_BaseFactory || (ɵThLineSegments_BaseFactory = i0.ɵɵgetInheritedFactory(ThLineSegments)))(t || ThLineSegments);\n  };\n}();\nThLineSegments.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLineSegments,\n  selectors: [[\"th-lineSegments\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThLineSegments)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLineSegments_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLineSegments, [{\n    type: Component,\n    args: [{\n      selector: 'th-lineSegments',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThLineSegments)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAxesHelper extends ThLineSegments {\n  getType() {\n    return AxesHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThAxesHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThAxesHelper_BaseFactory;\n  return function ThAxesHelper_Factory(t) {\n    return (ɵThAxesHelper_BaseFactory || (ɵThAxesHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThAxesHelper)))(t || ThAxesHelper);\n  };\n}();\nThAxesHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThAxesHelper,\n  selectors: [[\"th-axesHelper\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThAxesHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThAxesHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAxesHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-axesHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThAxesHelper)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThBloomPass extends ThPass {\n  getType() {\n    return BloomPass;\n  }\n  set renderTargetX(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetX = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetX() {\n    return this._objRef?.renderTargetX;\n  }\n  set renderTargetY(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetY = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetY() {\n    return this._objRef?.renderTargetY;\n  }\n  set copyUniforms(value) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n  // @ts-ignore\n  get copyUniforms() {\n    return this._objRef?.copyUniforms;\n  }\n  set materialCopy(value) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n  // @ts-ignore\n  get materialCopy() {\n    return this._objRef?.materialCopy;\n  }\n  set convolutionUniforms(value) {\n    if (this._objRef) {\n      this._objRef.convolutionUniforms = value;\n    }\n  }\n  // @ts-ignore\n  get convolutionUniforms() {\n    return this._objRef?.convolutionUniforms;\n  }\n  set materialConvolution(value) {\n    if (this._objRef) {\n      this._objRef.materialConvolution = value;\n    }\n  }\n  // @ts-ignore\n  get materialConvolution() {\n    return this._objRef?.materialConvolution;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThBloomPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThBloomPass_BaseFactory;\n  return function ThBloomPass_Factory(t) {\n    return (ɵThBloomPass_BaseFactory || (ɵThBloomPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThBloomPass)))(t || ThBloomPass);\n  };\n}();\nThBloomPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBloomPass,\n  selectors: [[\"th-bloomPass\"]],\n  inputs: {\n    renderTargetX: \"renderTargetX\",\n    renderTargetY: \"renderTargetY\",\n    copyUniforms: \"copyUniforms\",\n    materialCopy: \"materialCopy\",\n    convolutionUniforms: \"convolutionUniforms\",\n    materialConvolution: \"materialConvolution\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThBloomPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBloomPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBloomPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-bloomPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThBloomPass)\n      }]\n    }]\n  }], null, {\n    renderTargetX: [{\n      type: Input\n    }],\n    renderTargetY: [{\n      type: Input\n    }],\n    copyUniforms: [{\n      type: Input\n    }],\n    materialCopy: [{\n      type: Input\n    }],\n    convolutionUniforms: [{\n      type: Input\n    }],\n    materialConvolution: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThBokehPass extends ThPass {\n  getType() {\n    return BokehPass;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set renderTargetColor(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetColor = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetColor() {\n    return this._objRef?.renderTargetColor;\n  }\n  set renderTargetDepth(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetDepth = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetDepth() {\n    return this._objRef?.renderTargetDepth;\n  }\n  set materialDepth(value) {\n    if (this._objRef) {\n      this._objRef.materialDepth = value;\n    }\n  }\n  // @ts-ignore\n  get materialDepth() {\n    return this._objRef?.materialDepth;\n  }\n  set materialBokeh(value) {\n    if (this._objRef) {\n      this._objRef.materialBokeh = value;\n    }\n  }\n  // @ts-ignore\n  get materialBokeh() {\n    return this._objRef?.materialBokeh;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n  set oldClearColor(value) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  get oldClearColor() {\n    return this._objRef?.oldClearColor;\n  }\n}\nThBokehPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThBokehPass_BaseFactory;\n  return function ThBokehPass_Factory(t) {\n    return (ɵThBokehPass_BaseFactory || (ɵThBokehPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThBokehPass)))(t || ThBokehPass);\n  };\n}();\nThBokehPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBokehPass,\n  selectors: [[\"th-bokehPass\"]],\n  inputs: {\n    scene: \"scene\",\n    camera: \"camera\",\n    renderTargetColor: \"renderTargetColor\",\n    renderTargetDepth: \"renderTargetDepth\",\n    materialDepth: \"materialDepth\",\n    materialBokeh: \"materialBokeh\",\n    uniforms: \"uniforms\",\n    fsQuad: \"fsQuad\",\n    oldClearColor: \"oldClearColor\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThBokehPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBokehPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBokehPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-bokehPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThBokehPass)\n      }]\n    }]\n  }], null, {\n    scene: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    renderTargetColor: [{\n      type: Input\n    }],\n    renderTargetDepth: [{\n      type: Input\n    }],\n    materialDepth: [{\n      type: Input\n    }],\n    materialBokeh: [{\n      type: Input\n    }],\n    uniforms: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }],\n    oldClearColor: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBone extends ThObject3D {\n  getType() {\n    return Bone;\n  }\n  // @ts-ignore\n  get isBone() {\n    return this._objRef?.isBone;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThBone.ɵfac = /* @__PURE__ */function () {\n  let ɵThBone_BaseFactory;\n  return function ThBone_Factory(t) {\n    return (ɵThBone_BaseFactory || (ɵThBone_BaseFactory = i0.ɵɵgetInheritedFactory(ThBone)))(t || ThBone);\n  };\n}();\nThBone.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBone,\n  selectors: [[\"th-bone\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThBone)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBone_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBone, [{\n    type: Component,\n    args: [{\n      selector: 'th-bone',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThBone)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBox3Helper extends ThLineSegments {\n  getType() {\n    return Box3Helper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set box(value) {\n    if (this._objRef) {\n      this._objRef.box = applyValue(this._objRef.box, value);\n    }\n  }\n  // @ts-ignore\n  get box() {\n    return this._objRef?.box;\n  }\n}\nThBox3Helper.ɵfac = /* @__PURE__ */function () {\n  let ɵThBox3Helper_BaseFactory;\n  return function ThBox3Helper_Factory(t) {\n    return (ɵThBox3Helper_BaseFactory || (ɵThBox3Helper_BaseFactory = i0.ɵɵgetInheritedFactory(ThBox3Helper)))(t || ThBox3Helper);\n  };\n}();\nThBox3Helper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBox3Helper,\n  selectors: [[\"th-box3Helper\"]],\n  inputs: {\n    box: \"box\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThBox3Helper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBox3Helper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBox3Helper, [{\n    type: Component,\n    args: [{\n      selector: 'th-box3Helper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThBox3Helper)\n      }]\n    }]\n  }], null, {\n    box: [{\n      type: Input\n    }]\n  });\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThGeometryBase extends ThWrapperBase {\n  constructor(parent) {\n    super();\n    this.parent = parent;\n  }\n  addToParent() {\n    if (!this.parent.objRef) {\n      return;\n      //throw new Error(\"parent object doesn't hold a three js object instance\");\n    }\n\n    this.parent.objRef.geometry = this.objRef;\n    if (this.parent.objRef.updateMorphTargets) {\n      this.parent.objRef.updateMorphTargets();\n    }\n  }\n  removeFromParent() {\n    if (this._objRef && this.parent && this.parent.objRef) {\n      this.parent.objRef.geometry = undefined;\n    }\n  }\n}\nThGeometryBase.ɵfac = function ThGeometryBase_Factory(t) {\n  return new (t || ThGeometryBase)(i0.ɵɵdirectiveInject(ThObject3D));\n};\nThGeometryBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThGeometryBase,\n  selectors: [[\"th-abs-geometry\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ThGeometryBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThGeometryBase, [{\n    type: Component,\n    args: [{\n      selector: 'th-abs-geometry',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D\n    }];\n  }, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBufferGeometry extends ThGeometryBase {\n  getType() {\n    return BufferGeometry;\n  }\n  set id(value) {\n    if (this._objRef) {\n      this._objRef.id = value;\n    }\n  }\n  // @ts-ignore\n  get id() {\n    return this._objRef?.id;\n  }\n  set uuid(value) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n  // @ts-ignore\n  get uuid() {\n    return this._objRef?.uuid;\n  }\n  set name(value) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n  // @ts-ignore\n  get name() {\n    return this._objRef?.name;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set index(value) {\n    if (this._objRef) {\n      this._objRef.index = applyValue(this._objRef.index, value);\n    }\n  }\n  // @ts-ignore\n  get index() {\n    return this._objRef?.index;\n  }\n  set attributes(value) {\n    if (this._objRef) {\n      this._objRef.attributes = value;\n    }\n  }\n  // @ts-ignore\n  get attributes() {\n    return this._objRef?.attributes;\n  }\n  set morphAttributes(value) {\n    if (this._objRef) {\n      this._objRef.morphAttributes = value;\n    }\n  }\n  // @ts-ignore\n  get morphAttributes() {\n    return this._objRef?.morphAttributes;\n  }\n  set morphTargetsRelative(value) {\n    if (this._objRef) {\n      this._objRef.morphTargetsRelative = value;\n    }\n  }\n  // @ts-ignore\n  get morphTargetsRelative() {\n    return this._objRef?.morphTargetsRelative;\n  }\n  set groups(value) {\n    if (this._objRef) {\n      this._objRef.groups = value;\n    }\n  }\n  // @ts-ignore\n  get groups() {\n    return this._objRef?.groups;\n  }\n  set boundingBox(value) {\n    if (this._objRef) {\n      this._objRef.boundingBox = applyValue(this._objRef.boundingBox, value);\n    }\n  }\n  // @ts-ignore\n  get boundingBox() {\n    return this._objRef?.boundingBox;\n  }\n  set boundingSphere(value) {\n    if (this._objRef) {\n      this._objRef.boundingSphere = applyValue(this._objRef.boundingSphere, value);\n    }\n  }\n  // @ts-ignore\n  get boundingSphere() {\n    return this._objRef?.boundingSphere;\n  }\n  set drawRange(value) {\n    if (this._objRef) {\n      this._objRef.drawRange = value;\n    }\n  }\n  // @ts-ignore\n  get drawRange() {\n    return this._objRef?.drawRange;\n  }\n  set userData(value) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n  // @ts-ignore\n  get userData() {\n    return this._objRef?.userData;\n  }\n  // @ts-ignore\n  get isBufferGeometry() {\n    return this._objRef?.isBufferGeometry;\n  }\n  constructor(hostObject) {\n    super(hostObject);\n  }\n}\nThBufferGeometry.ɵfac = function ThBufferGeometry_Factory(t) {\n  return new (t || ThBufferGeometry)(i0.ɵɵdirectiveInject(ThObject3D, 4));\n};\nThBufferGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBufferGeometry,\n  selectors: [[\"th-bufferGeometry\"]],\n  inputs: {\n    id: \"id\",\n    uuid: \"uuid\",\n    name: \"name\",\n    index: \"index\",\n    attributes: \"attributes\",\n    morphAttributes: \"morphAttributes\",\n    morphTargetsRelative: \"morphTargetsRelative\",\n    groups: \"groups\",\n    boundingBox: \"boundingBox\",\n    boundingSphere: \"boundingSphere\",\n    drawRange: \"drawRange\",\n    userData: \"userData\"\n  },\n  features: [i0.ɵɵProvidersFeature([]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBufferGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBufferGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-bufferGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    uuid: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    attributes: [{\n      type: Input\n    }],\n    morphAttributes: [{\n      type: Input\n    }],\n    morphTargetsRelative: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    boundingBox: [{\n      type: Input\n    }],\n    boundingSphere: [{\n      type: Input\n    }],\n    drawRange: [{\n      type: Input\n    }],\n    userData: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBoxGeometry extends ThBufferGeometry {\n  getType() {\n    return BoxGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThBoxGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThBoxGeometry_BaseFactory;\n  return function ThBoxGeometry_Factory(t) {\n    return (ɵThBoxGeometry_BaseFactory || (ɵThBoxGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThBoxGeometry)))(t || ThBoxGeometry);\n  };\n}();\nThBoxGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBoxGeometry,\n  selectors: [[\"th-boxGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThBoxGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBoxGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBoxGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-boxGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThBoxGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBoxHelper extends ThLineSegments {\n  getType() {\n    return BoxHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThBoxHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThBoxHelper_BaseFactory;\n  return function ThBoxHelper_Factory(t) {\n    return (ɵThBoxHelper_BaseFactory || (ɵThBoxHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThBoxHelper)))(t || ThBoxHelper);\n  };\n}();\nThBoxHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBoxHelper,\n  selectors: [[\"th-boxHelper\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThBoxHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBoxHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBoxHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-boxHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThBoxHelper)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBoxLineGeometry extends ThBufferGeometry {\n  getType() {\n    return BoxLineGeometry;\n  }\n}\nThBoxLineGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThBoxLineGeometry_BaseFactory;\n  return function ThBoxLineGeometry_Factory(t) {\n    return (ɵThBoxLineGeometry_BaseFactory || (ɵThBoxLineGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThBoxLineGeometry)))(t || ThBoxLineGeometry);\n  };\n}();\nThBoxLineGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThBoxLineGeometry,\n  selectors: [[\"th-boxLineGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThBoxLineGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThBoxLineGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThBoxLineGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-boxLineGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThBoxLineGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCameraHelper extends ThLineSegments {\n  getType() {\n    return CameraHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set pointMap(value) {\n    if (this._objRef) {\n      this._objRef.pointMap = value;\n    }\n  }\n  // @ts-ignore\n  get pointMap() {\n    return this._objRef?.pointMap;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\nThCameraHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThCameraHelper_BaseFactory;\n  return function ThCameraHelper_Factory(t) {\n    return (ɵThCameraHelper_BaseFactory || (ɵThCameraHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThCameraHelper)))(t || ThCameraHelper);\n  };\n}();\nThCameraHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCameraHelper,\n  selectors: [[\"th-cameraHelper\"]],\n  inputs: {\n    camera: \"camera\",\n    pointMap: \"pointMap\",\n    matrix: \"matrix\",\n    matrixAutoUpdate: \"matrixAutoUpdate\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThCameraHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCameraHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCameraHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-cameraHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThCameraHelper)\n      }]\n    }]\n  }], null, {\n    camera: [{\n      type: Input\n    }],\n    pointMap: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }]\n  });\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThTextureBase extends ThWrapperBase {}\nThTextureBase.ɵfac = /* @__PURE__ */function () {\n  let ɵThTextureBase_BaseFactory;\n  return function ThTextureBase_Factory(t) {\n    return (ɵThTextureBase_BaseFactory || (ɵThTextureBase_BaseFactory = i0.ɵɵgetInheritedFactory(ThTextureBase)))(t || ThTextureBase);\n  };\n}();\nThTextureBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTextureBase,\n  selectors: [[\"th-abs-texture\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ThTextureBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTextureBase, [{\n    type: Component,\n    args: [{\n      selector: 'th-abs-texture',\n      template: ''\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTexture extends ThTextureBase {\n  getType() {\n    return Texture;\n  }\n  // @ts-ignore\n  get isTexture() {\n    return this._objRef?.isTexture;\n  }\n  // @ts-ignore\n  get id() {\n    return this._objRef?.id;\n  }\n  set uuid(value) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n  // @ts-ignore\n  get uuid() {\n    return this._objRef?.uuid;\n  }\n  set name(value) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n  // @ts-ignore\n  get name() {\n    return this._objRef?.name;\n  }\n  set source(value) {\n    if (this._objRef) {\n      this._objRef.source = value;\n    }\n  }\n  // @ts-ignore\n  get source() {\n    return this._objRef?.source;\n  }\n  set mipmaps(value) {\n    if (this._objRef) {\n      this._objRef.mipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get mipmaps() {\n    return this._objRef?.mipmaps;\n  }\n  set mapping(value) {\n    if (this._objRef) {\n      this._objRef.mapping = value;\n    }\n  }\n  // @ts-ignore\n  get mapping() {\n    return this._objRef?.mapping;\n  }\n  set channel(value) {\n    if (this._objRef) {\n      this._objRef.channel = value;\n    }\n  }\n  // @ts-ignore\n  get channel() {\n    return this._objRef?.channel;\n  }\n  set wrapS(value) {\n    if (this._objRef) {\n      this._objRef.wrapS = value;\n    }\n  }\n  // @ts-ignore\n  get wrapS() {\n    return this._objRef?.wrapS;\n  }\n  set wrapT(value) {\n    if (this._objRef) {\n      this._objRef.wrapT = value;\n    }\n  }\n  // @ts-ignore\n  get wrapT() {\n    return this._objRef?.wrapT;\n  }\n  set magFilter(value) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n  // @ts-ignore\n  get magFilter() {\n    return this._objRef?.magFilter;\n  }\n  set minFilter(value) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n  // @ts-ignore\n  get minFilter() {\n    return this._objRef?.minFilter;\n  }\n  set anisotropy(value) {\n    if (this._objRef) {\n      this._objRef.anisotropy = value;\n    }\n  }\n  // @ts-ignore\n  get anisotropy() {\n    return this._objRef?.anisotropy;\n  }\n  set format(value) {\n    if (this._objRef) {\n      this._objRef.format = value;\n    }\n  }\n  // @ts-ignore\n  get format() {\n    return this._objRef?.format;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set internalFormat(value) {\n    if (this._objRef) {\n      this._objRef.internalFormat = value;\n    }\n  }\n  // @ts-ignore\n  get internalFormat() {\n    return this._objRef?.internalFormat;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  set offset(value) {\n    if (this._objRef) {\n      this._objRef.offset = applyValue(this._objRef.offset, value);\n    }\n  }\n  // @ts-ignore\n  get offset() {\n    return this._objRef?.offset;\n  }\n  set repeat(value) {\n    if (this._objRef) {\n      this._objRef.repeat = applyValue(this._objRef.repeat, value);\n    }\n  }\n  // @ts-ignore\n  get repeat() {\n    return this._objRef?.repeat;\n  }\n  set center(value) {\n    if (this._objRef) {\n      this._objRef.center = applyValue(this._objRef.center, value);\n    }\n  }\n  // @ts-ignore\n  get center() {\n    return this._objRef?.center;\n  }\n  set rotation(value) {\n    if (this._objRef) {\n      this._objRef.rotation = value;\n    }\n  }\n  // @ts-ignore\n  get rotation() {\n    return this._objRef?.rotation;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n  set premultiplyAlpha(value) {\n    if (this._objRef) {\n      this._objRef.premultiplyAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get premultiplyAlpha() {\n    return this._objRef?.premultiplyAlpha;\n  }\n  set flipY(value) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n  // @ts-ignore\n  get flipY() {\n    return this._objRef?.flipY;\n  }\n  set unpackAlignment(value) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n  // @ts-ignore\n  get unpackAlignment() {\n    return this._objRef?.unpackAlignment;\n  }\n  set encoding(value) {\n    if (this._objRef) {\n      this._objRef.encoding = value;\n    }\n  }\n  // @ts-ignore\n  get encoding() {\n    return this._objRef?.encoding;\n  }\n  set isRenderTargetTexture(value) {\n    if (this._objRef) {\n      this._objRef.isRenderTargetTexture = value;\n    }\n  }\n  // @ts-ignore\n  get isRenderTargetTexture() {\n    return this._objRef?.isRenderTargetTexture;\n  }\n  set needsPMREMUpdate(value) {\n    if (this._objRef) {\n      this._objRef.needsPMREMUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get needsPMREMUpdate() {\n    return this._objRef?.needsPMREMUpdate;\n  }\n  set userData(value) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n  // @ts-ignore\n  get userData() {\n    return this._objRef?.userData;\n  }\n  set version(value) {\n    if (this._objRef) {\n      this._objRef.version = value;\n    }\n  }\n  // @ts-ignore\n  get version() {\n    return this._objRef?.version;\n  }\n}\nThTexture.DEFAULT_ANISOTROPY = Texture.DEFAULT_ANISOTROPY;\nThTexture.DEFAULT_IMAGE = Texture.DEFAULT_IMAGE;\nThTexture.DEFAULT_MAPPING = Texture.DEFAULT_MAPPING;\nThTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThTexture_BaseFactory;\n  return function ThTexture_Factory(t) {\n    return (ɵThTexture_BaseFactory || (ɵThTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThTexture)))(t || ThTexture);\n  };\n}();\nThTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTexture,\n  selectors: [[\"th-texture\"]],\n  inputs: {\n    uuid: \"uuid\",\n    name: \"name\",\n    source: \"source\",\n    mipmaps: \"mipmaps\",\n    mapping: \"mapping\",\n    channel: \"channel\",\n    wrapS: \"wrapS\",\n    wrapT: \"wrapT\",\n    magFilter: \"magFilter\",\n    minFilter: \"minFilter\",\n    anisotropy: \"anisotropy\",\n    format: \"format\",\n    type: \"type\",\n    internalFormat: \"internalFormat\",\n    matrix: \"matrix\",\n    matrixAutoUpdate: \"matrixAutoUpdate\",\n    offset: \"offset\",\n    repeat: \"repeat\",\n    center: \"center\",\n    rotation: \"rotation\",\n    generateMipmaps: \"generateMipmaps\",\n    premultiplyAlpha: \"premultiplyAlpha\",\n    flipY: \"flipY\",\n    unpackAlignment: \"unpackAlignment\",\n    encoding: \"encoding\",\n    isRenderTargetTexture: \"isRenderTargetTexture\",\n    needsPMREMUpdate: \"needsPMREMUpdate\",\n    userData: \"userData\",\n    version: \"version\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-texture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThTexture)\n      }]\n    }]\n  }], null, {\n    uuid: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    mipmaps: [{\n      type: Input\n    }],\n    mapping: [{\n      type: Input\n    }],\n    channel: [{\n      type: Input\n    }],\n    wrapS: [{\n      type: Input\n    }],\n    wrapT: [{\n      type: Input\n    }],\n    magFilter: [{\n      type: Input\n    }],\n    minFilter: [{\n      type: Input\n    }],\n    anisotropy: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    internalFormat: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    repeat: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    rotation: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }],\n    premultiplyAlpha: [{\n      type: Input\n    }],\n    flipY: [{\n      type: Input\n    }],\n    unpackAlignment: [{\n      type: Input\n    }],\n    encoding: [{\n      type: Input\n    }],\n    isRenderTargetTexture: [{\n      type: Input\n    }],\n    needsPMREMUpdate: [{\n      type: Input\n    }],\n    userData: [{\n      type: Input\n    }],\n    version: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCanvasTexture extends ThTexture {\n  getType() {\n    return CanvasTexture;\n  }\n  // @ts-ignore\n  get isCanvasTexture() {\n    return this._objRef?.isCanvasTexture;\n  }\n}\nThCanvasTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThCanvasTexture_BaseFactory;\n  return function ThCanvasTexture_Factory(t) {\n    return (ɵThCanvasTexture_BaseFactory || (ɵThCanvasTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThCanvasTexture)))(t || ThCanvasTexture);\n  };\n}();\nThCanvasTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCanvasTexture,\n  selectors: [[\"th-canvasTexture\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThCanvasTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCanvasTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCanvasTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-canvasTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThCanvasTexture)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCapsuleGeometry extends ThBufferGeometry {\n  getType() {\n    return CapsuleGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThCapsuleGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThCapsuleGeometry_BaseFactory;\n  return function ThCapsuleGeometry_Factory(t) {\n    return (ɵThCapsuleGeometry_BaseFactory || (ɵThCapsuleGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThCapsuleGeometry)))(t || ThCapsuleGeometry);\n  };\n}();\nThCapsuleGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCapsuleGeometry,\n  selectors: [[\"th-capsuleGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThCapsuleGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCapsuleGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCapsuleGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-capsuleGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThCapsuleGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCircleGeometry extends ThBufferGeometry {\n  getType() {\n    return CircleGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThCircleGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThCircleGeometry_BaseFactory;\n  return function ThCircleGeometry_Factory(t) {\n    return (ɵThCircleGeometry_BaseFactory || (ɵThCircleGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThCircleGeometry)))(t || ThCircleGeometry);\n  };\n}();\nThCircleGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCircleGeometry,\n  selectors: [[\"th-circleGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThCircleGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCircleGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCircleGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-circleGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThCircleGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThClearMaskPass extends ThPass {\n  getType() {\n    return ClearMaskPass;\n  }\n}\nThClearMaskPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThClearMaskPass_BaseFactory;\n  return function ThClearMaskPass_Factory(t) {\n    return (ɵThClearMaskPass_BaseFactory || (ɵThClearMaskPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThClearMaskPass)))(t || ThClearMaskPass);\n  };\n}();\nThClearMaskPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThClearMaskPass,\n  selectors: [[\"th-clearMaskPass\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThClearMaskPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThClearMaskPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThClearMaskPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-clearMaskPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThClearMaskPass)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThClearPass extends ThPass {\n  getType() {\n    return ClearPass;\n  }\n  set clearColor(value) {\n    if (this._objRef) {\n      this._objRef.clearColor = value;\n    }\n  }\n  // @ts-ignore\n  get clearColor() {\n    return this._objRef?.clearColor;\n  }\n  set clearAlpha(value) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get clearAlpha() {\n    return this._objRef?.clearAlpha;\n  }\n}\nThClearPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThClearPass_BaseFactory;\n  return function ThClearPass_Factory(t) {\n    return (ɵThClearPass_BaseFactory || (ɵThClearPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThClearPass)))(t || ThClearPass);\n  };\n}();\nThClearPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThClearPass,\n  selectors: [[\"th-clearPass\"]],\n  inputs: {\n    clearColor: \"clearColor\",\n    clearAlpha: \"clearAlpha\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThClearPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThClearPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThClearPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-clearPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThClearPass)\n      }]\n    }]\n  }], null, {\n    clearColor: [{\n      type: Input\n    }],\n    clearAlpha: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCompressedTexture extends ThTexture {\n  getType() {\n    return CompressedTexture;\n  }\n  // @ts-ignore\n  get isCompressedTexture() {\n    return this._objRef?.isCompressedTexture;\n  }\n  set mipmaps(value) {\n    if (this._objRef) {\n      this._objRef.mipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get mipmaps() {\n    return this._objRef?.mipmaps;\n  }\n  set format(value) {\n    if (this._objRef) {\n      this._objRef.format = value;\n    }\n  }\n  // @ts-ignore\n  get format() {\n    return this._objRef?.format;\n  }\n  set flipY(value) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n  // @ts-ignore\n  get flipY() {\n    return this._objRef?.flipY;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n}\nThCompressedTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThCompressedTexture_BaseFactory;\n  return function ThCompressedTexture_Factory(t) {\n    return (ɵThCompressedTexture_BaseFactory || (ɵThCompressedTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThCompressedTexture)))(t || ThCompressedTexture);\n  };\n}();\nThCompressedTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCompressedTexture,\n  selectors: [[\"th-compressedTexture\"]],\n  inputs: {\n    mipmaps: \"mipmaps\",\n    format: \"format\",\n    flipY: \"flipY\",\n    generateMipmaps: \"generateMipmaps\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThCompressedTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCompressedTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCompressedTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-compressedTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThCompressedTexture)\n      }]\n    }]\n  }], null, {\n    mipmaps: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    flipY: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCompressedArrayTexture extends ThCompressedTexture {\n  getType() {\n    return CompressedArrayTexture;\n  }\n  // @ts-ignore\n  get isCompressedArrayTexture() {\n    return this._objRef?.isCompressedArrayTexture;\n  }\n  set wrapR(value) {\n    if (this._objRef) {\n      this._objRef.wrapR = value;\n    }\n  }\n  // @ts-ignore\n  get wrapR() {\n    return this._objRef?.wrapR;\n  }\n}\nThCompressedArrayTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThCompressedArrayTexture_BaseFactory;\n  return function ThCompressedArrayTexture_Factory(t) {\n    return (ɵThCompressedArrayTexture_BaseFactory || (ɵThCompressedArrayTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThCompressedArrayTexture)))(t || ThCompressedArrayTexture);\n  };\n}();\nThCompressedArrayTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCompressedArrayTexture,\n  selectors: [[\"th-compressedArrayTexture\"]],\n  inputs: {\n    wrapR: \"wrapR\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThCompressedArrayTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCompressedArrayTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCompressedArrayTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-compressedArrayTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThCompressedArrayTexture)\n      }]\n    }]\n  }], null, {\n    wrapR: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCylinderGeometry extends ThBufferGeometry {\n  getType() {\n    return CylinderGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThCylinderGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThCylinderGeometry_BaseFactory;\n  return function ThCylinderGeometry_Factory(t) {\n    return (ɵThCylinderGeometry_BaseFactory || (ɵThCylinderGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThCylinderGeometry)))(t || ThCylinderGeometry);\n  };\n}();\nThCylinderGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCylinderGeometry,\n  selectors: [[\"th-cylinderGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThCylinderGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCylinderGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCylinderGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-cylinderGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThCylinderGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThConeGeometry extends ThCylinderGeometry {\n  getType() {\n    return ConeGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThConeGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThConeGeometry_BaseFactory;\n  return function ThConeGeometry_Factory(t) {\n    return (ɵThConeGeometry_BaseFactory || (ɵThConeGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThConeGeometry)))(t || ThConeGeometry);\n  };\n}();\nThConeGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThConeGeometry,\n  selectors: [[\"th-coneGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThConeGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThConeGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThConeGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-coneGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThConeGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThConvexGeometry extends ThBufferGeometry {\n  getType() {\n    return ConvexGeometry;\n  }\n}\nThConvexGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThConvexGeometry_BaseFactory;\n  return function ThConvexGeometry_Factory(t) {\n    return (ɵThConvexGeometry_BaseFactory || (ɵThConvexGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThConvexGeometry)))(t || ThConvexGeometry);\n  };\n}();\nThConvexGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThConvexGeometry,\n  selectors: [[\"th-convexGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThConvexGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThConvexGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThConvexGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-convexGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThConvexGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCubeCamera extends ThObject3D {\n  getType() {\n    return CubeCamera;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set renderTarget(value) {\n    if (this._objRef) {\n      this._objRef.renderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get renderTarget() {\n    return this._objRef?.renderTarget;\n  }\n}\nThCubeCamera.ɵfac = /* @__PURE__ */function () {\n  let ɵThCubeCamera_BaseFactory;\n  return function ThCubeCamera_Factory(t) {\n    return (ɵThCubeCamera_BaseFactory || (ɵThCubeCamera_BaseFactory = i0.ɵɵgetInheritedFactory(ThCubeCamera)))(t || ThCubeCamera);\n  };\n}();\nThCubeCamera.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCubeCamera,\n  selectors: [[\"th-cubeCamera\"]],\n  inputs: {\n    renderTarget: \"renderTarget\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThCubeCamera)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCubeCamera_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCubeCamera, [{\n    type: Component,\n    args: [{\n      selector: 'th-cubeCamera',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThCubeCamera)\n      }]\n    }]\n  }], null, {\n    renderTarget: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCubeTexture extends ThTexture {\n  getType() {\n    return CubeTexture;\n  }\n  // @ts-ignore\n  get isCubeTexture() {\n    return this._objRef?.isCubeTexture;\n  }\n  set mapping(value) {\n    if (this._objRef) {\n      this._objRef.mapping = value;\n    }\n  }\n  // @ts-ignore\n  get mapping() {\n    return this._objRef?.mapping;\n  }\n  set flipY(value) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n  // @ts-ignore\n  get flipY() {\n    return this._objRef?.flipY;\n  }\n}\nThCubeTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThCubeTexture_BaseFactory;\n  return function ThCubeTexture_Factory(t) {\n    return (ɵThCubeTexture_BaseFactory || (ɵThCubeTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThCubeTexture)))(t || ThCubeTexture);\n  };\n}();\nThCubeTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCubeTexture,\n  selectors: [[\"th-cubeTexture\"]],\n  inputs: {\n    mapping: \"mapping\",\n    flipY: \"flipY\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThCubeTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCubeTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCubeTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-cubeTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThCubeTexture)\n      }]\n    }]\n  }], null, {\n    mapping: [{\n      type: Input\n    }],\n    flipY: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThCubeTexturePass extends ThPass {\n  getType() {\n    return CubeTexturePass;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set cubeShader(value) {\n    if (this._objRef) {\n      this._objRef.cubeShader = value;\n    }\n  }\n  // @ts-ignore\n  get cubeShader() {\n    return this._objRef?.cubeShader;\n  }\n  set cubeMesh(value) {\n    if (this._objRef) {\n      this._objRef.cubeMesh = value;\n    }\n  }\n  // @ts-ignore\n  get cubeMesh() {\n    return this._objRef?.cubeMesh;\n  }\n  set envMap(value) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n  // @ts-ignore\n  get envMap() {\n    return this._objRef?.envMap;\n  }\n  set opacity(value) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n  // @ts-ignore\n  get opacity() {\n    return this._objRef?.opacity;\n  }\n  set cubeScene(value) {\n    if (this._objRef) {\n      this._objRef.cubeScene = value;\n    }\n  }\n  // @ts-ignore\n  get cubeScene() {\n    return this._objRef?.cubeScene;\n  }\n  set cubeCamera(value) {\n    if (this._objRef) {\n      this._objRef.cubeCamera = value;\n    }\n  }\n  // @ts-ignore\n  get cubeCamera() {\n    return this._objRef?.cubeCamera;\n  }\n}\nThCubeTexturePass.ɵfac = /* @__PURE__ */function () {\n  let ɵThCubeTexturePass_BaseFactory;\n  return function ThCubeTexturePass_Factory(t) {\n    return (ɵThCubeTexturePass_BaseFactory || (ɵThCubeTexturePass_BaseFactory = i0.ɵɵgetInheritedFactory(ThCubeTexturePass)))(t || ThCubeTexturePass);\n  };\n}();\nThCubeTexturePass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThCubeTexturePass,\n  selectors: [[\"th-cubeTexturePass\"]],\n  inputs: {\n    camera: \"camera\",\n    cubeShader: \"cubeShader\",\n    cubeMesh: \"cubeMesh\",\n    envMap: \"envMap\",\n    opacity: \"opacity\",\n    cubeScene: \"cubeScene\",\n    cubeCamera: \"cubeCamera\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThCubeTexturePass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThCubeTexturePass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCubeTexturePass, [{\n    type: Component,\n    args: [{\n      selector: 'th-cubeTexturePass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThCubeTexturePass)\n      }]\n    }]\n  }], null, {\n    camera: [{\n      type: Input\n    }],\n    cubeShader: [{\n      type: Input\n    }],\n    cubeMesh: [{\n      type: Input\n    }],\n    envMap: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    cubeScene: [{\n      type: Input\n    }],\n    cubeCamera: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThData3DTexture extends ThTexture {\n  getType() {\n    return Data3DTexture;\n  }\n  // @ts-ignore\n  get isData3DTexture() {\n    return this._objRef?.isData3DTexture;\n  }\n  set magFilter(value) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n  // @ts-ignore\n  get magFilter() {\n    return this._objRef?.magFilter;\n  }\n  set minFilter(value) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n  // @ts-ignore\n  get minFilter() {\n    return this._objRef?.minFilter;\n  }\n  set wrapR(value) {\n    if (this._objRef) {\n      this._objRef.wrapR = value;\n    }\n  }\n  // @ts-ignore\n  get wrapR() {\n    return this._objRef?.wrapR;\n  }\n  set flipY(value) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n  // @ts-ignore\n  get flipY() {\n    return this._objRef?.flipY;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n  set unpackAlignment(value) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n  // @ts-ignore\n  get unpackAlignment() {\n    return this._objRef?.unpackAlignment;\n  }\n}\nThData3DTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThData3DTexture_BaseFactory;\n  return function ThData3DTexture_Factory(t) {\n    return (ɵThData3DTexture_BaseFactory || (ɵThData3DTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThData3DTexture)))(t || ThData3DTexture);\n  };\n}();\nThData3DTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThData3DTexture,\n  selectors: [[\"th-data3DTexture\"]],\n  inputs: {\n    magFilter: \"magFilter\",\n    minFilter: \"minFilter\",\n    wrapR: \"wrapR\",\n    flipY: \"flipY\",\n    generateMipmaps: \"generateMipmaps\",\n    unpackAlignment: \"unpackAlignment\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThData3DTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThData3DTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThData3DTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-data3DTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThData3DTexture)\n      }]\n    }]\n  }], null, {\n    magFilter: [{\n      type: Input\n    }],\n    minFilter: [{\n      type: Input\n    }],\n    wrapR: [{\n      type: Input\n    }],\n    flipY: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }],\n    unpackAlignment: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDataArrayTexture extends ThTexture {\n  getType() {\n    return DataArrayTexture;\n  }\n  // @ts-ignore\n  get isDataArrayTexture() {\n    return this._objRef?.isDataArrayTexture;\n  }\n  set magFilter(value) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n  // @ts-ignore\n  get magFilter() {\n    return this._objRef?.magFilter;\n  }\n  set minFilter(value) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n  // @ts-ignore\n  get minFilter() {\n    return this._objRef?.minFilter;\n  }\n  set wrapR(value) {\n    if (this._objRef) {\n      this._objRef.wrapR = value;\n    }\n  }\n  // @ts-ignore\n  get wrapR() {\n    return this._objRef?.wrapR;\n  }\n  set flipY(value) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n  // @ts-ignore\n  get flipY() {\n    return this._objRef?.flipY;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n  set unpackAlignment(value) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n  // @ts-ignore\n  get unpackAlignment() {\n    return this._objRef?.unpackAlignment;\n  }\n}\nThDataArrayTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThDataArrayTexture_BaseFactory;\n  return function ThDataArrayTexture_Factory(t) {\n    return (ɵThDataArrayTexture_BaseFactory || (ɵThDataArrayTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThDataArrayTexture)))(t || ThDataArrayTexture);\n  };\n}();\nThDataArrayTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDataArrayTexture,\n  selectors: [[\"th-dataArrayTexture\"]],\n  inputs: {\n    magFilter: \"magFilter\",\n    minFilter: \"minFilter\",\n    wrapR: \"wrapR\",\n    flipY: \"flipY\",\n    generateMipmaps: \"generateMipmaps\",\n    unpackAlignment: \"unpackAlignment\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThDataArrayTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDataArrayTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDataArrayTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-dataArrayTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThDataArrayTexture)\n      }]\n    }]\n  }], null, {\n    magFilter: [{\n      type: Input\n    }],\n    minFilter: [{\n      type: Input\n    }],\n    wrapR: [{\n      type: Input\n    }],\n    flipY: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }],\n    unpackAlignment: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDataTexture extends ThTexture {\n  getType() {\n    return DataTexture;\n  }\n  // @ts-ignore\n  get isDataTexture() {\n    return this._objRef?.isDataTexture;\n  }\n  set magFilter(value) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n  // @ts-ignore\n  get magFilter() {\n    return this._objRef?.magFilter;\n  }\n  set minFilter(value) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n  // @ts-ignore\n  get minFilter() {\n    return this._objRef?.minFilter;\n  }\n  set flipY(value) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n  // @ts-ignore\n  get flipY() {\n    return this._objRef?.flipY;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n  set unpackAlignment(value) {\n    if (this._objRef) {\n      this._objRef.unpackAlignment = value;\n    }\n  }\n  // @ts-ignore\n  get unpackAlignment() {\n    return this._objRef?.unpackAlignment;\n  }\n}\nThDataTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThDataTexture_BaseFactory;\n  return function ThDataTexture_Factory(t) {\n    return (ɵThDataTexture_BaseFactory || (ɵThDataTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThDataTexture)))(t || ThDataTexture);\n  };\n}();\nThDataTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDataTexture,\n  selectors: [[\"th-dataTexture\"]],\n  inputs: {\n    magFilter: \"magFilter\",\n    minFilter: \"minFilter\",\n    flipY: \"flipY\",\n    generateMipmaps: \"generateMipmaps\",\n    unpackAlignment: \"unpackAlignment\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThDataTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDataTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDataTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-dataTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThDataTexture)\n      }]\n    }]\n  }], null, {\n    magFilter: [{\n      type: Input\n    }],\n    minFilter: [{\n      type: Input\n    }],\n    flipY: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }],\n    unpackAlignment: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDecalGeometry extends ThBufferGeometry {\n  getType() {\n    return DecalGeometry;\n  }\n}\nThDecalGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThDecalGeometry_BaseFactory;\n  return function ThDecalGeometry_Factory(t) {\n    return (ɵThDecalGeometry_BaseFactory || (ɵThDecalGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThDecalGeometry)))(t || ThDecalGeometry);\n  };\n}();\nThDecalGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDecalGeometry,\n  selectors: [[\"th-decalGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThDecalGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDecalGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDecalGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-decalGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThDecalGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDepthTexture extends ThTexture {\n  getType() {\n    return DepthTexture;\n  }\n  // @ts-ignore\n  get isDepthTexture() {\n    return this._objRef?.isDepthTexture;\n  }\n  set flipY(value) {\n    if (this._objRef) {\n      this._objRef.flipY = value;\n    }\n  }\n  // @ts-ignore\n  get flipY() {\n    return this._objRef?.flipY;\n  }\n  set magFilter(value) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n  // @ts-ignore\n  get magFilter() {\n    return this._objRef?.magFilter;\n  }\n  set minFilter(value) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n  // @ts-ignore\n  get minFilter() {\n    return this._objRef?.minFilter;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n  set format(value) {\n    if (this._objRef) {\n      this._objRef.format = value;\n    }\n  }\n  // @ts-ignore\n  get format() {\n    return this._objRef?.format;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThDepthTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThDepthTexture_BaseFactory;\n  return function ThDepthTexture_Factory(t) {\n    return (ɵThDepthTexture_BaseFactory || (ɵThDepthTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThDepthTexture)))(t || ThDepthTexture);\n  };\n}();\nThDepthTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDepthTexture,\n  selectors: [[\"th-depthTexture\"]],\n  inputs: {\n    flipY: \"flipY\",\n    magFilter: \"magFilter\",\n    minFilter: \"minFilter\",\n    generateMipmaps: \"generateMipmaps\",\n    format: \"format\",\n    type: \"type\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThDepthTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDepthTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDepthTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-depthTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThDepthTexture)\n      }]\n    }]\n  }], null, {\n    flipY: [{\n      type: Input\n    }],\n    magFilter: [{\n      type: Input\n    }],\n    minFilter: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDirectionalLight extends ThLight {\n  getType() {\n    return DirectionalLight;\n  }\n  // @ts-ignore\n  get isDirectionalLight() {\n    return this._objRef?.isDirectionalLight;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set castShadow(value) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n  // @ts-ignore\n  get castShadow() {\n    return this._objRef?.castShadow;\n  }\n  set position(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  get position() {\n    return this._objRef?.position;\n  }\n  set shadow(value) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n  // @ts-ignore\n  get shadow() {\n    return this._objRef?.shadow;\n  }\n  set target(value) {\n    if (this._objRef) {\n      this._objRef.target = value;\n    }\n  }\n  // @ts-ignore\n  get target() {\n    return this._objRef?.target;\n  }\n}\nThDirectionalLight.ɵfac = /* @__PURE__ */function () {\n  let ɵThDirectionalLight_BaseFactory;\n  return function ThDirectionalLight_Factory(t) {\n    return (ɵThDirectionalLight_BaseFactory || (ɵThDirectionalLight_BaseFactory = i0.ɵɵgetInheritedFactory(ThDirectionalLight)))(t || ThDirectionalLight);\n  };\n}();\nThDirectionalLight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDirectionalLight,\n  selectors: [[\"th-directionalLight\"]],\n  inputs: {\n    castShadow: \"castShadow\",\n    position: \"position\",\n    shadow: \"shadow\",\n    target: \"target\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThDirectionalLight)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDirectionalLight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDirectionalLight, [{\n    type: Component,\n    args: [{\n      selector: 'th-directionalLight',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThDirectionalLight)\n      }]\n    }]\n  }], null, {\n    castShadow: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    shadow: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDirectionalLightHelper extends ThObject3D {\n  getType() {\n    return DirectionalLightHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set lightPlane(value) {\n    if (this._objRef) {\n      this._objRef.lightPlane = value;\n    }\n  }\n  // @ts-ignore\n  get lightPlane() {\n    return this._objRef?.lightPlane;\n  }\n  set light(value) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n  // @ts-ignore\n  get light() {\n    return this._objRef?.light;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set targetLine(value) {\n    if (this._objRef) {\n      this._objRef.targetLine = value;\n    }\n  }\n  // @ts-ignore\n  get targetLine() {\n    return this._objRef?.targetLine;\n  }\n}\nThDirectionalLightHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThDirectionalLightHelper_BaseFactory;\n  return function ThDirectionalLightHelper_Factory(t) {\n    return (ɵThDirectionalLightHelper_BaseFactory || (ɵThDirectionalLightHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThDirectionalLightHelper)))(t || ThDirectionalLightHelper);\n  };\n}();\nThDirectionalLightHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDirectionalLightHelper,\n  selectors: [[\"th-directionalLightHelper\"]],\n  inputs: {\n    lightPlane: \"lightPlane\",\n    light: \"light\",\n    matrix: \"matrix\",\n    matrixAutoUpdate: \"matrixAutoUpdate\",\n    color: \"color\",\n    targetLine: \"targetLine\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThDirectionalLightHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDirectionalLightHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDirectionalLightHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-directionalLightHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThDirectionalLightHelper)\n      }]\n    }]\n  }], null, {\n    lightPlane: [{\n      type: Input\n    }],\n    light: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    targetLine: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPolyhedronGeometry extends ThBufferGeometry {\n  getType() {\n    return PolyhedronGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThPolyhedronGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThPolyhedronGeometry_BaseFactory;\n  return function ThPolyhedronGeometry_Factory(t) {\n    return (ɵThPolyhedronGeometry_BaseFactory || (ɵThPolyhedronGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThPolyhedronGeometry)))(t || ThPolyhedronGeometry);\n  };\n}();\nThPolyhedronGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPolyhedronGeometry,\n  selectors: [[\"th-polyhedronGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThPolyhedronGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPolyhedronGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPolyhedronGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-polyhedronGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThPolyhedronGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDodecahedronGeometry extends ThPolyhedronGeometry {\n  getType() {\n    return DodecahedronGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThDodecahedronGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThDodecahedronGeometry_BaseFactory;\n  return function ThDodecahedronGeometry_Factory(t) {\n    return (ɵThDodecahedronGeometry_BaseFactory || (ɵThDodecahedronGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThDodecahedronGeometry)))(t || ThDodecahedronGeometry);\n  };\n}();\nThDodecahedronGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDodecahedronGeometry,\n  selectors: [[\"th-dodecahedronGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThDodecahedronGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDodecahedronGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDodecahedronGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-dodecahedronGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThDodecahedronGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThDotScreenPass extends ThPass {\n  getType() {\n    return DotScreenPass;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThDotScreenPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThDotScreenPass_BaseFactory;\n  return function ThDotScreenPass_Factory(t) {\n    return (ɵThDotScreenPass_BaseFactory || (ɵThDotScreenPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThDotScreenPass)))(t || ThDotScreenPass);\n  };\n}();\nThDotScreenPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDotScreenPass,\n  selectors: [[\"th-dotScreenPass\"]],\n  inputs: {\n    uniforms: \"uniforms\",\n    material: \"material\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThDotScreenPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDotScreenPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDotScreenPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-dotScreenPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThDotScreenPass)\n      }]\n    }]\n  }], null, {\n    uniforms: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDragControls extends ThControlBase {\n  getType() {\n    return DragControls;\n  }\n  set object(value) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n  // @ts-ignore\n  get object() {\n    return this._objRef?.object;\n  }\n  set enabled(value) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n  // @ts-ignore\n  get enabled() {\n    return this._objRef?.enabled;\n  }\n  set transformGroup(value) {\n    if (this._objRef) {\n      this._objRef.transformGroup = value;\n    }\n  }\n  // @ts-ignore\n  get transformGroup() {\n    return this._objRef?.transformGroup;\n  }\n}\nThDragControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThDragControls_BaseFactory;\n  return function ThDragControls_Factory(t) {\n    return (ɵThDragControls_BaseFactory || (ɵThDragControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThDragControls)))(t || ThDragControls);\n  };\n}();\nThDragControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThDragControls,\n  selectors: [[\"th-dragControls\"]],\n  inputs: {\n    object: \"object\",\n    enabled: \"enabled\",\n    transformGroup: \"transformGroup\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThDragControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThDragControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDragControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-dragControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThDragControls)\n      }]\n    }]\n  }], null, {\n    object: [{\n      type: Input\n    }],\n    enabled: [{\n      type: Input\n    }],\n    transformGroup: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThEdgesGeometry extends ThBufferGeometry {\n  getType() {\n    return EdgesGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThEdgesGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThEdgesGeometry_BaseFactory;\n  return function ThEdgesGeometry_Factory(t) {\n    return (ɵThEdgesGeometry_BaseFactory || (ɵThEdgesGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThEdgesGeometry)))(t || ThEdgesGeometry);\n  };\n}();\nThEdgesGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThEdgesGeometry,\n  selectors: [[\"th-edgesGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThEdgesGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThEdgesGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThEdgesGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-edgesGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThEdgesGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThExtrudeGeometry extends ThBufferGeometry {\n  getType() {\n    return ExtrudeGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThExtrudeGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThExtrudeGeometry_BaseFactory;\n  return function ThExtrudeGeometry_Factory(t) {\n    return (ɵThExtrudeGeometry_BaseFactory || (ɵThExtrudeGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThExtrudeGeometry)))(t || ThExtrudeGeometry);\n  };\n}();\nThExtrudeGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThExtrudeGeometry,\n  selectors: [[\"th-extrudeGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThExtrudeGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThExtrudeGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThExtrudeGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-extrudeGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThExtrudeGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThFilmPass extends ThPass {\n  getType() {\n    return FilmPass;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThFilmPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThFilmPass_BaseFactory;\n  return function ThFilmPass_Factory(t) {\n    return (ɵThFilmPass_BaseFactory || (ɵThFilmPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThFilmPass)))(t || ThFilmPass);\n  };\n}();\nThFilmPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThFilmPass,\n  selectors: [[\"th-filmPass\"]],\n  inputs: {\n    uniforms: \"uniforms\",\n    material: \"material\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThFilmPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThFilmPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThFilmPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-filmPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThFilmPass)\n      }]\n    }]\n  }], null, {\n    uniforms: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThFirstPersonControls extends ThControlBase {\n  getType() {\n    return FirstPersonControls;\n  }\n  set object(value) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n  // @ts-ignore\n  get object() {\n    return this._objRef?.object;\n  }\n  set domElement(value) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n  // @ts-ignore\n  get domElement() {\n    return this._objRef?.domElement;\n  }\n  set enabled(value) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n  // @ts-ignore\n  get enabled() {\n    return this._objRef?.enabled;\n  }\n  set movementSpeed(value) {\n    if (this._objRef) {\n      this._objRef.movementSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get movementSpeed() {\n    return this._objRef?.movementSpeed;\n  }\n  set lookSpeed(value) {\n    if (this._objRef) {\n      this._objRef.lookSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get lookSpeed() {\n    return this._objRef?.lookSpeed;\n  }\n  set lookVertical(value) {\n    if (this._objRef) {\n      this._objRef.lookVertical = value;\n    }\n  }\n  // @ts-ignore\n  get lookVertical() {\n    return this._objRef?.lookVertical;\n  }\n  set autoForward(value) {\n    if (this._objRef) {\n      this._objRef.autoForward = value;\n    }\n  }\n  // @ts-ignore\n  get autoForward() {\n    return this._objRef?.autoForward;\n  }\n  set activeLook(value) {\n    if (this._objRef) {\n      this._objRef.activeLook = value;\n    }\n  }\n  // @ts-ignore\n  get activeLook() {\n    return this._objRef?.activeLook;\n  }\n  set heightSpeed(value) {\n    if (this._objRef) {\n      this._objRef.heightSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get heightSpeed() {\n    return this._objRef?.heightSpeed;\n  }\n  set heightCoef(value) {\n    if (this._objRef) {\n      this._objRef.heightCoef = value;\n    }\n  }\n  // @ts-ignore\n  get heightCoef() {\n    return this._objRef?.heightCoef;\n  }\n  set heightMin(value) {\n    if (this._objRef) {\n      this._objRef.heightMin = value;\n    }\n  }\n  // @ts-ignore\n  get heightMin() {\n    return this._objRef?.heightMin;\n  }\n  set heightMax(value) {\n    if (this._objRef) {\n      this._objRef.heightMax = value;\n    }\n  }\n  // @ts-ignore\n  get heightMax() {\n    return this._objRef?.heightMax;\n  }\n  set constrainVertical(value) {\n    if (this._objRef) {\n      this._objRef.constrainVertical = value;\n    }\n  }\n  // @ts-ignore\n  get constrainVertical() {\n    return this._objRef?.constrainVertical;\n  }\n  set verticalMin(value) {\n    if (this._objRef) {\n      this._objRef.verticalMin = value;\n    }\n  }\n  // @ts-ignore\n  get verticalMin() {\n    return this._objRef?.verticalMin;\n  }\n  set verticalMax(value) {\n    if (this._objRef) {\n      this._objRef.verticalMax = value;\n    }\n  }\n  // @ts-ignore\n  get verticalMax() {\n    return this._objRef?.verticalMax;\n  }\n  set mouseDragOn(value) {\n    if (this._objRef) {\n      this._objRef.mouseDragOn = value;\n    }\n  }\n  // @ts-ignore\n  get mouseDragOn() {\n    return this._objRef?.mouseDragOn;\n  }\n}\nThFirstPersonControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThFirstPersonControls_BaseFactory;\n  return function ThFirstPersonControls_Factory(t) {\n    return (ɵThFirstPersonControls_BaseFactory || (ɵThFirstPersonControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThFirstPersonControls)))(t || ThFirstPersonControls);\n  };\n}();\nThFirstPersonControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThFirstPersonControls,\n  selectors: [[\"th-firstPersonControls\"]],\n  inputs: {\n    object: \"object\",\n    domElement: \"domElement\",\n    enabled: \"enabled\",\n    movementSpeed: \"movementSpeed\",\n    lookSpeed: \"lookSpeed\",\n    lookVertical: \"lookVertical\",\n    autoForward: \"autoForward\",\n    activeLook: \"activeLook\",\n    heightSpeed: \"heightSpeed\",\n    heightCoef: \"heightCoef\",\n    heightMin: \"heightMin\",\n    heightMax: \"heightMax\",\n    constrainVertical: \"constrainVertical\",\n    verticalMin: \"verticalMin\",\n    verticalMax: \"verticalMax\",\n    mouseDragOn: \"mouseDragOn\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThFirstPersonControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThFirstPersonControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThFirstPersonControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-firstPersonControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThFirstPersonControls)\n      }]\n    }]\n  }], null, {\n    object: [{\n      type: Input\n    }],\n    domElement: [{\n      type: Input\n    }],\n    enabled: [{\n      type: Input\n    }],\n    movementSpeed: [{\n      type: Input\n    }],\n    lookSpeed: [{\n      type: Input\n    }],\n    lookVertical: [{\n      type: Input\n    }],\n    autoForward: [{\n      type: Input\n    }],\n    activeLook: [{\n      type: Input\n    }],\n    heightSpeed: [{\n      type: Input\n    }],\n    heightCoef: [{\n      type: Input\n    }],\n    heightMin: [{\n      type: Input\n    }],\n    heightMax: [{\n      type: Input\n    }],\n    constrainVertical: [{\n      type: Input\n    }],\n    verticalMin: [{\n      type: Input\n    }],\n    verticalMax: [{\n      type: Input\n    }],\n    mouseDragOn: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThFlyControls extends ThControlBase {\n  getType() {\n    return FlyControls;\n  }\n  set object(value) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n  // @ts-ignore\n  get object() {\n    return this._objRef?.object;\n  }\n  set domElement(value) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n  // @ts-ignore\n  get domElement() {\n    return this._objRef?.domElement;\n  }\n  set movementSpeed(value) {\n    if (this._objRef) {\n      this._objRef.movementSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get movementSpeed() {\n    return this._objRef?.movementSpeed;\n  }\n  set rollSpeed(value) {\n    if (this._objRef) {\n      this._objRef.rollSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get rollSpeed() {\n    return this._objRef?.rollSpeed;\n  }\n  set dragToLook(value) {\n    if (this._objRef) {\n      this._objRef.dragToLook = value;\n    }\n  }\n  // @ts-ignore\n  get dragToLook() {\n    return this._objRef?.dragToLook;\n  }\n  set autoForward(value) {\n    if (this._objRef) {\n      this._objRef.autoForward = value;\n    }\n  }\n  // @ts-ignore\n  get autoForward() {\n    return this._objRef?.autoForward;\n  }\n}\nThFlyControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThFlyControls_BaseFactory;\n  return function ThFlyControls_Factory(t) {\n    return (ɵThFlyControls_BaseFactory || (ɵThFlyControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThFlyControls)))(t || ThFlyControls);\n  };\n}();\nThFlyControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThFlyControls,\n  selectors: [[\"th-flyControls\"]],\n  inputs: {\n    object: \"object\",\n    domElement: \"domElement\",\n    movementSpeed: \"movementSpeed\",\n    rollSpeed: \"rollSpeed\",\n    dragToLook: \"dragToLook\",\n    autoForward: \"autoForward\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThFlyControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThFlyControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThFlyControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-flyControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThFlyControls)\n      }]\n    }]\n  }], null, {\n    object: [{\n      type: Input\n    }],\n    domElement: [{\n      type: Input\n    }],\n    movementSpeed: [{\n      type: Input\n    }],\n    rollSpeed: [{\n      type: Input\n    }],\n    dragToLook: [{\n      type: Input\n    }],\n    autoForward: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThFramebufferTexture extends ThTexture {\n  getType() {\n    return FramebufferTexture;\n  }\n  // @ts-ignore\n  get isFramebufferTexture() {\n    return this._objRef?.isFramebufferTexture;\n  }\n  set magFilter(value) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n  // @ts-ignore\n  get magFilter() {\n    return this._objRef?.magFilter;\n  }\n  set minFilter(value) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n  // @ts-ignore\n  get minFilter() {\n    return this._objRef?.minFilter;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n}\nThFramebufferTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThFramebufferTexture_BaseFactory;\n  return function ThFramebufferTexture_Factory(t) {\n    return (ɵThFramebufferTexture_BaseFactory || (ɵThFramebufferTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThFramebufferTexture)))(t || ThFramebufferTexture);\n  };\n}();\nThFramebufferTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThFramebufferTexture,\n  selectors: [[\"th-framebufferTexture\"]],\n  inputs: {\n    magFilter: \"magFilter\",\n    minFilter: \"minFilter\",\n    generateMipmaps: \"generateMipmaps\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThFramebufferTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThFramebufferTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThFramebufferTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-framebufferTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThFramebufferTexture)\n      }]\n    }]\n  }], null, {\n    magFilter: [{\n      type: Input\n    }],\n    minFilter: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThGlitchPass extends ThPass {\n  getType() {\n    return GlitchPass;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n  set goWild(value) {\n    if (this._objRef) {\n      this._objRef.goWild = value;\n    }\n  }\n  // @ts-ignore\n  get goWild() {\n    return this._objRef?.goWild;\n  }\n  set curF(value) {\n    if (this._objRef) {\n      this._objRef.curF = value;\n    }\n  }\n  // @ts-ignore\n  get curF() {\n    return this._objRef?.curF;\n  }\n  set randX(value) {\n    if (this._objRef) {\n      this._objRef.randX = value;\n    }\n  }\n  // @ts-ignore\n  get randX() {\n    return this._objRef?.randX;\n  }\n}\nThGlitchPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThGlitchPass_BaseFactory;\n  return function ThGlitchPass_Factory(t) {\n    return (ɵThGlitchPass_BaseFactory || (ɵThGlitchPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThGlitchPass)))(t || ThGlitchPass);\n  };\n}();\nThGlitchPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThGlitchPass,\n  selectors: [[\"th-glitchPass\"]],\n  inputs: {\n    uniforms: \"uniforms\",\n    material: \"material\",\n    fsQuad: \"fsQuad\",\n    goWild: \"goWild\",\n    curF: \"curF\",\n    randX: \"randX\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThGlitchPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThGlitchPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThGlitchPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-glitchPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThGlitchPass)\n      }]\n    }]\n  }], null, {\n    uniforms: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }],\n    goWild: [{\n      type: Input\n    }],\n    curF: [{\n      type: Input\n    }],\n    randX: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThGridHelper extends ThLineSegments {\n  getType() {\n    return GridHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThGridHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThGridHelper_BaseFactory;\n  return function ThGridHelper_Factory(t) {\n    return (ɵThGridHelper_BaseFactory || (ɵThGridHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThGridHelper)))(t || ThGridHelper);\n  };\n}();\nThGridHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThGridHelper,\n  selectors: [[\"th-gridHelper\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThGridHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThGridHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThGridHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-gridHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThGridHelper)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThGroup extends ThObject3D {\n  getType() {\n    return Group;\n  }\n  // @ts-ignore\n  get isGroup() {\n    return this._objRef?.isGroup;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThGroup.ɵfac = /* @__PURE__ */function () {\n  let ɵThGroup_BaseFactory;\n  return function ThGroup_Factory(t) {\n    return (ɵThGroup_BaseFactory || (ɵThGroup_BaseFactory = i0.ɵɵgetInheritedFactory(ThGroup)))(t || ThGroup);\n  };\n}();\nThGroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThGroup,\n  selectors: [[\"th-group\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThGroup)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThGroup, [{\n    type: Component,\n    args: [{\n      selector: 'th-group',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThGroup)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThHalftonePass extends ThPass {\n  getType() {\n    return HalftonePass;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThHalftonePass.ɵfac = /* @__PURE__ */function () {\n  let ɵThHalftonePass_BaseFactory;\n  return function ThHalftonePass_Factory(t) {\n    return (ɵThHalftonePass_BaseFactory || (ɵThHalftonePass_BaseFactory = i0.ɵɵgetInheritedFactory(ThHalftonePass)))(t || ThHalftonePass);\n  };\n}();\nThHalftonePass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThHalftonePass,\n  selectors: [[\"th-halftonePass\"]],\n  inputs: {\n    uniforms: \"uniforms\",\n    material: \"material\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThHalftonePass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThHalftonePass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThHalftonePass, [{\n    type: Component,\n    args: [{\n      selector: 'th-halftonePass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThHalftonePass)\n      }]\n    }]\n  }], null, {\n    uniforms: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThHemisphereLight extends ThLight {\n  getType() {\n    return HemisphereLight;\n  }\n  // @ts-ignore\n  get isHemisphereLight() {\n    return this._objRef?.isHemisphereLight;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set position(value) {\n    if (this._objRef) {\n      applyValue(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  get position() {\n    return this._objRef?.position;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set groundColor(value) {\n    if (this._objRef) {\n      this._objRef.groundColor = applyValue(this._objRef.groundColor, value);\n    }\n  }\n  // @ts-ignore\n  get groundColor() {\n    return this._objRef?.groundColor;\n  }\n}\nThHemisphereLight.ɵfac = /* @__PURE__ */function () {\n  let ɵThHemisphereLight_BaseFactory;\n  return function ThHemisphereLight_Factory(t) {\n    return (ɵThHemisphereLight_BaseFactory || (ɵThHemisphereLight_BaseFactory = i0.ɵɵgetInheritedFactory(ThHemisphereLight)))(t || ThHemisphereLight);\n  };\n}();\nThHemisphereLight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThHemisphereLight,\n  selectors: [[\"th-hemisphereLight\"]],\n  inputs: {\n    position: \"position\",\n    color: \"color\",\n    groundColor: \"groundColor\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThHemisphereLight)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThHemisphereLight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThHemisphereLight, [{\n    type: Component,\n    args: [{\n      selector: 'th-hemisphereLight',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThHemisphereLight)\n      }]\n    }]\n  }], null, {\n    position: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    groundColor: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThHemisphereLightHelper extends ThObject3D {\n  getType() {\n    return HemisphereLightHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set light(value) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n  // @ts-ignore\n  get light() {\n    return this._objRef?.light;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n}\nThHemisphereLightHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThHemisphereLightHelper_BaseFactory;\n  return function ThHemisphereLightHelper_Factory(t) {\n    return (ɵThHemisphereLightHelper_BaseFactory || (ɵThHemisphereLightHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThHemisphereLightHelper)))(t || ThHemisphereLightHelper);\n  };\n}();\nThHemisphereLightHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThHemisphereLightHelper,\n  selectors: [[\"th-hemisphereLightHelper\"]],\n  inputs: {\n    light: \"light\",\n    matrix: \"matrix\",\n    matrixAutoUpdate: \"matrixAutoUpdate\",\n    material: \"material\",\n    color: \"color\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThHemisphereLightHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThHemisphereLightHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThHemisphereLightHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-hemisphereLightHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThHemisphereLightHelper)\n      }]\n    }]\n  }], null, {\n    light: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThHemisphereLightProbe extends ThLightProbe {\n  getType() {\n    return HemisphereLightProbe;\n  }\n  // @ts-ignore\n  get isHemisphereLightProbe() {\n    return this._objRef?.isHemisphereLightProbe;\n  }\n}\nThHemisphereLightProbe.ɵfac = /* @__PURE__ */function () {\n  let ɵThHemisphereLightProbe_BaseFactory;\n  return function ThHemisphereLightProbe_Factory(t) {\n    return (ɵThHemisphereLightProbe_BaseFactory || (ɵThHemisphereLightProbe_BaseFactory = i0.ɵɵgetInheritedFactory(ThHemisphereLightProbe)))(t || ThHemisphereLightProbe);\n  };\n}();\nThHemisphereLightProbe.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThHemisphereLightProbe,\n  selectors: [[\"th-hemisphereLightProbe\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThHemisphereLightProbe)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThHemisphereLightProbe_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThHemisphereLightProbe, [{\n    type: Component,\n    args: [{\n      selector: 'th-hemisphereLightProbe',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThHemisphereLightProbe)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThIcosahedronGeometry extends ThPolyhedronGeometry {\n  getType() {\n    return IcosahedronGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThIcosahedronGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThIcosahedronGeometry_BaseFactory;\n  return function ThIcosahedronGeometry_Factory(t) {\n    return (ɵThIcosahedronGeometry_BaseFactory || (ɵThIcosahedronGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThIcosahedronGeometry)))(t || ThIcosahedronGeometry);\n  };\n}();\nThIcosahedronGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThIcosahedronGeometry,\n  selectors: [[\"th-icosahedronGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThIcosahedronGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThIcosahedronGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThIcosahedronGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-icosahedronGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThIcosahedronGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThInstancedBufferGeometry extends ThBufferGeometry {\n  getType() {\n    return InstancedBufferGeometry;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get isInstancedBufferGeometry() {\n    return this._objRef?.isInstancedBufferGeometry;\n  }\n  set instanceCount(value) {\n    if (this._objRef) {\n      this._objRef.instanceCount = value;\n    }\n  }\n  // @ts-ignore\n  get instanceCount() {\n    return this._objRef?.instanceCount;\n  }\n}\nThInstancedBufferGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThInstancedBufferGeometry_BaseFactory;\n  return function ThInstancedBufferGeometry_Factory(t) {\n    return (ɵThInstancedBufferGeometry_BaseFactory || (ɵThInstancedBufferGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThInstancedBufferGeometry)))(t || ThInstancedBufferGeometry);\n  };\n}();\nThInstancedBufferGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThInstancedBufferGeometry,\n  selectors: [[\"th-instancedBufferGeometry\"]],\n  inputs: {\n    type: \"type\",\n    instanceCount: \"instanceCount\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThInstancedBufferGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThInstancedBufferGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThInstancedBufferGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-instancedBufferGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThInstancedBufferGeometry)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    instanceCount: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMesh extends ThObject3D {\n  getType() {\n    return Mesh;\n  }\n  // @ts-ignore\n  get isMesh() {\n    return this._objRef?.isMesh;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set geometry(value) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n  // @ts-ignore\n  get geometry() {\n    return this._objRef?.geometry;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set morphTargetInfluences(value) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n  // @ts-ignore\n  get morphTargetInfluences() {\n    return this._objRef?.morphTargetInfluences;\n  }\n  set morphTargetDictionary(value) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n  // @ts-ignore\n  get morphTargetDictionary() {\n    return this._objRef?.morphTargetDictionary;\n  }\n}\nThMesh.ɵfac = /* @__PURE__ */function () {\n  let ɵThMesh_BaseFactory;\n  return function ThMesh_Factory(t) {\n    return (ɵThMesh_BaseFactory || (ɵThMesh_BaseFactory = i0.ɵɵgetInheritedFactory(ThMesh)))(t || ThMesh);\n  };\n}();\nThMesh.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMesh,\n  selectors: [[\"th-mesh\"]],\n  inputs: {\n    geometry: \"geometry\",\n    material: \"material\",\n    morphTargetInfluences: \"morphTargetInfluences\",\n    morphTargetDictionary: \"morphTargetDictionary\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThMesh)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMesh_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMesh, [{\n    type: Component,\n    args: [{\n      selector: 'th-mesh',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThMesh)\n      }]\n    }]\n  }], null, {\n    geometry: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    morphTargetInfluences: [{\n      type: Input\n    }],\n    morphTargetDictionary: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThInstancedMesh extends ThMesh {\n  getType() {\n    return InstancedMesh;\n  }\n  // @ts-ignore\n  get isInstancedMesh() {\n    return this._objRef?.isInstancedMesh;\n  }\n  set boundingBox(value) {\n    if (this._objRef) {\n      this._objRef.boundingBox = applyValue(this._objRef.boundingBox, value);\n    }\n  }\n  // @ts-ignore\n  get boundingBox() {\n    return this._objRef?.boundingBox;\n  }\n  set boundingSphere(value) {\n    if (this._objRef) {\n      this._objRef.boundingSphere = applyValue(this._objRef.boundingSphere, value);\n    }\n  }\n  // @ts-ignore\n  get boundingSphere() {\n    return this._objRef?.boundingSphere;\n  }\n  set count(value) {\n    if (this._objRef) {\n      this._objRef.count = value;\n    }\n  }\n  // @ts-ignore\n  get count() {\n    return this._objRef?.count;\n  }\n  set instanceColor(value) {\n    if (this._objRef) {\n      this._objRef.instanceColor = applyValue(this._objRef.instanceColor, value);\n    }\n  }\n  // @ts-ignore\n  get instanceColor() {\n    return this._objRef?.instanceColor;\n  }\n  set instanceMatrix(value) {\n    if (this._objRef) {\n      this._objRef.instanceMatrix = applyValue(this._objRef.instanceMatrix, value);\n    }\n  }\n  // @ts-ignore\n  get instanceMatrix() {\n    return this._objRef?.instanceMatrix;\n  }\n}\nThInstancedMesh.ɵfac = /* @__PURE__ */function () {\n  let ɵThInstancedMesh_BaseFactory;\n  return function ThInstancedMesh_Factory(t) {\n    return (ɵThInstancedMesh_BaseFactory || (ɵThInstancedMesh_BaseFactory = i0.ɵɵgetInheritedFactory(ThInstancedMesh)))(t || ThInstancedMesh);\n  };\n}();\nThInstancedMesh.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThInstancedMesh,\n  selectors: [[\"th-instancedMesh\"]],\n  inputs: {\n    boundingBox: \"boundingBox\",\n    boundingSphere: \"boundingSphere\",\n    count: \"count\",\n    instanceColor: \"instanceColor\",\n    instanceMatrix: \"instanceMatrix\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThInstancedMesh)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThInstancedMesh_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThInstancedMesh, [{\n    type: Component,\n    args: [{\n      selector: 'th-instancedMesh',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThInstancedMesh)\n      }]\n    }]\n  }], null, {\n    boundingBox: [{\n      type: Input\n    }],\n    boundingSphere: [{\n      type: Input\n    }],\n    count: [{\n      type: Input\n    }],\n    instanceColor: [{\n      type: Input\n    }],\n    instanceMatrix: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLatheGeometry extends ThBufferGeometry {\n  getType() {\n    return LatheGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThLatheGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThLatheGeometry_BaseFactory;\n  return function ThLatheGeometry_Factory(t) {\n    return (ɵThLatheGeometry_BaseFactory || (ɵThLatheGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThLatheGeometry)))(t || ThLatheGeometry);\n  };\n}();\nThLatheGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLatheGeometry,\n  selectors: [[\"th-latheGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThLatheGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLatheGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLatheGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-latheGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThLatheGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLightningStrike extends ThBufferGeometry {\n  getType() {\n    return LightningStrike;\n  }\n  set state(value) {\n    if (this._objRef) {\n      this._objRef.state = value;\n    }\n  }\n  // @ts-ignore\n  get state() {\n    return this._objRef?.state;\n  }\n}\nThLightningStrike.RAY_INITIALIZED = LightningStrike.RAY_INITIALIZED;\nThLightningStrike.RAY_UNBORN = LightningStrike.RAY_UNBORN;\nThLightningStrike.RAY_PROPAGATING = LightningStrike.RAY_PROPAGATING;\nThLightningStrike.RAY_STEADY = LightningStrike.RAY_STEADY;\nThLightningStrike.RAY_VANISHING = LightningStrike.RAY_VANISHING;\nThLightningStrike.RAY_EXTINGUISHED = LightningStrike.RAY_EXTINGUISHED;\nThLightningStrike.ɵfac = /* @__PURE__ */function () {\n  let ɵThLightningStrike_BaseFactory;\n  return function ThLightningStrike_Factory(t) {\n    return (ɵThLightningStrike_BaseFactory || (ɵThLightningStrike_BaseFactory = i0.ɵɵgetInheritedFactory(ThLightningStrike)))(t || ThLightningStrike);\n  };\n}();\nThLightningStrike.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLightningStrike,\n  selectors: [[\"th-lightningStrike\"]],\n  inputs: {\n    state: \"state\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThLightningStrike)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLightningStrike_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLightningStrike, [{\n    type: Component,\n    args: [{\n      selector: 'th-lightningStrike',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThLightningStrike)\n      }]\n    }]\n  }], null, {\n    state: [{\n      type: Input\n    }]\n  });\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThMaterialBase extends ThWrapperBase {\n  constructor(parent) {\n    super();\n    this.parent = parent;\n  }\n  addToParent() {\n    if (!this.parent.objRef) {\n      throw new Error(\"parent object doesn't hold a three js object instance\");\n    }\n    this.parent.objRef.material = this.objRef;\n  }\n  removeFromParent() {\n    if (this._objRef && this.parent && this.parent.objRef) {\n      this.parent.objRef.material = undefined;\n    }\n  }\n}\nThMaterialBase.ɵfac = function ThMaterialBase_Factory(t) {\n  return new (t || ThMaterialBase)(i0.ɵɵdirectiveInject(ThObject3D));\n};\nThMaterialBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMaterialBase,\n  selectors: [[\"th-abs-material\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ThMaterialBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMaterialBase, [{\n    type: Component,\n    args: [{\n      selector: 'th-abs-material',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D\n    }];\n  }, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMaterial extends ThMaterialBase {\n  getType() {\n    return Material;\n  }\n  set alphaTest(value) {\n    if (this._objRef) {\n      this._objRef.alphaTest = value;\n    }\n  }\n  // @ts-ignore\n  get alphaTest() {\n    return this._objRef?.alphaTest;\n  }\n  set alphaToCoverage(value) {\n    if (this._objRef) {\n      this._objRef.alphaToCoverage = value;\n    }\n  }\n  // @ts-ignore\n  get alphaToCoverage() {\n    return this._objRef?.alphaToCoverage;\n  }\n  set blendDst(value) {\n    if (this._objRef) {\n      this._objRef.blendDst = value;\n    }\n  }\n  // @ts-ignore\n  get blendDst() {\n    return this._objRef?.blendDst;\n  }\n  set blendDstAlpha(value) {\n    if (this._objRef) {\n      this._objRef.blendDstAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get blendDstAlpha() {\n    return this._objRef?.blendDstAlpha;\n  }\n  set blendEquation(value) {\n    if (this._objRef) {\n      this._objRef.blendEquation = value;\n    }\n  }\n  // @ts-ignore\n  get blendEquation() {\n    return this._objRef?.blendEquation;\n  }\n  set blendEquationAlpha(value) {\n    if (this._objRef) {\n      this._objRef.blendEquationAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get blendEquationAlpha() {\n    return this._objRef?.blendEquationAlpha;\n  }\n  set blending(value) {\n    if (this._objRef) {\n      this._objRef.blending = value;\n    }\n  }\n  // @ts-ignore\n  get blending() {\n    return this._objRef?.blending;\n  }\n  set blendSrc(value) {\n    if (this._objRef) {\n      this._objRef.blendSrc = value;\n    }\n  }\n  // @ts-ignore\n  get blendSrc() {\n    return this._objRef?.blendSrc;\n  }\n  set blendSrcAlpha(value) {\n    if (this._objRef) {\n      this._objRef.blendSrcAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get blendSrcAlpha() {\n    return this._objRef?.blendSrcAlpha;\n  }\n  set clipIntersection(value) {\n    if (this._objRef) {\n      this._objRef.clipIntersection = value;\n    }\n  }\n  // @ts-ignore\n  get clipIntersection() {\n    return this._objRef?.clipIntersection;\n  }\n  set clippingPlanes(value) {\n    if (this._objRef) {\n      this._objRef.clippingPlanes = value;\n    }\n  }\n  // @ts-ignore\n  get clippingPlanes() {\n    return this._objRef?.clippingPlanes;\n  }\n  set clipShadows(value) {\n    if (this._objRef) {\n      this._objRef.clipShadows = value;\n    }\n  }\n  // @ts-ignore\n  get clipShadows() {\n    return this._objRef?.clipShadows;\n  }\n  set colorWrite(value) {\n    if (this._objRef) {\n      this._objRef.colorWrite = value;\n    }\n  }\n  // @ts-ignore\n  get colorWrite() {\n    return this._objRef?.colorWrite;\n  }\n  set defines(value) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n  // @ts-ignore\n  get defines() {\n    return this._objRef?.defines;\n  }\n  set depthFunc(value) {\n    if (this._objRef) {\n      this._objRef.depthFunc = value;\n    }\n  }\n  // @ts-ignore\n  get depthFunc() {\n    return this._objRef?.depthFunc;\n  }\n  set depthTest(value) {\n    if (this._objRef) {\n      this._objRef.depthTest = value;\n    }\n  }\n  // @ts-ignore\n  get depthTest() {\n    return this._objRef?.depthTest;\n  }\n  set depthWrite(value) {\n    if (this._objRef) {\n      this._objRef.depthWrite = value;\n    }\n  }\n  // @ts-ignore\n  get depthWrite() {\n    return this._objRef?.depthWrite;\n  }\n  set id(value) {\n    if (this._objRef) {\n      this._objRef.id = value;\n    }\n  }\n  // @ts-ignore\n  get id() {\n    return this._objRef?.id;\n  }\n  set stencilWrite(value) {\n    if (this._objRef) {\n      this._objRef.stencilWrite = value;\n    }\n  }\n  // @ts-ignore\n  get stencilWrite() {\n    return this._objRef?.stencilWrite;\n  }\n  set stencilFunc(value) {\n    if (this._objRef) {\n      this._objRef.stencilFunc = value;\n    }\n  }\n  // @ts-ignore\n  get stencilFunc() {\n    return this._objRef?.stencilFunc;\n  }\n  set stencilRef(value) {\n    if (this._objRef) {\n      this._objRef.stencilRef = value;\n    }\n  }\n  // @ts-ignore\n  get stencilRef() {\n    return this._objRef?.stencilRef;\n  }\n  set stencilWriteMask(value) {\n    if (this._objRef) {\n      this._objRef.stencilWriteMask = value;\n    }\n  }\n  // @ts-ignore\n  get stencilWriteMask() {\n    return this._objRef?.stencilWriteMask;\n  }\n  set stencilFuncMask(value) {\n    if (this._objRef) {\n      this._objRef.stencilFuncMask = value;\n    }\n  }\n  // @ts-ignore\n  get stencilFuncMask() {\n    return this._objRef?.stencilFuncMask;\n  }\n  set stencilFail(value) {\n    if (this._objRef) {\n      this._objRef.stencilFail = value;\n    }\n  }\n  // @ts-ignore\n  get stencilFail() {\n    return this._objRef?.stencilFail;\n  }\n  set stencilZFail(value) {\n    if (this._objRef) {\n      this._objRef.stencilZFail = value;\n    }\n  }\n  // @ts-ignore\n  get stencilZFail() {\n    return this._objRef?.stencilZFail;\n  }\n  set stencilZPass(value) {\n    if (this._objRef) {\n      this._objRef.stencilZPass = value;\n    }\n  }\n  // @ts-ignore\n  get stencilZPass() {\n    return this._objRef?.stencilZPass;\n  }\n  // @ts-ignore\n  get isMaterial() {\n    return this._objRef?.isMaterial;\n  }\n  set name(value) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n  // @ts-ignore\n  get name() {\n    return this._objRef?.name;\n  }\n  set needsUpdate(value) {\n    if (this._objRef) {\n      this._objRef.needsUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get needsUpdate() {\n    return this._objRef?.needsUpdate;\n  }\n  set opacity(value) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n  // @ts-ignore\n  get opacity() {\n    return this._objRef?.opacity;\n  }\n  set polygonOffset(value) {\n    if (this._objRef) {\n      this._objRef.polygonOffset = value;\n    }\n  }\n  // @ts-ignore\n  get polygonOffset() {\n    return this._objRef?.polygonOffset;\n  }\n  set polygonOffsetFactor(value) {\n    if (this._objRef) {\n      this._objRef.polygonOffsetFactor = value;\n    }\n  }\n  // @ts-ignore\n  get polygonOffsetFactor() {\n    return this._objRef?.polygonOffsetFactor;\n  }\n  set polygonOffsetUnits(value) {\n    if (this._objRef) {\n      this._objRef.polygonOffsetUnits = value;\n    }\n  }\n  // @ts-ignore\n  get polygonOffsetUnits() {\n    return this._objRef?.polygonOffsetUnits;\n  }\n  set precision(value) {\n    if (this._objRef) {\n      this._objRef.precision = value;\n    }\n  }\n  // @ts-ignore\n  get precision() {\n    return this._objRef?.precision;\n  }\n  set premultipliedAlpha(value) {\n    if (this._objRef) {\n      this._objRef.premultipliedAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get premultipliedAlpha() {\n    return this._objRef?.premultipliedAlpha;\n  }\n  set forceSinglePass(value) {\n    if (this._objRef) {\n      this._objRef.forceSinglePass = value;\n    }\n  }\n  // @ts-ignore\n  get forceSinglePass() {\n    return this._objRef?.forceSinglePass;\n  }\n  set dithering(value) {\n    if (this._objRef) {\n      this._objRef.dithering = value;\n    }\n  }\n  // @ts-ignore\n  get dithering() {\n    return this._objRef?.dithering;\n  }\n  set side(value) {\n    if (this._objRef) {\n      this._objRef.side = value;\n    }\n  }\n  // @ts-ignore\n  get side() {\n    return this._objRef?.side;\n  }\n  set shadowSide(value) {\n    if (this._objRef) {\n      this._objRef.shadowSide = value;\n    }\n  }\n  // @ts-ignore\n  get shadowSide() {\n    return this._objRef?.shadowSide;\n  }\n  set toneMapped(value) {\n    if (this._objRef) {\n      this._objRef.toneMapped = value;\n    }\n  }\n  // @ts-ignore\n  get toneMapped() {\n    return this._objRef?.toneMapped;\n  }\n  set transparent(value) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n  // @ts-ignore\n  get transparent() {\n    return this._objRef?.transparent;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set uuid(value) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n  // @ts-ignore\n  get uuid() {\n    return this._objRef?.uuid;\n  }\n  set vertexColors(value) {\n    if (this._objRef) {\n      this._objRef.vertexColors = value;\n    }\n  }\n  // @ts-ignore\n  get vertexColors() {\n    return this._objRef?.vertexColors;\n  }\n  set visible(value) {\n    if (this._objRef) {\n      this._objRef.visible = value;\n    }\n  }\n  // @ts-ignore\n  get visible() {\n    return this._objRef?.visible;\n  }\n  set userData(value) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n  // @ts-ignore\n  get userData() {\n    return this._objRef?.userData;\n  }\n  set version(value) {\n    if (this._objRef) {\n      this._objRef.version = value;\n    }\n  }\n  // @ts-ignore\n  get version() {\n    return this._objRef?.version;\n  }\n  constructor(hostObject) {\n    super(hostObject);\n  }\n}\nThMaterial.ɵfac = function ThMaterial_Factory(t) {\n  return new (t || ThMaterial)(i0.ɵɵdirectiveInject(ThObject3D, 4));\n};\nThMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMaterial,\n  selectors: [[\"th-material\"]],\n  inputs: {\n    alphaTest: \"alphaTest\",\n    alphaToCoverage: \"alphaToCoverage\",\n    blendDst: \"blendDst\",\n    blendDstAlpha: \"blendDstAlpha\",\n    blendEquation: \"blendEquation\",\n    blendEquationAlpha: \"blendEquationAlpha\",\n    blending: \"blending\",\n    blendSrc: \"blendSrc\",\n    blendSrcAlpha: \"blendSrcAlpha\",\n    clipIntersection: \"clipIntersection\",\n    clippingPlanes: \"clippingPlanes\",\n    clipShadows: \"clipShadows\",\n    colorWrite: \"colorWrite\",\n    defines: \"defines\",\n    depthFunc: \"depthFunc\",\n    depthTest: \"depthTest\",\n    depthWrite: \"depthWrite\",\n    id: \"id\",\n    stencilWrite: \"stencilWrite\",\n    stencilFunc: \"stencilFunc\",\n    stencilRef: \"stencilRef\",\n    stencilWriteMask: \"stencilWriteMask\",\n    stencilFuncMask: \"stencilFuncMask\",\n    stencilFail: \"stencilFail\",\n    stencilZFail: \"stencilZFail\",\n    stencilZPass: \"stencilZPass\",\n    name: \"name\",\n    needsUpdate: \"needsUpdate\",\n    opacity: \"opacity\",\n    polygonOffset: \"polygonOffset\",\n    polygonOffsetFactor: \"polygonOffsetFactor\",\n    polygonOffsetUnits: \"polygonOffsetUnits\",\n    precision: \"precision\",\n    premultipliedAlpha: \"premultipliedAlpha\",\n    forceSinglePass: \"forceSinglePass\",\n    dithering: \"dithering\",\n    side: \"side\",\n    shadowSide: \"shadowSide\",\n    toneMapped: \"toneMapped\",\n    transparent: \"transparent\",\n    type: \"type\",\n    uuid: \"uuid\",\n    vertexColors: \"vertexColors\",\n    visible: \"visible\",\n    userData: \"userData\",\n    version: \"version\"\n  },\n  features: [i0.ɵɵProvidersFeature([]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-material',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }];\n  }, {\n    alphaTest: [{\n      type: Input\n    }],\n    alphaToCoverage: [{\n      type: Input\n    }],\n    blendDst: [{\n      type: Input\n    }],\n    blendDstAlpha: [{\n      type: Input\n    }],\n    blendEquation: [{\n      type: Input\n    }],\n    blendEquationAlpha: [{\n      type: Input\n    }],\n    blending: [{\n      type: Input\n    }],\n    blendSrc: [{\n      type: Input\n    }],\n    blendSrcAlpha: [{\n      type: Input\n    }],\n    clipIntersection: [{\n      type: Input\n    }],\n    clippingPlanes: [{\n      type: Input\n    }],\n    clipShadows: [{\n      type: Input\n    }],\n    colorWrite: [{\n      type: Input\n    }],\n    defines: [{\n      type: Input\n    }],\n    depthFunc: [{\n      type: Input\n    }],\n    depthTest: [{\n      type: Input\n    }],\n    depthWrite: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    stencilWrite: [{\n      type: Input\n    }],\n    stencilFunc: [{\n      type: Input\n    }],\n    stencilRef: [{\n      type: Input\n    }],\n    stencilWriteMask: [{\n      type: Input\n    }],\n    stencilFuncMask: [{\n      type: Input\n    }],\n    stencilFail: [{\n      type: Input\n    }],\n    stencilZFail: [{\n      type: Input\n    }],\n    stencilZPass: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    needsUpdate: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    polygonOffset: [{\n      type: Input\n    }],\n    polygonOffsetFactor: [{\n      type: Input\n    }],\n    polygonOffsetUnits: [{\n      type: Input\n    }],\n    precision: [{\n      type: Input\n    }],\n    premultipliedAlpha: [{\n      type: Input\n    }],\n    forceSinglePass: [{\n      type: Input\n    }],\n    dithering: [{\n      type: Input\n    }],\n    side: [{\n      type: Input\n    }],\n    shadowSide: [{\n      type: Input\n    }],\n    toneMapped: [{\n      type: Input\n    }],\n    transparent: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    uuid: [{\n      type: Input\n    }],\n    vertexColors: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    userData: [{\n      type: Input\n    }],\n    version: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineBasicMaterial extends ThMaterial {\n  getType() {\n    return LineBasicMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n  set linewidth(value) {\n    if (this._objRef) {\n      this._objRef.linewidth = value;\n    }\n  }\n  // @ts-ignore\n  get linewidth() {\n    return this._objRef?.linewidth;\n  }\n  set linecap(value) {\n    if (this._objRef) {\n      this._objRef.linecap = value;\n    }\n  }\n  // @ts-ignore\n  get linecap() {\n    return this._objRef?.linecap;\n  }\n  set linejoin(value) {\n    if (this._objRef) {\n      this._objRef.linejoin = value;\n    }\n  }\n  // @ts-ignore\n  get linejoin() {\n    return this._objRef?.linejoin;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n}\nThLineBasicMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThLineBasicMaterial_BaseFactory;\n  return function ThLineBasicMaterial_Factory(t) {\n    return (ɵThLineBasicMaterial_BaseFactory || (ɵThLineBasicMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThLineBasicMaterial)))(t || ThLineBasicMaterial);\n  };\n}();\nThLineBasicMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLineBasicMaterial,\n  selectors: [[\"th-lineBasicMaterial\"]],\n  inputs: {\n    type: \"type\",\n    color: \"color\",\n    fog: \"fog\",\n    linewidth: \"linewidth\",\n    linecap: \"linecap\",\n    linejoin: \"linejoin\",\n    map: \"map\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThLineBasicMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLineBasicMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLineBasicMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-lineBasicMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThLineBasicMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }],\n    linewidth: [{\n      type: Input\n    }],\n    linecap: [{\n      type: Input\n    }],\n    linejoin: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineDashedMaterial extends ThLineBasicMaterial {\n  getType() {\n    return LineDashedMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set scale(value) {\n    if (this._objRef) {\n      this._objRef.scale = value;\n    }\n  }\n  // @ts-ignore\n  get scale() {\n    return this._objRef?.scale;\n  }\n  set dashSize(value) {\n    if (this._objRef) {\n      this._objRef.dashSize = value;\n    }\n  }\n  // @ts-ignore\n  get dashSize() {\n    return this._objRef?.dashSize;\n  }\n  set gapSize(value) {\n    if (this._objRef) {\n      this._objRef.gapSize = value;\n    }\n  }\n  // @ts-ignore\n  get gapSize() {\n    return this._objRef?.gapSize;\n  }\n  // @ts-ignore\n  get isLineDashedMaterial() {\n    return this._objRef?.isLineDashedMaterial;\n  }\n}\nThLineDashedMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThLineDashedMaterial_BaseFactory;\n  return function ThLineDashedMaterial_Factory(t) {\n    return (ɵThLineDashedMaterial_BaseFactory || (ɵThLineDashedMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThLineDashedMaterial)))(t || ThLineDashedMaterial);\n  };\n}();\nThLineDashedMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLineDashedMaterial,\n  selectors: [[\"th-lineDashedMaterial\"]],\n  inputs: {\n    type: \"type\",\n    scale: \"scale\",\n    dashSize: \"dashSize\",\n    gapSize: \"gapSize\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThLineDashedMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLineDashedMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLineDashedMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-lineDashedMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThLineDashedMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    dashSize: [{\n      type: Input\n    }],\n    gapSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineLoop extends ThLine {\n  getType() {\n    return LineLoop;\n  }\n  // @ts-ignore\n  get isLineLoop() {\n    return this._objRef?.isLineLoop;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThLineLoop.ɵfac = /* @__PURE__ */function () {\n  let ɵThLineLoop_BaseFactory;\n  return function ThLineLoop_Factory(t) {\n    return (ɵThLineLoop_BaseFactory || (ɵThLineLoop_BaseFactory = i0.ɵɵgetInheritedFactory(ThLineLoop)))(t || ThLineLoop);\n  };\n}();\nThLineLoop.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLineLoop,\n  selectors: [[\"th-lineLoop\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThLineLoop)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLineLoop_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLineLoop, [{\n    type: Component,\n    args: [{\n      selector: 'th-lineLoop',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThLineLoop)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLOD extends ThObject3D {\n  getType() {\n    return LOD;\n  }\n  // @ts-ignore\n  get isLOD() {\n    return this._objRef?.isLOD;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set levels(value) {\n    if (this._objRef) {\n      this._objRef.levels = value;\n    }\n  }\n  // @ts-ignore\n  get levels() {\n    return this._objRef?.levels;\n  }\n  set autoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.autoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get autoUpdate() {\n    return this._objRef?.autoUpdate;\n  }\n}\nThLOD.ɵfac = /* @__PURE__ */function () {\n  let ɵThLOD_BaseFactory;\n  return function ThLOD_Factory(t) {\n    return (ɵThLOD_BaseFactory || (ɵThLOD_BaseFactory = i0.ɵɵgetInheritedFactory(ThLOD)))(t || ThLOD);\n  };\n}();\nThLOD.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLOD,\n  selectors: [[\"th-lOD\"]],\n  inputs: {\n    levels: \"levels\",\n    autoUpdate: \"autoUpdate\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThLOD)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLOD_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLOD, [{\n    type: Component,\n    args: [{\n      selector: 'th-lOD',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThLOD)\n      }]\n    }]\n  }], null, {\n    levels: [{\n      type: Input\n    }],\n    autoUpdate: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThShaderPass extends ThPass {\n  getType() {\n    return ShaderPass;\n  }\n  set textureID(value) {\n    if (this._objRef) {\n      this._objRef.textureID = value;\n    }\n  }\n  // @ts-ignore\n  get textureID() {\n    return this._objRef?.textureID;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThShaderPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThShaderPass_BaseFactory;\n  return function ThShaderPass_Factory(t) {\n    return (ɵThShaderPass_BaseFactory || (ɵThShaderPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThShaderPass)))(t || ThShaderPass);\n  };\n}();\nThShaderPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThShaderPass,\n  selectors: [[\"th-shaderPass\"]],\n  inputs: {\n    textureID: \"textureID\",\n    uniforms: \"uniforms\",\n    material: \"material\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThShaderPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThShaderPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThShaderPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-shaderPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThShaderPass)\n      }]\n    }]\n  }], null, {\n    textureID: [{\n      type: Input\n    }],\n    uniforms: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThLUTPass extends ThShaderPass {\n  getType() {\n    return LUTPass;\n  }\n  set lut(value) {\n    if (this._objRef) {\n      this._objRef.lut = value;\n    }\n  }\n  // @ts-ignore\n  get lut() {\n    return this._objRef?.lut;\n  }\n  set intensity(value) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n  // @ts-ignore\n  get intensity() {\n    return this._objRef?.intensity;\n  }\n}\nThLUTPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThLUTPass_BaseFactory;\n  return function ThLUTPass_Factory(t) {\n    return (ɵThLUTPass_BaseFactory || (ɵThLUTPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThLUTPass)))(t || ThLUTPass);\n  };\n}();\nThLUTPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThLUTPass,\n  selectors: [[\"th-lUTPass\"]],\n  inputs: {\n    lut: \"lut\",\n    intensity: \"intensity\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThLUTPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThLUTPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLUTPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-lUTPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThLUTPass)\n      }]\n    }]\n  }], null, {\n    lut: [{\n      type: Input\n    }],\n    intensity: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThOrbitControls extends ThControlBase {\n  getType() {\n    return OrbitControls;\n  }\n  set object(value) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n  // @ts-ignore\n  get object() {\n    return this._objRef?.object;\n  }\n  set domElement(value) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n  // @ts-ignore\n  get domElement() {\n    return this._objRef?.domElement;\n  }\n  set enabled(value) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n  // @ts-ignore\n  get enabled() {\n    return this._objRef?.enabled;\n  }\n  set target(value) {\n    if (this._objRef) {\n      this._objRef.target = applyValue(this._objRef.target, value);\n    }\n  }\n  // @ts-ignore\n  get target() {\n    return this._objRef?.target;\n  }\n  set center(value) {\n    if (this._objRef) {\n      this._objRef.center = applyValue(this._objRef.center, value);\n    }\n  }\n  // @ts-ignore\n  get center() {\n    return this._objRef?.center;\n  }\n  set minDistance(value) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n  // @ts-ignore\n  get minDistance() {\n    return this._objRef?.minDistance;\n  }\n  set maxDistance(value) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n  // @ts-ignore\n  get maxDistance() {\n    return this._objRef?.maxDistance;\n  }\n  set minZoom(value) {\n    if (this._objRef) {\n      this._objRef.minZoom = value;\n    }\n  }\n  // @ts-ignore\n  get minZoom() {\n    return this._objRef?.minZoom;\n  }\n  set maxZoom(value) {\n    if (this._objRef) {\n      this._objRef.maxZoom = value;\n    }\n  }\n  // @ts-ignore\n  get maxZoom() {\n    return this._objRef?.maxZoom;\n  }\n  set minPolarAngle(value) {\n    if (this._objRef) {\n      this._objRef.minPolarAngle = value;\n    }\n  }\n  // @ts-ignore\n  get minPolarAngle() {\n    return this._objRef?.minPolarAngle;\n  }\n  set maxPolarAngle(value) {\n    if (this._objRef) {\n      this._objRef.maxPolarAngle = value;\n    }\n  }\n  // @ts-ignore\n  get maxPolarAngle() {\n    return this._objRef?.maxPolarAngle;\n  }\n  set minAzimuthAngle(value) {\n    if (this._objRef) {\n      this._objRef.minAzimuthAngle = value;\n    }\n  }\n  // @ts-ignore\n  get minAzimuthAngle() {\n    return this._objRef?.minAzimuthAngle;\n  }\n  set maxAzimuthAngle(value) {\n    if (this._objRef) {\n      this._objRef.maxAzimuthAngle = value;\n    }\n  }\n  // @ts-ignore\n  get maxAzimuthAngle() {\n    return this._objRef?.maxAzimuthAngle;\n  }\n  set enableDamping(value) {\n    if (this._objRef) {\n      this._objRef.enableDamping = value;\n    }\n  }\n  // @ts-ignore\n  get enableDamping() {\n    return this._objRef?.enableDamping;\n  }\n  set dampingFactor(value) {\n    if (this._objRef) {\n      this._objRef.dampingFactor = value;\n    }\n  }\n  // @ts-ignore\n  get dampingFactor() {\n    return this._objRef?.dampingFactor;\n  }\n  set enableZoom(value) {\n    if (this._objRef) {\n      this._objRef.enableZoom = value;\n    }\n  }\n  // @ts-ignore\n  get enableZoom() {\n    return this._objRef?.enableZoom;\n  }\n  set zoomSpeed(value) {\n    if (this._objRef) {\n      this._objRef.zoomSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get zoomSpeed() {\n    return this._objRef?.zoomSpeed;\n  }\n  set enableRotate(value) {\n    if (this._objRef) {\n      this._objRef.enableRotate = value;\n    }\n  }\n  // @ts-ignore\n  get enableRotate() {\n    return this._objRef?.enableRotate;\n  }\n  set rotateSpeed(value) {\n    if (this._objRef) {\n      this._objRef.rotateSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get rotateSpeed() {\n    return this._objRef?.rotateSpeed;\n  }\n  set enablePan(value) {\n    if (this._objRef) {\n      this._objRef.enablePan = value;\n    }\n  }\n  // @ts-ignore\n  get enablePan() {\n    return this._objRef?.enablePan;\n  }\n  set panSpeed(value) {\n    if (this._objRef) {\n      this._objRef.panSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get panSpeed() {\n    return this._objRef?.panSpeed;\n  }\n  set screenSpacePanning(value) {\n    if (this._objRef) {\n      this._objRef.screenSpacePanning = value;\n    }\n  }\n  // @ts-ignore\n  get screenSpacePanning() {\n    return this._objRef?.screenSpacePanning;\n  }\n  set keyPanSpeed(value) {\n    if (this._objRef) {\n      this._objRef.keyPanSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get keyPanSpeed() {\n    return this._objRef?.keyPanSpeed;\n  }\n  set autoRotate(value) {\n    if (this._objRef) {\n      this._objRef.autoRotate = value;\n    }\n  }\n  // @ts-ignore\n  get autoRotate() {\n    return this._objRef?.autoRotate;\n  }\n  set autoRotateSpeed(value) {\n    if (this._objRef) {\n      this._objRef.autoRotateSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get autoRotateSpeed() {\n    return this._objRef?.autoRotateSpeed;\n  }\n  set keys(value) {\n    if (this._objRef) {\n      this._objRef.keys = value;\n    }\n  }\n  // @ts-ignore\n  get keys() {\n    return this._objRef?.keys;\n  }\n  set mouseButtons(value) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n  // @ts-ignore\n  get mouseButtons() {\n    return this._objRef?.mouseButtons;\n  }\n  set touches(value) {\n    if (this._objRef) {\n      this._objRef.touches = value;\n    }\n  }\n  // @ts-ignore\n  get touches() {\n    return this._objRef?.touches;\n  }\n  set target0(value) {\n    if (this._objRef) {\n      this._objRef.target0 = applyValue(this._objRef.target0, value);\n    }\n  }\n  // @ts-ignore\n  get target0() {\n    return this._objRef?.target0;\n  }\n  set position0(value) {\n    if (this._objRef) {\n      this._objRef.position0 = applyValue(this._objRef.position0, value);\n    }\n  }\n  // @ts-ignore\n  get position0() {\n    return this._objRef?.position0;\n  }\n  set zoom0(value) {\n    if (this._objRef) {\n      this._objRef.zoom0 = value;\n    }\n  }\n  // @ts-ignore\n  get zoom0() {\n    return this._objRef?.zoom0;\n  }\n}\nThOrbitControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThOrbitControls_BaseFactory;\n  return function ThOrbitControls_Factory(t) {\n    return (ɵThOrbitControls_BaseFactory || (ɵThOrbitControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThOrbitControls)))(t || ThOrbitControls);\n  };\n}();\nThOrbitControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThOrbitControls,\n  selectors: [[\"th-orbitControls\"]],\n  inputs: {\n    object: \"object\",\n    domElement: \"domElement\",\n    enabled: \"enabled\",\n    target: \"target\",\n    center: \"center\",\n    minDistance: \"minDistance\",\n    maxDistance: \"maxDistance\",\n    minZoom: \"minZoom\",\n    maxZoom: \"maxZoom\",\n    minPolarAngle: \"minPolarAngle\",\n    maxPolarAngle: \"maxPolarAngle\",\n    minAzimuthAngle: \"minAzimuthAngle\",\n    maxAzimuthAngle: \"maxAzimuthAngle\",\n    enableDamping: \"enableDamping\",\n    dampingFactor: \"dampingFactor\",\n    enableZoom: \"enableZoom\",\n    zoomSpeed: \"zoomSpeed\",\n    enableRotate: \"enableRotate\",\n    rotateSpeed: \"rotateSpeed\",\n    enablePan: \"enablePan\",\n    panSpeed: \"panSpeed\",\n    screenSpacePanning: \"screenSpacePanning\",\n    keyPanSpeed: \"keyPanSpeed\",\n    autoRotate: \"autoRotate\",\n    autoRotateSpeed: \"autoRotateSpeed\",\n    keys: \"keys\",\n    mouseButtons: \"mouseButtons\",\n    touches: \"touches\",\n    target0: \"target0\",\n    position0: \"position0\",\n    zoom0: \"zoom0\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThOrbitControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThOrbitControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThOrbitControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-orbitControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThOrbitControls)\n      }]\n    }]\n  }], null, {\n    object: [{\n      type: Input\n    }],\n    domElement: [{\n      type: Input\n    }],\n    enabled: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    minDistance: [{\n      type: Input\n    }],\n    maxDistance: [{\n      type: Input\n    }],\n    minZoom: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    minPolarAngle: [{\n      type: Input\n    }],\n    maxPolarAngle: [{\n      type: Input\n    }],\n    minAzimuthAngle: [{\n      type: Input\n    }],\n    maxAzimuthAngle: [{\n      type: Input\n    }],\n    enableDamping: [{\n      type: Input\n    }],\n    dampingFactor: [{\n      type: Input\n    }],\n    enableZoom: [{\n      type: Input\n    }],\n    zoomSpeed: [{\n      type: Input\n    }],\n    enableRotate: [{\n      type: Input\n    }],\n    rotateSpeed: [{\n      type: Input\n    }],\n    enablePan: [{\n      type: Input\n    }],\n    panSpeed: [{\n      type: Input\n    }],\n    screenSpacePanning: [{\n      type: Input\n    }],\n    keyPanSpeed: [{\n      type: Input\n    }],\n    autoRotate: [{\n      type: Input\n    }],\n    autoRotateSpeed: [{\n      type: Input\n    }],\n    keys: [{\n      type: Input\n    }],\n    mouseButtons: [{\n      type: Input\n    }],\n    touches: [{\n      type: Input\n    }],\n    target0: [{\n      type: Input\n    }],\n    position0: [{\n      type: Input\n    }],\n    zoom0: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMapControls extends ThOrbitControls {\n  getType() {\n    return MapControls;\n  }\n}\nThMapControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThMapControls_BaseFactory;\n  return function ThMapControls_Factory(t) {\n    return (ɵThMapControls_BaseFactory || (ɵThMapControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThMapControls)))(t || ThMapControls);\n  };\n}();\nThMapControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMapControls,\n  selectors: [[\"th-mapControls\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThMapControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMapControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMapControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-mapControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThMapControls)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThMaskPass extends ThPass {\n  getType() {\n    return MaskPass;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set inverse(value) {\n    if (this._objRef) {\n      this._objRef.inverse = value;\n    }\n  }\n  // @ts-ignore\n  get inverse() {\n    return this._objRef?.inverse;\n  }\n}\nThMaskPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThMaskPass_BaseFactory;\n  return function ThMaskPass_Factory(t) {\n    return (ɵThMaskPass_BaseFactory || (ɵThMaskPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThMaskPass)))(t || ThMaskPass);\n  };\n}();\nThMaskPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMaskPass,\n  selectors: [[\"th-maskPass\"]],\n  inputs: {\n    scene: \"scene\",\n    camera: \"camera\",\n    inverse: \"inverse\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThMaskPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMaskPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMaskPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-maskPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThMaskPass)\n      }]\n    }]\n  }], null, {\n    scene: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    inverse: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshBasicMaterial extends ThMaterial {\n  getType() {\n    return MeshBasicMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set lightMap(value) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n  // @ts-ignore\n  get lightMap() {\n    return this._objRef?.lightMap;\n  }\n  set lightMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get lightMapIntensity() {\n    return this._objRef?.lightMapIntensity;\n  }\n  set aoMap(value) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n  // @ts-ignore\n  get aoMap() {\n    return this._objRef?.aoMap;\n  }\n  set aoMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get aoMapIntensity() {\n    return this._objRef?.aoMapIntensity;\n  }\n  set specularMap(value) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n  // @ts-ignore\n  get specularMap() {\n    return this._objRef?.specularMap;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set envMap(value) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n  // @ts-ignore\n  get envMap() {\n    return this._objRef?.envMap;\n  }\n  set combine(value) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n  // @ts-ignore\n  get combine() {\n    return this._objRef?.combine;\n  }\n  set reflectivity(value) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n  // @ts-ignore\n  get reflectivity() {\n    return this._objRef?.reflectivity;\n  }\n  set refractionRatio(value) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n  // @ts-ignore\n  get refractionRatio() {\n    return this._objRef?.refractionRatio;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set wireframeLinecap(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinecap() {\n    return this._objRef?.wireframeLinecap;\n  }\n  set wireframeLinejoin(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinejoin() {\n    return this._objRef?.wireframeLinejoin;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThMeshBasicMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshBasicMaterial_BaseFactory;\n  return function ThMeshBasicMaterial_Factory(t) {\n    return (ɵThMeshBasicMaterial_BaseFactory || (ɵThMeshBasicMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshBasicMaterial)))(t || ThMeshBasicMaterial);\n  };\n}();\nThMeshBasicMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshBasicMaterial,\n  selectors: [[\"th-meshBasicMaterial\"]],\n  inputs: {\n    type: \"type\",\n    color: \"color\",\n    map: \"map\",\n    lightMap: \"lightMap\",\n    lightMapIntensity: \"lightMapIntensity\",\n    aoMap: \"aoMap\",\n    aoMapIntensity: \"aoMapIntensity\",\n    specularMap: \"specularMap\",\n    alphaMap: \"alphaMap\",\n    envMap: \"envMap\",\n    combine: \"combine\",\n    reflectivity: \"reflectivity\",\n    refractionRatio: \"refractionRatio\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    wireframeLinecap: \"wireframeLinecap\",\n    wireframeLinejoin: \"wireframeLinejoin\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshBasicMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshBasicMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshBasicMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshBasicMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshBasicMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    lightMap: [{\n      type: Input\n    }],\n    lightMapIntensity: [{\n      type: Input\n    }],\n    aoMap: [{\n      type: Input\n    }],\n    aoMapIntensity: [{\n      type: Input\n    }],\n    specularMap: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    envMap: [{\n      type: Input\n    }],\n    combine: [{\n      type: Input\n    }],\n    reflectivity: [{\n      type: Input\n    }],\n    refractionRatio: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    wireframeLinecap: [{\n      type: Input\n    }],\n    wireframeLinejoin: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshDepthMaterial extends ThMaterial {\n  getType() {\n    return MeshDepthMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set depthPacking(value) {\n    if (this._objRef) {\n      this._objRef.depthPacking = value;\n    }\n  }\n  // @ts-ignore\n  get depthPacking() {\n    return this._objRef?.depthPacking;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThMeshDepthMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshDepthMaterial_BaseFactory;\n  return function ThMeshDepthMaterial_Factory(t) {\n    return (ɵThMeshDepthMaterial_BaseFactory || (ɵThMeshDepthMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshDepthMaterial)))(t || ThMeshDepthMaterial);\n  };\n}();\nThMeshDepthMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshDepthMaterial,\n  selectors: [[\"th-meshDepthMaterial\"]],\n  inputs: {\n    type: \"type\",\n    map: \"map\",\n    alphaMap: \"alphaMap\",\n    depthPacking: \"depthPacking\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshDepthMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshDepthMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshDepthMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshDepthMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshDepthMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    depthPacking: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshDistanceMaterial extends ThMaterial {\n  getType() {\n    return MeshDistanceMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThMeshDistanceMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshDistanceMaterial_BaseFactory;\n  return function ThMeshDistanceMaterial_Factory(t) {\n    return (ɵThMeshDistanceMaterial_BaseFactory || (ɵThMeshDistanceMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshDistanceMaterial)))(t || ThMeshDistanceMaterial);\n  };\n}();\nThMeshDistanceMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshDistanceMaterial,\n  selectors: [[\"th-meshDistanceMaterial\"]],\n  inputs: {\n    type: \"type\",\n    map: \"map\",\n    alphaMap: \"alphaMap\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshDistanceMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshDistanceMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshDistanceMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshDistanceMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshDistanceMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshLambertMaterial extends ThMaterial {\n  getType() {\n    return MeshLambertMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set bumpMap(value) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n  // @ts-ignore\n  get bumpMap() {\n    return this._objRef?.bumpMap;\n  }\n  set bumpScale(value) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n  // @ts-ignore\n  get bumpScale() {\n    return this._objRef?.bumpScale;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set emissive(value) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  get emissive() {\n    return this._objRef?.emissive;\n  }\n  set emissiveIntensity(value) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveIntensity() {\n    return this._objRef?.emissiveIntensity;\n  }\n  set emissiveMap(value) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveMap() {\n    return this._objRef?.emissiveMap;\n  }\n  set flatShading(value) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n  // @ts-ignore\n  get flatShading() {\n    return this._objRef?.flatShading;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set lightMap(value) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n  // @ts-ignore\n  get lightMap() {\n    return this._objRef?.lightMap;\n  }\n  set lightMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get lightMapIntensity() {\n    return this._objRef?.lightMapIntensity;\n  }\n  set normalMap(value) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n  // @ts-ignore\n  get normalMap() {\n    return this._objRef?.normalMap;\n  }\n  set normalMapType(value) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n  // @ts-ignore\n  get normalMapType() {\n    return this._objRef?.normalMapType;\n  }\n  set normalScale(value) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  get normalScale() {\n    return this._objRef?.normalScale;\n  }\n  set aoMap(value) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n  // @ts-ignore\n  get aoMap() {\n    return this._objRef?.aoMap;\n  }\n  set aoMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get aoMapIntensity() {\n    return this._objRef?.aoMapIntensity;\n  }\n  set specularMap(value) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n  // @ts-ignore\n  get specularMap() {\n    return this._objRef?.specularMap;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set envMap(value) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n  // @ts-ignore\n  get envMap() {\n    return this._objRef?.envMap;\n  }\n  set combine(value) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n  // @ts-ignore\n  get combine() {\n    return this._objRef?.combine;\n  }\n  set reflectivity(value) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n  // @ts-ignore\n  get reflectivity() {\n    return this._objRef?.reflectivity;\n  }\n  set refractionRatio(value) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n  // @ts-ignore\n  get refractionRatio() {\n    return this._objRef?.refractionRatio;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set wireframeLinecap(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinecap() {\n    return this._objRef?.wireframeLinecap;\n  }\n  set wireframeLinejoin(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinejoin() {\n    return this._objRef?.wireframeLinejoin;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThMeshLambertMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshLambertMaterial_BaseFactory;\n  return function ThMeshLambertMaterial_Factory(t) {\n    return (ɵThMeshLambertMaterial_BaseFactory || (ɵThMeshLambertMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshLambertMaterial)))(t || ThMeshLambertMaterial);\n  };\n}();\nThMeshLambertMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshLambertMaterial,\n  selectors: [[\"th-meshLambertMaterial\"]],\n  inputs: {\n    type: \"type\",\n    color: \"color\",\n    bumpMap: \"bumpMap\",\n    bumpScale: \"bumpScale\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    emissive: \"emissive\",\n    emissiveIntensity: \"emissiveIntensity\",\n    emissiveMap: \"emissiveMap\",\n    flatShading: \"flatShading\",\n    map: \"map\",\n    lightMap: \"lightMap\",\n    lightMapIntensity: \"lightMapIntensity\",\n    normalMap: \"normalMap\",\n    normalMapType: \"normalMapType\",\n    normalScale: \"normalScale\",\n    aoMap: \"aoMap\",\n    aoMapIntensity: \"aoMapIntensity\",\n    specularMap: \"specularMap\",\n    alphaMap: \"alphaMap\",\n    envMap: \"envMap\",\n    combine: \"combine\",\n    reflectivity: \"reflectivity\",\n    refractionRatio: \"refractionRatio\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    wireframeLinecap: \"wireframeLinecap\",\n    wireframeLinejoin: \"wireframeLinejoin\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshLambertMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshLambertMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshLambertMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshLambertMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshLambertMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    bumpMap: [{\n      type: Input\n    }],\n    bumpScale: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    emissive: [{\n      type: Input\n    }],\n    emissiveIntensity: [{\n      type: Input\n    }],\n    emissiveMap: [{\n      type: Input\n    }],\n    flatShading: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    lightMap: [{\n      type: Input\n    }],\n    lightMapIntensity: [{\n      type: Input\n    }],\n    normalMap: [{\n      type: Input\n    }],\n    normalMapType: [{\n      type: Input\n    }],\n    normalScale: [{\n      type: Input\n    }],\n    aoMap: [{\n      type: Input\n    }],\n    aoMapIntensity: [{\n      type: Input\n    }],\n    specularMap: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    envMap: [{\n      type: Input\n    }],\n    combine: [{\n      type: Input\n    }],\n    reflectivity: [{\n      type: Input\n    }],\n    refractionRatio: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    wireframeLinecap: [{\n      type: Input\n    }],\n    wireframeLinejoin: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshMatcapMaterial extends ThMaterial {\n  getType() {\n    return MeshMatcapMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set defines(value) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n  // @ts-ignore\n  get defines() {\n    return this._objRef?.defines;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set matcap(value) {\n    if (this._objRef) {\n      this._objRef.matcap = value;\n    }\n  }\n  // @ts-ignore\n  get matcap() {\n    return this._objRef?.matcap;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set bumpMap(value) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n  // @ts-ignore\n  get bumpMap() {\n    return this._objRef?.bumpMap;\n  }\n  set bumpScale(value) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n  // @ts-ignore\n  get bumpScale() {\n    return this._objRef?.bumpScale;\n  }\n  set normalMap(value) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n  // @ts-ignore\n  get normalMap() {\n    return this._objRef?.normalMap;\n  }\n  set normalMapType(value) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n  // @ts-ignore\n  get normalMapType() {\n    return this._objRef?.normalMapType;\n  }\n  set normalScale(value) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  get normalScale() {\n    return this._objRef?.normalScale;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set flatShading(value) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n  // @ts-ignore\n  get flatShading() {\n    return this._objRef?.flatShading;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThMeshMatcapMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshMatcapMaterial_BaseFactory;\n  return function ThMeshMatcapMaterial_Factory(t) {\n    return (ɵThMeshMatcapMaterial_BaseFactory || (ɵThMeshMatcapMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshMatcapMaterial)))(t || ThMeshMatcapMaterial);\n  };\n}();\nThMeshMatcapMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshMatcapMaterial,\n  selectors: [[\"th-meshMatcapMaterial\"]],\n  inputs: {\n    type: \"type\",\n    defines: \"defines\",\n    color: \"color\",\n    matcap: \"matcap\",\n    map: \"map\",\n    bumpMap: \"bumpMap\",\n    bumpScale: \"bumpScale\",\n    normalMap: \"normalMap\",\n    normalMapType: \"normalMapType\",\n    normalScale: \"normalScale\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    alphaMap: \"alphaMap\",\n    flatShading: \"flatShading\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshMatcapMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshMatcapMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshMatcapMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshMatcapMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshMatcapMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    defines: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    matcap: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    bumpMap: [{\n      type: Input\n    }],\n    bumpScale: [{\n      type: Input\n    }],\n    normalMap: [{\n      type: Input\n    }],\n    normalMapType: [{\n      type: Input\n    }],\n    normalScale: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    flatShading: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshNormalMaterial extends ThMaterial {\n  getType() {\n    return MeshNormalMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set bumpMap(value) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n  // @ts-ignore\n  get bumpMap() {\n    return this._objRef?.bumpMap;\n  }\n  set bumpScale(value) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n  // @ts-ignore\n  get bumpScale() {\n    return this._objRef?.bumpScale;\n  }\n  set normalMap(value) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n  // @ts-ignore\n  get normalMap() {\n    return this._objRef?.normalMap;\n  }\n  set normalMapType(value) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n  // @ts-ignore\n  get normalMapType() {\n    return this._objRef?.normalMapType;\n  }\n  set normalScale(value) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  get normalScale() {\n    return this._objRef?.normalScale;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set flatShading(value) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n  // @ts-ignore\n  get flatShading() {\n    return this._objRef?.flatShading;\n  }\n}\nThMeshNormalMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshNormalMaterial_BaseFactory;\n  return function ThMeshNormalMaterial_Factory(t) {\n    return (ɵThMeshNormalMaterial_BaseFactory || (ɵThMeshNormalMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshNormalMaterial)))(t || ThMeshNormalMaterial);\n  };\n}();\nThMeshNormalMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshNormalMaterial,\n  selectors: [[\"th-meshNormalMaterial\"]],\n  inputs: {\n    type: \"type\",\n    bumpMap: \"bumpMap\",\n    bumpScale: \"bumpScale\",\n    normalMap: \"normalMap\",\n    normalMapType: \"normalMapType\",\n    normalScale: \"normalScale\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    flatShading: \"flatShading\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshNormalMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshNormalMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshNormalMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshNormalMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshNormalMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    bumpMap: [{\n      type: Input\n    }],\n    bumpScale: [{\n      type: Input\n    }],\n    normalMap: [{\n      type: Input\n    }],\n    normalMapType: [{\n      type: Input\n    }],\n    normalScale: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    flatShading: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshPhongMaterial extends ThMaterial {\n  getType() {\n    return MeshPhongMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set specular(value) {\n    if (this._objRef) {\n      this._objRef.specular = applyValue(this._objRef.specular, value);\n    }\n  }\n  // @ts-ignore\n  get specular() {\n    return this._objRef?.specular;\n  }\n  set shininess(value) {\n    if (this._objRef) {\n      this._objRef.shininess = value;\n    }\n  }\n  // @ts-ignore\n  get shininess() {\n    return this._objRef?.shininess;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set lightMap(value) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n  // @ts-ignore\n  get lightMap() {\n    return this._objRef?.lightMap;\n  }\n  set lightMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get lightMapIntensity() {\n    return this._objRef?.lightMapIntensity;\n  }\n  set aoMap(value) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n  // @ts-ignore\n  get aoMap() {\n    return this._objRef?.aoMap;\n  }\n  set aoMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get aoMapIntensity() {\n    return this._objRef?.aoMapIntensity;\n  }\n  set emissive(value) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  get emissive() {\n    return this._objRef?.emissive;\n  }\n  set emissiveIntensity(value) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveIntensity() {\n    return this._objRef?.emissiveIntensity;\n  }\n  set emissiveMap(value) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveMap() {\n    return this._objRef?.emissiveMap;\n  }\n  set bumpMap(value) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n  // @ts-ignore\n  get bumpMap() {\n    return this._objRef?.bumpMap;\n  }\n  set bumpScale(value) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n  // @ts-ignore\n  get bumpScale() {\n    return this._objRef?.bumpScale;\n  }\n  set normalMap(value) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n  // @ts-ignore\n  get normalMap() {\n    return this._objRef?.normalMap;\n  }\n  set normalMapType(value) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n  // @ts-ignore\n  get normalMapType() {\n    return this._objRef?.normalMapType;\n  }\n  set normalScale(value) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  get normalScale() {\n    return this._objRef?.normalScale;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set specularMap(value) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n  // @ts-ignore\n  get specularMap() {\n    return this._objRef?.specularMap;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set envMap(value) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n  // @ts-ignore\n  get envMap() {\n    return this._objRef?.envMap;\n  }\n  set combine(value) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n  // @ts-ignore\n  get combine() {\n    return this._objRef?.combine;\n  }\n  set reflectivity(value) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n  // @ts-ignore\n  get reflectivity() {\n    return this._objRef?.reflectivity;\n  }\n  set refractionRatio(value) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n  // @ts-ignore\n  get refractionRatio() {\n    return this._objRef?.refractionRatio;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set wireframeLinecap(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinecap() {\n    return this._objRef?.wireframeLinecap;\n  }\n  set wireframeLinejoin(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinejoin() {\n    return this._objRef?.wireframeLinejoin;\n  }\n  set flatShading(value) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n  // @ts-ignore\n  get flatShading() {\n    return this._objRef?.flatShading;\n  }\n  set metal(value) {\n    if (this._objRef) {\n      this._objRef.metal = value;\n    }\n  }\n  // @ts-ignore\n  get metal() {\n    return this._objRef?.metal;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThMeshPhongMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshPhongMaterial_BaseFactory;\n  return function ThMeshPhongMaterial_Factory(t) {\n    return (ɵThMeshPhongMaterial_BaseFactory || (ɵThMeshPhongMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshPhongMaterial)))(t || ThMeshPhongMaterial);\n  };\n}();\nThMeshPhongMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshPhongMaterial,\n  selectors: [[\"th-meshPhongMaterial\"]],\n  inputs: {\n    type: \"type\",\n    color: \"color\",\n    specular: \"specular\",\n    shininess: \"shininess\",\n    map: \"map\",\n    lightMap: \"lightMap\",\n    lightMapIntensity: \"lightMapIntensity\",\n    aoMap: \"aoMap\",\n    aoMapIntensity: \"aoMapIntensity\",\n    emissive: \"emissive\",\n    emissiveIntensity: \"emissiveIntensity\",\n    emissiveMap: \"emissiveMap\",\n    bumpMap: \"bumpMap\",\n    bumpScale: \"bumpScale\",\n    normalMap: \"normalMap\",\n    normalMapType: \"normalMapType\",\n    normalScale: \"normalScale\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    specularMap: \"specularMap\",\n    alphaMap: \"alphaMap\",\n    envMap: \"envMap\",\n    combine: \"combine\",\n    reflectivity: \"reflectivity\",\n    refractionRatio: \"refractionRatio\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    wireframeLinecap: \"wireframeLinecap\",\n    wireframeLinejoin: \"wireframeLinejoin\",\n    flatShading: \"flatShading\",\n    metal: \"metal\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshPhongMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshPhongMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshPhongMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshPhongMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshPhongMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    specular: [{\n      type: Input\n    }],\n    shininess: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    lightMap: [{\n      type: Input\n    }],\n    lightMapIntensity: [{\n      type: Input\n    }],\n    aoMap: [{\n      type: Input\n    }],\n    aoMapIntensity: [{\n      type: Input\n    }],\n    emissive: [{\n      type: Input\n    }],\n    emissiveIntensity: [{\n      type: Input\n    }],\n    emissiveMap: [{\n      type: Input\n    }],\n    bumpMap: [{\n      type: Input\n    }],\n    bumpScale: [{\n      type: Input\n    }],\n    normalMap: [{\n      type: Input\n    }],\n    normalMapType: [{\n      type: Input\n    }],\n    normalScale: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    specularMap: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    envMap: [{\n      type: Input\n    }],\n    combine: [{\n      type: Input\n    }],\n    reflectivity: [{\n      type: Input\n    }],\n    refractionRatio: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    wireframeLinecap: [{\n      type: Input\n    }],\n    wireframeLinejoin: [{\n      type: Input\n    }],\n    flatShading: [{\n      type: Input\n    }],\n    metal: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshStandardMaterial extends ThMaterial {\n  getType() {\n    return MeshStandardMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set defines(value) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n  // @ts-ignore\n  get defines() {\n    return this._objRef?.defines;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set roughness(value) {\n    if (this._objRef) {\n      this._objRef.roughness = value;\n    }\n  }\n  // @ts-ignore\n  get roughness() {\n    return this._objRef?.roughness;\n  }\n  set metalness(value) {\n    if (this._objRef) {\n      this._objRef.metalness = value;\n    }\n  }\n  // @ts-ignore\n  get metalness() {\n    return this._objRef?.metalness;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set lightMap(value) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n  // @ts-ignore\n  get lightMap() {\n    return this._objRef?.lightMap;\n  }\n  set lightMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get lightMapIntensity() {\n    return this._objRef?.lightMapIntensity;\n  }\n  set aoMap(value) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n  // @ts-ignore\n  get aoMap() {\n    return this._objRef?.aoMap;\n  }\n  set aoMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get aoMapIntensity() {\n    return this._objRef?.aoMapIntensity;\n  }\n  set emissive(value) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  get emissive() {\n    return this._objRef?.emissive;\n  }\n  set emissiveIntensity(value) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveIntensity() {\n    return this._objRef?.emissiveIntensity;\n  }\n  set emissiveMap(value) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveMap() {\n    return this._objRef?.emissiveMap;\n  }\n  set bumpMap(value) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n  // @ts-ignore\n  get bumpMap() {\n    return this._objRef?.bumpMap;\n  }\n  set bumpScale(value) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n  // @ts-ignore\n  get bumpScale() {\n    return this._objRef?.bumpScale;\n  }\n  set normalMap(value) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n  // @ts-ignore\n  get normalMap() {\n    return this._objRef?.normalMap;\n  }\n  set normalMapType(value) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n  // @ts-ignore\n  get normalMapType() {\n    return this._objRef?.normalMapType;\n  }\n  set normalScale(value) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  get normalScale() {\n    return this._objRef?.normalScale;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set roughnessMap(value) {\n    if (this._objRef) {\n      this._objRef.roughnessMap = value;\n    }\n  }\n  // @ts-ignore\n  get roughnessMap() {\n    return this._objRef?.roughnessMap;\n  }\n  set metalnessMap(value) {\n    if (this._objRef) {\n      this._objRef.metalnessMap = value;\n    }\n  }\n  // @ts-ignore\n  get metalnessMap() {\n    return this._objRef?.metalnessMap;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set envMap(value) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n  // @ts-ignore\n  get envMap() {\n    return this._objRef?.envMap;\n  }\n  set envMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.envMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get envMapIntensity() {\n    return this._objRef?.envMapIntensity;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set wireframeLinecap(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinecap() {\n    return this._objRef?.wireframeLinecap;\n  }\n  set wireframeLinejoin(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinejoin() {\n    return this._objRef?.wireframeLinejoin;\n  }\n  set flatShading(value) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n  // @ts-ignore\n  get flatShading() {\n    return this._objRef?.flatShading;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n  set isMeshStandardMaterial(value) {\n    if (this._objRef) {\n      this._objRef.isMeshStandardMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get isMeshStandardMaterial() {\n    return this._objRef?.isMeshStandardMaterial;\n  }\n}\nThMeshStandardMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshStandardMaterial_BaseFactory;\n  return function ThMeshStandardMaterial_Factory(t) {\n    return (ɵThMeshStandardMaterial_BaseFactory || (ɵThMeshStandardMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshStandardMaterial)))(t || ThMeshStandardMaterial);\n  };\n}();\nThMeshStandardMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshStandardMaterial,\n  selectors: [[\"th-meshStandardMaterial\"]],\n  inputs: {\n    type: \"type\",\n    defines: \"defines\",\n    color: \"color\",\n    roughness: \"roughness\",\n    metalness: \"metalness\",\n    map: \"map\",\n    lightMap: \"lightMap\",\n    lightMapIntensity: \"lightMapIntensity\",\n    aoMap: \"aoMap\",\n    aoMapIntensity: \"aoMapIntensity\",\n    emissive: \"emissive\",\n    emissiveIntensity: \"emissiveIntensity\",\n    emissiveMap: \"emissiveMap\",\n    bumpMap: \"bumpMap\",\n    bumpScale: \"bumpScale\",\n    normalMap: \"normalMap\",\n    normalMapType: \"normalMapType\",\n    normalScale: \"normalScale\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    roughnessMap: \"roughnessMap\",\n    metalnessMap: \"metalnessMap\",\n    alphaMap: \"alphaMap\",\n    envMap: \"envMap\",\n    envMapIntensity: \"envMapIntensity\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    wireframeLinecap: \"wireframeLinecap\",\n    wireframeLinejoin: \"wireframeLinejoin\",\n    flatShading: \"flatShading\",\n    fog: \"fog\",\n    isMeshStandardMaterial: \"isMeshStandardMaterial\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshStandardMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshStandardMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshStandardMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshStandardMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshStandardMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    defines: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    roughness: [{\n      type: Input\n    }],\n    metalness: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    lightMap: [{\n      type: Input\n    }],\n    lightMapIntensity: [{\n      type: Input\n    }],\n    aoMap: [{\n      type: Input\n    }],\n    aoMapIntensity: [{\n      type: Input\n    }],\n    emissive: [{\n      type: Input\n    }],\n    emissiveIntensity: [{\n      type: Input\n    }],\n    emissiveMap: [{\n      type: Input\n    }],\n    bumpMap: [{\n      type: Input\n    }],\n    bumpScale: [{\n      type: Input\n    }],\n    normalMap: [{\n      type: Input\n    }],\n    normalMapType: [{\n      type: Input\n    }],\n    normalScale: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    roughnessMap: [{\n      type: Input\n    }],\n    metalnessMap: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    envMap: [{\n      type: Input\n    }],\n    envMapIntensity: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    wireframeLinecap: [{\n      type: Input\n    }],\n    wireframeLinejoin: [{\n      type: Input\n    }],\n    flatShading: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }],\n    isMeshStandardMaterial: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshPhysicalMaterial extends ThMeshStandardMaterial {\n  getType() {\n    return MeshPhysicalMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set defines(value) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n  // @ts-ignore\n  get defines() {\n    return this._objRef?.defines;\n  }\n  set clearcoat(value) {\n    if (this._objRef) {\n      this._objRef.clearcoat = value;\n    }\n  }\n  // @ts-ignore\n  get clearcoat() {\n    return this._objRef?.clearcoat;\n  }\n  set clearcoatMap(value) {\n    if (this._objRef) {\n      this._objRef.clearcoatMap = value;\n    }\n  }\n  // @ts-ignore\n  get clearcoatMap() {\n    return this._objRef?.clearcoatMap;\n  }\n  set clearcoatRoughness(value) {\n    if (this._objRef) {\n      this._objRef.clearcoatRoughness = value;\n    }\n  }\n  // @ts-ignore\n  get clearcoatRoughness() {\n    return this._objRef?.clearcoatRoughness;\n  }\n  set clearcoatRoughnessMap(value) {\n    if (this._objRef) {\n      this._objRef.clearcoatRoughnessMap = value;\n    }\n  }\n  // @ts-ignore\n  get clearcoatRoughnessMap() {\n    return this._objRef?.clearcoatRoughnessMap;\n  }\n  set clearcoatNormalScale(value) {\n    if (this._objRef) {\n      this._objRef.clearcoatNormalScale = applyValue(this._objRef.clearcoatNormalScale, value);\n    }\n  }\n  // @ts-ignore\n  get clearcoatNormalScale() {\n    return this._objRef?.clearcoatNormalScale;\n  }\n  set clearcoatNormalMap(value) {\n    if (this._objRef) {\n      this._objRef.clearcoatNormalMap = value;\n    }\n  }\n  // @ts-ignore\n  get clearcoatNormalMap() {\n    return this._objRef?.clearcoatNormalMap;\n  }\n  set reflectivity(value) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n  // @ts-ignore\n  get reflectivity() {\n    return this._objRef?.reflectivity;\n  }\n  set ior(value) {\n    if (this._objRef) {\n      this._objRef.ior = value;\n    }\n  }\n  // @ts-ignore\n  get ior() {\n    return this._objRef?.ior;\n  }\n  set sheen(value) {\n    if (this._objRef) {\n      this._objRef.sheen = value;\n    }\n  }\n  // @ts-ignore\n  get sheen() {\n    return this._objRef?.sheen;\n  }\n  set sheenColor(value) {\n    if (this._objRef) {\n      this._objRef.sheenColor = applyValue(this._objRef.sheenColor, value);\n    }\n  }\n  // @ts-ignore\n  get sheenColor() {\n    return this._objRef?.sheenColor;\n  }\n  set sheenColorMap(value) {\n    if (this._objRef) {\n      this._objRef.sheenColorMap = value;\n    }\n  }\n  // @ts-ignore\n  get sheenColorMap() {\n    return this._objRef?.sheenColorMap;\n  }\n  set sheenRoughness(value) {\n    if (this._objRef) {\n      this._objRef.sheenRoughness = value;\n    }\n  }\n  // @ts-ignore\n  get sheenRoughness() {\n    return this._objRef?.sheenRoughness;\n  }\n  set sheenRoughnessMap(value) {\n    if (this._objRef) {\n      this._objRef.sheenRoughnessMap = value;\n    }\n  }\n  // @ts-ignore\n  get sheenRoughnessMap() {\n    return this._objRef?.sheenRoughnessMap;\n  }\n  set transmission(value) {\n    if (this._objRef) {\n      this._objRef.transmission = value;\n    }\n  }\n  // @ts-ignore\n  get transmission() {\n    return this._objRef?.transmission;\n  }\n  set transmissionMap(value) {\n    if (this._objRef) {\n      this._objRef.transmissionMap = value;\n    }\n  }\n  // @ts-ignore\n  get transmissionMap() {\n    return this._objRef?.transmissionMap;\n  }\n  set thickness(value) {\n    if (this._objRef) {\n      this._objRef.thickness = value;\n    }\n  }\n  // @ts-ignore\n  get thickness() {\n    return this._objRef?.thickness;\n  }\n  set thicknessMap(value) {\n    if (this._objRef) {\n      this._objRef.thicknessMap = value;\n    }\n  }\n  // @ts-ignore\n  get thicknessMap() {\n    return this._objRef?.thicknessMap;\n  }\n  set attenuationDistance(value) {\n    if (this._objRef) {\n      this._objRef.attenuationDistance = value;\n    }\n  }\n  // @ts-ignore\n  get attenuationDistance() {\n    return this._objRef?.attenuationDistance;\n  }\n  set attenuationColor(value) {\n    if (this._objRef) {\n      this._objRef.attenuationColor = applyValue(this._objRef.attenuationColor, value);\n    }\n  }\n  // @ts-ignore\n  get attenuationColor() {\n    return this._objRef?.attenuationColor;\n  }\n  set specularIntensity(value) {\n    if (this._objRef) {\n      this._objRef.specularIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get specularIntensity() {\n    return this._objRef?.specularIntensity;\n  }\n  set specularColor(value) {\n    if (this._objRef) {\n      this._objRef.specularColor = applyValue(this._objRef.specularColor, value);\n    }\n  }\n  // @ts-ignore\n  get specularColor() {\n    return this._objRef?.specularColor;\n  }\n  set specularIntensityMap(value) {\n    if (this._objRef) {\n      this._objRef.specularIntensityMap = value;\n    }\n  }\n  // @ts-ignore\n  get specularIntensityMap() {\n    return this._objRef?.specularIntensityMap;\n  }\n  set specularColorMap(value) {\n    if (this._objRef) {\n      this._objRef.specularColorMap = value;\n    }\n  }\n  // @ts-ignore\n  get specularColorMap() {\n    return this._objRef?.specularColorMap;\n  }\n  set iridescenceMap(value) {\n    if (this._objRef) {\n      this._objRef.iridescenceMap = value;\n    }\n  }\n  // @ts-ignore\n  get iridescenceMap() {\n    return this._objRef?.iridescenceMap;\n  }\n  set iridescenceIOR(value) {\n    if (this._objRef) {\n      this._objRef.iridescenceIOR = value;\n    }\n  }\n  // @ts-ignore\n  get iridescenceIOR() {\n    return this._objRef?.iridescenceIOR;\n  }\n  set iridescence(value) {\n    if (this._objRef) {\n      this._objRef.iridescence = value;\n    }\n  }\n  // @ts-ignore\n  get iridescence() {\n    return this._objRef?.iridescence;\n  }\n  set iridescenceThicknessRange(value) {\n    if (this._objRef) {\n      this._objRef.iridescenceThicknessRange = value;\n    }\n  }\n  // @ts-ignore\n  get iridescenceThicknessRange() {\n    return this._objRef?.iridescenceThicknessRange;\n  }\n  set iridescenceThicknessMap(value) {\n    if (this._objRef) {\n      this._objRef.iridescenceThicknessMap = value;\n    }\n  }\n  // @ts-ignore\n  get iridescenceThicknessMap() {\n    return this._objRef?.iridescenceThicknessMap;\n  }\n}\nThMeshPhysicalMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshPhysicalMaterial_BaseFactory;\n  return function ThMeshPhysicalMaterial_Factory(t) {\n    return (ɵThMeshPhysicalMaterial_BaseFactory || (ɵThMeshPhysicalMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshPhysicalMaterial)))(t || ThMeshPhysicalMaterial);\n  };\n}();\nThMeshPhysicalMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshPhysicalMaterial,\n  selectors: [[\"th-meshPhysicalMaterial\"]],\n  inputs: {\n    type: \"type\",\n    defines: \"defines\",\n    clearcoat: \"clearcoat\",\n    clearcoatMap: \"clearcoatMap\",\n    clearcoatRoughness: \"clearcoatRoughness\",\n    clearcoatRoughnessMap: \"clearcoatRoughnessMap\",\n    clearcoatNormalScale: \"clearcoatNormalScale\",\n    clearcoatNormalMap: \"clearcoatNormalMap\",\n    reflectivity: \"reflectivity\",\n    ior: \"ior\",\n    sheen: \"sheen\",\n    sheenColor: \"sheenColor\",\n    sheenColorMap: \"sheenColorMap\",\n    sheenRoughness: \"sheenRoughness\",\n    sheenRoughnessMap: \"sheenRoughnessMap\",\n    transmission: \"transmission\",\n    transmissionMap: \"transmissionMap\",\n    thickness: \"thickness\",\n    thicknessMap: \"thicknessMap\",\n    attenuationDistance: \"attenuationDistance\",\n    attenuationColor: \"attenuationColor\",\n    specularIntensity: \"specularIntensity\",\n    specularColor: \"specularColor\",\n    specularIntensityMap: \"specularIntensityMap\",\n    specularColorMap: \"specularColorMap\",\n    iridescenceMap: \"iridescenceMap\",\n    iridescenceIOR: \"iridescenceIOR\",\n    iridescence: \"iridescence\",\n    iridescenceThicknessRange: \"iridescenceThicknessRange\",\n    iridescenceThicknessMap: \"iridescenceThicknessMap\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshPhysicalMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshPhysicalMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshPhysicalMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshPhysicalMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshPhysicalMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    defines: [{\n      type: Input\n    }],\n    clearcoat: [{\n      type: Input\n    }],\n    clearcoatMap: [{\n      type: Input\n    }],\n    clearcoatRoughness: [{\n      type: Input\n    }],\n    clearcoatRoughnessMap: [{\n      type: Input\n    }],\n    clearcoatNormalScale: [{\n      type: Input\n    }],\n    clearcoatNormalMap: [{\n      type: Input\n    }],\n    reflectivity: [{\n      type: Input\n    }],\n    ior: [{\n      type: Input\n    }],\n    sheen: [{\n      type: Input\n    }],\n    sheenColor: [{\n      type: Input\n    }],\n    sheenColorMap: [{\n      type: Input\n    }],\n    sheenRoughness: [{\n      type: Input\n    }],\n    sheenRoughnessMap: [{\n      type: Input\n    }],\n    transmission: [{\n      type: Input\n    }],\n    transmissionMap: [{\n      type: Input\n    }],\n    thickness: [{\n      type: Input\n    }],\n    thicknessMap: [{\n      type: Input\n    }],\n    attenuationDistance: [{\n      type: Input\n    }],\n    attenuationColor: [{\n      type: Input\n    }],\n    specularIntensity: [{\n      type: Input\n    }],\n    specularColor: [{\n      type: Input\n    }],\n    specularIntensityMap: [{\n      type: Input\n    }],\n    specularColorMap: [{\n      type: Input\n    }],\n    iridescenceMap: [{\n      type: Input\n    }],\n    iridescenceIOR: [{\n      type: Input\n    }],\n    iridescence: [{\n      type: Input\n    }],\n    iridescenceThicknessRange: [{\n      type: Input\n    }],\n    iridescenceThicknessMap: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshToonMaterial extends ThMaterial {\n  getType() {\n    return MeshToonMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set defines(value) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n  // @ts-ignore\n  get defines() {\n    return this._objRef?.defines;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set gradientMap(value) {\n    if (this._objRef) {\n      this._objRef.gradientMap = value;\n    }\n  }\n  // @ts-ignore\n  get gradientMap() {\n    return this._objRef?.gradientMap;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set lightMap(value) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n  // @ts-ignore\n  get lightMap() {\n    return this._objRef?.lightMap;\n  }\n  set lightMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get lightMapIntensity() {\n    return this._objRef?.lightMapIntensity;\n  }\n  set aoMap(value) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n  // @ts-ignore\n  get aoMap() {\n    return this._objRef?.aoMap;\n  }\n  set aoMapIntensity(value) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get aoMapIntensity() {\n    return this._objRef?.aoMapIntensity;\n  }\n  set emissive(value) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue(this._objRef.emissive, value);\n    }\n  }\n  // @ts-ignore\n  get emissive() {\n    return this._objRef?.emissive;\n  }\n  set emissiveIntensity(value) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveIntensity() {\n    return this._objRef?.emissiveIntensity;\n  }\n  set emissiveMap(value) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n  // @ts-ignore\n  get emissiveMap() {\n    return this._objRef?.emissiveMap;\n  }\n  set bumpMap(value) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n  // @ts-ignore\n  get bumpMap() {\n    return this._objRef?.bumpMap;\n  }\n  set bumpScale(value) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n  // @ts-ignore\n  get bumpScale() {\n    return this._objRef?.bumpScale;\n  }\n  set normalMap(value) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n  // @ts-ignore\n  get normalMap() {\n    return this._objRef?.normalMap;\n  }\n  set normalMapType(value) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n  // @ts-ignore\n  get normalMapType() {\n    return this._objRef?.normalMapType;\n  }\n  set normalScale(value) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n    }\n  }\n  // @ts-ignore\n  get normalScale() {\n    return this._objRef?.normalScale;\n  }\n  set displacementMap(value) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n  // @ts-ignore\n  get displacementMap() {\n    return this._objRef?.displacementMap;\n  }\n  set displacementScale(value) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n  // @ts-ignore\n  get displacementScale() {\n    return this._objRef?.displacementScale;\n  }\n  set displacementBias(value) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n  // @ts-ignore\n  get displacementBias() {\n    return this._objRef?.displacementBias;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set wireframeLinecap(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinecap() {\n    return this._objRef?.wireframeLinecap;\n  }\n  set wireframeLinejoin(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinejoin() {\n    return this._objRef?.wireframeLinejoin;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThMeshToonMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThMeshToonMaterial_BaseFactory;\n  return function ThMeshToonMaterial_Factory(t) {\n    return (ɵThMeshToonMaterial_BaseFactory || (ɵThMeshToonMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThMeshToonMaterial)))(t || ThMeshToonMaterial);\n  };\n}();\nThMeshToonMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThMeshToonMaterial,\n  selectors: [[\"th-meshToonMaterial\"]],\n  inputs: {\n    type: \"type\",\n    defines: \"defines\",\n    color: \"color\",\n    gradientMap: \"gradientMap\",\n    map: \"map\",\n    lightMap: \"lightMap\",\n    lightMapIntensity: \"lightMapIntensity\",\n    aoMap: \"aoMap\",\n    aoMapIntensity: \"aoMapIntensity\",\n    emissive: \"emissive\",\n    emissiveIntensity: \"emissiveIntensity\",\n    emissiveMap: \"emissiveMap\",\n    bumpMap: \"bumpMap\",\n    bumpScale: \"bumpScale\",\n    normalMap: \"normalMap\",\n    normalMapType: \"normalMapType\",\n    normalScale: \"normalScale\",\n    displacementMap: \"displacementMap\",\n    displacementScale: \"displacementScale\",\n    displacementBias: \"displacementBias\",\n    alphaMap: \"alphaMap\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    wireframeLinecap: \"wireframeLinecap\",\n    wireframeLinejoin: \"wireframeLinejoin\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThMeshToonMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThMeshToonMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThMeshToonMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-meshToonMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThMeshToonMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    defines: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    gradientMap: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    lightMap: [{\n      type: Input\n    }],\n    lightMapIntensity: [{\n      type: Input\n    }],\n    aoMap: [{\n      type: Input\n    }],\n    aoMapIntensity: [{\n      type: Input\n    }],\n    emissive: [{\n      type: Input\n    }],\n    emissiveIntensity: [{\n      type: Input\n    }],\n    emissiveMap: [{\n      type: Input\n    }],\n    bumpMap: [{\n      type: Input\n    }],\n    bumpScale: [{\n      type: Input\n    }],\n    normalMap: [{\n      type: Input\n    }],\n    normalMapType: [{\n      type: Input\n    }],\n    normalScale: [{\n      type: Input\n    }],\n    displacementMap: [{\n      type: Input\n    }],\n    displacementScale: [{\n      type: Input\n    }],\n    displacementBias: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    wireframeLinecap: [{\n      type: Input\n    }],\n    wireframeLinejoin: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThOctahedronGeometry extends ThPolyhedronGeometry {\n  getType() {\n    return OctahedronGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThOctahedronGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThOctahedronGeometry_BaseFactory;\n  return function ThOctahedronGeometry_Factory(t) {\n    return (ɵThOctahedronGeometry_BaseFactory || (ɵThOctahedronGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThOctahedronGeometry)))(t || ThOctahedronGeometry);\n  };\n}();\nThOctahedronGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThOctahedronGeometry,\n  selectors: [[\"th-octahedronGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThOctahedronGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThOctahedronGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThOctahedronGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-octahedronGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThOctahedronGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThOrthographicCamera extends ThCamera {\n  getType() {\n    return OrthographicCamera;\n  }\n  // @ts-ignore\n  get isOrthographicCamera() {\n    return this._objRef?.isOrthographicCamera;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set zoom(value) {\n    if (this._objRef) {\n      this._objRef.zoom = value;\n    }\n  }\n  // @ts-ignore\n  get zoom() {\n    return this._objRef?.zoom;\n  }\n  set view(value) {\n    if (this._objRef) {\n      this._objRef.view = value;\n    }\n  }\n  // @ts-ignore\n  get view() {\n    return this._objRef?.view;\n  }\n  set left(value) {\n    if (this._objRef) {\n      this._objRef.left = value;\n    }\n  }\n  // @ts-ignore\n  get left() {\n    return this._objRef?.left;\n  }\n  set right(value) {\n    if (this._objRef) {\n      this._objRef.right = value;\n    }\n  }\n  // @ts-ignore\n  get right() {\n    return this._objRef?.right;\n  }\n  set top(value) {\n    if (this._objRef) {\n      this._objRef.top = value;\n    }\n  }\n  // @ts-ignore\n  get top() {\n    return this._objRef?.top;\n  }\n  set bottom(value) {\n    if (this._objRef) {\n      this._objRef.bottom = value;\n    }\n  }\n  // @ts-ignore\n  get bottom() {\n    return this._objRef?.bottom;\n  }\n  set near(value) {\n    if (this._objRef) {\n      this._objRef.near = value;\n    }\n  }\n  // @ts-ignore\n  get near() {\n    return this._objRef?.near;\n  }\n  set far(value) {\n    if (this._objRef) {\n      this._objRef.far = value;\n    }\n  }\n  // @ts-ignore\n  get far() {\n    return this._objRef?.far;\n  }\n}\nThOrthographicCamera.ɵfac = /* @__PURE__ */function () {\n  let ɵThOrthographicCamera_BaseFactory;\n  return function ThOrthographicCamera_Factory(t) {\n    return (ɵThOrthographicCamera_BaseFactory || (ɵThOrthographicCamera_BaseFactory = i0.ɵɵgetInheritedFactory(ThOrthographicCamera)))(t || ThOrthographicCamera);\n  };\n}();\nThOrthographicCamera.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThOrthographicCamera,\n  selectors: [[\"th-orthographicCamera\"]],\n  inputs: {\n    zoom: \"zoom\",\n    view: \"view\",\n    left: \"left\",\n    right: \"right\",\n    top: \"top\",\n    bottom: \"bottom\",\n    near: \"near\",\n    far: \"far\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThOrthographicCamera)\n  }, {\n    provide: ThCamera,\n    useExisting: forwardRef(() => ThOrthographicCamera)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThOrthographicCamera_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThOrthographicCamera, [{\n    type: Component,\n    args: [{\n      selector: 'th-orthographicCamera',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThOrthographicCamera)\n      }, {\n        provide: ThCamera,\n        useExisting: forwardRef(() => ThOrthographicCamera)\n      }]\n    }]\n  }], null, {\n    zoom: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    left: [{\n      type: Input\n    }],\n    right: [{\n      type: Input\n    }],\n    top: [{\n      type: Input\n    }],\n    bottom: [{\n      type: Input\n    }],\n    near: [{\n      type: Input\n    }],\n    far: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThOutlinePass extends ThPass {\n  getType() {\n    return OutlinePass;\n  }\n  set renderScene(value) {\n    if (this._objRef) {\n      this._objRef.renderScene = value;\n    }\n  }\n  // @ts-ignore\n  get renderScene() {\n    return this._objRef?.renderScene;\n  }\n  set renderCamera(value) {\n    if (this._objRef) {\n      this._objRef.renderCamera = value;\n    }\n  }\n  // @ts-ignore\n  get renderCamera() {\n    return this._objRef?.renderCamera;\n  }\n  set selectedObjects(value) {\n    if (this._objRef) {\n      this._objRef.selectedObjects = value;\n    }\n  }\n  // @ts-ignore\n  get selectedObjects() {\n    return this._objRef?.selectedObjects;\n  }\n  set visibleEdgeColor(value) {\n    if (this._objRef) {\n      this._objRef.visibleEdgeColor = applyValue(this._objRef.visibleEdgeColor, value);\n    }\n  }\n  // @ts-ignore\n  get visibleEdgeColor() {\n    return this._objRef?.visibleEdgeColor;\n  }\n  set hiddenEdgeColor(value) {\n    if (this._objRef) {\n      this._objRef.hiddenEdgeColor = applyValue(this._objRef.hiddenEdgeColor, value);\n    }\n  }\n  // @ts-ignore\n  get hiddenEdgeColor() {\n    return this._objRef?.hiddenEdgeColor;\n  }\n  set edgeGlow(value) {\n    if (this._objRef) {\n      this._objRef.edgeGlow = value;\n    }\n  }\n  // @ts-ignore\n  get edgeGlow() {\n    return this._objRef?.edgeGlow;\n  }\n  set usePatternTexture(value) {\n    if (this._objRef) {\n      this._objRef.usePatternTexture = value;\n    }\n  }\n  // @ts-ignore\n  get usePatternTexture() {\n    return this._objRef?.usePatternTexture;\n  }\n  set edgeThickness(value) {\n    if (this._objRef) {\n      this._objRef.edgeThickness = value;\n    }\n  }\n  // @ts-ignore\n  get edgeThickness() {\n    return this._objRef?.edgeThickness;\n  }\n  set edgeStrength(value) {\n    if (this._objRef) {\n      this._objRef.edgeStrength = value;\n    }\n  }\n  // @ts-ignore\n  get edgeStrength() {\n    return this._objRef?.edgeStrength;\n  }\n  set downSampleRatio(value) {\n    if (this._objRef) {\n      this._objRef.downSampleRatio = value;\n    }\n  }\n  // @ts-ignore\n  get downSampleRatio() {\n    return this._objRef?.downSampleRatio;\n  }\n  set pulsePeriod(value) {\n    if (this._objRef) {\n      this._objRef.pulsePeriod = value;\n    }\n  }\n  // @ts-ignore\n  get pulsePeriod() {\n    return this._objRef?.pulsePeriod;\n  }\n  set resolution(value) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue(this._objRef.resolution, value);\n    }\n  }\n  // @ts-ignore\n  get resolution() {\n    return this._objRef?.resolution;\n  }\n  set patternTexture(value) {\n    if (this._objRef) {\n      this._objRef.patternTexture = value;\n    }\n  }\n  // @ts-ignore\n  get patternTexture() {\n    return this._objRef?.patternTexture;\n  }\n  set maskBufferMaterial(value) {\n    if (this._objRef) {\n      this._objRef.maskBufferMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get maskBufferMaterial() {\n    return this._objRef?.maskBufferMaterial;\n  }\n  set renderTargetMaskBuffer(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetMaskBuffer = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetMaskBuffer() {\n    return this._objRef?.renderTargetMaskBuffer;\n  }\n  set depthMaterial(value) {\n    if (this._objRef) {\n      this._objRef.depthMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get depthMaterial() {\n    return this._objRef?.depthMaterial;\n  }\n  set prepareMaskMaterial(value) {\n    if (this._objRef) {\n      this._objRef.prepareMaskMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get prepareMaskMaterial() {\n    return this._objRef?.prepareMaskMaterial;\n  }\n  set renderTargetDepthBuffer(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetDepthBuffer = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetDepthBuffer() {\n    return this._objRef?.renderTargetDepthBuffer;\n  }\n  set renderTargetMaskDownSampleBuffer(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetMaskDownSampleBuffer = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetMaskDownSampleBuffer() {\n    return this._objRef?.renderTargetMaskDownSampleBuffer;\n  }\n  set renderTargetBlurBuffer1(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetBlurBuffer1 = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetBlurBuffer1() {\n    return this._objRef?.renderTargetBlurBuffer1;\n  }\n  set renderTargetBlurBuffer2(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetBlurBuffer2 = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetBlurBuffer2() {\n    return this._objRef?.renderTargetBlurBuffer2;\n  }\n  set edgeDetectionMaterial(value) {\n    if (this._objRef) {\n      this._objRef.edgeDetectionMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get edgeDetectionMaterial() {\n    return this._objRef?.edgeDetectionMaterial;\n  }\n  set renderTargetEdgeBuffer1(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetEdgeBuffer1 = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetEdgeBuffer1() {\n    return this._objRef?.renderTargetEdgeBuffer1;\n  }\n  set renderTargetEdgeBuffer2(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetEdgeBuffer2 = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetEdgeBuffer2() {\n    return this._objRef?.renderTargetEdgeBuffer2;\n  }\n  set separableBlurMaterial1(value) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterial1 = value;\n    }\n  }\n  // @ts-ignore\n  get separableBlurMaterial1() {\n    return this._objRef?.separableBlurMaterial1;\n  }\n  set separableBlurMaterial2(value) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterial2 = value;\n    }\n  }\n  // @ts-ignore\n  get separableBlurMaterial2() {\n    return this._objRef?.separableBlurMaterial2;\n  }\n  set overlayMaterial(value) {\n    if (this._objRef) {\n      this._objRef.overlayMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get overlayMaterial() {\n    return this._objRef?.overlayMaterial;\n  }\n  set copyUniforms(value) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n  // @ts-ignore\n  get copyUniforms() {\n    return this._objRef?.copyUniforms;\n  }\n  set materialCopy(value) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n  // @ts-ignore\n  get materialCopy() {\n    return this._objRef?.materialCopy;\n  }\n  set oldClearColor(value) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  get oldClearColor() {\n    return this._objRef?.oldClearColor;\n  }\n  set oldClearAlpha(value) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get oldClearAlpha() {\n    return this._objRef?.oldClearAlpha;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n  set tempPulseColor1(value) {\n    if (this._objRef) {\n      this._objRef.tempPulseColor1 = applyValue(this._objRef.tempPulseColor1, value);\n    }\n  }\n  // @ts-ignore\n  get tempPulseColor1() {\n    return this._objRef?.tempPulseColor1;\n  }\n  set tempPulseColor2(value) {\n    if (this._objRef) {\n      this._objRef.tempPulseColor2 = applyValue(this._objRef.tempPulseColor2, value);\n    }\n  }\n  // @ts-ignore\n  get tempPulseColor2() {\n    return this._objRef?.tempPulseColor2;\n  }\n  set textureMatrix(value) {\n    if (this._objRef) {\n      this._objRef.textureMatrix = applyValue(this._objRef.textureMatrix, value);\n    }\n  }\n  // @ts-ignore\n  get textureMatrix() {\n    return this._objRef?.textureMatrix;\n  }\n}\nThOutlinePass.ɵfac = /* @__PURE__ */function () {\n  let ɵThOutlinePass_BaseFactory;\n  return function ThOutlinePass_Factory(t) {\n    return (ɵThOutlinePass_BaseFactory || (ɵThOutlinePass_BaseFactory = i0.ɵɵgetInheritedFactory(ThOutlinePass)))(t || ThOutlinePass);\n  };\n}();\nThOutlinePass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThOutlinePass,\n  selectors: [[\"th-outlinePass\"]],\n  inputs: {\n    renderScene: \"renderScene\",\n    renderCamera: \"renderCamera\",\n    selectedObjects: \"selectedObjects\",\n    visibleEdgeColor: \"visibleEdgeColor\",\n    hiddenEdgeColor: \"hiddenEdgeColor\",\n    edgeGlow: \"edgeGlow\",\n    usePatternTexture: \"usePatternTexture\",\n    edgeThickness: \"edgeThickness\",\n    edgeStrength: \"edgeStrength\",\n    downSampleRatio: \"downSampleRatio\",\n    pulsePeriod: \"pulsePeriod\",\n    resolution: \"resolution\",\n    patternTexture: \"patternTexture\",\n    maskBufferMaterial: \"maskBufferMaterial\",\n    renderTargetMaskBuffer: \"renderTargetMaskBuffer\",\n    depthMaterial: \"depthMaterial\",\n    prepareMaskMaterial: \"prepareMaskMaterial\",\n    renderTargetDepthBuffer: \"renderTargetDepthBuffer\",\n    renderTargetMaskDownSampleBuffer: \"renderTargetMaskDownSampleBuffer\",\n    renderTargetBlurBuffer1: \"renderTargetBlurBuffer1\",\n    renderTargetBlurBuffer2: \"renderTargetBlurBuffer2\",\n    edgeDetectionMaterial: \"edgeDetectionMaterial\",\n    renderTargetEdgeBuffer1: \"renderTargetEdgeBuffer1\",\n    renderTargetEdgeBuffer2: \"renderTargetEdgeBuffer2\",\n    separableBlurMaterial1: \"separableBlurMaterial1\",\n    separableBlurMaterial2: \"separableBlurMaterial2\",\n    overlayMaterial: \"overlayMaterial\",\n    copyUniforms: \"copyUniforms\",\n    materialCopy: \"materialCopy\",\n    oldClearColor: \"oldClearColor\",\n    oldClearAlpha: \"oldClearAlpha\",\n    fsQuad: \"fsQuad\",\n    tempPulseColor1: \"tempPulseColor1\",\n    tempPulseColor2: \"tempPulseColor2\",\n    textureMatrix: \"textureMatrix\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThOutlinePass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThOutlinePass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThOutlinePass, [{\n    type: Component,\n    args: [{\n      selector: 'th-outlinePass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThOutlinePass)\n      }]\n    }]\n  }], null, {\n    renderScene: [{\n      type: Input\n    }],\n    renderCamera: [{\n      type: Input\n    }],\n    selectedObjects: [{\n      type: Input\n    }],\n    visibleEdgeColor: [{\n      type: Input\n    }],\n    hiddenEdgeColor: [{\n      type: Input\n    }],\n    edgeGlow: [{\n      type: Input\n    }],\n    usePatternTexture: [{\n      type: Input\n    }],\n    edgeThickness: [{\n      type: Input\n    }],\n    edgeStrength: [{\n      type: Input\n    }],\n    downSampleRatio: [{\n      type: Input\n    }],\n    pulsePeriod: [{\n      type: Input\n    }],\n    resolution: [{\n      type: Input\n    }],\n    patternTexture: [{\n      type: Input\n    }],\n    maskBufferMaterial: [{\n      type: Input\n    }],\n    renderTargetMaskBuffer: [{\n      type: Input\n    }],\n    depthMaterial: [{\n      type: Input\n    }],\n    prepareMaskMaterial: [{\n      type: Input\n    }],\n    renderTargetDepthBuffer: [{\n      type: Input\n    }],\n    renderTargetMaskDownSampleBuffer: [{\n      type: Input\n    }],\n    renderTargetBlurBuffer1: [{\n      type: Input\n    }],\n    renderTargetBlurBuffer2: [{\n      type: Input\n    }],\n    edgeDetectionMaterial: [{\n      type: Input\n    }],\n    renderTargetEdgeBuffer1: [{\n      type: Input\n    }],\n    renderTargetEdgeBuffer2: [{\n      type: Input\n    }],\n    separableBlurMaterial1: [{\n      type: Input\n    }],\n    separableBlurMaterial2: [{\n      type: Input\n    }],\n    overlayMaterial: [{\n      type: Input\n    }],\n    copyUniforms: [{\n      type: Input\n    }],\n    materialCopy: [{\n      type: Input\n    }],\n    oldClearColor: [{\n      type: Input\n    }],\n    oldClearAlpha: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }],\n    tempPulseColor1: [{\n      type: Input\n    }],\n    tempPulseColor2: [{\n      type: Input\n    }],\n    textureMatrix: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThParametricGeometry extends ThBufferGeometry {\n  getType() {\n    return ParametricGeometry;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set parameters(value) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThParametricGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThParametricGeometry_BaseFactory;\n  return function ThParametricGeometry_Factory(t) {\n    return (ɵThParametricGeometry_BaseFactory || (ɵThParametricGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThParametricGeometry)))(t || ThParametricGeometry);\n  };\n}();\nThParametricGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThParametricGeometry,\n  selectors: [[\"th-parametricGeometry\"]],\n  inputs: {\n    type: \"type\",\n    parameters: \"parameters\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThParametricGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThParametricGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThParametricGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-parametricGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThParametricGeometry)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    parameters: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPlaneGeometry extends ThBufferGeometry {\n  getType() {\n    return PlaneGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThPlaneGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThPlaneGeometry_BaseFactory;\n  return function ThPlaneGeometry_Factory(t) {\n    return (ɵThPlaneGeometry_BaseFactory || (ɵThPlaneGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThPlaneGeometry)))(t || ThPlaneGeometry);\n  };\n}();\nThPlaneGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPlaneGeometry,\n  selectors: [[\"th-planeGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThPlaneGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPlaneGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPlaneGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-planeGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThPlaneGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPlaneHelper extends ThLineSegments {\n  getType() {\n    return PlaneHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set plane(value) {\n    if (this._objRef) {\n      this._objRef.plane = applyValue(this._objRef.plane, value);\n    }\n  }\n  // @ts-ignore\n  get plane() {\n    return this._objRef?.plane;\n  }\n  set size(value) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n  // @ts-ignore\n  get size() {\n    return this._objRef?.size;\n  }\n}\nThPlaneHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThPlaneHelper_BaseFactory;\n  return function ThPlaneHelper_Factory(t) {\n    return (ɵThPlaneHelper_BaseFactory || (ɵThPlaneHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThPlaneHelper)))(t || ThPlaneHelper);\n  };\n}();\nThPlaneHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPlaneHelper,\n  selectors: [[\"th-planeHelper\"]],\n  inputs: {\n    plane: \"plane\",\n    size: \"size\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThPlaneHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPlaneHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPlaneHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-planeHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThPlaneHelper)\n      }]\n    }]\n  }], null, {\n    plane: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointerLockControls extends ThControlBase {\n  getType() {\n    return PointerLockControls;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set domElement(value) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n  // @ts-ignore\n  get domElement() {\n    return this._objRef?.domElement;\n  }\n  set isLocked(value) {\n    if (this._objRef) {\n      this._objRef.isLocked = value;\n    }\n  }\n  // @ts-ignore\n  get isLocked() {\n    return this._objRef?.isLocked;\n  }\n  set minPolarAngle(value) {\n    if (this._objRef) {\n      this._objRef.minPolarAngle = value;\n    }\n  }\n  // @ts-ignore\n  get minPolarAngle() {\n    return this._objRef?.minPolarAngle;\n  }\n  set maxPolarAngle(value) {\n    if (this._objRef) {\n      this._objRef.maxPolarAngle = value;\n    }\n  }\n  // @ts-ignore\n  get maxPolarAngle() {\n    return this._objRef?.maxPolarAngle;\n  }\n  set pointerSpeed(value) {\n    if (this._objRef) {\n      this._objRef.pointerSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get pointerSpeed() {\n    return this._objRef?.pointerSpeed;\n  }\n}\nThPointerLockControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThPointerLockControls_BaseFactory;\n  return function ThPointerLockControls_Factory(t) {\n    return (ɵThPointerLockControls_BaseFactory || (ɵThPointerLockControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThPointerLockControls)))(t || ThPointerLockControls);\n  };\n}();\nThPointerLockControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPointerLockControls,\n  selectors: [[\"th-pointerLockControls\"]],\n  inputs: {\n    camera: \"camera\",\n    domElement: \"domElement\",\n    isLocked: \"isLocked\",\n    minPolarAngle: \"minPolarAngle\",\n    maxPolarAngle: \"maxPolarAngle\",\n    pointerSpeed: \"pointerSpeed\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThPointerLockControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPointerLockControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPointerLockControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-pointerLockControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThPointerLockControls)\n      }]\n    }]\n  }], null, {\n    camera: [{\n      type: Input\n    }],\n    domElement: [{\n      type: Input\n    }],\n    isLocked: [{\n      type: Input\n    }],\n    minPolarAngle: [{\n      type: Input\n    }],\n    maxPolarAngle: [{\n      type: Input\n    }],\n    pointerSpeed: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointLight extends ThLight {\n  getType() {\n    return PointLight;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set intensity(value) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n  // @ts-ignore\n  get intensity() {\n    return this._objRef?.intensity;\n  }\n  set distance(value) {\n    if (this._objRef) {\n      this._objRef.distance = value;\n    }\n  }\n  // @ts-ignore\n  get distance() {\n    return this._objRef?.distance;\n  }\n  set castShadow(value) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n  // @ts-ignore\n  get castShadow() {\n    return this._objRef?.castShadow;\n  }\n  set decay(value) {\n    if (this._objRef) {\n      this._objRef.decay = value;\n    }\n  }\n  // @ts-ignore\n  get decay() {\n    return this._objRef?.decay;\n  }\n  set shadow(value) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n  // @ts-ignore\n  get shadow() {\n    return this._objRef?.shadow;\n  }\n  set power(value) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n  // @ts-ignore\n  get power() {\n    return this._objRef?.power;\n  }\n}\nThPointLight.ɵfac = /* @__PURE__ */function () {\n  let ɵThPointLight_BaseFactory;\n  return function ThPointLight_Factory(t) {\n    return (ɵThPointLight_BaseFactory || (ɵThPointLight_BaseFactory = i0.ɵɵgetInheritedFactory(ThPointLight)))(t || ThPointLight);\n  };\n}();\nThPointLight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPointLight,\n  selectors: [[\"th-pointLight\"]],\n  inputs: {\n    type: \"type\",\n    intensity: \"intensity\",\n    distance: \"distance\",\n    castShadow: \"castShadow\",\n    decay: \"decay\",\n    shadow: \"shadow\",\n    power: \"power\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThPointLight)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPointLight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPointLight, [{\n    type: Component,\n    args: [{\n      selector: 'th-pointLight',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThPointLight)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    intensity: [{\n      type: Input\n    }],\n    distance: [{\n      type: Input\n    }],\n    castShadow: [{\n      type: Input\n    }],\n    decay: [{\n      type: Input\n    }],\n    shadow: [{\n      type: Input\n    }],\n    power: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointLightHelper extends ThObject3D {\n  getType() {\n    return PointLightHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set light(value) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n  // @ts-ignore\n  get light() {\n    return this._objRef?.light;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\nThPointLightHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThPointLightHelper_BaseFactory;\n  return function ThPointLightHelper_Factory(t) {\n    return (ɵThPointLightHelper_BaseFactory || (ɵThPointLightHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThPointLightHelper)))(t || ThPointLightHelper);\n  };\n}();\nThPointLightHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPointLightHelper,\n  selectors: [[\"th-pointLightHelper\"]],\n  inputs: {\n    light: \"light\",\n    matrix: \"matrix\",\n    color: \"color\",\n    matrixAutoUpdate: \"matrixAutoUpdate\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThPointLightHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPointLightHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPointLightHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-pointLightHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThPointLightHelper)\n      }]\n    }]\n  }], null, {\n    light: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPoints extends ThObject3D {\n  getType() {\n    return Points;\n  }\n  // @ts-ignore\n  get isPoints() {\n    return this._objRef?.isPoints;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set morphTargetInfluences(value) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n  // @ts-ignore\n  get morphTargetInfluences() {\n    return this._objRef?.morphTargetInfluences;\n  }\n  set morphTargetDictionary(value) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n  // @ts-ignore\n  get morphTargetDictionary() {\n    return this._objRef?.morphTargetDictionary;\n  }\n  set geometry(value) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n  // @ts-ignore\n  get geometry() {\n    return this._objRef?.geometry;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n}\nThPoints.ɵfac = /* @__PURE__ */function () {\n  let ɵThPoints_BaseFactory;\n  return function ThPoints_Factory(t) {\n    return (ɵThPoints_BaseFactory || (ɵThPoints_BaseFactory = i0.ɵɵgetInheritedFactory(ThPoints)))(t || ThPoints);\n  };\n}();\nThPoints.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPoints,\n  selectors: [[\"th-points\"]],\n  inputs: {\n    morphTargetInfluences: \"morphTargetInfluences\",\n    morphTargetDictionary: \"morphTargetDictionary\",\n    geometry: \"geometry\",\n    material: \"material\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThPoints)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPoints_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPoints, [{\n    type: Component,\n    args: [{\n      selector: 'th-points',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThPoints)\n      }]\n    }]\n  }], null, {\n    morphTargetInfluences: [{\n      type: Input\n    }],\n    morphTargetDictionary: [{\n      type: Input\n    }],\n    geometry: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointsMaterial extends ThMaterial {\n  getType() {\n    return PointsMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set size(value) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n  // @ts-ignore\n  get size() {\n    return this._objRef?.size;\n  }\n  set sizeAttenuation(value) {\n    if (this._objRef) {\n      this._objRef.sizeAttenuation = value;\n    }\n  }\n  // @ts-ignore\n  get sizeAttenuation() {\n    return this._objRef?.sizeAttenuation;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThPointsMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThPointsMaterial_BaseFactory;\n  return function ThPointsMaterial_Factory(t) {\n    return (ɵThPointsMaterial_BaseFactory || (ɵThPointsMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThPointsMaterial)))(t || ThPointsMaterial);\n  };\n}();\nThPointsMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPointsMaterial,\n  selectors: [[\"th-pointsMaterial\"]],\n  inputs: {\n    type: \"type\",\n    color: \"color\",\n    map: \"map\",\n    alphaMap: \"alphaMap\",\n    size: \"size\",\n    sizeAttenuation: \"sizeAttenuation\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThPointsMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPointsMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPointsMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-pointsMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThPointsMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    sizeAttenuation: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPolarGridHelper extends ThLineSegments {\n  getType() {\n    return PolarGridHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThPolarGridHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThPolarGridHelper_BaseFactory;\n  return function ThPolarGridHelper_Factory(t) {\n    return (ɵThPolarGridHelper_BaseFactory || (ɵThPolarGridHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThPolarGridHelper)))(t || ThPolarGridHelper);\n  };\n}();\nThPolarGridHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPolarGridHelper,\n  selectors: [[\"th-polarGridHelper\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThPolarGridHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPolarGridHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPolarGridHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-polarGridHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThPolarGridHelper)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPositionalAudio extends ThAudio {\n  getType() {\n    return PositionalAudio;\n  }\n  set panner(value) {\n    if (this._objRef) {\n      this._objRef.panner = value;\n    }\n  }\n  // @ts-ignore\n  get panner() {\n    return this._objRef?.panner;\n  }\n}\nThPositionalAudio.ɵfac = /* @__PURE__ */function () {\n  let ɵThPositionalAudio_BaseFactory;\n  return function ThPositionalAudio_Factory(t) {\n    return (ɵThPositionalAudio_BaseFactory || (ɵThPositionalAudio_BaseFactory = i0.ɵɵgetInheritedFactory(ThPositionalAudio)))(t || ThPositionalAudio);\n  };\n}();\nThPositionalAudio.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThPositionalAudio,\n  selectors: [[\"th-positionalAudio\"]],\n  inputs: {\n    panner: \"panner\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThPositionalAudio)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThPositionalAudio_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPositionalAudio, [{\n    type: Component,\n    args: [{\n      selector: 'th-positionalAudio',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThPositionalAudio)\n      }]\n    }]\n  }], null, {\n    panner: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThShaderMaterial extends ThMaterial {\n  getType() {\n    return ShaderMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set defines(value) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n  // @ts-ignore\n  get defines() {\n    return this._objRef?.defines;\n  }\n  set uniforms(value) {\n    if (this._objRef) {\n      this._objRef.uniforms = value;\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    return this._objRef?.uniforms;\n  }\n  set vertexShader(value) {\n    if (this._objRef) {\n      this._objRef.vertexShader = value;\n    }\n  }\n  // @ts-ignore\n  get vertexShader() {\n    return this._objRef?.vertexShader;\n  }\n  set fragmentShader(value) {\n    if (this._objRef) {\n      this._objRef.fragmentShader = value;\n    }\n  }\n  // @ts-ignore\n  get fragmentShader() {\n    return this._objRef?.fragmentShader;\n  }\n  set linewidth(value) {\n    if (this._objRef) {\n      this._objRef.linewidth = value;\n    }\n  }\n  // @ts-ignore\n  get linewidth() {\n    return this._objRef?.linewidth;\n  }\n  set wireframe(value) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n  // @ts-ignore\n  get wireframe() {\n    return this._objRef?.wireframe;\n  }\n  set wireframeLinewidth(value) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n  // @ts-ignore\n  get wireframeLinewidth() {\n    return this._objRef?.wireframeLinewidth;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n  set lights(value) {\n    if (this._objRef) {\n      this._objRef.lights = value;\n    }\n  }\n  // @ts-ignore\n  get lights() {\n    return this._objRef?.lights;\n  }\n  set clipping(value) {\n    if (this._objRef) {\n      this._objRef.clipping = value;\n    }\n  }\n  // @ts-ignore\n  get clipping() {\n    return this._objRef?.clipping;\n  }\n  set derivatives(value) {\n    if (this._objRef) {\n      this._objRef.derivatives = value;\n    }\n  }\n  // @ts-ignore\n  get derivatives() {\n    return this._objRef?.derivatives;\n  }\n  set extensions(value) {\n    if (this._objRef) {\n      this._objRef.extensions = value;\n    }\n  }\n  // @ts-ignore\n  get extensions() {\n    return this._objRef?.extensions;\n  }\n  set defaultAttributeValues(value) {\n    if (this._objRef) {\n      this._objRef.defaultAttributeValues = value;\n    }\n  }\n  // @ts-ignore\n  get defaultAttributeValues() {\n    return this._objRef?.defaultAttributeValues;\n  }\n  set index0AttributeName(value) {\n    if (this._objRef) {\n      this._objRef.index0AttributeName = value;\n    }\n  }\n  // @ts-ignore\n  get index0AttributeName() {\n    return this._objRef?.index0AttributeName;\n  }\n  set uniformsNeedUpdate(value) {\n    if (this._objRef) {\n      this._objRef.uniformsNeedUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get uniformsNeedUpdate() {\n    return this._objRef?.uniformsNeedUpdate;\n  }\n  set glslVersion(value) {\n    if (this._objRef) {\n      this._objRef.glslVersion = value;\n    }\n  }\n  // @ts-ignore\n  get glslVersion() {\n    return this._objRef?.glslVersion;\n  }\n  set isShaderMaterial(value) {\n    if (this._objRef) {\n      this._objRef.isShaderMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get isShaderMaterial() {\n    return this._objRef?.isShaderMaterial;\n  }\n}\nThShaderMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThShaderMaterial_BaseFactory;\n  return function ThShaderMaterial_Factory(t) {\n    return (ɵThShaderMaterial_BaseFactory || (ɵThShaderMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThShaderMaterial)))(t || ThShaderMaterial);\n  };\n}();\nThShaderMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThShaderMaterial,\n  selectors: [[\"th-shaderMaterial\"]],\n  inputs: {\n    type: \"type\",\n    defines: \"defines\",\n    uniforms: \"uniforms\",\n    vertexShader: \"vertexShader\",\n    fragmentShader: \"fragmentShader\",\n    linewidth: \"linewidth\",\n    wireframe: \"wireframe\",\n    wireframeLinewidth: \"wireframeLinewidth\",\n    fog: \"fog\",\n    lights: \"lights\",\n    clipping: \"clipping\",\n    derivatives: \"derivatives\",\n    extensions: \"extensions\",\n    defaultAttributeValues: \"defaultAttributeValues\",\n    index0AttributeName: \"index0AttributeName\",\n    uniformsNeedUpdate: \"uniformsNeedUpdate\",\n    glslVersion: \"glslVersion\",\n    isShaderMaterial: \"isShaderMaterial\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThShaderMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThShaderMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThShaderMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-shaderMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThShaderMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    defines: [{\n      type: Input\n    }],\n    uniforms: [{\n      type: Input\n    }],\n    vertexShader: [{\n      type: Input\n    }],\n    fragmentShader: [{\n      type: Input\n    }],\n    linewidth: [{\n      type: Input\n    }],\n    wireframe: [{\n      type: Input\n    }],\n    wireframeLinewidth: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }],\n    lights: [{\n      type: Input\n    }],\n    clipping: [{\n      type: Input\n    }],\n    derivatives: [{\n      type: Input\n    }],\n    extensions: [{\n      type: Input\n    }],\n    defaultAttributeValues: [{\n      type: Input\n    }],\n    index0AttributeName: [{\n      type: Input\n    }],\n    uniformsNeedUpdate: [{\n      type: Input\n    }],\n    glslVersion: [{\n      type: Input\n    }],\n    isShaderMaterial: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRawShaderMaterial extends ThShaderMaterial {\n  getType() {\n    return RawShaderMaterial;\n  }\n}\nThRawShaderMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThRawShaderMaterial_BaseFactory;\n  return function ThRawShaderMaterial_Factory(t) {\n    return (ɵThRawShaderMaterial_BaseFactory || (ɵThRawShaderMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThRawShaderMaterial)))(t || ThRawShaderMaterial);\n  };\n}();\nThRawShaderMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThRawShaderMaterial,\n  selectors: [[\"th-rawShaderMaterial\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThRawShaderMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThRawShaderMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRawShaderMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-rawShaderMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThRawShaderMaterial)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRectAreaLight extends ThLight {\n  getType() {\n    return RectAreaLight;\n  }\n  // @ts-ignore\n  get isRectAreaLight() {\n    return this._objRef?.isRectAreaLight;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set width(value) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n  // @ts-ignore\n  get width() {\n    return this._objRef?.width;\n  }\n  set height(value) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n  // @ts-ignore\n  get height() {\n    return this._objRef?.height;\n  }\n  set intensity(value) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n  // @ts-ignore\n  get intensity() {\n    return this._objRef?.intensity;\n  }\n  set power(value) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n  // @ts-ignore\n  get power() {\n    return this._objRef?.power;\n  }\n}\nThRectAreaLight.ɵfac = /* @__PURE__ */function () {\n  let ɵThRectAreaLight_BaseFactory;\n  return function ThRectAreaLight_Factory(t) {\n    return (ɵThRectAreaLight_BaseFactory || (ɵThRectAreaLight_BaseFactory = i0.ɵɵgetInheritedFactory(ThRectAreaLight)))(t || ThRectAreaLight);\n  };\n}();\nThRectAreaLight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThRectAreaLight,\n  selectors: [[\"th-rectAreaLight\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    intensity: \"intensity\",\n    power: \"power\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThRectAreaLight)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThRectAreaLight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRectAreaLight, [{\n    type: Component,\n    args: [{\n      selector: 'th-rectAreaLight',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThRectAreaLight)\n      }]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    intensity: [{\n      type: Input\n    }],\n    power: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRingGeometry extends ThBufferGeometry {\n  getType() {\n    return RingGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThRingGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThRingGeometry_BaseFactory;\n  return function ThRingGeometry_Factory(t) {\n    return (ɵThRingGeometry_BaseFactory || (ɵThRingGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThRingGeometry)))(t || ThRingGeometry);\n  };\n}();\nThRingGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThRingGeometry,\n  selectors: [[\"th-ringGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThRingGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThRingGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRingGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-ringGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThRingGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRoundedBoxGeometry extends ThBoxGeometry {\n  getType() {\n    return RoundedBoxGeometry;\n  }\n}\nThRoundedBoxGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThRoundedBoxGeometry_BaseFactory;\n  return function ThRoundedBoxGeometry_Factory(t) {\n    return (ɵThRoundedBoxGeometry_BaseFactory || (ɵThRoundedBoxGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThRoundedBoxGeometry)))(t || ThRoundedBoxGeometry);\n  };\n}();\nThRoundedBoxGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThRoundedBoxGeometry,\n  selectors: [[\"th-roundedBoxGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThRoundedBoxGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThRoundedBoxGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRoundedBoxGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-roundedBoxGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThRoundedBoxGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSAOPass extends ThPass {\n  getType() {\n    return SAOPass;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set supportsDepthTextureExtension(value) {\n    if (this._objRef) {\n      this._objRef.supportsDepthTextureExtension = value;\n    }\n  }\n  // @ts-ignore\n  get supportsDepthTextureExtension() {\n    return this._objRef?.supportsDepthTextureExtension;\n  }\n  set supportsNormalTexture(value) {\n    if (this._objRef) {\n      this._objRef.supportsNormalTexture = value;\n    }\n  }\n  // @ts-ignore\n  get supportsNormalTexture() {\n    return this._objRef?.supportsNormalTexture;\n  }\n  set originalClearColor(value) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue(this._objRef.originalClearColor, value);\n    }\n  }\n  // @ts-ignore\n  get originalClearColor() {\n    return this._objRef?.originalClearColor;\n  }\n  set oldClearColor(value) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  get oldClearColor() {\n    return this._objRef?.oldClearColor;\n  }\n  set oldClearAlpha(value) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get oldClearAlpha() {\n    return this._objRef?.oldClearAlpha;\n  }\n  set resolution(value) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue(this._objRef.resolution, value);\n    }\n  }\n  // @ts-ignore\n  get resolution() {\n    return this._objRef?.resolution;\n  }\n  set saoRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.saoRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get saoRenderTarget() {\n    return this._objRef?.saoRenderTarget;\n  }\n  set blurIntermediateRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.blurIntermediateRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get blurIntermediateRenderTarget() {\n    return this._objRef?.blurIntermediateRenderTarget;\n  }\n  set beautyRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get beautyRenderTarget() {\n    return this._objRef?.beautyRenderTarget;\n  }\n  set normalRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get normalRenderTarget() {\n    return this._objRef?.normalRenderTarget;\n  }\n  set depthRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.depthRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get depthRenderTarget() {\n    return this._objRef?.depthRenderTarget;\n  }\n  set depthMaterial(value) {\n    if (this._objRef) {\n      this._objRef.depthMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get depthMaterial() {\n    return this._objRef?.depthMaterial;\n  }\n  set normalMaterial(value) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get normalMaterial() {\n    return this._objRef?.normalMaterial;\n  }\n  set saoMaterial(value) {\n    if (this._objRef) {\n      this._objRef.saoMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get saoMaterial() {\n    return this._objRef?.saoMaterial;\n  }\n  set vBlurMaterial(value) {\n    if (this._objRef) {\n      this._objRef.vBlurMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get vBlurMaterial() {\n    return this._objRef?.vBlurMaterial;\n  }\n  set hBlurMaterial(value) {\n    if (this._objRef) {\n      this._objRef.hBlurMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get hBlurMaterial() {\n    return this._objRef?.hBlurMaterial;\n  }\n  set materialCopy(value) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n  // @ts-ignore\n  get materialCopy() {\n    return this._objRef?.materialCopy;\n  }\n  set depthCopy(value) {\n    if (this._objRef) {\n      this._objRef.depthCopy = value;\n    }\n  }\n  // @ts-ignore\n  get depthCopy() {\n    return this._objRef?.depthCopy;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n  set params(value) {\n    if (this._objRef) {\n      this._objRef.params = value;\n    }\n  }\n  // @ts-ignore\n  get params() {\n    return this._objRef?.params;\n  }\n}\nThSAOPass.OUTPUT = SAOPass.OUTPUT;\nThSAOPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThSAOPass_BaseFactory;\n  return function ThSAOPass_Factory(t) {\n    return (ɵThSAOPass_BaseFactory || (ɵThSAOPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThSAOPass)))(t || ThSAOPass);\n  };\n}();\nThSAOPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSAOPass,\n  selectors: [[\"th-sAOPass\"]],\n  inputs: {\n    scene: \"scene\",\n    camera: \"camera\",\n    supportsDepthTextureExtension: \"supportsDepthTextureExtension\",\n    supportsNormalTexture: \"supportsNormalTexture\",\n    originalClearColor: \"originalClearColor\",\n    oldClearColor: \"oldClearColor\",\n    oldClearAlpha: \"oldClearAlpha\",\n    resolution: \"resolution\",\n    saoRenderTarget: \"saoRenderTarget\",\n    blurIntermediateRenderTarget: \"blurIntermediateRenderTarget\",\n    beautyRenderTarget: \"beautyRenderTarget\",\n    normalRenderTarget: \"normalRenderTarget\",\n    depthRenderTarget: \"depthRenderTarget\",\n    depthMaterial: \"depthMaterial\",\n    normalMaterial: \"normalMaterial\",\n    saoMaterial: \"saoMaterial\",\n    vBlurMaterial: \"vBlurMaterial\",\n    hBlurMaterial: \"hBlurMaterial\",\n    materialCopy: \"materialCopy\",\n    depthCopy: \"depthCopy\",\n    fsQuad: \"fsQuad\",\n    params: \"params\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThSAOPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSAOPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSAOPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-sAOPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThSAOPass)\n      }]\n    }]\n  }], null, {\n    scene: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    supportsDepthTextureExtension: [{\n      type: Input\n    }],\n    supportsNormalTexture: [{\n      type: Input\n    }],\n    originalClearColor: [{\n      type: Input\n    }],\n    oldClearColor: [{\n      type: Input\n    }],\n    oldClearAlpha: [{\n      type: Input\n    }],\n    resolution: [{\n      type: Input\n    }],\n    saoRenderTarget: [{\n      type: Input\n    }],\n    blurIntermediateRenderTarget: [{\n      type: Input\n    }],\n    beautyRenderTarget: [{\n      type: Input\n    }],\n    normalRenderTarget: [{\n      type: Input\n    }],\n    depthRenderTarget: [{\n      type: Input\n    }],\n    depthMaterial: [{\n      type: Input\n    }],\n    normalMaterial: [{\n      type: Input\n    }],\n    saoMaterial: [{\n      type: Input\n    }],\n    vBlurMaterial: [{\n      type: Input\n    }],\n    hBlurMaterial: [{\n      type: Input\n    }],\n    materialCopy: [{\n      type: Input\n    }],\n    depthCopy: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }],\n    params: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSavePass extends ThPass {\n  getType() {\n    return SavePass;\n  }\n  set textureID(value) {\n    if (this._objRef) {\n      this._objRef.textureID = value;\n    }\n  }\n  // @ts-ignore\n  get textureID() {\n    return this._objRef?.textureID;\n  }\n  set renderTarget(value) {\n    if (this._objRef) {\n      this._objRef.renderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get renderTarget() {\n    return this._objRef?.renderTarget;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThSavePass.ɵfac = /* @__PURE__ */function () {\n  let ɵThSavePass_BaseFactory;\n  return function ThSavePass_Factory(t) {\n    return (ɵThSavePass_BaseFactory || (ɵThSavePass_BaseFactory = i0.ɵɵgetInheritedFactory(ThSavePass)))(t || ThSavePass);\n  };\n}();\nThSavePass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSavePass,\n  selectors: [[\"th-savePass\"]],\n  inputs: {\n    textureID: \"textureID\",\n    renderTarget: \"renderTarget\",\n    uniforms: \"uniforms\",\n    material: \"material\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThSavePass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSavePass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSavePass, [{\n    type: Component,\n    args: [{\n      selector: 'th-savePass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThSavePass)\n      }]\n    }]\n  }], null, {\n    textureID: [{\n      type: Input\n    }],\n    renderTarget: [{\n      type: Input\n    }],\n    uniforms: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThShadowMaterial extends ThMaterial {\n  getType() {\n    return ShadowMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set transparent(value) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n  // @ts-ignore\n  get transparent() {\n    return this._objRef?.transparent;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n}\nThShadowMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThShadowMaterial_BaseFactory;\n  return function ThShadowMaterial_Factory(t) {\n    return (ɵThShadowMaterial_BaseFactory || (ɵThShadowMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThShadowMaterial)))(t || ThShadowMaterial);\n  };\n}();\nThShadowMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThShadowMaterial,\n  selectors: [[\"th-shadowMaterial\"]],\n  inputs: {\n    type: \"type\",\n    color: \"color\",\n    transparent: \"transparent\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThShadowMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThShadowMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThShadowMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-shadowMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThShadowMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    transparent: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThShapeGeometry extends ThBufferGeometry {\n  getType() {\n    return ShapeGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThShapeGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThShapeGeometry_BaseFactory;\n  return function ThShapeGeometry_Factory(t) {\n    return (ɵThShapeGeometry_BaseFactory || (ɵThShapeGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThShapeGeometry)))(t || ThShapeGeometry);\n  };\n}();\nThShapeGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThShapeGeometry,\n  selectors: [[\"th-shapeGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThShapeGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThShapeGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThShapeGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-shapeGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThShapeGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSkeletonHelper extends ThLineSegments {\n  getType() {\n    return SkeletonHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set bones(value) {\n    if (this._objRef) {\n      this._objRef.bones = value;\n    }\n  }\n  // @ts-ignore\n  get bones() {\n    return this._objRef?.bones;\n  }\n  set root(value) {\n    if (this._objRef) {\n      this._objRef.root = value;\n    }\n  }\n  // @ts-ignore\n  get root() {\n    return this._objRef?.root;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\nThSkeletonHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThSkeletonHelper_BaseFactory;\n  return function ThSkeletonHelper_Factory(t) {\n    return (ɵThSkeletonHelper_BaseFactory || (ɵThSkeletonHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThSkeletonHelper)))(t || ThSkeletonHelper);\n  };\n}();\nThSkeletonHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSkeletonHelper,\n  selectors: [[\"th-skeletonHelper\"]],\n  inputs: {\n    bones: \"bones\",\n    root: \"root\",\n    matrix: \"matrix\",\n    matrixAutoUpdate: \"matrixAutoUpdate\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThSkeletonHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSkeletonHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSkeletonHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-skeletonHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThSkeletonHelper)\n      }]\n    }]\n  }], null, {\n    bones: [{\n      type: Input\n    }],\n    root: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSkinnedMesh extends ThMesh {\n  getType() {\n    return SkinnedMesh;\n  }\n  // @ts-ignore\n  get isSkinnedMesh() {\n    return this._objRef?.isSkinnedMesh;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set bindMode(value) {\n    if (this._objRef) {\n      this._objRef.bindMode = value;\n    }\n  }\n  // @ts-ignore\n  get bindMode() {\n    return this._objRef?.bindMode;\n  }\n  set bindMatrix(value) {\n    if (this._objRef) {\n      this._objRef.bindMatrix = applyValue(this._objRef.bindMatrix, value);\n    }\n  }\n  // @ts-ignore\n  get bindMatrix() {\n    return this._objRef?.bindMatrix;\n  }\n  set bindMatrixInverse(value) {\n    if (this._objRef) {\n      this._objRef.bindMatrixInverse = applyValue(this._objRef.bindMatrixInverse, value);\n    }\n  }\n  // @ts-ignore\n  get bindMatrixInverse() {\n    return this._objRef?.bindMatrixInverse;\n  }\n  set boundingBox(value) {\n    if (this._objRef) {\n      this._objRef.boundingBox = applyValue(this._objRef.boundingBox, value);\n    }\n  }\n  // @ts-ignore\n  get boundingBox() {\n    return this._objRef?.boundingBox;\n  }\n  set boundingSphere(value) {\n    if (this._objRef) {\n      this._objRef.boundingSphere = applyValue(this._objRef.boundingSphere, value);\n    }\n  }\n  // @ts-ignore\n  get boundingSphere() {\n    return this._objRef?.boundingSphere;\n  }\n  set skeleton(value) {\n    if (this._objRef) {\n      this._objRef.skeleton = value;\n    }\n  }\n  // @ts-ignore\n  get skeleton() {\n    return this._objRef?.skeleton;\n  }\n}\nThSkinnedMesh.ɵfac = /* @__PURE__ */function () {\n  let ɵThSkinnedMesh_BaseFactory;\n  return function ThSkinnedMesh_Factory(t) {\n    return (ɵThSkinnedMesh_BaseFactory || (ɵThSkinnedMesh_BaseFactory = i0.ɵɵgetInheritedFactory(ThSkinnedMesh)))(t || ThSkinnedMesh);\n  };\n}();\nThSkinnedMesh.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSkinnedMesh,\n  selectors: [[\"th-skinnedMesh\"]],\n  inputs: {\n    bindMode: \"bindMode\",\n    bindMatrix: \"bindMatrix\",\n    bindMatrixInverse: \"bindMatrixInverse\",\n    boundingBox: \"boundingBox\",\n    boundingSphere: \"boundingSphere\",\n    skeleton: \"skeleton\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThSkinnedMesh)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSkinnedMesh_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSkinnedMesh, [{\n    type: Component,\n    args: [{\n      selector: 'th-skinnedMesh',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThSkinnedMesh)\n      }]\n    }]\n  }], null, {\n    bindMode: [{\n      type: Input\n    }],\n    bindMatrix: [{\n      type: Input\n    }],\n    bindMatrixInverse: [{\n      type: Input\n    }],\n    boundingBox: [{\n      type: Input\n    }],\n    boundingSphere: [{\n      type: Input\n    }],\n    skeleton: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSMAAPass extends ThPass {\n  getType() {\n    return SMAAPass;\n  }\n  set edgesRT(value) {\n    if (this._objRef) {\n      this._objRef.edgesRT = value;\n    }\n  }\n  // @ts-ignore\n  get edgesRT() {\n    return this._objRef?.edgesRT;\n  }\n  set weightsRT(value) {\n    if (this._objRef) {\n      this._objRef.weightsRT = value;\n    }\n  }\n  // @ts-ignore\n  get weightsRT() {\n    return this._objRef?.weightsRT;\n  }\n  set areaTexture(value) {\n    if (this._objRef) {\n      this._objRef.areaTexture = value;\n    }\n  }\n  // @ts-ignore\n  get areaTexture() {\n    return this._objRef?.areaTexture;\n  }\n  set searchTexture(value) {\n    if (this._objRef) {\n      this._objRef.searchTexture = value;\n    }\n  }\n  // @ts-ignore\n  get searchTexture() {\n    return this._objRef?.searchTexture;\n  }\n  set uniformsEdges(value) {\n    if (this._objRef) {\n      this._objRef.uniformsEdges = value;\n    }\n  }\n  // @ts-ignore\n  get uniformsEdges() {\n    return this._objRef?.uniformsEdges;\n  }\n  set materialEdges(value) {\n    if (this._objRef) {\n      this._objRef.materialEdges = value;\n    }\n  }\n  // @ts-ignore\n  get materialEdges() {\n    return this._objRef?.materialEdges;\n  }\n  set uniformsWeights(value) {\n    if (this._objRef) {\n      this._objRef.uniformsWeights = value;\n    }\n  }\n  // @ts-ignore\n  get uniformsWeights() {\n    return this._objRef?.uniformsWeights;\n  }\n  set materialWeights(value) {\n    if (this._objRef) {\n      this._objRef.materialWeights = value;\n    }\n  }\n  // @ts-ignore\n  get materialWeights() {\n    return this._objRef?.materialWeights;\n  }\n  set uniformsBlend(value) {\n    if (this._objRef) {\n      this._objRef.uniformsBlend = value;\n    }\n  }\n  // @ts-ignore\n  get uniformsBlend() {\n    return this._objRef?.uniformsBlend;\n  }\n  set materialBlend(value) {\n    if (this._objRef) {\n      this._objRef.materialBlend = value;\n    }\n  }\n  // @ts-ignore\n  get materialBlend() {\n    return this._objRef?.materialBlend;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThSMAAPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThSMAAPass_BaseFactory;\n  return function ThSMAAPass_Factory(t) {\n    return (ɵThSMAAPass_BaseFactory || (ɵThSMAAPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThSMAAPass)))(t || ThSMAAPass);\n  };\n}();\nThSMAAPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSMAAPass,\n  selectors: [[\"th-sMAAPass\"]],\n  inputs: {\n    edgesRT: \"edgesRT\",\n    weightsRT: \"weightsRT\",\n    areaTexture: \"areaTexture\",\n    searchTexture: \"searchTexture\",\n    uniformsEdges: \"uniformsEdges\",\n    materialEdges: \"materialEdges\",\n    uniformsWeights: \"uniformsWeights\",\n    materialWeights: \"materialWeights\",\n    uniformsBlend: \"uniformsBlend\",\n    materialBlend: \"materialBlend\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThSMAAPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSMAAPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSMAAPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-sMAAPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThSMAAPass)\n      }]\n    }]\n  }], null, {\n    edgesRT: [{\n      type: Input\n    }],\n    weightsRT: [{\n      type: Input\n    }],\n    areaTexture: [{\n      type: Input\n    }],\n    searchTexture: [{\n      type: Input\n    }],\n    uniformsEdges: [{\n      type: Input\n    }],\n    materialEdges: [{\n      type: Input\n    }],\n    uniformsWeights: [{\n      type: Input\n    }],\n    materialWeights: [{\n      type: Input\n    }],\n    uniformsBlend: [{\n      type: Input\n    }],\n    materialBlend: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSphereGeometry extends ThBufferGeometry {\n  getType() {\n    return SphereGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThSphereGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThSphereGeometry_BaseFactory;\n  return function ThSphereGeometry_Factory(t) {\n    return (ɵThSphereGeometry_BaseFactory || (ɵThSphereGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThSphereGeometry)))(t || ThSphereGeometry);\n  };\n}();\nThSphereGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSphereGeometry,\n  selectors: [[\"th-sphereGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThSphereGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSphereGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSphereGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-sphereGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThSphereGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSpotLight extends ThLight {\n  getType() {\n    return SpotLight;\n  }\n  // @ts-ignore\n  get isSpotLight() {\n    return this._objRef?.isSpotLight;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set position(value) {\n    if (this._objRef) {\n      this._objRef.position = applyValue(this._objRef.position, value);\n    }\n  }\n  // @ts-ignore\n  get position() {\n    return this._objRef?.position;\n  }\n  set target(value) {\n    if (this._objRef) {\n      this._objRef.target = value;\n    }\n  }\n  // @ts-ignore\n  get target() {\n    return this._objRef?.target;\n  }\n  set castShadow(value) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n  // @ts-ignore\n  get castShadow() {\n    return this._objRef?.castShadow;\n  }\n  set intensity(value) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n  // @ts-ignore\n  get intensity() {\n    return this._objRef?.intensity;\n  }\n  set distance(value) {\n    if (this._objRef) {\n      this._objRef.distance = value;\n    }\n  }\n  // @ts-ignore\n  get distance() {\n    return this._objRef?.distance;\n  }\n  set angle(value) {\n    if (this._objRef) {\n      this._objRef.angle = value;\n    }\n  }\n  // @ts-ignore\n  get angle() {\n    return this._objRef?.angle;\n  }\n  set decay(value) {\n    if (this._objRef) {\n      this._objRef.decay = value;\n    }\n  }\n  // @ts-ignore\n  get decay() {\n    return this._objRef?.decay;\n  }\n  set shadow(value) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n  // @ts-ignore\n  get shadow() {\n    return this._objRef?.shadow;\n  }\n  set power(value) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n  // @ts-ignore\n  get power() {\n    return this._objRef?.power;\n  }\n  set penumbra(value) {\n    if (this._objRef) {\n      this._objRef.penumbra = value;\n    }\n  }\n  // @ts-ignore\n  get penumbra() {\n    return this._objRef?.penumbra;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n}\nThSpotLight.ɵfac = /* @__PURE__ */function () {\n  let ɵThSpotLight_BaseFactory;\n  return function ThSpotLight_Factory(t) {\n    return (ɵThSpotLight_BaseFactory || (ɵThSpotLight_BaseFactory = i0.ɵɵgetInheritedFactory(ThSpotLight)))(t || ThSpotLight);\n  };\n}();\nThSpotLight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSpotLight,\n  selectors: [[\"th-spotLight\"]],\n  inputs: {\n    position: \"position\",\n    target: \"target\",\n    castShadow: \"castShadow\",\n    intensity: \"intensity\",\n    distance: \"distance\",\n    angle: \"angle\",\n    decay: \"decay\",\n    shadow: \"shadow\",\n    power: \"power\",\n    penumbra: \"penumbra\",\n    map: \"map\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThSpotLight)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSpotLight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSpotLight, [{\n    type: Component,\n    args: [{\n      selector: 'th-spotLight',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThSpotLight)\n      }]\n    }]\n  }], null, {\n    position: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }],\n    castShadow: [{\n      type: Input\n    }],\n    intensity: [{\n      type: Input\n    }],\n    distance: [{\n      type: Input\n    }],\n    angle: [{\n      type: Input\n    }],\n    decay: [{\n      type: Input\n    }],\n    shadow: [{\n      type: Input\n    }],\n    power: [{\n      type: Input\n    }],\n    penumbra: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSpotLightHelper extends ThObject3D {\n  getType() {\n    return SpotLightHelper;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set cone(value) {\n    if (this._objRef) {\n      this._objRef.cone = value;\n    }\n  }\n  // @ts-ignore\n  get cone() {\n    return this._objRef?.cone;\n  }\n  set light(value) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n  // @ts-ignore\n  get light() {\n    return this._objRef?.light;\n  }\n  set matrix(value) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue(this._objRef.matrix, value);\n    }\n  }\n  // @ts-ignore\n  get matrix() {\n    return this._objRef?.matrix;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set matrixAutoUpdate(value) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n  // @ts-ignore\n  get matrixAutoUpdate() {\n    return this._objRef?.matrixAutoUpdate;\n  }\n}\nThSpotLightHelper.ɵfac = /* @__PURE__ */function () {\n  let ɵThSpotLightHelper_BaseFactory;\n  return function ThSpotLightHelper_Factory(t) {\n    return (ɵThSpotLightHelper_BaseFactory || (ɵThSpotLightHelper_BaseFactory = i0.ɵɵgetInheritedFactory(ThSpotLightHelper)))(t || ThSpotLightHelper);\n  };\n}();\nThSpotLightHelper.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSpotLightHelper,\n  selectors: [[\"th-spotLightHelper\"]],\n  inputs: {\n    cone: \"cone\",\n    light: \"light\",\n    matrix: \"matrix\",\n    color: \"color\",\n    matrixAutoUpdate: \"matrixAutoUpdate\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThSpotLightHelper)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSpotLightHelper_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSpotLightHelper, [{\n    type: Component,\n    args: [{\n      selector: 'th-spotLightHelper',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThSpotLightHelper)\n      }]\n    }]\n  }], null, {\n    cone: [{\n      type: Input\n    }],\n    light: [{\n      type: Input\n    }],\n    matrix: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    matrixAutoUpdate: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSprite extends ThObject3D {\n  getType() {\n    return Sprite;\n  }\n  // @ts-ignore\n  get isSprite() {\n    return this._objRef?.isSprite;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set castShadow(value) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n  // @ts-ignore\n  get castShadow() {\n    return this._objRef?.castShadow;\n  }\n  set geometry(value) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n  // @ts-ignore\n  get geometry() {\n    return this._objRef?.geometry;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set center(value) {\n    if (this._objRef) {\n      this._objRef.center = applyValue(this._objRef.center, value);\n    }\n  }\n  // @ts-ignore\n  get center() {\n    return this._objRef?.center;\n  }\n}\nThSprite.ɵfac = /* @__PURE__ */function () {\n  let ɵThSprite_BaseFactory;\n  return function ThSprite_Factory(t) {\n    return (ɵThSprite_BaseFactory || (ɵThSprite_BaseFactory = i0.ɵɵgetInheritedFactory(ThSprite)))(t || ThSprite);\n  };\n}();\nThSprite.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSprite,\n  selectors: [[\"th-sprite\"]],\n  inputs: {\n    castShadow: \"castShadow\",\n    geometry: \"geometry\",\n    material: \"material\",\n    center: \"center\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThSprite)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSprite_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSprite, [{\n    type: Component,\n    args: [{\n      selector: 'th-sprite',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThSprite)\n      }]\n    }]\n  }], null, {\n    castShadow: [{\n      type: Input\n    }],\n    geometry: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSpriteMaterial extends ThMaterial {\n  getType() {\n    return SpriteMaterial;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set color(value) {\n    if (this._objRef) {\n      this._objRef.color = applyValue(this._objRef.color, value);\n    }\n  }\n  // @ts-ignore\n  get color() {\n    return this._objRef?.color;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set alphaMap(value) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n  // @ts-ignore\n  get alphaMap() {\n    return this._objRef?.alphaMap;\n  }\n  set rotation(value) {\n    if (this._objRef) {\n      this._objRef.rotation = value;\n    }\n  }\n  // @ts-ignore\n  get rotation() {\n    return this._objRef?.rotation;\n  }\n  set sizeAttenuation(value) {\n    if (this._objRef) {\n      this._objRef.sizeAttenuation = value;\n    }\n  }\n  // @ts-ignore\n  get sizeAttenuation() {\n    return this._objRef?.sizeAttenuation;\n  }\n  set transparent(value) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n  // @ts-ignore\n  get transparent() {\n    return this._objRef?.transparent;\n  }\n  set fog(value) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n  // @ts-ignore\n  get fog() {\n    return this._objRef?.fog;\n  }\n  // @ts-ignore\n  get isSpriteMaterial() {\n    return this._objRef?.isSpriteMaterial;\n  }\n}\nThSpriteMaterial.ɵfac = /* @__PURE__ */function () {\n  let ɵThSpriteMaterial_BaseFactory;\n  return function ThSpriteMaterial_Factory(t) {\n    return (ɵThSpriteMaterial_BaseFactory || (ɵThSpriteMaterial_BaseFactory = i0.ɵɵgetInheritedFactory(ThSpriteMaterial)))(t || ThSpriteMaterial);\n  };\n}();\nThSpriteMaterial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSpriteMaterial,\n  selectors: [[\"th-spriteMaterial\"]],\n  inputs: {\n    type: \"type\",\n    color: \"color\",\n    map: \"map\",\n    alphaMap: \"alphaMap\",\n    rotation: \"rotation\",\n    sizeAttenuation: \"sizeAttenuation\",\n    transparent: \"transparent\",\n    fog: \"fog\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThMaterial,\n    useExisting: forwardRef(() => ThSpriteMaterial)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSpriteMaterial_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSpriteMaterial, [{\n    type: Component,\n    args: [{\n      selector: 'th-spriteMaterial',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThMaterial,\n        useExisting: forwardRef(() => ThSpriteMaterial)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    map: [{\n      type: Input\n    }],\n    alphaMap: [{\n      type: Input\n    }],\n    rotation: [{\n      type: Input\n    }],\n    sizeAttenuation: [{\n      type: Input\n    }],\n    transparent: [{\n      type: Input\n    }],\n    fog: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSSAARenderPass extends ThPass {\n  getType() {\n    return SSAARenderPass;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set sampleLevel(value) {\n    if (this._objRef) {\n      this._objRef.sampleLevel = value;\n    }\n  }\n  // @ts-ignore\n  get sampleLevel() {\n    return this._objRef?.sampleLevel;\n  }\n  set unbiased(value) {\n    if (this._objRef) {\n      this._objRef.unbiased = value;\n    }\n  }\n  // @ts-ignore\n  get unbiased() {\n    return this._objRef?.unbiased;\n  }\n  set clearColor(value) {\n    if (this._objRef) {\n      this._objRef.clearColor = value;\n    }\n  }\n  // @ts-ignore\n  get clearColor() {\n    return this._objRef?.clearColor;\n  }\n  set clearAlpha(value) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get clearAlpha() {\n    return this._objRef?.clearAlpha;\n  }\n  set copyUniforms(value) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n  // @ts-ignore\n  get copyUniforms() {\n    return this._objRef?.copyUniforms;\n  }\n  set copyMaterial(value) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get copyMaterial() {\n    return this._objRef?.copyMaterial;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n  set sampleRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.sampleRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get sampleRenderTarget() {\n    return this._objRef?.sampleRenderTarget;\n  }\n}\nThSSAARenderPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThSSAARenderPass_BaseFactory;\n  return function ThSSAARenderPass_Factory(t) {\n    return (ɵThSSAARenderPass_BaseFactory || (ɵThSSAARenderPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThSSAARenderPass)))(t || ThSSAARenderPass);\n  };\n}();\nThSSAARenderPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSSAARenderPass,\n  selectors: [[\"th-sSAARenderPass\"]],\n  inputs: {\n    scene: \"scene\",\n    camera: \"camera\",\n    sampleLevel: \"sampleLevel\",\n    unbiased: \"unbiased\",\n    clearColor: \"clearColor\",\n    clearAlpha: \"clearAlpha\",\n    copyUniforms: \"copyUniforms\",\n    copyMaterial: \"copyMaterial\",\n    fsQuad: \"fsQuad\",\n    sampleRenderTarget: \"sampleRenderTarget\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThSSAARenderPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSSAARenderPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSSAARenderPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-sSAARenderPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThSSAARenderPass)\n      }]\n    }]\n  }], null, {\n    scene: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    sampleLevel: [{\n      type: Input\n    }],\n    unbiased: [{\n      type: Input\n    }],\n    clearColor: [{\n      type: Input\n    }],\n    clearAlpha: [{\n      type: Input\n    }],\n    copyUniforms: [{\n      type: Input\n    }],\n    copyMaterial: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }],\n    sampleRenderTarget: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSSAOPass extends ThPass {\n  getType() {\n    return SSAOPass;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set width(value) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n  // @ts-ignore\n  get width() {\n    return this._objRef?.width;\n  }\n  set height(value) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n  // @ts-ignore\n  get height() {\n    return this._objRef?.height;\n  }\n  set clear(value) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n  // @ts-ignore\n  get clear() {\n    return this._objRef?.clear;\n  }\n  set kernelRadius(value) {\n    if (this._objRef) {\n      this._objRef.kernelRadius = value;\n    }\n  }\n  // @ts-ignore\n  get kernelRadius() {\n    return this._objRef?.kernelRadius;\n  }\n  set kernelSize(value) {\n    if (this._objRef) {\n      this._objRef.kernelSize = value;\n    }\n  }\n  // @ts-ignore\n  get kernelSize() {\n    return this._objRef?.kernelSize;\n  }\n  set kernel(value) {\n    if (this._objRef) {\n      this._objRef.kernel = value;\n    }\n  }\n  // @ts-ignore\n  get kernel() {\n    return this._objRef?.kernel;\n  }\n  set noiseTexture(value) {\n    if (this._objRef) {\n      this._objRef.noiseTexture = value;\n    }\n  }\n  // @ts-ignore\n  get noiseTexture() {\n    return this._objRef?.noiseTexture;\n  }\n  set output(value) {\n    if (this._objRef) {\n      this._objRef.output = value;\n    }\n  }\n  // @ts-ignore\n  get output() {\n    return this._objRef?.output;\n  }\n  set minDistance(value) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n  // @ts-ignore\n  get minDistance() {\n    return this._objRef?.minDistance;\n  }\n  set maxDistance(value) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n  // @ts-ignore\n  get maxDistance() {\n    return this._objRef?.maxDistance;\n  }\n  set beautyRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get beautyRenderTarget() {\n    return this._objRef?.beautyRenderTarget;\n  }\n  set normalRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get normalRenderTarget() {\n    return this._objRef?.normalRenderTarget;\n  }\n  set ssaoRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.ssaoRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get ssaoRenderTarget() {\n    return this._objRef?.ssaoRenderTarget;\n  }\n  set blurRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get blurRenderTarget() {\n    return this._objRef?.blurRenderTarget;\n  }\n  set ssaoMaterial(value) {\n    if (this._objRef) {\n      this._objRef.ssaoMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get ssaoMaterial() {\n    return this._objRef?.ssaoMaterial;\n  }\n  set normalMaterial(value) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get normalMaterial() {\n    return this._objRef?.normalMaterial;\n  }\n  set blurMaterial(value) {\n    if (this._objRef) {\n      this._objRef.blurMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get blurMaterial() {\n    return this._objRef?.blurMaterial;\n  }\n  set depthRenderMaterial(value) {\n    if (this._objRef) {\n      this._objRef.depthRenderMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get depthRenderMaterial() {\n    return this._objRef?.depthRenderMaterial;\n  }\n  set copyMaterial(value) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get copyMaterial() {\n    return this._objRef?.copyMaterial;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n  set originalClearColor(value) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue(this._objRef.originalClearColor, value);\n    }\n  }\n  // @ts-ignore\n  get originalClearColor() {\n    return this._objRef?.originalClearColor;\n  }\n}\nThSSAOPass.OUTPUT = SSAOPass.OUTPUT;\nThSSAOPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThSSAOPass_BaseFactory;\n  return function ThSSAOPass_Factory(t) {\n    return (ɵThSSAOPass_BaseFactory || (ɵThSSAOPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThSSAOPass)))(t || ThSSAOPass);\n  };\n}();\nThSSAOPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSSAOPass,\n  selectors: [[\"th-sSAOPass\"]],\n  inputs: {\n    scene: \"scene\",\n    camera: \"camera\",\n    width: \"width\",\n    height: \"height\",\n    clear: \"clear\",\n    kernelRadius: \"kernelRadius\",\n    kernelSize: \"kernelSize\",\n    kernel: \"kernel\",\n    noiseTexture: \"noiseTexture\",\n    output: \"output\",\n    minDistance: \"minDistance\",\n    maxDistance: \"maxDistance\",\n    beautyRenderTarget: \"beautyRenderTarget\",\n    normalRenderTarget: \"normalRenderTarget\",\n    ssaoRenderTarget: \"ssaoRenderTarget\",\n    blurRenderTarget: \"blurRenderTarget\",\n    ssaoMaterial: \"ssaoMaterial\",\n    normalMaterial: \"normalMaterial\",\n    blurMaterial: \"blurMaterial\",\n    depthRenderMaterial: \"depthRenderMaterial\",\n    copyMaterial: \"copyMaterial\",\n    fsQuad: \"fsQuad\",\n    originalClearColor: \"originalClearColor\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThSSAOPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSSAOPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSSAOPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-sSAOPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThSSAOPass)\n      }]\n    }]\n  }], null, {\n    scene: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    clear: [{\n      type: Input\n    }],\n    kernelRadius: [{\n      type: Input\n    }],\n    kernelSize: [{\n      type: Input\n    }],\n    kernel: [{\n      type: Input\n    }],\n    noiseTexture: [{\n      type: Input\n    }],\n    output: [{\n      type: Input\n    }],\n    minDistance: [{\n      type: Input\n    }],\n    maxDistance: [{\n      type: Input\n    }],\n    beautyRenderTarget: [{\n      type: Input\n    }],\n    normalRenderTarget: [{\n      type: Input\n    }],\n    ssaoRenderTarget: [{\n      type: Input\n    }],\n    blurRenderTarget: [{\n      type: Input\n    }],\n    ssaoMaterial: [{\n      type: Input\n    }],\n    normalMaterial: [{\n      type: Input\n    }],\n    blurMaterial: [{\n      type: Input\n    }],\n    depthRenderMaterial: [{\n      type: Input\n    }],\n    copyMaterial: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }],\n    originalClearColor: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSSRPass extends ThPass {\n  getType() {\n    return SSRPass;\n  }\n  set width(value) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n  // @ts-ignore\n  get width() {\n    return this._objRef?.width;\n  }\n  set height(value) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n  // @ts-ignore\n  get height() {\n    return this._objRef?.height;\n  }\n  set clear(value) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n  // @ts-ignore\n  get clear() {\n    return this._objRef?.clear;\n  }\n  set renderer(value) {\n    if (this._objRef) {\n      this._objRef.renderer = value;\n    }\n  }\n  // @ts-ignore\n  get renderer() {\n    return this._objRef?.renderer;\n  }\n  set scene(value) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n  // @ts-ignore\n  get scene() {\n    return this._objRef?.scene;\n  }\n  set camera(value) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n  // @ts-ignore\n  get camera() {\n    return this._objRef?.camera;\n  }\n  set groundReflector(value) {\n    if (this._objRef) {\n      this._objRef.groundReflector = value;\n    }\n  }\n  // @ts-ignore\n  get groundReflector() {\n    return this._objRef?.groundReflector;\n  }\n  set opacity(value) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n  // @ts-ignore\n  get opacity() {\n    return this._objRef?.opacity;\n  }\n  set output(value) {\n    if (this._objRef) {\n      this._objRef.output = value;\n    }\n  }\n  // @ts-ignore\n  get output() {\n    return this._objRef?.output;\n  }\n  set maxDistance(value) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n  // @ts-ignore\n  get maxDistance() {\n    return this._objRef?.maxDistance;\n  }\n  set thickness(value) {\n    if (this._objRef) {\n      this._objRef.thickness = value;\n    }\n  }\n  // @ts-ignore\n  get thickness() {\n    return this._objRef?.thickness;\n  }\n  set tempColor(value) {\n    if (this._objRef) {\n      this._objRef.tempColor = applyValue(this._objRef.tempColor, value);\n    }\n  }\n  // @ts-ignore\n  get tempColor() {\n    return this._objRef?.tempColor;\n  }\n  set selective(value) {\n    if (this._objRef) {\n      this._objRef.selective = value;\n    }\n  }\n  // @ts-ignore\n  get selective() {\n    return this._objRef?.selective;\n  }\n  set blur(value) {\n    if (this._objRef) {\n      this._objRef.blur = value;\n    }\n  }\n  // @ts-ignore\n  get blur() {\n    return this._objRef?.blur;\n  }\n  set thickTolerance(value) {\n    if (this._objRef) {\n      this._objRef.thickTolerance = value;\n    }\n  }\n  // @ts-ignore\n  get thickTolerance() {\n    return this._objRef?.thickTolerance;\n  }\n  set beautyRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get beautyRenderTarget() {\n    return this._objRef?.beautyRenderTarget;\n  }\n  set prevRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.prevRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get prevRenderTarget() {\n    return this._objRef?.prevRenderTarget;\n  }\n  set normalRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get normalRenderTarget() {\n    return this._objRef?.normalRenderTarget;\n  }\n  set metalnessRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.metalnessRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get metalnessRenderTarget() {\n    return this._objRef?.metalnessRenderTarget;\n  }\n  set ssrRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.ssrRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get ssrRenderTarget() {\n    return this._objRef?.ssrRenderTarget;\n  }\n  set blurRenderTarget(value) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget = value;\n    }\n  }\n  // @ts-ignore\n  get blurRenderTarget() {\n    return this._objRef?.blurRenderTarget;\n  }\n  set blurRenderTarget2(value) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget2 = value;\n    }\n  }\n  // @ts-ignore\n  get blurRenderTarget2() {\n    return this._objRef?.blurRenderTarget2;\n  }\n  set ssrMaterial(value) {\n    if (this._objRef) {\n      this._objRef.ssrMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get ssrMaterial() {\n    return this._objRef?.ssrMaterial;\n  }\n  set normalMaterial(value) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get normalMaterial() {\n    return this._objRef?.normalMaterial;\n  }\n  set metalnessOnMaterial(value) {\n    if (this._objRef) {\n      this._objRef.metalnessOnMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get metalnessOnMaterial() {\n    return this._objRef?.metalnessOnMaterial;\n  }\n  set metalnessOffMaterial(value) {\n    if (this._objRef) {\n      this._objRef.metalnessOffMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get metalnessOffMaterial() {\n    return this._objRef?.metalnessOffMaterial;\n  }\n  set blurMaterial(value) {\n    if (this._objRef) {\n      this._objRef.blurMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get blurMaterial() {\n    return this._objRef?.blurMaterial;\n  }\n  set blurMaterial2(value) {\n    if (this._objRef) {\n      this._objRef.blurMaterial2 = value;\n    }\n  }\n  // @ts-ignore\n  get blurMaterial2() {\n    return this._objRef?.blurMaterial2;\n  }\n  set depthRenderMaterial(value) {\n    if (this._objRef) {\n      this._objRef.depthRenderMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get depthRenderMaterial() {\n    return this._objRef?.depthRenderMaterial;\n  }\n  set copyMaterial(value) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get copyMaterial() {\n    return this._objRef?.copyMaterial;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n  set originalClearColor(value) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue(this._objRef.originalClearColor, value);\n    }\n  }\n  // @ts-ignore\n  get originalClearColor() {\n    return this._objRef?.originalClearColor;\n  }\n  set dispose(value) {\n    if (this._objRef) {\n      this._objRef.dispose = value;\n    }\n  }\n  // @ts-ignore\n  get dispose() {\n    return this._objRef?.dispose;\n  }\n  set renderPass(value) {\n    if (this._objRef) {\n      this._objRef.renderPass = value;\n    }\n  }\n  // @ts-ignore\n  get renderPass() {\n    return this._objRef?.renderPass;\n  }\n  set renderOverride(value) {\n    if (this._objRef) {\n      this._objRef.renderOverride = value;\n    }\n  }\n  // @ts-ignore\n  get renderOverride() {\n    return this._objRef?.renderOverride;\n  }\n  set renderMetalness(value) {\n    if (this._objRef) {\n      this._objRef.renderMetalness = value;\n    }\n  }\n  // @ts-ignore\n  get renderMetalness() {\n    return this._objRef?.renderMetalness;\n  }\n}\nThSSRPass.OUTPUT = SSRPass.OUTPUT;\nThSSRPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThSSRPass_BaseFactory;\n  return function ThSSRPass_Factory(t) {\n    return (ɵThSSRPass_BaseFactory || (ɵThSSRPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThSSRPass)))(t || ThSSRPass);\n  };\n}();\nThSSRPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThSSRPass,\n  selectors: [[\"th-sSRPass\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    clear: \"clear\",\n    renderer: \"renderer\",\n    scene: \"scene\",\n    camera: \"camera\",\n    groundReflector: \"groundReflector\",\n    opacity: \"opacity\",\n    output: \"output\",\n    maxDistance: \"maxDistance\",\n    thickness: \"thickness\",\n    tempColor: \"tempColor\",\n    selective: \"selective\",\n    blur: \"blur\",\n    thickTolerance: \"thickTolerance\",\n    beautyRenderTarget: \"beautyRenderTarget\",\n    prevRenderTarget: \"prevRenderTarget\",\n    normalRenderTarget: \"normalRenderTarget\",\n    metalnessRenderTarget: \"metalnessRenderTarget\",\n    ssrRenderTarget: \"ssrRenderTarget\",\n    blurRenderTarget: \"blurRenderTarget\",\n    blurRenderTarget2: \"blurRenderTarget2\",\n    ssrMaterial: \"ssrMaterial\",\n    normalMaterial: \"normalMaterial\",\n    metalnessOnMaterial: \"metalnessOnMaterial\",\n    metalnessOffMaterial: \"metalnessOffMaterial\",\n    blurMaterial: \"blurMaterial\",\n    blurMaterial2: \"blurMaterial2\",\n    depthRenderMaterial: \"depthRenderMaterial\",\n    copyMaterial: \"copyMaterial\",\n    fsQuad: \"fsQuad\",\n    originalClearColor: \"originalClearColor\",\n    dispose: \"dispose\",\n    renderPass: \"renderPass\",\n    renderOverride: \"renderOverride\",\n    renderMetalness: \"renderMetalness\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThSSRPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThSSRPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThSSRPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-sSRPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThSSRPass)\n      }]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    clear: [{\n      type: Input\n    }],\n    renderer: [{\n      type: Input\n    }],\n    scene: [{\n      type: Input\n    }],\n    camera: [{\n      type: Input\n    }],\n    groundReflector: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    output: [{\n      type: Input\n    }],\n    maxDistance: [{\n      type: Input\n    }],\n    thickness: [{\n      type: Input\n    }],\n    tempColor: [{\n      type: Input\n    }],\n    selective: [{\n      type: Input\n    }],\n    blur: [{\n      type: Input\n    }],\n    thickTolerance: [{\n      type: Input\n    }],\n    beautyRenderTarget: [{\n      type: Input\n    }],\n    prevRenderTarget: [{\n      type: Input\n    }],\n    normalRenderTarget: [{\n      type: Input\n    }],\n    metalnessRenderTarget: [{\n      type: Input\n    }],\n    ssrRenderTarget: [{\n      type: Input\n    }],\n    blurRenderTarget: [{\n      type: Input\n    }],\n    blurRenderTarget2: [{\n      type: Input\n    }],\n    ssrMaterial: [{\n      type: Input\n    }],\n    normalMaterial: [{\n      type: Input\n    }],\n    metalnessOnMaterial: [{\n      type: Input\n    }],\n    metalnessOffMaterial: [{\n      type: Input\n    }],\n    blurMaterial: [{\n      type: Input\n    }],\n    blurMaterial2: [{\n      type: Input\n    }],\n    depthRenderMaterial: [{\n      type: Input\n    }],\n    copyMaterial: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }],\n    originalClearColor: [{\n      type: Input\n    }],\n    dispose: [{\n      type: Input\n    }],\n    renderPass: [{\n      type: Input\n    }],\n    renderOverride: [{\n      type: Input\n    }],\n    renderMetalness: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThStereoCamera extends ThCamera {\n  getType() {\n    return StereoCamera;\n  }\n  set type(value) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  set aspect(value) {\n    if (this._objRef) {\n      this._objRef.aspect = value;\n    }\n  }\n  // @ts-ignore\n  get aspect() {\n    return this._objRef?.aspect;\n  }\n  set eyeSep(value) {\n    if (this._objRef) {\n      this._objRef.eyeSep = value;\n    }\n  }\n  // @ts-ignore\n  get eyeSep() {\n    return this._objRef?.eyeSep;\n  }\n  set cameraL(value) {\n    if (this._objRef) {\n      this._objRef.cameraL = value;\n    }\n  }\n  // @ts-ignore\n  get cameraL() {\n    return this._objRef?.cameraL;\n  }\n  set cameraR(value) {\n    if (this._objRef) {\n      this._objRef.cameraR = value;\n    }\n  }\n  // @ts-ignore\n  get cameraR() {\n    return this._objRef?.cameraR;\n  }\n}\nThStereoCamera.ɵfac = /* @__PURE__ */function () {\n  let ɵThStereoCamera_BaseFactory;\n  return function ThStereoCamera_Factory(t) {\n    return (ɵThStereoCamera_BaseFactory || (ɵThStereoCamera_BaseFactory = i0.ɵɵgetInheritedFactory(ThStereoCamera)))(t || ThStereoCamera);\n  };\n}();\nThStereoCamera.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThStereoCamera,\n  selectors: [[\"th-stereoCamera\"]],\n  inputs: {\n    type: \"type\",\n    aspect: \"aspect\",\n    eyeSep: \"eyeSep\",\n    cameraL: \"cameraL\",\n    cameraR: \"cameraR\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => ThStereoCamera)\n  }, {\n    provide: ThCamera,\n    useExisting: forwardRef(() => ThStereoCamera)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThStereoCamera_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThStereoCamera, [{\n    type: Component,\n    args: [{\n      selector: 'th-stereoCamera',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThObject3D,\n        useExisting: forwardRef(() => ThStereoCamera)\n      }, {\n        provide: ThCamera,\n        useExisting: forwardRef(() => ThStereoCamera)\n      }]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    aspect: [{\n      type: Input\n    }],\n    eyeSep: [{\n      type: Input\n    }],\n    cameraL: [{\n      type: Input\n    }],\n    cameraR: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThTAARenderPass extends ThSSAARenderPass {\n  getType() {\n    return TAARenderPass;\n  }\n  set accumulate(value) {\n    if (this._objRef) {\n      this._objRef.accumulate = value;\n    }\n  }\n  // @ts-ignore\n  get accumulate() {\n    return this._objRef?.accumulate;\n  }\n}\nThTAARenderPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThTAARenderPass_BaseFactory;\n  return function ThTAARenderPass_Factory(t) {\n    return (ɵThTAARenderPass_BaseFactory || (ɵThTAARenderPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThTAARenderPass)))(t || ThTAARenderPass);\n  };\n}();\nThTAARenderPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTAARenderPass,\n  selectors: [[\"th-tAARenderPass\"]],\n  inputs: {\n    accumulate: \"accumulate\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThTAARenderPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTAARenderPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTAARenderPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-tAARenderPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThTAARenderPass)\n      }]\n    }]\n  }], null, {\n    accumulate: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTeapotGeometry extends ThBufferGeometry {\n  getType() {\n    return TeapotGeometry;\n  }\n}\nThTeapotGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThTeapotGeometry_BaseFactory;\n  return function ThTeapotGeometry_Factory(t) {\n    return (ɵThTeapotGeometry_BaseFactory || (ɵThTeapotGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThTeapotGeometry)))(t || ThTeapotGeometry);\n  };\n}();\nThTeapotGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTeapotGeometry,\n  selectors: [[\"th-teapotGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThTeapotGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTeapotGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTeapotGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-teapotGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThTeapotGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTetrahedronGeometry extends ThPolyhedronGeometry {\n  getType() {\n    return TetrahedronGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n}\nThTetrahedronGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThTetrahedronGeometry_BaseFactory;\n  return function ThTetrahedronGeometry_Factory(t) {\n    return (ɵThTetrahedronGeometry_BaseFactory || (ɵThTetrahedronGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThTetrahedronGeometry)))(t || ThTetrahedronGeometry);\n  };\n}();\nThTetrahedronGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTetrahedronGeometry,\n  selectors: [[\"th-tetrahedronGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThTetrahedronGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTetrahedronGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTetrahedronGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-tetrahedronGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThTetrahedronGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTextGeometry extends ThExtrudeGeometry {\n  getType() {\n    return TextGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThTextGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThTextGeometry_BaseFactory;\n  return function ThTextGeometry_Factory(t) {\n    return (ɵThTextGeometry_BaseFactory || (ɵThTextGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThTextGeometry)))(t || ThTextGeometry);\n  };\n}();\nThTextGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTextGeometry,\n  selectors: [[\"th-textGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThTextGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTextGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTextGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-textGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThTextGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThTexturePass extends ThPass {\n  getType() {\n    return TexturePass;\n  }\n  set map(value) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n  // @ts-ignore\n  get map() {\n    return this._objRef?.map;\n  }\n  set opacity(value) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n  // @ts-ignore\n  get opacity() {\n    return this._objRef?.opacity;\n  }\n  set uniforms(map) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n  // @ts-ignore\n  get uniforms() {\n    // @ts-ignore\n    return this._objRef?.uniforms;\n  }\n  set material(value) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n  // @ts-ignore\n  get material() {\n    return this._objRef?.material;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThTexturePass.ɵfac = /* @__PURE__ */function () {\n  let ɵThTexturePass_BaseFactory;\n  return function ThTexturePass_Factory(t) {\n    return (ɵThTexturePass_BaseFactory || (ɵThTexturePass_BaseFactory = i0.ɵɵgetInheritedFactory(ThTexturePass)))(t || ThTexturePass);\n  };\n}();\nThTexturePass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTexturePass,\n  selectors: [[\"th-texturePass\"]],\n  inputs: {\n    map: \"map\",\n    opacity: \"opacity\",\n    uniforms: \"uniforms\",\n    material: \"material\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThTexturePass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTexturePass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTexturePass, [{\n    type: Component,\n    args: [{\n      selector: 'th-texturePass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThTexturePass)\n      }]\n    }]\n  }], null, {\n    map: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    uniforms: [{\n      type: Input\n    }],\n    material: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTorusGeometry extends ThBufferGeometry {\n  getType() {\n    return TorusGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThTorusGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThTorusGeometry_BaseFactory;\n  return function ThTorusGeometry_Factory(t) {\n    return (ɵThTorusGeometry_BaseFactory || (ɵThTorusGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThTorusGeometry)))(t || ThTorusGeometry);\n  };\n}();\nThTorusGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTorusGeometry,\n  selectors: [[\"th-torusGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThTorusGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTorusGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTorusGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-torusGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThTorusGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTorusKnotGeometry extends ThBufferGeometry {\n  getType() {\n    return TorusKnotGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThTorusKnotGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThTorusKnotGeometry_BaseFactory;\n  return function ThTorusKnotGeometry_Factory(t) {\n    return (ɵThTorusKnotGeometry_BaseFactory || (ɵThTorusKnotGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThTorusKnotGeometry)))(t || ThTorusKnotGeometry);\n  };\n}();\nThTorusKnotGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTorusKnotGeometry,\n  selectors: [[\"th-torusKnotGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThTorusKnotGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTorusKnotGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTorusKnotGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-torusKnotGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThTorusKnotGeometry)\n      }]\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTrackballControls extends ThControlBase {\n  getType() {\n    return TrackballControls;\n  }\n  set object(value) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n  // @ts-ignore\n  get object() {\n    return this._objRef?.object;\n  }\n  set domElement(value) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n  // @ts-ignore\n  get domElement() {\n    return this._objRef?.domElement;\n  }\n  set enabled(value) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n  // @ts-ignore\n  get enabled() {\n    return this._objRef?.enabled;\n  }\n  set screen(value) {\n    if (this._objRef) {\n      this._objRef.screen = value;\n    }\n  }\n  // @ts-ignore\n  get screen() {\n    return this._objRef?.screen;\n  }\n  set rotateSpeed(value) {\n    if (this._objRef) {\n      this._objRef.rotateSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get rotateSpeed() {\n    return this._objRef?.rotateSpeed;\n  }\n  set zoomSpeed(value) {\n    if (this._objRef) {\n      this._objRef.zoomSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get zoomSpeed() {\n    return this._objRef?.zoomSpeed;\n  }\n  set panSpeed(value) {\n    if (this._objRef) {\n      this._objRef.panSpeed = value;\n    }\n  }\n  // @ts-ignore\n  get panSpeed() {\n    return this._objRef?.panSpeed;\n  }\n  set noRotate(value) {\n    if (this._objRef) {\n      this._objRef.noRotate = value;\n    }\n  }\n  // @ts-ignore\n  get noRotate() {\n    return this._objRef?.noRotate;\n  }\n  set noZoom(value) {\n    if (this._objRef) {\n      this._objRef.noZoom = value;\n    }\n  }\n  // @ts-ignore\n  get noZoom() {\n    return this._objRef?.noZoom;\n  }\n  set noPan(value) {\n    if (this._objRef) {\n      this._objRef.noPan = value;\n    }\n  }\n  // @ts-ignore\n  get noPan() {\n    return this._objRef?.noPan;\n  }\n  set noRoll(value) {\n    if (this._objRef) {\n      this._objRef.noRoll = value;\n    }\n  }\n  // @ts-ignore\n  get noRoll() {\n    return this._objRef?.noRoll;\n  }\n  set staticMoving(value) {\n    if (this._objRef) {\n      this._objRef.staticMoving = value;\n    }\n  }\n  // @ts-ignore\n  get staticMoving() {\n    return this._objRef?.staticMoving;\n  }\n  set dynamicDampingFactor(value) {\n    if (this._objRef) {\n      this._objRef.dynamicDampingFactor = value;\n    }\n  }\n  // @ts-ignore\n  get dynamicDampingFactor() {\n    return this._objRef?.dynamicDampingFactor;\n  }\n  set minDistance(value) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n  // @ts-ignore\n  get minDistance() {\n    return this._objRef?.minDistance;\n  }\n  set maxDistance(value) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n  // @ts-ignore\n  get maxDistance() {\n    return this._objRef?.maxDistance;\n  }\n  set minZoom(value) {\n    if (this._objRef) {\n      this._objRef.minZoom = value;\n    }\n  }\n  // @ts-ignore\n  get minZoom() {\n    return this._objRef?.minZoom;\n  }\n  set maxZoom(value) {\n    if (this._objRef) {\n      this._objRef.maxZoom = value;\n    }\n  }\n  // @ts-ignore\n  get maxZoom() {\n    return this._objRef?.maxZoom;\n  }\n  set keys(value) {\n    if (this._objRef) {\n      this._objRef.keys = value;\n    }\n  }\n  // @ts-ignore\n  get keys() {\n    return this._objRef?.keys;\n  }\n  set mouseButtons(value) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n  // @ts-ignore\n  get mouseButtons() {\n    return this._objRef?.mouseButtons;\n  }\n  set target(value) {\n    if (this._objRef) {\n      this._objRef.target = applyValue(this._objRef.target, value);\n    }\n  }\n  // @ts-ignore\n  get target() {\n    return this._objRef?.target;\n  }\n  set position0(value) {\n    if (this._objRef) {\n      this._objRef.position0 = applyValue(this._objRef.position0, value);\n    }\n  }\n  // @ts-ignore\n  get position0() {\n    return this._objRef?.position0;\n  }\n  set target0(value) {\n    if (this._objRef) {\n      this._objRef.target0 = applyValue(this._objRef.target0, value);\n    }\n  }\n  // @ts-ignore\n  get target0() {\n    return this._objRef?.target0;\n  }\n  set up0(value) {\n    if (this._objRef) {\n      this._objRef.up0 = applyValue(this._objRef.up0, value);\n    }\n  }\n  // @ts-ignore\n  get up0() {\n    return this._objRef?.up0;\n  }\n}\nThTrackballControls.ɵfac = /* @__PURE__ */function () {\n  let ɵThTrackballControls_BaseFactory;\n  return function ThTrackballControls_Factory(t) {\n    return (ɵThTrackballControls_BaseFactory || (ɵThTrackballControls_BaseFactory = i0.ɵɵgetInheritedFactory(ThTrackballControls)))(t || ThTrackballControls);\n  };\n}();\nThTrackballControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTrackballControls,\n  selectors: [[\"th-trackballControls\"]],\n  inputs: {\n    object: \"object\",\n    domElement: \"domElement\",\n    enabled: \"enabled\",\n    screen: \"screen\",\n    rotateSpeed: \"rotateSpeed\",\n    zoomSpeed: \"zoomSpeed\",\n    panSpeed: \"panSpeed\",\n    noRotate: \"noRotate\",\n    noZoom: \"noZoom\",\n    noPan: \"noPan\",\n    noRoll: \"noRoll\",\n    staticMoving: \"staticMoving\",\n    dynamicDampingFactor: \"dynamicDampingFactor\",\n    minDistance: \"minDistance\",\n    maxDistance: \"maxDistance\",\n    minZoom: \"minZoom\",\n    maxZoom: \"maxZoom\",\n    keys: \"keys\",\n    mouseButtons: \"mouseButtons\",\n    target: \"target\",\n    position0: \"position0\",\n    target0: \"target0\",\n    up0: \"up0\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThControlBase,\n    useExisting: forwardRef(() => ThTrackballControls)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTrackballControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTrackballControls, [{\n    type: Component,\n    args: [{\n      selector: 'th-trackballControls',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThControlBase,\n        useExisting: forwardRef(() => ThTrackballControls)\n      }]\n    }]\n  }], null, {\n    object: [{\n      type: Input\n    }],\n    domElement: [{\n      type: Input\n    }],\n    enabled: [{\n      type: Input\n    }],\n    screen: [{\n      type: Input\n    }],\n    rotateSpeed: [{\n      type: Input\n    }],\n    zoomSpeed: [{\n      type: Input\n    }],\n    panSpeed: [{\n      type: Input\n    }],\n    noRotate: [{\n      type: Input\n    }],\n    noZoom: [{\n      type: Input\n    }],\n    noPan: [{\n      type: Input\n    }],\n    noRoll: [{\n      type: Input\n    }],\n    staticMoving: [{\n      type: Input\n    }],\n    dynamicDampingFactor: [{\n      type: Input\n    }],\n    minDistance: [{\n      type: Input\n    }],\n    maxDistance: [{\n      type: Input\n    }],\n    minZoom: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    keys: [{\n      type: Input\n    }],\n    mouseButtons: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }],\n    position0: [{\n      type: Input\n    }],\n    target0: [{\n      type: Input\n    }],\n    up0: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTubeGeometry extends ThBufferGeometry {\n  getType() {\n    return TubeGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n  set tangents(value) {\n    if (this._objRef) {\n      this._objRef.tangents = value;\n    }\n  }\n  // @ts-ignore\n  get tangents() {\n    return this._objRef?.tangents;\n  }\n  set normals(value) {\n    if (this._objRef) {\n      this._objRef.normals = value;\n    }\n  }\n  // @ts-ignore\n  get normals() {\n    return this._objRef?.normals;\n  }\n  set binormals(value) {\n    if (this._objRef) {\n      this._objRef.binormals = value;\n    }\n  }\n  // @ts-ignore\n  get binormals() {\n    return this._objRef?.binormals;\n  }\n}\nThTubeGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThTubeGeometry_BaseFactory;\n  return function ThTubeGeometry_Factory(t) {\n    return (ɵThTubeGeometry_BaseFactory || (ɵThTubeGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThTubeGeometry)))(t || ThTubeGeometry);\n  };\n}();\nThTubeGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThTubeGeometry,\n  selectors: [[\"th-tubeGeometry\"]],\n  inputs: {\n    tangents: \"tangents\",\n    normals: \"normals\",\n    binormals: \"binormals\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThTubeGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThTubeGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTubeGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-tubeGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThTubeGeometry)\n      }]\n    }]\n  }], null, {\n    tangents: [{\n      type: Input\n    }],\n    normals: [{\n      type: Input\n    }],\n    binormals: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThUnrealBloomPass extends ThPass {\n  getType() {\n    return UnrealBloomPass;\n  }\n  set resolution(value) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue(this._objRef.resolution, value);\n    }\n  }\n  // @ts-ignore\n  get resolution() {\n    return this._objRef?.resolution;\n  }\n  set strength(value) {\n    if (this._objRef) {\n      this._objRef.strength = value;\n    }\n  }\n  // @ts-ignore\n  get strength() {\n    return this._objRef?.strength;\n  }\n  set radius(value) {\n    if (this._objRef) {\n      this._objRef.radius = value;\n    }\n  }\n  // @ts-ignore\n  get radius() {\n    return this._objRef?.radius;\n  }\n  set threshold(value) {\n    if (this._objRef) {\n      this._objRef.threshold = value;\n    }\n  }\n  // @ts-ignore\n  get threshold() {\n    return this._objRef?.threshold;\n  }\n  set clearColor(value) {\n    if (this._objRef) {\n      this._objRef.clearColor = applyValue(this._objRef.clearColor, value);\n    }\n  }\n  // @ts-ignore\n  get clearColor() {\n    return this._objRef?.clearColor;\n  }\n  set renderTargetsHorizontal(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetsHorizontal = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetsHorizontal() {\n    return this._objRef?.renderTargetsHorizontal;\n  }\n  set renderTargetsVertical(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetsVertical = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetsVertical() {\n    return this._objRef?.renderTargetsVertical;\n  }\n  set nMips(value) {\n    if (this._objRef) {\n      this._objRef.nMips = value;\n    }\n  }\n  // @ts-ignore\n  get nMips() {\n    return this._objRef?.nMips;\n  }\n  set renderTargetBright(value) {\n    if (this._objRef) {\n      this._objRef.renderTargetBright = value;\n    }\n  }\n  // @ts-ignore\n  get renderTargetBright() {\n    return this._objRef?.renderTargetBright;\n  }\n  set highPassUniforms(value) {\n    if (this._objRef) {\n      this._objRef.highPassUniforms = value;\n    }\n  }\n  // @ts-ignore\n  get highPassUniforms() {\n    return this._objRef?.highPassUniforms;\n  }\n  set materialHighPassFilter(value) {\n    if (this._objRef) {\n      this._objRef.materialHighPassFilter = value;\n    }\n  }\n  // @ts-ignore\n  get materialHighPassFilter() {\n    return this._objRef?.materialHighPassFilter;\n  }\n  set separableBlurMaterials(value) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterials = value;\n    }\n  }\n  // @ts-ignore\n  get separableBlurMaterials() {\n    return this._objRef?.separableBlurMaterials;\n  }\n  set compositeMaterial(value) {\n    if (this._objRef) {\n      this._objRef.compositeMaterial = value;\n    }\n  }\n  // @ts-ignore\n  get compositeMaterial() {\n    return this._objRef?.compositeMaterial;\n  }\n  set bloomTintColors(value) {\n    if (this._objRef) {\n      this._objRef.bloomTintColors = value;\n    }\n  }\n  // @ts-ignore\n  get bloomTintColors() {\n    return this._objRef?.bloomTintColors;\n  }\n  set copyUniforms(value) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n  // @ts-ignore\n  get copyUniforms() {\n    return this._objRef?.copyUniforms;\n  }\n  set materialCopy(value) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n  // @ts-ignore\n  get materialCopy() {\n    return this._objRef?.materialCopy;\n  }\n  set oldClearColor(value) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n    }\n  }\n  // @ts-ignore\n  get oldClearColor() {\n    return this._objRef?.oldClearColor;\n  }\n  set oldClearAlpha(value) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n  // @ts-ignore\n  get oldClearAlpha() {\n    return this._objRef?.oldClearAlpha;\n  }\n  set basic(value) {\n    if (this._objRef) {\n      this._objRef.basic = value;\n    }\n  }\n  // @ts-ignore\n  get basic() {\n    return this._objRef?.basic;\n  }\n  set fsQuad(value) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n  // @ts-ignore\n  get fsQuad() {\n    return this._objRef?.fsQuad;\n  }\n}\nThUnrealBloomPass.ɵfac = /* @__PURE__ */function () {\n  let ɵThUnrealBloomPass_BaseFactory;\n  return function ThUnrealBloomPass_Factory(t) {\n    return (ɵThUnrealBloomPass_BaseFactory || (ɵThUnrealBloomPass_BaseFactory = i0.ɵɵgetInheritedFactory(ThUnrealBloomPass)))(t || ThUnrealBloomPass);\n  };\n}();\nThUnrealBloomPass.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThUnrealBloomPass,\n  selectors: [[\"th-unrealBloomPass\"]],\n  inputs: {\n    resolution: \"resolution\",\n    strength: \"strength\",\n    radius: \"radius\",\n    threshold: \"threshold\",\n    clearColor: \"clearColor\",\n    renderTargetsHorizontal: \"renderTargetsHorizontal\",\n    renderTargetsVertical: \"renderTargetsVertical\",\n    nMips: \"nMips\",\n    renderTargetBright: \"renderTargetBright\",\n    highPassUniforms: \"highPassUniforms\",\n    materialHighPassFilter: \"materialHighPassFilter\",\n    separableBlurMaterials: \"separableBlurMaterials\",\n    compositeMaterial: \"compositeMaterial\",\n    bloomTintColors: \"bloomTintColors\",\n    copyUniforms: \"copyUniforms\",\n    materialCopy: \"materialCopy\",\n    oldClearColor: \"oldClearColor\",\n    oldClearAlpha: \"oldClearAlpha\",\n    basic: \"basic\",\n    fsQuad: \"fsQuad\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThPassBase,\n    useExisting: forwardRef(() => ThUnrealBloomPass)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThUnrealBloomPass_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThUnrealBloomPass, [{\n    type: Component,\n    args: [{\n      selector: 'th-unrealBloomPass',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThPassBase,\n        useExisting: forwardRef(() => ThUnrealBloomPass)\n      }]\n    }]\n  }], null, {\n    resolution: [{\n      type: Input\n    }],\n    strength: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    threshold: [{\n      type: Input\n    }],\n    clearColor: [{\n      type: Input\n    }],\n    renderTargetsHorizontal: [{\n      type: Input\n    }],\n    renderTargetsVertical: [{\n      type: Input\n    }],\n    nMips: [{\n      type: Input\n    }],\n    renderTargetBright: [{\n      type: Input\n    }],\n    highPassUniforms: [{\n      type: Input\n    }],\n    materialHighPassFilter: [{\n      type: Input\n    }],\n    separableBlurMaterials: [{\n      type: Input\n    }],\n    compositeMaterial: [{\n      type: Input\n    }],\n    bloomTintColors: [{\n      type: Input\n    }],\n    copyUniforms: [{\n      type: Input\n    }],\n    materialCopy: [{\n      type: Input\n    }],\n    oldClearColor: [{\n      type: Input\n    }],\n    oldClearAlpha: [{\n      type: Input\n    }],\n    basic: [{\n      type: Input\n    }],\n    fsQuad: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThVideoTexture extends ThTexture {\n  getType() {\n    return VideoTexture;\n  }\n  // @ts-ignore\n  get isVideoTexture() {\n    return this._objRef?.isVideoTexture;\n  }\n  set magFilter(value) {\n    if (this._objRef) {\n      this._objRef.magFilter = value;\n    }\n  }\n  // @ts-ignore\n  get magFilter() {\n    return this._objRef?.magFilter;\n  }\n  set minFilter(value) {\n    if (this._objRef) {\n      this._objRef.minFilter = value;\n    }\n  }\n  // @ts-ignore\n  get minFilter() {\n    return this._objRef?.minFilter;\n  }\n  set generateMipmaps(value) {\n    if (this._objRef) {\n      this._objRef.generateMipmaps = value;\n    }\n  }\n  // @ts-ignore\n  get generateMipmaps() {\n    return this._objRef?.generateMipmaps;\n  }\n}\nThVideoTexture.ɵfac = /* @__PURE__ */function () {\n  let ɵThVideoTexture_BaseFactory;\n  return function ThVideoTexture_Factory(t) {\n    return (ɵThVideoTexture_BaseFactory || (ɵThVideoTexture_BaseFactory = i0.ɵɵgetInheritedFactory(ThVideoTexture)))(t || ThVideoTexture);\n  };\n}();\nThVideoTexture.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThVideoTexture,\n  selectors: [[\"th-videoTexture\"]],\n  inputs: {\n    magFilter: \"magFilter\",\n    minFilter: \"minFilter\",\n    generateMipmaps: \"generateMipmaps\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThTextureBase,\n    useExisting: forwardRef(() => ThVideoTexture)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThVideoTexture_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThVideoTexture, [{\n    type: Component,\n    args: [{\n      selector: 'th-videoTexture',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThTextureBase,\n        useExisting: forwardRef(() => ThVideoTexture)\n      }]\n    }]\n  }], null, {\n    magFilter: [{\n      type: Input\n    }],\n    minFilter: [{\n      type: Input\n    }],\n    generateMipmaps: [{\n      type: Input\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThWireframeGeometry extends ThBufferGeometry {\n  getType() {\n    return WireframeGeometry;\n  }\n  // @ts-ignore\n  get type() {\n    return this._objRef?.type;\n  }\n  // @ts-ignore\n  get parameters() {\n    return this._objRef?.parameters;\n  }\n}\nThWireframeGeometry.ɵfac = /* @__PURE__ */function () {\n  let ɵThWireframeGeometry_BaseFactory;\n  return function ThWireframeGeometry_Factory(t) {\n    return (ɵThWireframeGeometry_BaseFactory || (ɵThWireframeGeometry_BaseFactory = i0.ɵɵgetInheritedFactory(ThWireframeGeometry)))(t || ThWireframeGeometry);\n  };\n}();\nThWireframeGeometry.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ThWireframeGeometry,\n  selectors: [[\"th-wireframeGeometry\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ThBufferGeometry,\n    useExisting: forwardRef(() => ThWireframeGeometry)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function ThWireframeGeometry_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThWireframeGeometry, [{\n    type: Component,\n    args: [{\n      selector: 'th-wireframeGeometry',\n      template: '<ng-content/>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: ThBufferGeometry,\n        useExisting: forwardRef(() => ThWireframeGeometry)\n      }]\n    }]\n  }], null, null);\n})();\nclass NgxThreeGeneratedModule {}\nNgxThreeGeneratedModule.ɵfac = function NgxThreeGeneratedModule_Factory(t) {\n  return new (t || NgxThreeGeneratedModule)();\n};\nNgxThreeGeneratedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxThreeGeneratedModule\n});\nNgxThreeGeneratedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxThreeGeneratedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ThTransformControlsGen, ThTransformControls, ThArcballControls, ThDragControls, ThFirstPersonControls, ThFlyControls, ThOrbitControls, ThMapControls, ThPointerLockControls, ThTrackballControls, ThAudioListener, ThPositionalAudio, ThAudio, ThStereoCamera, ThPerspectiveCamera, ThOrthographicCamera, ThCubeCamera, ThArrayCamera, ThObject3D, ThSpotLightHelper, ThSkeletonHelper, ThPointLightHelper, ThHemisphereLightHelper, ThGridHelper, ThPolarGridHelper, ThDirectionalLightHelper, ThCameraHelper, ThBoxHelper, ThBox3Helper, ThPlaneHelper, ThArrowHelper, ThAxesHelper, ThSpotLight, ThPointLight, ThRectAreaLight, ThHemisphereLight, ThDirectionalLight, ThAmbientLight, ThAmbientLightProbe, ThHemisphereLightProbe, ThLightProbe, ThSprite, ThLOD, ThInstancedMesh, ThSkinnedMesh, ThBone, ThMesh, ThLineSegments, ThLineLoop, ThLine, ThPoints, ThGroup, ThScene, ThShadowMaterial, ThSpriteMaterial, ThRawShaderMaterial, ThShaderMaterial, ThPointsMaterial, ThMeshPhysicalMaterial, ThMeshStandardMaterial, ThMeshPhongMaterial, ThMeshToonMaterial, ThMeshNormalMaterial, ThMeshLambertMaterial, ThMeshDepthMaterial, ThMeshDistanceMaterial, ThMeshBasicMaterial, ThMeshMatcapMaterial, ThLineDashedMaterial, ThLineBasicMaterial, ThMaterial, ThInstancedBufferGeometry, ThBufferGeometry, ThBoxGeometry, ThCapsuleGeometry, ThCircleGeometry, ThConeGeometry, ThCylinderGeometry, ThDodecahedronGeometry, ThEdgesGeometry, ThExtrudeGeometry, ThIcosahedronGeometry, ThLatheGeometry, ThOctahedronGeometry, ThPlaneGeometry, ThPolyhedronGeometry, ThRingGeometry, ThShapeGeometry, ThSphereGeometry, ThTetrahedronGeometry, ThTorusGeometry, ThTorusKnotGeometry, ThTubeGeometry, ThWireframeGeometry, ThBoxLineGeometry, ThConvexGeometry, ThDecalGeometry, ThLightningStrike, ThParametricGeometry, ThRoundedBoxGeometry, ThTeapotGeometry, ThTextGeometry, ThPass, ThEffectComposerGen, ThEffectComposer, ThAdaptiveToneMappingPass, ThAfterimagePass, ThBloomPass, ThBokehPass, ThClearPass, ThCubeTexturePass, ThDotScreenPass, ThFilmPass, ThGlitchPass, ThHalftonePass, ThLUTPass, ThMaskPass, ThClearMaskPass, ThOutlinePass, ThRenderPassGen, ThRenderPass, ThSAOPass, ThSMAAPass, ThSSAARenderPass, ThSSAOPass, ThSSRPass, ThSavePass, ThShaderPass, ThTAARenderPass, ThTexturePass, ThUnrealBloomPass, ThVideoTexture, ThCompressedArrayTexture, ThDataTexture, ThCompressedTexture, ThCubeTexture, ThData3DTexture, ThDataArrayTexture, ThCanvasTexture, ThDepthTexture, ThFramebufferTexture, ThTexture],\n      exports: [ThTransformControlsGen, ThTransformControls, ThArcballControls, ThDragControls, ThFirstPersonControls, ThFlyControls, ThOrbitControls, ThMapControls, ThPointerLockControls, ThTrackballControls, ThAudioListener, ThPositionalAudio, ThAudio, ThStereoCamera, ThPerspectiveCamera, ThOrthographicCamera, ThCubeCamera, ThArrayCamera, ThObject3D, ThSpotLightHelper, ThSkeletonHelper, ThPointLightHelper, ThHemisphereLightHelper, ThGridHelper, ThPolarGridHelper, ThDirectionalLightHelper, ThCameraHelper, ThBoxHelper, ThBox3Helper, ThPlaneHelper, ThArrowHelper, ThAxesHelper, ThSpotLight, ThPointLight, ThRectAreaLight, ThHemisphereLight, ThDirectionalLight, ThAmbientLight, ThAmbientLightProbe, ThHemisphereLightProbe, ThLightProbe, ThSprite, ThLOD, ThInstancedMesh, ThSkinnedMesh, ThBone, ThMesh, ThLineSegments, ThLineLoop, ThLine, ThPoints, ThGroup, ThScene, ThShadowMaterial, ThSpriteMaterial, ThRawShaderMaterial, ThShaderMaterial, ThPointsMaterial, ThMeshPhysicalMaterial, ThMeshStandardMaterial, ThMeshPhongMaterial, ThMeshToonMaterial, ThMeshNormalMaterial, ThMeshLambertMaterial, ThMeshDepthMaterial, ThMeshDistanceMaterial, ThMeshBasicMaterial, ThMeshMatcapMaterial, ThLineDashedMaterial, ThLineBasicMaterial, ThMaterial, ThInstancedBufferGeometry, ThBufferGeometry, ThBoxGeometry, ThCapsuleGeometry, ThCircleGeometry, ThConeGeometry, ThCylinderGeometry, ThDodecahedronGeometry, ThEdgesGeometry, ThExtrudeGeometry, ThIcosahedronGeometry, ThLatheGeometry, ThOctahedronGeometry, ThPlaneGeometry, ThPolyhedronGeometry, ThRingGeometry, ThShapeGeometry, ThSphereGeometry, ThTetrahedronGeometry, ThTorusGeometry, ThTorusKnotGeometry, ThTubeGeometry, ThWireframeGeometry, ThBoxLineGeometry, ThConvexGeometry, ThDecalGeometry, ThLightningStrike, ThParametricGeometry, ThRoundedBoxGeometry, ThTeapotGeometry, ThTextGeometry, ThPass, ThEffectComposerGen, ThEffectComposer, ThAdaptiveToneMappingPass, ThAfterimagePass, ThBloomPass, ThBokehPass, ThClearPass, ThCubeTexturePass, ThDotScreenPass, ThFilmPass, ThGlitchPass, ThHalftonePass, ThLUTPass, ThMaskPass, ThClearMaskPass, ThOutlinePass, ThRenderPassGen, ThRenderPass, ThSAOPass, ThSMAAPass, ThSSAARenderPass, ThSSAOPass, ThSSRPass, ThSavePass, ThShaderPass, ThTAARenderPass, ThTexturePass, ThUnrealBloomPass, ThVideoTexture, ThCompressedArrayTexture, ThDataTexture, ThCompressedTexture, ThCubeTexture, ThData3DTexture, ThDataArrayTexture, ThCanvasTexture, ThDepthTexture, ThFramebufferTexture, ThTexture]\n    }]\n  }], null, null);\n})();\nclass ThLoader {\n  setCrossOrigin(cors) {\n    this.crossOrigin = cors;\n  }\n  setWithCredentials(credentials) {\n    this.withCredentials = credentials;\n  }\n  createLoaderInstance() {\n    const loader = new this.clazz();\n    if (this.crossOrigin) {\n      loader.setCrossOrigin(this.crossOrigin);\n    }\n    if (this.withCredentials !== undefined) {\n      loader.setWithCredentials(this.withCredentials);\n    }\n    return loader;\n  }\n}\nclass ThCallbackLoaderService extends ThLoader {\n  load(...args) {\n    const loader = this.createLoaderInstance();\n    return loader.load(...args);\n  }\n}\nclass ThCallbackLoaderBasePipe {\n  transform(...args) {\n    return this.service.load(...args);\n  }\n}\nclass ThCallbackLoaderBaseDirective {\n  set url(url) {\n    this._url = url;\n    this.load();\n  }\n  get url() {\n    return this._url;\n  }\n  get onLoaded() {\n    if (!this.onLoaded$) {\n      this.onLoaded$ = new EventEmitter();\n    }\n    return this.onLoaded$;\n  }\n  get onProgress() {\n    if (!this.onProgress$) {\n      this.onProgress$ = new EventEmitter();\n    }\n    return this.onProgress$;\n  }\n  constructor(host, zone) {\n    this.host = host;\n    this.zone = zone;\n    this.initialized = false;\n  }\n  ngOnInit() {\n    this.initialized = true;\n    this.load();\n    // this.zone.runOutsideAngular(() => );\n  }\n\n  load() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.initialized) {\n        return;\n      }\n      if (_this._url === undefined) {\n        throw new Error('missing url');\n      }\n      const url = _this._url;\n      const onProgress = isObserved(_this.onProgress$) ? progress => {\n        _this.onProgress$?.next(progress);\n      } : undefined;\n      const onLoad = isObserved(_this.onLoaded$) ? (...args) => {\n        _this.onLoaded$?.next(args[0]);\n      } : undefined;\n      _this.host.objRef = _this.zone.runOutsideAngular(() => _this.service.load(url, onProgress, onLoad));\n    })();\n  }\n}\nThCallbackLoaderBaseDirective.ɵfac = function ThCallbackLoaderBaseDirective_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\nThCallbackLoaderBaseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThCallbackLoaderBaseDirective,\n  inputs: {\n    url: \"url\"\n  },\n  outputs: {\n    onLoaded: \"onLoaded\",\n    onProgress: \"onProgress\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCallbackLoaderBaseDirective, [{\n    type: Directive,\n    args: [{}]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    url: [{\n      type: Input\n    }],\n    onLoaded: [{\n      type: Output\n    }],\n    onProgress: [{\n      type: Output\n    }]\n  });\n})();\nclass DDSLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = DDSLoader;\n  }\n}\nDDSLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵDDSLoaderService_BaseFactory;\n  return function DDSLoaderService_Factory(t) {\n    return (ɵDDSLoaderService_BaseFactory || (ɵDDSLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(DDSLoaderService)))(t || DDSLoaderService);\n  };\n}();\nDDSLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DDSLoaderService,\n  factory: DDSLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DDSLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThDDSLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThDDSLoaderPipe.ɵfac = function ThDDSLoaderPipe_Factory(t) {\n  return new (t || ThDDSLoaderPipe)(i0.ɵɵdirectiveInject(DDSLoaderService, 16));\n};\nThDDSLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadDDSTexture\",\n  type: ThDDSLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDDSLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadDDSTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: DDSLoaderService\n    }];\n  }, null);\n})();\nclass ThDDSLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThDDSLoaderDirective.ɵfac = function ThDDSLoaderDirective_Factory(t) {\n  return new (t || ThDDSLoaderDirective)(i0.ɵɵdirectiveInject(ThCompressedTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DDSLoaderService));\n};\nThDDSLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThDDSLoaderDirective,\n  selectors: [[\"\", \"loadDDSTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThDDSLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadDDSTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThCompressedTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: DDSLoaderService\n    }];\n  }, null);\n})();\nclass KTX2LoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = KTX2Loader;\n    this.transcoderPath = '';\n  }\n  setDecoderPath(path) {\n    this.transcoderPath = path;\n  }\n  createLoaderInstance() {\n    const loader = super.createLoaderInstance();\n    loader.setTranscoderPath(this.transcoderPath);\n    return loader;\n  }\n}\nKTX2LoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵKTX2LoaderService_BaseFactory;\n  return function KTX2LoaderService_Factory(t) {\n    return (ɵKTX2LoaderService_BaseFactory || (ɵKTX2LoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(KTX2LoaderService)))(t || KTX2LoaderService);\n  };\n}();\nKTX2LoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KTX2LoaderService,\n  factory: KTX2LoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KTX2LoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThKTX2LoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThKTX2LoaderPipe.ɵfac = function ThKTX2LoaderPipe_Factory(t) {\n  return new (t || ThKTX2LoaderPipe)(i0.ɵɵdirectiveInject(KTX2LoaderService, 16));\n};\nThKTX2LoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadKTX2Texture\",\n  type: ThKTX2LoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThKTX2LoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadKTX2Texture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: KTX2LoaderService\n    }];\n  }, null);\n})();\nclass ThKTX2LoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThKTX2LoaderDirective.ɵfac = function ThKTX2LoaderDirective_Factory(t) {\n  return new (t || ThKTX2LoaderDirective)(i0.ɵɵdirectiveInject(ThTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(KTX2LoaderService));\n};\nThKTX2LoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThKTX2LoaderDirective,\n  selectors: [[\"\", \"loadKTX2Texture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThKTX2LoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadKTX2Texture]'\n    }]\n  }], function () {\n    return [{\n      type: ThTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: KTX2LoaderService\n    }];\n  }, null);\n})();\nclass KTXLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = KTXLoader;\n  }\n}\nKTXLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵKTXLoaderService_BaseFactory;\n  return function KTXLoaderService_Factory(t) {\n    return (ɵKTXLoaderService_BaseFactory || (ɵKTXLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(KTXLoaderService)))(t || KTXLoaderService);\n  };\n}();\nKTXLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KTXLoaderService,\n  factory: KTXLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KTXLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThKTXLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThKTXLoaderPipe.ɵfac = function ThKTXLoaderPipe_Factory(t) {\n  return new (t || ThKTXLoaderPipe)(i0.ɵɵdirectiveInject(KTXLoaderService, 16));\n};\nThKTXLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadKTXTexture\",\n  type: ThKTXLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThKTXLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadKTXTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: KTXLoaderService\n    }];\n  }, null);\n})();\nclass ThKTXLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThKTXLoaderDirective.ɵfac = function ThKTXLoaderDirective_Factory(t) {\n  return new (t || ThKTXLoaderDirective)(i0.ɵɵdirectiveInject(ThCompressedTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(KTXLoaderService));\n};\nThKTXLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThKTXLoaderDirective,\n  selectors: [[\"\", \"loadKTXTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThKTXLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadKTXTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThCompressedTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: KTXLoaderService\n    }];\n  }, null);\n})();\nclass PVRLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = PVRLoader;\n  }\n}\nPVRLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵPVRLoaderService_BaseFactory;\n  return function PVRLoaderService_Factory(t) {\n    return (ɵPVRLoaderService_BaseFactory || (ɵPVRLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(PVRLoaderService)))(t || PVRLoaderService);\n  };\n}();\nPVRLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PVRLoaderService,\n  factory: PVRLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PVRLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThPVRLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThPVRLoaderPipe.ɵfac = function ThPVRLoaderPipe_Factory(t) {\n  return new (t || ThPVRLoaderPipe)(i0.ɵɵdirectiveInject(PVRLoaderService, 16));\n};\nThPVRLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadPVRTexture\",\n  type: ThPVRLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPVRLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadPVRTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: PVRLoaderService\n    }];\n  }, null);\n})();\nclass ThPVRLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThPVRLoaderDirective.ɵfac = function ThPVRLoaderDirective_Factory(t) {\n  return new (t || ThPVRLoaderDirective)(i0.ɵɵdirectiveInject(ThCompressedTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PVRLoaderService));\n};\nThPVRLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThPVRLoaderDirective,\n  selectors: [[\"\", \"loadPVRTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPVRLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadPVRTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThCompressedTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: PVRLoaderService\n    }];\n  }, null);\n})();\nclass EXRLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = EXRLoader;\n  }\n}\nEXRLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵEXRLoaderService_BaseFactory;\n  return function EXRLoaderService_Factory(t) {\n    return (ɵEXRLoaderService_BaseFactory || (ɵEXRLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(EXRLoaderService)))(t || EXRLoaderService);\n  };\n}();\nEXRLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: EXRLoaderService,\n  factory: EXRLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EXRLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThEXRLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThEXRLoaderPipe.ɵfac = function ThEXRLoaderPipe_Factory(t) {\n  return new (t || ThEXRLoaderPipe)(i0.ɵɵdirectiveInject(EXRLoaderService, 16));\n};\nThEXRLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadEXRTexture\",\n  type: ThEXRLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThEXRLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadEXRTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: EXRLoaderService\n    }];\n  }, null);\n})();\nclass ThEXRLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThEXRLoaderDirective.ɵfac = function ThEXRLoaderDirective_Factory(t) {\n  return new (t || ThEXRLoaderDirective)(i0.ɵɵdirectiveInject(ThDataTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(EXRLoaderService));\n};\nThEXRLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThEXRLoaderDirective,\n  selectors: [[\"\", \"loadEXRTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThEXRLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadEXRTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThDataTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: EXRLoaderService\n    }];\n  }, null);\n})();\nclass RGBELoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = RGBELoader;\n  }\n}\nRGBELoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵRGBELoaderService_BaseFactory;\n  return function RGBELoaderService_Factory(t) {\n    return (ɵRGBELoaderService_BaseFactory || (ɵRGBELoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(RGBELoaderService)))(t || RGBELoaderService);\n  };\n}();\nRGBELoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RGBELoaderService,\n  factory: RGBELoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RGBELoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThRGBELoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThRGBELoaderPipe.ɵfac = function ThRGBELoaderPipe_Factory(t) {\n  return new (t || ThRGBELoaderPipe)(i0.ɵɵdirectiveInject(RGBELoaderService, 16));\n};\nThRGBELoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadRGBETexture\",\n  type: ThRGBELoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRGBELoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadRGBETexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: RGBELoaderService\n    }];\n  }, null);\n})();\nclass ThRGBELoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThRGBELoaderDirective.ɵfac = function ThRGBELoaderDirective_Factory(t) {\n  return new (t || ThRGBELoaderDirective)(i0.ɵɵdirectiveInject(ThDataTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(RGBELoaderService));\n};\nThRGBELoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThRGBELoaderDirective,\n  selectors: [[\"\", \"loadRGBETexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRGBELoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadRGBETexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThDataTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: RGBELoaderService\n    }];\n  }, null);\n})();\nclass RGBMLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = RGBMLoader;\n  }\n}\nRGBMLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵRGBMLoaderService_BaseFactory;\n  return function RGBMLoaderService_Factory(t) {\n    return (ɵRGBMLoaderService_BaseFactory || (ɵRGBMLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(RGBMLoaderService)))(t || RGBMLoaderService);\n  };\n}();\nRGBMLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RGBMLoaderService,\n  factory: RGBMLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RGBMLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThRGBMLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThRGBMLoaderPipe.ɵfac = function ThRGBMLoaderPipe_Factory(t) {\n  return new (t || ThRGBMLoaderPipe)(i0.ɵɵdirectiveInject(RGBMLoaderService, 16));\n};\nThRGBMLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadRGBMTexture\",\n  type: ThRGBMLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRGBMLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadRGBMTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: RGBMLoaderService\n    }];\n  }, null);\n})();\nclass ThRGBMLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThRGBMLoaderDirective.ɵfac = function ThRGBMLoaderDirective_Factory(t) {\n  return new (t || ThRGBMLoaderDirective)(i0.ɵɵdirectiveInject(ThDataTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(RGBMLoaderService));\n};\nThRGBMLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThRGBMLoaderDirective,\n  selectors: [[\"\", \"loadRGBMTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRGBMLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadRGBMTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThDataTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: RGBMLoaderService\n    }];\n  }, null);\n})();\nclass TGALoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = TGALoader;\n  }\n}\nTGALoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵTGALoaderService_BaseFactory;\n  return function TGALoaderService_Factory(t) {\n    return (ɵTGALoaderService_BaseFactory || (ɵTGALoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(TGALoaderService)))(t || TGALoaderService);\n  };\n}();\nTGALoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TGALoaderService,\n  factory: TGALoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TGALoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThTGALoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThTGALoaderPipe.ɵfac = function ThTGALoaderPipe_Factory(t) {\n  return new (t || ThTGALoaderPipe)(i0.ɵɵdirectiveInject(TGALoaderService, 16));\n};\nThTGALoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadTGATexture\",\n  type: ThTGALoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTGALoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadTGATexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: TGALoaderService\n    }];\n  }, null);\n})();\nclass ThTGALoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThTGALoaderDirective.ɵfac = function ThTGALoaderDirective_Factory(t) {\n  return new (t || ThTGALoaderDirective)(i0.ɵɵdirectiveInject(ThDataTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(TGALoaderService));\n};\nThTGALoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThTGALoaderDirective,\n  selectors: [[\"\", \"loadTGATexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTGALoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadTGATexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThDataTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: TGALoaderService\n    }];\n  }, null);\n})();\nclass CubeTextureLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = CubeTextureLoader;\n  }\n}\nCubeTextureLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵCubeTextureLoaderService_BaseFactory;\n  return function CubeTextureLoaderService_Factory(t) {\n    return (ɵCubeTextureLoaderService_BaseFactory || (ɵCubeTextureLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(CubeTextureLoaderService)))(t || CubeTextureLoaderService);\n  };\n}();\nCubeTextureLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CubeTextureLoaderService,\n  factory: CubeTextureLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CubeTextureLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThCubeTextureLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThCubeTextureLoaderPipe.ɵfac = function ThCubeTextureLoaderPipe_Factory(t) {\n  return new (t || ThCubeTextureLoaderPipe)(i0.ɵɵdirectiveInject(CubeTextureLoaderService, 16));\n};\nThCubeTextureLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadCubeTexture\",\n  type: ThCubeTextureLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCubeTextureLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadCubeTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: CubeTextureLoaderService\n    }];\n  }, null);\n})();\nclass ThCubeTextureLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThCubeTextureLoaderDirective.ɵfac = function ThCubeTextureLoaderDirective_Factory(t) {\n  return new (t || ThCubeTextureLoaderDirective)(i0.ɵɵdirectiveInject(ThTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(CubeTextureLoaderService));\n};\nThCubeTextureLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThCubeTextureLoaderDirective,\n  selectors: [[\"\", \"loadCubeTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThCubeTextureLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadCubeTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: CubeTextureLoaderService\n    }];\n  }, null);\n})();\nclass ThAsyncLoaderService extends ThLoader {\n  load(...args) {\n    const loader = this.createLoaderInstance();\n    return loader.loadAsync(...args);\n  }\n}\nThAsyncLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵThAsyncLoaderService_BaseFactory;\n  return function ThAsyncLoaderService_Factory(t) {\n    return (ɵThAsyncLoaderService_BaseFactory || (ɵThAsyncLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(ThAsyncLoaderService)))(t || ThAsyncLoaderService);\n  };\n}();\nThAsyncLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ThAsyncLoaderService,\n  factory: ThAsyncLoaderService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAsyncLoaderService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass ThAsyncLoaderBasePipe {\n  constructor() {\n    this.animationLoop = inject(ThAnimationLoopService);\n  }\n  transform(...args) {\n    return this.service.load(...args).then(response => {\n      this.animationLoop.requestAnimationFrame();\n      return response;\n    });\n  }\n}\nclass ThAsyncLoaderBaseDirective {\n  set url(url) {\n    this._url = url;\n    this.load();\n  }\n  get url() {\n    return this._url;\n  }\n  get onLoaded() {\n    if (!this.onLoaded$) {\n      this.onLoaded$ = new EventEmitter();\n    }\n    return this.onLoaded$;\n  }\n  get onProgress() {\n    if (!this.onProgress$) {\n      this.onProgress$ = new EventEmitter();\n    }\n    return this.onProgress$;\n  }\n  constructor(host, zone) {\n    this.host = host;\n    this.zone = zone;\n    this.initialized = false;\n    this.animationLoop = inject(ThAnimationLoopService);\n    this.proxy = createLazyObject3DProxy();\n    host.objRef = this.proxy;\n  }\n  ngOnInit() {\n    this.initialized = true;\n    this.load();\n    // this.zone.runOutsideAngular(() => );\n  }\n\n  load() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.initialized) {\n        return;\n      }\n      if (_this2._url === undefined) {\n        throw new Error('missing url');\n      }\n      if (!_this2.proxy) {\n        return;\n      }\n      const url = _this2._url;\n      const onProgress = isObserved(_this2.onProgress$) ? progress => {\n        _this2.zone.run(() => {\n          _this2.onProgress$?.next(progress);\n        });\n      } : undefined;\n      const result = yield _this2.zone.runOutsideAngular(() => _this2.service.load(url, onProgress));\n      _this2.animationLoop.requestAnimationFrame();\n      _this2.proxy.objRef = _this2.getRefFromResponse(result);\n      // add the new object to the parent and\n      // emit a loaded event directly on the three.js object and on objRef$\n      _this2.host.objRef = _this2.proxy;\n      if (_this2.onLoaded$ && result !== undefined) {\n        _this2.zone.run(() => _this2.onLoaded$?.next(result));\n      }\n    })();\n  }\n}\nThAsyncLoaderBaseDirective.ɵfac = function ThAsyncLoaderBaseDirective_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\nThAsyncLoaderBaseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThAsyncLoaderBaseDirective,\n  inputs: {\n    url: \"url\"\n  },\n  outputs: {\n    onLoaded: \"onLoaded\",\n    onProgress: \"onProgress\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThAsyncLoaderBaseDirective, [{\n    type: Directive,\n    args: [{}]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    url: [{\n      type: Input\n    }],\n    onLoaded: [{\n      type: Output\n    }],\n    onProgress: [{\n      type: Output\n    }]\n  });\n})();\nclass DRACOLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = DRACOLoader;\n    this.decoderPath = '';\n    this.reuseInstance = true;\n  }\n  setDecoderPath(path) {\n    this.decoderPath = path;\n  }\n  setDecoderConfig(config) {\n    this.decoderConfig = config;\n  }\n  setWorkerLimit(limit) {\n    this.workerLimit = limit;\n  }\n  setReuseInstance(reuse) {\n    this.reuseInstance = reuse;\n  }\n  createLoaderInstance() {\n    if (this.reuseInstance && this.instance) {\n      return this.instance;\n    }\n    const loader = super.createLoaderInstance();\n    loader.setDecoderPath(this.decoderPath);\n    if (this.decoderConfig) {\n      loader.setDecoderConfig(this.decoderConfig);\n    }\n    if (this.workerLimit) {\n      loader.setWorkerLimit(this.workerLimit);\n    }\n    if (this.reuseInstance) {\n      this.instance = loader;\n    }\n    return loader;\n  }\n}\nDRACOLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵDRACOLoaderService_BaseFactory;\n  return function DRACOLoaderService_Factory(t) {\n    return (ɵDRACOLoaderService_BaseFactory || (ɵDRACOLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(DRACOLoaderService)))(t || DRACOLoaderService);\n  };\n}();\nDRACOLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DRACOLoaderService,\n  factory: DRACOLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DRACOLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GLTFLoaderService extends ThAsyncLoaderService {\n  constructor(dracoLoaderService) {\n    super();\n    this.dracoLoaderService = dracoLoaderService;\n    this.clazz = GLTFLoader;\n  }\n  createLoaderInstance() {\n    const loader = super.createLoaderInstance();\n    loader.setDRACOLoader(this.dracoLoaderService.createLoaderInstance());\n    return loader;\n  }\n}\nGLTFLoaderService.ɵfac = function GLTFLoaderService_Factory(t) {\n  return new (t || GLTFLoaderService)(i0.ɵɵinject(DRACOLoaderService));\n};\nGLTFLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GLTFLoaderService,\n  factory: GLTFLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GLTFLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: DRACOLoaderService\n    }];\n  }, null);\n})();\nclass ThGLTFLoaderPipe extends ThAsyncLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThGLTFLoaderPipe.ɵfac = function ThGLTFLoaderPipe_Factory(t) {\n  return new (t || ThGLTFLoaderPipe)(i0.ɵɵdirectiveInject(GLTFLoaderService, 16));\n};\nThGLTFLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadGLTF\",\n  type: ThGLTFLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThGLTFLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadGLTF',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: GLTFLoaderService\n    }];\n  }, null);\n})();\nclass ThGLTFLoaderDirective extends ThAsyncLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n  getRefFromResponse(response) {\n    return response.scene;\n  }\n}\nThGLTFLoaderDirective.ɵfac = function ThGLTFLoaderDirective_Factory(t) {\n  return new (t || ThGLTFLoaderDirective)(i0.ɵɵdirectiveInject(ThObject3D, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(GLTFLoaderService));\n};\nThGLTFLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThGLTFLoaderDirective,\n  selectors: [[\"\", \"loadGLTF\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThGLTFLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadGLTF]'\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: GLTFLoaderService\n    }];\n  }, null);\n})();\nclass TextureLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = TextureLoader;\n  }\n}\nTextureLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵTextureLoaderService_BaseFactory;\n  return function TextureLoaderService_Factory(t) {\n    return (ɵTextureLoaderService_BaseFactory || (ɵTextureLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(TextureLoaderService)))(t || TextureLoaderService);\n  };\n}();\nTextureLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TextureLoaderService,\n  factory: TextureLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextureLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThTextureLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThTextureLoaderPipe.ɵfac = function ThTextureLoaderPipe_Factory(t) {\n  return new (t || ThTextureLoaderPipe)(i0.ɵɵdirectiveInject(TextureLoaderService, 16));\n};\nThTextureLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadTexture\",\n  type: ThTextureLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTextureLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: TextureLoaderService\n    }];\n  }, null);\n})();\nclass ThTextureLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThTextureLoaderDirective.ɵfac = function ThTextureLoaderDirective_Factory(t) {\n  return new (t || ThTextureLoaderDirective)(i0.ɵɵdirectiveInject(ThTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(TextureLoaderService));\n};\nThTextureLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThTextureLoaderDirective,\n  selectors: [[\"\", \"loadTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThTextureLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: TextureLoaderService\n    }];\n  }, null);\n})();\n\n/**\n * create a clone of any \"cloneable\" three.js class (or from it's ngx-three warpper)\n */\nclass ClonePipe {\n  transform(value) {\n    if (!value) {\n      return;\n    }\n    if (value instanceof ThWrapperBase) {\n      return value.objRef?.clone();\n    } else {\n      return value.clone();\n    }\n  }\n}\nClonePipe.ɵfac = function ClonePipe_Factory(t) {\n  return new (t || ClonePipe)();\n};\nClonePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"clone\",\n  type: ClonePipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClonePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'clone'\n    }]\n  }], null, null);\n})();\n\n/**\n * constructs a color of it's constructor parameters\n */\nclass ColorPipe {\n  /* ContructorProperties does not support multiple constructors --> */\n  transform(args) {\n    if (Array.isArray(args)) {\n      return new Color(...args);\n    } else {\n      return new Color(args);\n    }\n  }\n}\nColorPipe.ɵfac = function ColorPipe_Factory(t) {\n  return new (t || ColorPipe)();\n};\nColorPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"color\",\n  type: ColorPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'color',\n      pure: true\n    }]\n  }], null, null);\n})();\nclass FogPipe {\n  transform(args) {\n    return new Fog(...args);\n  }\n}\nFogPipe.ɵfac = function FogPipe_Factory(t) {\n  return new (t || FogPipe)();\n};\nFogPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"fog\",\n  type: FogPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FogPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'fog',\n      pure: true\n    }]\n  }], null, null);\n})();\n\n/**\n * transform arrays to vectors\n */\nclass Vector2Pipe {\n  transform(args) {\n    return new Vector2(...args);\n  }\n}\nVector2Pipe.ɵfac = function Vector2Pipe_Factory(t) {\n  return new (t || Vector2Pipe)();\n};\nVector2Pipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"vector2\",\n  type: Vector2Pipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Vector2Pipe, [{\n    type: Pipe,\n    args: [{\n      name: 'vector2',\n      pure: true\n    }]\n  }], null, null);\n})();\nclass Vector3Pipe {\n  transform(args) {\n    return new Vector3(...args);\n  }\n}\nVector3Pipe.ɵfac = function Vector3Pipe_Factory(t) {\n  return new (t || Vector3Pipe)();\n};\nVector3Pipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"vector3\",\n  type: Vector3Pipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Vector3Pipe, [{\n    type: Pipe,\n    args: [{\n      name: 'vector3',\n      pure: true\n    }]\n  }], null, null);\n})();\nclass Vector4Pipe {\n  transform(args) {\n    return new Vector4(...args);\n  }\n}\nVector4Pipe.ɵfac = function Vector4Pipe_Factory(t) {\n  return new (t || Vector4Pipe)();\n};\nVector4Pipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"vector4\",\n  type: Vector4Pipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Vector4Pipe, [{\n    type: Pipe,\n    args: [{\n      name: 'vector4',\n      pure: true\n    }]\n  }], null, null);\n})();\nclass ThRenderDirective {\n  constructor(engineService, animationLoopService) {\n    this.engineService = engineService;\n    this.animationLoopService = animationLoopService;\n  }\n  get beforeRender() {\n    return this.engineService.beforeRender$;\n  }\n  get onResize() {\n    return this.engineService.resize$;\n  }\n  set renderOnDemand(onDemand) {\n    if (onDemand) {\n      this.animationLoopService.stop();\n    } else {\n      this.animationLoopService.start();\n    }\n  }\n  get renderOnDemand() {\n    return !this.animationLoopService.isActive();\n  }\n}\nThRenderDirective.ɵfac = function ThRenderDirective_Factory(t) {\n  return new (t || ThRenderDirective)(i0.ɵɵdirectiveInject(ThEngineService), i0.ɵɵdirectiveInject(ThAnimationLoopService));\n};\nThRenderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThRenderDirective,\n  selectors: [[\"\", \"beforeRender\", \"\"], [\"\", \"onResize\", \"\"], [\"\", \"renderOnDemand\", \"\"]],\n  inputs: {\n    renderOnDemand: \"renderOnDemand\"\n  },\n  outputs: {\n    beforeRender: \"beforeRender\",\n    onResize: \"onResize\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThRenderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[beforeRender], [onResize], [renderOnDemand]'\n    }]\n  }], function () {\n    return [{\n      type: ThEngineService\n    }, {\n      type: ThAnimationLoopService\n    }];\n  }, {\n    beforeRender: [{\n      type: Output\n    }],\n    onResize: [{\n      type: Output\n    }],\n    renderOnDemand: [{\n      type: Input\n    }]\n  });\n})();\nclass StatsDirective {\n  constructor(engineService) {\n    this.engineService = engineService;\n    this.stats = new Stats();\n  }\n  ngOnDestroy() {\n    if (this.renderSubscription) {\n      this.renderSubscription.unsubscribe();\n    }\n  }\n  ngOnInit() {\n    if (!this.engineService.canvas) {\n      throw new Error('No canvas present');\n    }\n    const parentElement = this.engineService.canvas.parentElement;\n    if (parentElement) {\n      parentElement.style.position = 'relative';\n      this.stats.dom.style.position = 'absolute';\n      this.stats.showPanel(0);\n      this.engineService.canvas.parentElement?.appendChild(this.stats.dom);\n      this.renderSubscription = this.engineService.beforeRender$.subscribe(() => {\n        this.stats.update();\n      });\n    }\n  }\n  set thStats(enabled) {\n    if (!enabled) {\n      this.stats.dom.style.visibility = 'hidden';\n    } else {\n      this.stats.dom.style.visibility = 'visible';\n    }\n  }\n}\nStatsDirective.ɵfac = function StatsDirective_Factory(t) {\n  return new (t || StatsDirective)(i0.ɵɵdirectiveInject(ThEngineService));\n};\nStatsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: StatsDirective,\n  selectors: [[\"\", \"thStats\", \"\"]],\n  inputs: {\n    thStats: \"thStats\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StatsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[thStats]'\n    }]\n  }], function () {\n    return [{\n      type: ThEngineService\n    }];\n  }, {\n    thStats: [{\n      type: Input\n    }]\n  });\n})();\nclass OBJLoaderService extends ThAsyncLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = OBJLoader;\n  }\n}\nOBJLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵOBJLoaderService_BaseFactory;\n  return function OBJLoaderService_Factory(t) {\n    return (ɵOBJLoaderService_BaseFactory || (ɵOBJLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(OBJLoaderService)))(t || OBJLoaderService);\n  };\n}();\nOBJLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OBJLoaderService,\n  factory: OBJLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OBJLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThObjLoaderPipe extends ThAsyncLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThObjLoaderPipe.ɵfac = function ThObjLoaderPipe_Factory(t) {\n  return new (t || ThObjLoaderPipe)(i0.ɵɵdirectiveInject(OBJLoaderService, 16));\n};\nThObjLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadObj\",\n  type: ThObjLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThObjLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadObj',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: OBJLoaderService\n    }];\n  }, null);\n})();\nclass ThObjLoaderDirective extends ThAsyncLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n  getRefFromResponse(response) {\n    return response;\n  }\n}\nThObjLoaderDirective.ɵfac = function ThObjLoaderDirective_Factory(t) {\n  return new (t || ThObjLoaderDirective)(i0.ɵɵdirectiveInject(ThObject3D, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(OBJLoaderService));\n};\nThObjLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThObjLoaderDirective,\n  selectors: [[\"\", \"loadObj\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThObjLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadObj]'\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: OBJLoaderService\n    }];\n  }, null);\n})();\nclass FBXLoaderService extends ThAsyncLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = FBXLoader;\n  }\n}\nFBXLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵFBXLoaderService_BaseFactory;\n  return function FBXLoaderService_Factory(t) {\n    return (ɵFBXLoaderService_BaseFactory || (ɵFBXLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(FBXLoaderService)))(t || FBXLoaderService);\n  };\n}();\nFBXLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FBXLoaderService,\n  factory: FBXLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FBXLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThFBXLoaderPipe extends ThAsyncLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThFBXLoaderPipe.ɵfac = function ThFBXLoaderPipe_Factory(t) {\n  return new (t || ThFBXLoaderPipe)(i0.ɵɵdirectiveInject(FBXLoaderService, 16));\n};\nThFBXLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadFBX\",\n  type: ThFBXLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThFBXLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadFBX',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: FBXLoaderService\n    }];\n  }, null);\n})();\nclass ThFBXLoaderDirective extends ThAsyncLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n  getRefFromResponse(response) {\n    return response;\n  }\n}\nThFBXLoaderDirective.ɵfac = function ThFBXLoaderDirective_Factory(t) {\n  return new (t || ThFBXLoaderDirective)(i0.ɵɵdirectiveInject(ThObject3D, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(FBXLoaderService));\n};\nThFBXLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThFBXLoaderDirective,\n  selectors: [[\"\", \"loadFBX\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThFBXLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadFBX]'\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: FBXLoaderService\n    }];\n  }, null);\n})();\nclass LogLuvLoaderService extends ThCallbackLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = LogLuvLoader;\n  }\n}\nLogLuvLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵLogLuvLoaderService_BaseFactory;\n  return function LogLuvLoaderService_Factory(t) {\n    return (ɵLogLuvLoaderService_BaseFactory || (ɵLogLuvLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(LogLuvLoaderService)))(t || LogLuvLoaderService);\n  };\n}();\nLogLuvLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LogLuvLoaderService,\n  factory: LogLuvLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LogLuvLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThLogLuvLoaderPipe extends ThCallbackLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThLogLuvLoaderPipe.ɵfac = function ThLogLuvLoaderPipe_Factory(t) {\n  return new (t || ThLogLuvLoaderPipe)(i0.ɵɵdirectiveInject(LogLuvLoaderService, 16));\n};\nThLogLuvLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadLogLuvTexture\",\n  type: ThLogLuvLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLogLuvLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadLogLuvTexture',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: LogLuvLoaderService\n    }];\n  }, null);\n})();\nclass ThLogLuvLoaderDirective extends ThCallbackLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n}\nThLogLuvLoaderDirective.ɵfac = function ThLogLuvLoaderDirective_Factory(t) {\n  return new (t || ThLogLuvLoaderDirective)(i0.ɵɵdirectiveInject(ThDataTexture, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(LogLuvLoaderService));\n};\nThLogLuvLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThLogLuvLoaderDirective,\n  selectors: [[\"\", \"loadLogLuvTexture\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThLogLuvLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadLogLuvTexture]'\n    }]\n  }], function () {\n    return [{\n      type: ThDataTexture,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: LogLuvLoaderService\n    }];\n  }, null);\n})();\n\n/*\n          Generated, modifications will get overwritten\n        */\n\nclass PLYLoaderService extends ThAsyncLoaderService {\n  constructor() {\n    super(...arguments);\n    this.clazz = PLYLoader;\n  }\n}\nPLYLoaderService.ɵfac = /* @__PURE__ */function () {\n  let ɵPLYLoaderService_BaseFactory;\n  return function PLYLoaderService_Factory(t) {\n    return (ɵPLYLoaderService_BaseFactory || (ɵPLYLoaderService_BaseFactory = i0.ɵɵgetInheritedFactory(PLYLoaderService)))(t || PLYLoaderService);\n  };\n}();\nPLYLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PLYLoaderService,\n  factory: PLYLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PLYLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ThPLYLoaderPipe extends ThAsyncLoaderBasePipe {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nThPLYLoaderPipe.ɵfac = function ThPLYLoaderPipe_Factory(t) {\n  return new (t || ThPLYLoaderPipe)(i0.ɵɵdirectiveInject(PLYLoaderService, 16));\n};\nThPLYLoaderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"loadPLY\",\n  type: ThPLYLoaderPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPLYLoaderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'loadPLY',\n      pure: true\n    }]\n  }], function () {\n    return [{\n      type: PLYLoaderService\n    }];\n  }, null);\n})();\nclass ThPLYLoaderDirective extends ThAsyncLoaderBaseDirective {\n  constructor(host, zone, service) {\n    super(host, zone);\n    this.host = host;\n    this.zone = zone;\n    this.service = service;\n  }\n  getRefFromResponse(response) {\n    response.computeVertexNormals();\n    return response;\n  }\n  load() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this3.initialized) {\n        return;\n      }\n      if (_this3._url === undefined) {\n        throw new Error('missing url');\n      }\n      const url = _this3._url;\n      const onProgress = isObserved(_this3.onProgress$) ? progress => {\n        _this3.onProgress$?.next(progress);\n      } : undefined;\n      const result = yield _this3.zone.runOutsideAngular(() => _this3.service.load(url, onProgress));\n      // add the new object to the parent and\n      // emit a loaded event directly on the three.js object and on objRef$\n      _this3.host.objRef = _this3.getRefFromResponse(result);\n      if (_this3.onLoaded$ && result !== undefined) {\n        _this3.onLoaded$?.next(result);\n      }\n    })();\n  }\n}\nThPLYLoaderDirective.ɵfac = function ThPLYLoaderDirective_Factory(t) {\n  return new (t || ThPLYLoaderDirective)(i0.ɵɵdirectiveInject(ThBufferGeometry, 1), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLYLoaderService));\n};\nThPLYLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThPLYLoaderDirective,\n  selectors: [[\"\", \"loadPLY\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThPLYLoaderDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[loadPLY]'\n    }]\n  }], function () {\n    return [{\n      type: ThBufferGeometry,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: PLYLoaderService\n    }];\n  }, null);\n})();\nclass BindPipe {\n  transform(methodToBind, instance) {\n    return methodToBind.bind(instance);\n  }\n}\nBindPipe.ɵfac = function BindPipe_Factory(t) {\n  return new (t || BindPipe)();\n};\nBindPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bind\",\n  type: BindPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BindPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bind'\n    }]\n  }], null, null);\n})();\n\n/**\n * The following code is ported from pmndrs/drei and adapted to work with Angular and ngx-three\n * Many thanks to pmndrs/drei at its contributors!\n */\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n  return true;\n}\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n  return undefined;\n}\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n  return prepend + matrix3d;\n}\nconst getCameraCSSMatrix = (multipliers => matrix => getCSSMatrix(matrix, multipliers))([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\nconst getObjectCSSMatrix = (scaleMultipliers => (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)'))(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n/**\n * A port of the pmndrs/drei Html component\n *\n * Add Html content to any three.js object3d node\n */\nclass HtmlComponent extends ThGroup {\n  constructor(view, canvas, parent) {\n    super(parent);\n    this.view = view;\n    this.canvas = canvas;\n    this.prepend = false; // Project content behind the canvas (default: false)\n    this.center = false; // Adds a -50%/-50% css transform (default: false) [ignored in transform mode]\n    this.fullscreen = false; // Aligns to the upper-left corner, fills the screen (default:false) [ignored in transform mode]\n    this.eps = 0.001;\n    this.sprite = false; // Renders as sprite, but only in transform mode (default=false)\n    this.transform = false; // If true, applies matrix3d transformations (default=false)\n    this.zIndexRange = [16777271, 0]; // Z-order range (default=[16777271, 0])\n    this.onOcclude = new EventEmitter();\n    /**\n     * Override default positioning function. [ignored in transform mode]\n     */\n    this.calculatePosition = defaultCalculatePosition;\n    this.as = 'div'; // Wrapping element (default: 'div')\n    this.pointerEvents = 'auto';\n    this.transformInnerStyles = this.computeInnerStyles();\n    this.styles = null;\n    this.oldZoom = 0;\n    this.oldPosition = [0, 0];\n    this.notOccluded = true;\n    this.raycaster = inject(RAYCASTER);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.styles = this.computeStyles();\n  }\n  ngAfterViewInit() {\n    this.el = document.createElement(this.as);\n    this.frameSubscription = this.view.onRender.subscribe(() => this.onFrame());\n    if (this.transformOuterRef) {\n      this.el.appendChild(this.transformOuterRef.nativeElement);\n    }\n    if (this.el && !this.target) {\n      this.appendElement(this.el);\n    }\n  }\n  onResize() {\n    this.styles = this.computeStyles();\n  }\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n    /*\n    if(this.el) {\n      if(changes.portal || changes.transform) {\n        this.appendElement(this.el);\n      }\n           if(changes.wrapperClass) {\n        this.el.className = changes.wrapperClass.currentValue ?? '';\n      }\n           if(changes.pointerEvents) {\n        this.transformInnerStyles = this.computeInnerStyles();\n      }\n    }\n    */\n  }\n\n  appendElement(el) {\n    if (!this.el || !this.objRef || !this.canvas.rendererCanvas || !this.view.camera) {\n      return;\n    }\n    this.target = this.portal ?? this.canvas.rendererCanvas?.nativeElement.parentElement;\n    this.view.scene?.objRef?.updateMatrixWorld();\n    if (this.transform) {\n      el.style.cssText = 'position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;';\n    } else {\n      const vec = this.calculatePosition(this.objRef, this.view.camera.objRef, this.getSize());\n      el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n    }\n    if (this.target) {\n      if (this.prepend) {\n        this.target.prepend(el);\n      } else {\n        this.target.appendChild(el);\n      }\n    }\n  }\n  onFrame() {\n    const camera = this.view.camera?.objRef;\n    const scene = this.view.scene?.objRef;\n    const group = this._objRef;\n    const size = this.getSize();\n    if (!camera || !group || !scene || !this.el) {\n      return;\n    }\n    camera.updateMatrixWorld();\n    group.updateWorldMatrix(true, false);\n    const vec = this.transform ? this.oldPosition : this.calculatePosition(group, camera, size);\n    if (this.transform || Math.abs(this.oldZoom - camera.zoom) > this.eps || Math.abs(this.oldPosition[0] - vec[0]) > this.eps || Math.abs(this.oldPosition[1] - vec[1]) > this.eps) {\n      const isBehindCamera = isObjectBehindCamera(group, camera);\n      let raytraceTarget = false;\n      if (typeof this.occlude === 'boolean') {\n        if (this.occlude === true) {\n          raytraceTarget = [scene];\n        }\n      } else if (Array.isArray(this.occlude)) {\n        raytraceTarget = this.occlude.map(item => item.objRef ?? item);\n      }\n      const previouslyVisible = this.notOccluded;\n      if (raytraceTarget) {\n        this.notOccluded = !isBehindCamera && isObjectVisible(group, camera, this.raycaster, raytraceTarget);\n      } else {\n        this.notOccluded = !isBehindCamera;\n      }\n      if (previouslyVisible !== this.notOccluded) {\n        if (this.onOcclude.length > 0) {\n          this.onOcclude.next(!this.notOccluded);\n        } else {\n          this.el.style.display = this.notOccluded ? 'block' : 'none';\n        }\n      }\n      this.el.style.zIndex = `${objectZIndex(group, camera, this.zIndexRange)}`;\n      if (this.transform) {\n        const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n        const fov = camera.projectionMatrix.elements[5] * heightHalf;\n        const {\n          isOrthographicCamera,\n          top,\n          left,\n          bottom,\n          right\n        } = camera;\n        const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n        const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n        let matrix = group.matrixWorld;\n        if (this.sprite) {\n          matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.scale);\n          matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n          matrix.elements[15] = 1;\n        }\n        this.el.style.width = size.width + 'px';\n        this.el.style.height = size.height + 'px';\n        this.el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n        if (this.transformOuterRef && this.transformInnerRef) {\n          // eslint-disable-next-line max-len\n          this.transformOuterRef.nativeElement.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n          this.transformInnerRef.nativeElement.style.transform = getObjectCSSMatrix(matrix, 1 / ((this.distanceFactor || 10) / 400));\n        }\n      } else {\n        const scale = this.distanceFactor === undefined ? 1 : objectScale(group, camera) * this.distanceFactor;\n        this.el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n      }\n      this.oldPosition = vec;\n      this.oldZoom = camera.zoom;\n    }\n  }\n  ngOnDestroy() {\n    this.el?.remove();\n    this.frameSubscription?.unsubscribe();\n  }\n  computeStyles() {\n    const size = this.getSize();\n    if (this.transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width + 'px',\n        height: size.height + 'px',\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: this.center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(this.fullscreen && {\n          top: -size.height / 2 + 'px',\n          left: -size.width / 2 + 'px',\n          width: size.width + 'px',\n          height: size.height + 'px'\n        }),\n        ...this.style\n      };\n    }\n  }\n  computeInnerStyles() {\n    return {\n      position: 'absolute',\n      pointerEvents: this.pointerEvents\n    };\n  }\n  getSize() {\n    return this.view.viewPort ?? this.canvas.rendererCanvas?.nativeElement.getBoundingClientRect() ?? {\n      width: 0,\n      height: 0\n    };\n  }\n}\nHtmlComponent.ɵfac = function HtmlComponent_Factory(t) {\n  return new (t || HtmlComponent)(i0.ɵɵdirectiveInject(ThView), i0.ɵɵdirectiveInject(ThCanvas), i0.ɵɵdirectiveInject(ThObject3D, 4));\n};\nHtmlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HtmlComponent,\n  selectors: [[\"th-html\"]],\n  viewQuery: function HtmlComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.transformOuterRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.transformInnerRef = _t.first);\n    }\n  },\n  inputs: {\n    prepend: \"prepend\",\n    center: \"center\",\n    fullscreen: \"fullscreen\",\n    portal: \"portal\",\n    distanceFactor: \"distanceFactor\",\n    sprite: \"sprite\",\n    transform: \"transform\",\n    zIndexRange: \"zIndexRange\",\n    style: \"style\",\n    className: \"className\",\n    occlude: \"occlude\",\n    calculatePosition: \"calculatePosition\",\n    as: \"as\",\n    wrapperClass: \"wrapperClass\",\n    pointerEvents: \"pointerEvents\"\n  },\n  outputs: {\n    onOcclude: \"onOcclude\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 5,\n  vars: 2,\n  consts: [[3, \"ngStyle\", \"onResize\", 4, \"ngIf\", \"ngIfElse\"], [\"noTransform\", \"\"], [\"tempOutlet\", \"\"], [3, \"ngStyle\", \"onResize\"], [\"outerRef\", \"\"], [3, \"ngStyle\"], [\"innerRef\", \"\"], [3, \"className\"], [4, \"ngTemplateOutlet\"], [3, \"ngStyle\", \"className\"]],\n  template: function HtmlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, HtmlComponent_div_0_Template, 6, 6, \"div\", 0);\n      i0.ɵɵtemplate(1, HtmlComponent_ng_template_1_Template, 3, 3, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, HtmlComponent_ng_template_3_Template, 1, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.transform)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i4.NgIf, i4.NgTemplateOutlet, i4.NgStyle, ThRenderDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HtmlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'th-html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div [ngStyle]=\\\"styles\\\" #outerRef *ngIf=\\\"transform;  else noTransform\\\" (onResize)=\\\"onResize()\\\">\\n    <div #innerRef [ngStyle]=\\\"transformInnerStyles\\\" >\\n        <div [style]=\\\"style\\\" [className]=\\\"className\\\">\\n            <ng-container *ngTemplateOutlet=\\\"tempOutlet\\\" ></ng-container>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #noTransform>\\n    <div [ngStyle]=\\\"styles\\\" [className]=\\\"className\\\" #outerRef>\\n        <ng-container *ngTemplateOutlet=\\\"tempOutlet\\\" ></ng-container>\\n    </div>\\n</ng-template>\\n\\n<ng-template #tempOutlet>\\n    <ng-content></ng-content>\\n</ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: ThView\n    }, {\n      type: ThCanvas\n    }, {\n      type: ThObject3D,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }];\n  }, {\n    prepend: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    fullscreen: [{\n      type: Input\n    }],\n    portal: [{\n      type: Input\n    }],\n    distanceFactor: [{\n      type: Input\n    }],\n    sprite: [{\n      type: Input\n    }],\n    transform: [{\n      type: Input\n    }],\n    zIndexRange: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    className: [{\n      type: Input\n    }],\n    occlude: [{\n      type: Input\n    }],\n    onOcclude: [{\n      type: Output\n    }],\n    calculatePosition: [{\n      type: Input\n    }],\n    as: [{\n      type: Input\n    }],\n    wrapperClass: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    transformOuterRef: [{\n      type: ViewChild,\n      args: ['outerRef']\n    }],\n    transformInnerRef: [{\n      type: ViewChild,\n      args: ['innerRef']\n    }]\n  });\n})();\nclass RefByIdDirective {\n  constructor(host, parent) {\n    this.host = host;\n    this.parent = parent;\n    this.host.autoAddToParent = false;\n    this.host.autoDispose = false;\n    this.host.objRef = createLazyObject3DProxy();\n  }\n  set refById(id) {\n    this.id = id;\n    this.subscription?.unsubscribe();\n    this.subscription = this.parent.objRef$.subscribe(obj => {\n      this.parentObj = obj;\n      this.applyRef();\n    });\n  }\n  applyRef() {\n    if (!this.parentObj || this.id === undefined) {\n      return;\n    }\n    const ref = this.findById(this.parentObj, this.id);\n    if (ref) {\n      this.setRef(this.host, ref);\n    }\n  }\n  findById(parentObj, id) {\n    if ((parentObj.name ?? parentObj.uuid) === id) {\n      return parentObj;\n    }\n    for (const child of parentObj.children) {\n      const object = this.findById(child, id);\n      if (object !== undefined) {\n        return object;\n      }\n    }\n    return undefined;\n  }\n  setRef(host, ref) {\n    const objRef = host.objRef;\n    if (!objRef) {\n      return;\n    }\n    if (isLazyObject3dProxy(objRef)) {\n      objRef.objRef = ref;\n      host.objRef = objRef;\n    }\n  }\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\nRefByIdDirective.ɵfac = function RefByIdDirective_Factory(t) {\n  return new (t || RefByIdDirective)(i0.ɵɵdirectiveInject(ThObject3D, 2), i0.ɵɵdirectiveInject(ThObject3D, 4));\n};\nRefByIdDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RefByIdDirective,\n  selectors: [[\"\", \"refById\", \"\"]],\n  inputs: {\n    refById: \"refById\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RefByIdDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[refById]'\n    }]\n  }], function () {\n    return [{\n      type: ThObject3D,\n      decorators: [{\n        type: Self\n      }]\n    }, {\n      type: ThObject3D,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }];\n  }, {\n    refById: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * creates a plane from a normal vector3 and a constant:\n * https://threejs.org/docs/#api/en/math/Plane\n */\nclass PlanePipe {\n  transform(normal, constant) {\n    return new Plane(new Vector3(...normal), constant);\n  }\n}\nPlanePipe.ɵfac = function PlanePipe_Factory(t) {\n  return new (t || PlanePipe)();\n};\nPlanePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"plane\",\n  type: PlanePipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlanePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'plane'\n    }]\n  }], null, null);\n})();\nclass NgxThreeModule {}\nNgxThreeModule.ɵfac = function NgxThreeModule_Factory(t) {\n  return new (t || NgxThreeModule)();\n};\nNgxThreeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxThreeModule\n});\nNgxThreeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [NgxThreeGeneratedModule, CommonModule, NgxThreeGeneratedModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxThreeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ThCanvas, ThView, ThObjectBase, ThMaterialBase, ThWrapperBase, ThGLTFLoaderDirective, ThGLTFLoaderPipe, ThObjLoaderPipe, ThObjLoaderDirective, ThFBXLoaderDirective, ThFBXLoaderPipe, ThPLYLoaderDirective, ThPLYLoaderPipe, RaycasterEventDirective, ColorPipe, Vector2Pipe, Vector3Pipe, Vector4Pipe, ClonePipe, FogPipe, BindPipe, PlanePipe, StatsDirective, ThRenderDirective,\n      // texture loaders\n      ThTextureLoaderDirective, ThTextureLoaderPipe, ThCubeTextureLoaderDirective, ThCubeTextureLoaderPipe,\n      // compressed texture loaders\n      ThDDSLoaderDirective, ThDDSLoaderPipe, ThKTXLoaderDirective, ThKTXLoaderPipe, ThKTX2LoaderDirective, ThKTX2LoaderPipe, ThPVRLoaderDirective, ThPVRLoaderPipe,\n      // data texture loaders\n      ThEXRLoaderDirective, ThEXRLoaderPipe, ThRGBELoaderDirective, ThRGBELoaderPipe, ThRGBMLoaderDirective, ThRGBMLoaderPipe, ThTGALoaderDirective, ThTGALoaderPipe, ThLogLuvLoaderDirective, ThLogLuvLoaderPipe,\n      // directives\n      RefByIdDirective,\n      //extras\n      HtmlComponent],\n      imports: [NgxThreeGeneratedModule, CommonModule],\n      exports: [NgxThreeGeneratedModule, ThCanvas, ThView, ThGLTFLoaderDirective, ThGLTFLoaderPipe, ThObjLoaderDirective, ThObjLoaderPipe, ThFBXLoaderDirective, ThFBXLoaderPipe, ThPLYLoaderDirective, ThPLYLoaderPipe, RaycasterEventDirective, ColorPipe, Vector2Pipe, Vector3Pipe, Vector4Pipe, ClonePipe, FogPipe, BindPipe, PlanePipe, ThRenderDirective, StatsDirective,\n      // texture loaders\n      ThTextureLoaderDirective, ThTextureLoaderPipe, ThCubeTextureLoaderDirective, ThCubeTextureLoaderPipe,\n      // compressed texture loaders\n      ThDDSLoaderDirective, ThDDSLoaderPipe, ThKTXLoaderDirective, ThKTXLoaderPipe, ThKTX2LoaderDirective, ThKTX2LoaderPipe, ThPVRLoaderDirective, ThPVRLoaderPipe,\n      // data texture loaders\n      ThEXRLoaderDirective, ThEXRLoaderPipe, ThRGBELoaderDirective, ThRGBELoaderPipe, ThRGBMLoaderDirective, ThRGBMLoaderPipe, ThTGALoaderDirective, ThTGALoaderPipe, ThLogLuvLoaderDirective, ThLogLuvLoaderPipe,\n      // directives\n      RefByIdDirective,\n      // extra\n      HtmlComponent]\n    }]\n  }], null, null);\n})();\nfunction createThProviderArray(cls, baseCls) {\n  const providers = [];\n  if (ThObject3D.isPrototypeOf(baseCls) || Object3D === baseCls) {\n    providers.push({\n      provide: ThObject3D,\n      useExisting: forwardRef(() => cls)\n    });\n    if (ThCamera.isPrototypeOf(baseCls) || ThCamera === baseCls) {\n      providers.push({\n        provide: ThCamera,\n        useExisting: forwardRef(() => cls)\n      });\n    }\n  }\n}\n/**\n * usage:\n *\n * @Component({\n *  providers: createObj3DProviderArray(forwardRef(() => TheComponent)))\n * })\n * export class TheComponent {\n * ...\n * }\n * @param type the Object3D derived Class to be provided\n */\nfunction createObj3DProviderArray(type) {\n  return [{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => type)\n  }];\n}\nfunction createCameraProviderArray(type) {\n  return [{\n    provide: ThObject3D,\n    useExisting: forwardRef(() => type)\n  }, {\n    provide: ThCamera,\n    useExisting: forwardRef(() => type)\n  }];\n}\n\n/*\n * Public API Surface of ngx-three\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BindPipe, ClonePipe, ColorPipe, CubeTextureLoaderService, DDSLoaderService, DRACOLoaderService, EXRLoaderService, FBXLoaderService, FogPipe, GLTFLoaderService, HtmlComponent, KTX2LoaderService, KTXLoaderService, LogLuvLoaderService, NgxThreeGeneratedModule, NgxThreeModule, OBJLoaderService, PLYLoaderService, PVRLoaderService, PlanePipe, RGBELoaderService, RGBMLoaderService, RaycasterEventDirective, RefByIdDirective, StatsDirective, TGALoaderService, TextureLoaderService, ThAdaptiveToneMappingPass, ThAfterimagePass, ThAmbientLight, ThAmbientLightProbe, ThArcballControls, ThArrayCamera, ThArrowHelper, ThAsyncLoaderBaseDirective, ThAsyncLoaderBasePipe, ThAsyncLoaderService, ThAudio, ThAudioListener, ThAxesHelper, ThBloomPass, ThBokehPass, ThBone, ThBox3Helper, ThBoxGeometry, ThBoxHelper, ThBoxLineGeometry, ThBufferGeometry, ThCallbackLoaderBaseDirective, ThCallbackLoaderBasePipe, ThCallbackLoaderService, ThCamera, ThCameraHelper, ThCanvas, ThCanvasTexture, ThCapsuleGeometry, ThCircleGeometry, ThClearMaskPass, ThClearPass, ThCompressedArrayTexture, ThCompressedTexture, ThConeGeometry, ThConvexGeometry, ThCubeCamera, ThCubeTexture, ThCubeTextureLoaderDirective, ThCubeTextureLoaderPipe, ThCubeTexturePass, ThCylinderGeometry, ThDDSLoaderDirective, ThDDSLoaderPipe, ThData3DTexture, ThDataArrayTexture, ThDataTexture, ThDecalGeometry, ThDepthTexture, ThDirectionalLight, ThDirectionalLightHelper, ThDodecahedronGeometry, ThDotScreenPass, ThDragControls, ThEXRLoaderDirective, ThEXRLoaderPipe, ThEdgesGeometry, ThEffectComposer, ThEffectComposerGen, ThEngineService, ThExtrudeGeometry, ThFBXLoaderDirective, ThFBXLoaderPipe, ThFilmPass, ThFirstPersonControls, ThFlyControls, ThFramebufferTexture, ThGLTFLoaderDirective, ThGLTFLoaderPipe, ThGlitchPass, ThGridHelper, ThGroup, ThHalftonePass, ThHemisphereLight, ThHemisphereLightHelper, ThHemisphereLightProbe, ThIcosahedronGeometry, ThInstancedBufferGeometry, ThInstancedMesh, ThKTX2LoaderDirective, ThKTX2LoaderPipe, ThKTXLoaderDirective, ThKTXLoaderPipe, ThLOD, ThLUTPass, ThLatheGeometry, ThLight, ThLightProbe, ThLightningStrike, ThLine, ThLineBasicMaterial, ThLineDashedMaterial, ThLineLoop, ThLineSegments, ThLogLuvLoaderDirective, ThLogLuvLoaderPipe, ThMapControls, ThMaskPass, ThMaterial, ThMesh, ThMeshBasicMaterial, ThMeshDepthMaterial, ThMeshDistanceMaterial, ThMeshLambertMaterial, ThMeshMatcapMaterial, ThMeshNormalMaterial, ThMeshPhongMaterial, ThMeshPhysicalMaterial, ThMeshStandardMaterial, ThMeshToonMaterial, ThObjLoaderDirective, ThObjLoaderPipe, ThObject3D, ThOctahedronGeometry, ThOrbitControls, ThOrthographicCamera, ThOutlinePass, ThPLYLoaderDirective, ThPLYLoaderPipe, ThPVRLoaderDirective, ThPVRLoaderPipe, ThParametricGeometry, ThPass, ThPerspectiveCamera, ThPlaneGeometry, ThPlaneHelper, ThPointLight, ThPointLightHelper, ThPointerLockControls, ThPoints, ThPointsMaterial, ThPolarGridHelper, ThPolyhedronGeometry, ThPositionalAudio, ThRGBELoaderDirective, ThRGBELoaderPipe, ThRGBMLoaderDirective, ThRGBMLoaderPipe, ThRawShaderMaterial, ThRectAreaLight, ThRenderDirective, ThRenderPass, ThRenderPassGen, ThRingGeometry, ThRoundedBoxGeometry, ThSAOPass, ThSMAAPass, ThSSAARenderPass, ThSSAOPass, ThSSRPass, ThSavePass, ThScene, ThShaderMaterial, ThShaderPass, ThShadowMaterial, ThShapeGeometry, ThSkeletonHelper, ThSkinnedMesh, ThSphereGeometry, ThSpotLight, ThSpotLightHelper, ThSprite, ThSpriteMaterial, ThStereoCamera, ThTAARenderPass, ThTGALoaderDirective, ThTGALoaderPipe, ThTeapotGeometry, ThTetrahedronGeometry, ThTextGeometry, ThTexture, ThTextureLoaderDirective, ThTextureLoaderPipe, ThTexturePass, ThTorusGeometry, ThTorusKnotGeometry, ThTrackballControls, ThTransformControls, ThTransformControlsGen, ThTubeGeometry, ThUnrealBloomPass, ThVideoTexture, ThView, ThWireframeGeometry, Vector2Pipe, Vector3Pipe, Vector4Pipe, createCameraProviderArray, createLazyObject3DProxy, createObj3DProviderArray, createThProviderArray, isLazyObject3dProxy };","map":{"version":3,"names":["i0","InjectionToken","inject","Injectable","EventEmitter","Component","Input","Output","ChangeDetectionStrategy","SkipSelf","Directive","Host","forwardRef","ContentChild","Optional","isDevMode","Inject","ContentChildren","ViewChild","NgModule","Pipe","Self","THREE","Raycaster","Object3D","Scene","Clock","Vector4","WebGLRenderTarget","AmbientLight","LightProbe","AmbientLightProbe","PerspectiveCamera","ArrayCamera","ArrowHelper","Audio","AudioListener","Line","LineSegments","AxesHelper","Bone","Box3Helper","BufferGeometry","BoxGeometry","BoxHelper","CameraHelper","Texture","CanvasTexture","CapsuleGeometry","CircleGeometry","CompressedTexture","CompressedArrayTexture","CylinderGeometry","ConeGeometry","CubeCamera","CubeTexture","Data3DTexture","DataArrayTexture","DataTexture","DepthTexture","DirectionalLight","DirectionalLightHelper","PolyhedronGeometry","DodecahedronGeometry","EdgesGeometry","ExtrudeGeometry","FramebufferTexture","GridHelper","Group","HemisphereLight","HemisphereLightHelper","HemisphereLightProbe","IcosahedronGeometry","InstancedBufferGeometry","Mesh","InstancedMesh","LatheGeometry","Material","LineBasicMaterial","LineDashedMaterial","LineLoop","LOD","MeshBasicMaterial","MeshDepthMaterial","MeshDistanceMaterial","MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshToonMaterial","OctahedronGeometry","OrthographicCamera","PlaneGeometry","PlaneHelper","PointLight","PointLightHelper","Points","PointsMaterial","PolarGridHelper","PositionalAudio","ShaderMaterial","RawShaderMaterial","RectAreaLight","RingGeometry","ShadowMaterial","ShapeGeometry","SkeletonHelper","SkinnedMesh","SphereGeometry","SpotLight","SpotLightHelper","Sprite","SpriteMaterial","StereoCamera","TetrahedronGeometry","TorusGeometry","TorusKnotGeometry","TubeGeometry","VideoTexture","WireframeGeometry","CubeTextureLoader","TextureLoader","Color","Fog","Vector2","Vector3","Plane","ReplaySubject","Subject","takeUntil","EffectComposer","RenderPass","Pass","TransformControls","i4","CommonModule","AdaptiveToneMappingPass","AfterimagePass","ArcballControls","BloomPass","BokehPass","BoxLineGeometry","ClearMaskPass","MaskPass","ClearPass","ConvexGeometry","CubeTexturePass","DecalGeometry","DotScreenPass","DragControls","FilmPass","FirstPersonControls","FlyControls","GlitchPass","HalftonePass","LightningStrike","LUTPass","ShaderPass","MapControls","OrbitControls","OutlinePass","ParametricGeometry","PointerLockControls","RoundedBoxGeometry","SAOPass","SavePass","SMAAPass","SSAARenderPass","SSAOPass","SSRPass","TAARenderPass","TeapotGeometry","TextGeometry","TexturePass","TrackballControls","UnrealBloomPass","DDSLoader","KTX2Loader","KTXLoader","PVRLoader","EXRLoader","RGBELoader","RGBMLoader","TGALoader","GLTFLoader","DRACOLoader","Stats","OBJLoader","FBXLoader","LogLuvLoader","PLYLoader","_c0","_c1","ThCanvas_ng_content_2_Template","rf","ctx","ɵɵprojection","_c2","_c3","HtmlComponent_div_0_ng_container_5_Template","ɵɵelementContainer","HtmlComponent_div_0_Template","_r9","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","HtmlComponent_div_0_Template_div_onResize_0_listener","ɵɵrestoreView","ctx_r8","ɵɵnextContext","ɵɵresetView","onResize","ɵɵtemplate","ɵɵelementEnd","ctx_r0","_r3","ɵɵreference","ɵɵproperty","styles","ɵɵadvance","transformInnerStyles","ɵɵstyleMap","style","className","HtmlComponent_ng_template_1_ng_container_2_Template","HtmlComponent_ng_template_1_Template","ctx_r2","HtmlComponent_ng_template_3_Template","RaycasterEvent","RAYCASTER","factory","RaycasterService","constructor","raycaster","selected","enabled","groups","paused","maxClickDistance","nid","instanceCnt","onPointerMove","bind","onPointerDown","onPointerUp","ngOnDestroy","disable","unsubscribe","subscribe","canvas","Error","addEventListener","removeEventListener","enable","pause","resume","isEnabled","init","camera","addEventTarget","target","push","removeEventTarget","index","indexOf","splice","event","isReady","i","getFirstIntersectedGroup","layerX","layerY","mouseEnter","host","objRef","dispatchEvent","type","mouseExit","component","emitOnMouseExit","evt","emitOnMouseEnter","width","pointerDownEvent","pointerDown","emitOnPointerDown","downEvent","undefined","pointerUp","emitOnPointerUp","calcPointerDownUpDinstance","click","emitOnClick","ignorePaused","length","upEvent","Number","MAX_VALUE","xDist","yDist","Math","sqrt","x","y","clientWidth","clientHeight","mouseVector","setFromCamera","nearestIntersection","nearestGroup","group","intersection","intersectObject","distance","ɵfac","RaycasterService_Factory","t","ɵprov","ɵɵdefineInjectable","token","ngDevMode","ɵsetClassMetadata","isSettable","obj","set","applyValue","newValue","Array","isArray","copy","isDisposable","dispose","isObserved","s","observed","observers","applyMixins","derivedCtor","constructors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","defineProperty","getOwnPropertyDescriptor","create","Object3DProxyHandler","memberMap","Map","children","eventListener","loaded","add","object","remove","applyToObject3D","value","key","member","child","parent","listener","arr","get","_target","p","receiver","objKey","_receiver","createLazyObject3DProxy","handler","Proxy","isLazyObject3dProxy","__isProxy","ThWrapperBase","ref","applyObjRef","_objRef","autoAddToParent","autoDispose","addToParent","removeFromParent","threeEvents","eventMap","removeEvents","eventListeners","applyEvents","onUpdate","updateEmitter","objRef$","_objRef$","ngOnInit","createThreeInstance","args","getType","ngOnChanges","changes","emitPropertyChanges","currentValue","disposeObjRef","emitObjRefChange","next","entry","entries","ThWrapperBase_Factory","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","template","ThWrapperBase_Template","encapsulation","selector","ThObjectBase","uuid","attachToParent","newRef","oldRef","lookAt","vector","Promise","resolve","then","ThObjectBase_Factory","ɵɵdirectiveInject","ɵɵInheritDefinitionFeature","ngContentSelectors","ThObjectBase_Template","ɵɵprojectionDef","ThObject3D","isObject3D","id","up","position","rotation","quaternion","scale","modelViewMatrix","normalMatrix","matrix","matrixWorld","matrixAutoUpdate","matrixWorldAutoUpdate","matrixWorldNeedsUpdate","layers","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","customDepthMaterial","customDistanceMaterial","onBeforeRender","onAfterRender","DEFAULT_UP","DEFAULT_MATRIX_AUTO_UPDATE","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","ThObject3D_Factory","ɵɵProvidersFeature","ThObject3D_Template","changeDetection","OnPush","providers","decorators","RaycasterEventDirective","onMouseEnter","onMouseExit","onClick","raycasterService","ngAfterViewInit","subscribeEvents","unSubscribeEvents","emit","RaycasterEventDirective_Factory","ɵdir","ɵɵdefineDirective","ThEffectComposerGen","renderer","renderTarget1","renderTarget2","writeBuffer","readBuffer","passes","copyPass","clock","renderToScreen","ɵThEffectComposerGen_BaseFactory","ThEffectComposerGen_Factory","ɵɵgetInheritedFactory","ThEffectComposerGen_Template","ThCamera","isCamera","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","ɵThCamera_BaseFactory","ThCamera_Factory","provide","useExisting","ThCamera_Template","ThScene","isScene","fog","backgroundBlurriness","backgroundIntensity","overrideMaterial","background","environment","ɵThScene_BaseFactory","ThScene_Factory","ThScene_Template","RENDERER_DEFAULTS","alpha","antialias","preserveDrawingBuffer","ThEngineService","rendererParameters","domElement","ngZone","destroyed$","resizeEmitter","beforeRenderEmitter","views","beforeRender$","pipe","resize$","_renderer","resizeObserver","unobserve","initResizeObserver","runOutsideAngular","resize","ResizeObserver","observe","initRenderer","WebGLRenderer","assign","setRenderer","options","addView","view","canvasDimensions","calcRendererSize","adjustViewDimensions","height","render","engine","delta","getDelta","renderView","scene","onRender","run","applyRendererParametersFromView","effectComposer","viewPort","setViewport","scissor","setScissor","scissorTest","setScissorTest","clearColor","setClearColor","clearAlpha","setClearAlpha","shadow","shadowMap","setSize","pixelRatio","window","devicePixelRatio","aspect","updateProjectionMatrix","ThEngineService_Factory","ɵɵinject","NgZone","ThView","engServ","contentScene","_effectComposer","configureEffectComposerRenderTarget","_camera","initRaycaster","contentCamera","_viewPort","z","ThView_Factory","contentQueries","ThView_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","useValue","ThView_Template","ThEffectComposer","engineService","initRenderTarget","ThEffectComposer_Factory","ThEffectComposer_Template","ThPassBase","addPass","removePass","ThPassBase_Factory","ThPassBase_Template","ThPass","isPass","needsSwap","clear","ɵThPass_BaseFactory","ThPass_Factory","ThPass_Template","ThRenderPassGen","clearDepth","ɵThRenderPassGen_BaseFactory","ThRenderPassGen_Factory","ThRenderPassGen_Template","ThRenderPass","ngAfterContentChecked","ThRenderPass_Factory","ThRenderPass_Template","ThAnimationLoopService","active","requestAnimationFrame","stop","complete","start","frameId","cancelAnimationFrame","isActive","ThAnimationLoopService_Factory","ThCanvas","viewList","v","rendererCanvas","_rendererCanvas","nativeElement","animationLoop","disableDefaultView","applyRendererParameters","ThCanvas_Factory","ThCanvas_ContentQueries","viewQuery","ThCanvas_Query","ɵɵviewQuery","consts","ThCanvas_Template","dependencies","NgIf","static","ThControlBase","renderLoop","instance","patchDispatchEvent","subscribeControlUpdater","dispatcher","origMethod","origDispatchEventMethod","call","unpatchDispatchEvent","unsubscribeControlUpdater","control","update","beforeRenderSubscription","state","ThControlBase_Factory","ThControlBase_Template","ThTransformControlsGen","axis","mode","translationSnap","rotationSnap","space","size","dragging","showX","showY","showZ","isTransformControls","mouseButtons","ɵThTransformControlsGen_BaseFactory","ThTransformControlsGen_Factory","ThTransformControlsGen_Template","ThTransformControls","attach","detach","ɵThTransformControls_BaseFactory","ThTransformControls_Factory","ThTransformControls_Template","ThAdaptiveToneMappingPass","adaptive","resolution","needsInit","luminanceRT","previousLuminanceRT","currentLuminanceRT","copyUniforms","materialCopy","materialLuminance","adaptLuminanceShader","materialAdaptiveLum","materialToneMap","fsQuad","ɵThAdaptiveToneMappingPass_BaseFactory","ThAdaptiveToneMappingPass_Factory","ThAdaptiveToneMappingPass_Template","ThAfterimagePass","shader","uniforms","map","textureComp","textureOld","shaderMaterial","compFsQuad","copyFsQuad","ɵThAfterimagePass_BaseFactory","ThAfterimagePass_Factory","ThAfterimagePass_Template","ThLight","isLight","color","intensity","ɵThLight_BaseFactory","ThLight_Factory","ThLight_Template","ThAmbientLight","isAmbientLight","ɵThAmbientLight_BaseFactory","ThAmbientLight_Factory","ThAmbientLight_Template","ThLightProbe","isLightProbe","sh","ɵThLightProbe_BaseFactory","ThLightProbe_Factory","ThLightProbe_Template","ThAmbientLightProbe","isAmbientLightProbe","ɵThAmbientLightProbe_BaseFactory","ThAmbientLightProbe_Factory","ThAmbientLightProbe_Template","ThArcballControls","focusAnimationTime","enablePan","enableRotate","enableZoom","enableGizmos","adjustNearFar","scaleFactor","dampingFactor","wMax","enableAnimations","enableGrid","cursorZoom","minFov","maxFov","minDistance","maxDistance","minZoom","maxZoom","radiusFactor","ɵThArcballControls_BaseFactory","ThArcballControls_Factory","ThArcballControls_Template","ThPerspectiveCamera","isPerspectiveCamera","zoom","fov","near","far","focus","filmGauge","filmOffset","ɵThPerspectiveCamera_BaseFactory","ThPerspectiveCamera_Factory","ThPerspectiveCamera_Template","ThArrayCamera","isArrayCamera","cameras","ɵThArrayCamera_BaseFactory","ThArrayCamera_Factory","ThArrayCamera_Template","ThArrowHelper","line","cone","ɵThArrowHelper_BaseFactory","ThArrowHelper_Factory","ThArrowHelper_Template","ThAudio","context","gain","autoplay","buffer","detune","loop","loopStart","loopEnd","offset","duration","playbackRate","isPlaying","hasPlaybackControl","sourceType","source","filters","ɵThAudio_BaseFactory","ThAudio_Factory","ThAudio_Template","ThAudioListener","filter","timeDelta","ɵThAudioListener_BaseFactory","ThAudioListener_Factory","ThAudioListener_Template","ThLine","isLine","geometry","material","morphTargetInfluences","morphTargetDictionary","ɵThLine_BaseFactory","ThLine_Factory","ThLine_Template","ThLineSegments","isLineSegments","ɵThLineSegments_BaseFactory","ThLineSegments_Factory","ThLineSegments_Template","ThAxesHelper","ɵThAxesHelper_BaseFactory","ThAxesHelper_Factory","ThAxesHelper_Template","ThBloomPass","renderTargetX","renderTargetY","convolutionUniforms","materialConvolution","ɵThBloomPass_BaseFactory","ThBloomPass_Factory","ThBloomPass_Template","ThBokehPass","renderTargetColor","renderTargetDepth","materialDepth","materialBokeh","oldClearColor","ɵThBokehPass_BaseFactory","ThBokehPass_Factory","ThBokehPass_Template","ThBone","isBone","ɵThBone_BaseFactory","ThBone_Factory","ThBone_Template","ThBox3Helper","box","ɵThBox3Helper_BaseFactory","ThBox3Helper_Factory","ThBox3Helper_Template","ThGeometryBase","updateMorphTargets","ThGeometryBase_Factory","ThGeometryBase_Template","ThBufferGeometry","attributes","morphAttributes","morphTargetsRelative","boundingBox","boundingSphere","drawRange","isBufferGeometry","hostObject","ThBufferGeometry_Factory","ThBufferGeometry_Template","ThBoxGeometry","parameters","ɵThBoxGeometry_BaseFactory","ThBoxGeometry_Factory","ThBoxGeometry_Template","ThBoxHelper","ɵThBoxHelper_BaseFactory","ThBoxHelper_Factory","ThBoxHelper_Template","ThBoxLineGeometry","ɵThBoxLineGeometry_BaseFactory","ThBoxLineGeometry_Factory","ThBoxLineGeometry_Template","ThCameraHelper","pointMap","ɵThCameraHelper_BaseFactory","ThCameraHelper_Factory","ThCameraHelper_Template","ThTextureBase","ɵThTextureBase_BaseFactory","ThTextureBase_Factory","ThTextureBase_Template","ThTexture","isTexture","mipmaps","mapping","channel","wrapS","wrapT","magFilter","minFilter","anisotropy","format","internalFormat","repeat","center","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","encoding","isRenderTargetTexture","needsPMREMUpdate","version","DEFAULT_ANISOTROPY","DEFAULT_IMAGE","DEFAULT_MAPPING","ɵThTexture_BaseFactory","ThTexture_Factory","ThTexture_Template","ThCanvasTexture","isCanvasTexture","ɵThCanvasTexture_BaseFactory","ThCanvasTexture_Factory","ThCanvasTexture_Template","ThCapsuleGeometry","ɵThCapsuleGeometry_BaseFactory","ThCapsuleGeometry_Factory","ThCapsuleGeometry_Template","ThCircleGeometry","ɵThCircleGeometry_BaseFactory","ThCircleGeometry_Factory","ThCircleGeometry_Template","ThClearMaskPass","ɵThClearMaskPass_BaseFactory","ThClearMaskPass_Factory","ThClearMaskPass_Template","ThClearPass","ɵThClearPass_BaseFactory","ThClearPass_Factory","ThClearPass_Template","ThCompressedTexture","isCompressedTexture","ɵThCompressedTexture_BaseFactory","ThCompressedTexture_Factory","ThCompressedTexture_Template","ThCompressedArrayTexture","isCompressedArrayTexture","wrapR","ɵThCompressedArrayTexture_BaseFactory","ThCompressedArrayTexture_Factory","ThCompressedArrayTexture_Template","ThCylinderGeometry","ɵThCylinderGeometry_BaseFactory","ThCylinderGeometry_Factory","ThCylinderGeometry_Template","ThConeGeometry","ɵThConeGeometry_BaseFactory","ThConeGeometry_Factory","ThConeGeometry_Template","ThConvexGeometry","ɵThConvexGeometry_BaseFactory","ThConvexGeometry_Factory","ThConvexGeometry_Template","ThCubeCamera","renderTarget","ɵThCubeCamera_BaseFactory","ThCubeCamera_Factory","ThCubeCamera_Template","ThCubeTexture","isCubeTexture","ɵThCubeTexture_BaseFactory","ThCubeTexture_Factory","ThCubeTexture_Template","ThCubeTexturePass","cubeShader","cubeMesh","envMap","opacity","cubeScene","cubeCamera","ɵThCubeTexturePass_BaseFactory","ThCubeTexturePass_Factory","ThCubeTexturePass_Template","ThData3DTexture","isData3DTexture","ɵThData3DTexture_BaseFactory","ThData3DTexture_Factory","ThData3DTexture_Template","ThDataArrayTexture","isDataArrayTexture","ɵThDataArrayTexture_BaseFactory","ThDataArrayTexture_Factory","ThDataArrayTexture_Template","ThDataTexture","isDataTexture","ɵThDataTexture_BaseFactory","ThDataTexture_Factory","ThDataTexture_Template","ThDecalGeometry","ɵThDecalGeometry_BaseFactory","ThDecalGeometry_Factory","ThDecalGeometry_Template","ThDepthTexture","isDepthTexture","ɵThDepthTexture_BaseFactory","ThDepthTexture_Factory","ThDepthTexture_Template","ThDirectionalLight","isDirectionalLight","ɵThDirectionalLight_BaseFactory","ThDirectionalLight_Factory","ThDirectionalLight_Template","ThDirectionalLightHelper","lightPlane","light","targetLine","ɵThDirectionalLightHelper_BaseFactory","ThDirectionalLightHelper_Factory","ThDirectionalLightHelper_Template","ThPolyhedronGeometry","ɵThPolyhedronGeometry_BaseFactory","ThPolyhedronGeometry_Factory","ThPolyhedronGeometry_Template","ThDodecahedronGeometry","ɵThDodecahedronGeometry_BaseFactory","ThDodecahedronGeometry_Factory","ThDodecahedronGeometry_Template","ThDotScreenPass","ɵThDotScreenPass_BaseFactory","ThDotScreenPass_Factory","ThDotScreenPass_Template","ThDragControls","transformGroup","ɵThDragControls_BaseFactory","ThDragControls_Factory","ThDragControls_Template","ThEdgesGeometry","ɵThEdgesGeometry_BaseFactory","ThEdgesGeometry_Factory","ThEdgesGeometry_Template","ThExtrudeGeometry","ɵThExtrudeGeometry_BaseFactory","ThExtrudeGeometry_Factory","ThExtrudeGeometry_Template","ThFilmPass","ɵThFilmPass_BaseFactory","ThFilmPass_Factory","ThFilmPass_Template","ThFirstPersonControls","movementSpeed","lookSpeed","lookVertical","autoForward","activeLook","heightSpeed","heightCoef","heightMin","heightMax","constrainVertical","verticalMin","verticalMax","mouseDragOn","ɵThFirstPersonControls_BaseFactory","ThFirstPersonControls_Factory","ThFirstPersonControls_Template","ThFlyControls","rollSpeed","dragToLook","ɵThFlyControls_BaseFactory","ThFlyControls_Factory","ThFlyControls_Template","ThFramebufferTexture","isFramebufferTexture","ɵThFramebufferTexture_BaseFactory","ThFramebufferTexture_Factory","ThFramebufferTexture_Template","ThGlitchPass","goWild","curF","randX","ɵThGlitchPass_BaseFactory","ThGlitchPass_Factory","ThGlitchPass_Template","ThGridHelper","ɵThGridHelper_BaseFactory","ThGridHelper_Factory","ThGridHelper_Template","ThGroup","isGroup","ɵThGroup_BaseFactory","ThGroup_Factory","ThGroup_Template","ThHalftonePass","ɵThHalftonePass_BaseFactory","ThHalftonePass_Factory","ThHalftonePass_Template","ThHemisphereLight","isHemisphereLight","groundColor","ɵThHemisphereLight_BaseFactory","ThHemisphereLight_Factory","ThHemisphereLight_Template","ThHemisphereLightHelper","ɵThHemisphereLightHelper_BaseFactory","ThHemisphereLightHelper_Factory","ThHemisphereLightHelper_Template","ThHemisphereLightProbe","isHemisphereLightProbe","ɵThHemisphereLightProbe_BaseFactory","ThHemisphereLightProbe_Factory","ThHemisphereLightProbe_Template","ThIcosahedronGeometry","ɵThIcosahedronGeometry_BaseFactory","ThIcosahedronGeometry_Factory","ThIcosahedronGeometry_Template","ThInstancedBufferGeometry","isInstancedBufferGeometry","instanceCount","ɵThInstancedBufferGeometry_BaseFactory","ThInstancedBufferGeometry_Factory","ThInstancedBufferGeometry_Template","ThMesh","isMesh","ɵThMesh_BaseFactory","ThMesh_Factory","ThMesh_Template","ThInstancedMesh","isInstancedMesh","count","instanceColor","instanceMatrix","ɵThInstancedMesh_BaseFactory","ThInstancedMesh_Factory","ThInstancedMesh_Template","ThLatheGeometry","ɵThLatheGeometry_BaseFactory","ThLatheGeometry_Factory","ThLatheGeometry_Template","ThLightningStrike","RAY_INITIALIZED","RAY_UNBORN","RAY_PROPAGATING","RAY_STEADY","RAY_VANISHING","RAY_EXTINGUISHED","ɵThLightningStrike_BaseFactory","ThLightningStrike_Factory","ThLightningStrike_Template","ThMaterialBase","ThMaterialBase_Factory","ThMaterialBase_Template","ThMaterial","alphaTest","alphaToCoverage","blendDst","blendDstAlpha","blendEquation","blendEquationAlpha","blending","blendSrc","blendSrcAlpha","clipIntersection","clippingPlanes","clipShadows","colorWrite","defines","depthFunc","depthTest","depthWrite","stencilWrite","stencilFunc","stencilRef","stencilWriteMask","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","isMaterial","needsUpdate","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","precision","premultipliedAlpha","forceSinglePass","dithering","side","shadowSide","toneMapped","transparent","vertexColors","ThMaterial_Factory","ThMaterial_Template","ThLineBasicMaterial","linewidth","linecap","linejoin","ɵThLineBasicMaterial_BaseFactory","ThLineBasicMaterial_Factory","ThLineBasicMaterial_Template","ThLineDashedMaterial","dashSize","gapSize","isLineDashedMaterial","ɵThLineDashedMaterial_BaseFactory","ThLineDashedMaterial_Factory","ThLineDashedMaterial_Template","ThLineLoop","isLineLoop","ɵThLineLoop_BaseFactory","ThLineLoop_Factory","ThLineLoop_Template","ThLOD","isLOD","levels","autoUpdate","ɵThLOD_BaseFactory","ThLOD_Factory","ThLOD_Template","ThShaderPass","textureID","ɵThShaderPass_BaseFactory","ThShaderPass_Factory","ThShaderPass_Template","ThLUTPass","lut","ɵThLUTPass_BaseFactory","ThLUTPass_Factory","ThLUTPass_Template","ThOrbitControls","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","zoomSpeed","rotateSpeed","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","touches","target0","position0","zoom0","ɵThOrbitControls_BaseFactory","ThOrbitControls_Factory","ThOrbitControls_Template","ThMapControls","ɵThMapControls_BaseFactory","ThMapControls_Factory","ThMapControls_Template","ThMaskPass","inverse","ɵThMaskPass_BaseFactory","ThMaskPass_Factory","ThMaskPass_Template","ThMeshBasicMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","ɵThMeshBasicMaterial_BaseFactory","ThMeshBasicMaterial_Factory","ThMeshBasicMaterial_Template","ThMeshDepthMaterial","depthPacking","displacementMap","displacementScale","displacementBias","ɵThMeshDepthMaterial_BaseFactory","ThMeshDepthMaterial_Factory","ThMeshDepthMaterial_Template","ThMeshDistanceMaterial","ɵThMeshDistanceMaterial_BaseFactory","ThMeshDistanceMaterial_Factory","ThMeshDistanceMaterial_Template","ThMeshLambertMaterial","bumpMap","bumpScale","emissive","emissiveIntensity","emissiveMap","flatShading","normalMap","normalMapType","normalScale","ɵThMeshLambertMaterial_BaseFactory","ThMeshLambertMaterial_Factory","ThMeshLambertMaterial_Template","ThMeshMatcapMaterial","matcap","ɵThMeshMatcapMaterial_BaseFactory","ThMeshMatcapMaterial_Factory","ThMeshMatcapMaterial_Template","ThMeshNormalMaterial","ɵThMeshNormalMaterial_BaseFactory","ThMeshNormalMaterial_Factory","ThMeshNormalMaterial_Template","ThMeshPhongMaterial","specular","shininess","metal","ɵThMeshPhongMaterial_BaseFactory","ThMeshPhongMaterial_Factory","ThMeshPhongMaterial_Template","ThMeshStandardMaterial","roughness","metalness","roughnessMap","metalnessMap","envMapIntensity","isMeshStandardMaterial","ɵThMeshStandardMaterial_BaseFactory","ThMeshStandardMaterial_Factory","ThMeshStandardMaterial_Template","ThMeshPhysicalMaterial","clearcoat","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","ior","sheen","sheenColor","sheenColorMap","sheenRoughness","sheenRoughnessMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","specularIntensity","specularColor","specularIntensityMap","specularColorMap","iridescenceMap","iridescenceIOR","iridescence","iridescenceThicknessRange","iridescenceThicknessMap","ɵThMeshPhysicalMaterial_BaseFactory","ThMeshPhysicalMaterial_Factory","ThMeshPhysicalMaterial_Template","ThMeshToonMaterial","gradientMap","ɵThMeshToonMaterial_BaseFactory","ThMeshToonMaterial_Factory","ThMeshToonMaterial_Template","ThOctahedronGeometry","ɵThOctahedronGeometry_BaseFactory","ThOctahedronGeometry_Factory","ThOctahedronGeometry_Template","ThOrthographicCamera","isOrthographicCamera","left","right","top","bottom","ɵThOrthographicCamera_BaseFactory","ThOrthographicCamera_Factory","ThOrthographicCamera_Template","ThOutlinePass","renderScene","renderCamera","selectedObjects","visibleEdgeColor","hiddenEdgeColor","edgeGlow","usePatternTexture","edgeThickness","edgeStrength","downSampleRatio","pulsePeriod","patternTexture","maskBufferMaterial","renderTargetMaskBuffer","depthMaterial","prepareMaskMaterial","renderTargetDepthBuffer","renderTargetMaskDownSampleBuffer","renderTargetBlurBuffer1","renderTargetBlurBuffer2","edgeDetectionMaterial","renderTargetEdgeBuffer1","renderTargetEdgeBuffer2","separableBlurMaterial1","separableBlurMaterial2","overlayMaterial","oldClearAlpha","tempPulseColor1","tempPulseColor2","textureMatrix","ɵThOutlinePass_BaseFactory","ThOutlinePass_Factory","ThOutlinePass_Template","ThParametricGeometry","ɵThParametricGeometry_BaseFactory","ThParametricGeometry_Factory","ThParametricGeometry_Template","ThPlaneGeometry","ɵThPlaneGeometry_BaseFactory","ThPlaneGeometry_Factory","ThPlaneGeometry_Template","ThPlaneHelper","plane","ɵThPlaneHelper_BaseFactory","ThPlaneHelper_Factory","ThPlaneHelper_Template","ThPointerLockControls","isLocked","pointerSpeed","ɵThPointerLockControls_BaseFactory","ThPointerLockControls_Factory","ThPointerLockControls_Template","ThPointLight","decay","power","ɵThPointLight_BaseFactory","ThPointLight_Factory","ThPointLight_Template","ThPointLightHelper","ɵThPointLightHelper_BaseFactory","ThPointLightHelper_Factory","ThPointLightHelper_Template","ThPoints","isPoints","ɵThPoints_BaseFactory","ThPoints_Factory","ThPoints_Template","ThPointsMaterial","sizeAttenuation","ɵThPointsMaterial_BaseFactory","ThPointsMaterial_Factory","ThPointsMaterial_Template","ThPolarGridHelper","ɵThPolarGridHelper_BaseFactory","ThPolarGridHelper_Factory","ThPolarGridHelper_Template","ThPositionalAudio","panner","ɵThPositionalAudio_BaseFactory","ThPositionalAudio_Factory","ThPositionalAudio_Template","ThShaderMaterial","vertexShader","fragmentShader","lights","clipping","derivatives","extensions","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","ɵThShaderMaterial_BaseFactory","ThShaderMaterial_Factory","ThShaderMaterial_Template","ThRawShaderMaterial","ɵThRawShaderMaterial_BaseFactory","ThRawShaderMaterial_Factory","ThRawShaderMaterial_Template","ThRectAreaLight","isRectAreaLight","ɵThRectAreaLight_BaseFactory","ThRectAreaLight_Factory","ThRectAreaLight_Template","ThRingGeometry","ɵThRingGeometry_BaseFactory","ThRingGeometry_Factory","ThRingGeometry_Template","ThRoundedBoxGeometry","ɵThRoundedBoxGeometry_BaseFactory","ThRoundedBoxGeometry_Factory","ThRoundedBoxGeometry_Template","ThSAOPass","supportsDepthTextureExtension","supportsNormalTexture","originalClearColor","saoRenderTarget","blurIntermediateRenderTarget","beautyRenderTarget","normalRenderTarget","depthRenderTarget","normalMaterial","saoMaterial","vBlurMaterial","hBlurMaterial","depthCopy","params","OUTPUT","ɵThSAOPass_BaseFactory","ThSAOPass_Factory","ThSAOPass_Template","ThSavePass","ɵThSavePass_BaseFactory","ThSavePass_Factory","ThSavePass_Template","ThShadowMaterial","ɵThShadowMaterial_BaseFactory","ThShadowMaterial_Factory","ThShadowMaterial_Template","ThShapeGeometry","ɵThShapeGeometry_BaseFactory","ThShapeGeometry_Factory","ThShapeGeometry_Template","ThSkeletonHelper","bones","root","ɵThSkeletonHelper_BaseFactory","ThSkeletonHelper_Factory","ThSkeletonHelper_Template","ThSkinnedMesh","isSkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","skeleton","ɵThSkinnedMesh_BaseFactory","ThSkinnedMesh_Factory","ThSkinnedMesh_Template","ThSMAAPass","edgesRT","weightsRT","areaTexture","searchTexture","uniformsEdges","materialEdges","uniformsWeights","materialWeights","uniformsBlend","materialBlend","ɵThSMAAPass_BaseFactory","ThSMAAPass_Factory","ThSMAAPass_Template","ThSphereGeometry","ɵThSphereGeometry_BaseFactory","ThSphereGeometry_Factory","ThSphereGeometry_Template","ThSpotLight","isSpotLight","angle","penumbra","ɵThSpotLight_BaseFactory","ThSpotLight_Factory","ThSpotLight_Template","ThSpotLightHelper","ɵThSpotLightHelper_BaseFactory","ThSpotLightHelper_Factory","ThSpotLightHelper_Template","ThSprite","isSprite","ɵThSprite_BaseFactory","ThSprite_Factory","ThSprite_Template","ThSpriteMaterial","isSpriteMaterial","ɵThSpriteMaterial_BaseFactory","ThSpriteMaterial_Factory","ThSpriteMaterial_Template","ThSSAARenderPass","sampleLevel","unbiased","copyMaterial","sampleRenderTarget","ɵThSSAARenderPass_BaseFactory","ThSSAARenderPass_Factory","ThSSAARenderPass_Template","ThSSAOPass","kernelRadius","kernelSize","kernel","noiseTexture","output","ssaoRenderTarget","blurRenderTarget","ssaoMaterial","blurMaterial","depthRenderMaterial","ɵThSSAOPass_BaseFactory","ThSSAOPass_Factory","ThSSAOPass_Template","ThSSRPass","groundReflector","tempColor","selective","blur","thickTolerance","prevRenderTarget","metalnessRenderTarget","ssrRenderTarget","blurRenderTarget2","ssrMaterial","metalnessOnMaterial","metalnessOffMaterial","blurMaterial2","renderPass","renderOverride","renderMetalness","ɵThSSRPass_BaseFactory","ThSSRPass_Factory","ThSSRPass_Template","ThStereoCamera","eyeSep","cameraL","cameraR","ɵThStereoCamera_BaseFactory","ThStereoCamera_Factory","ThStereoCamera_Template","ThTAARenderPass","accumulate","ɵThTAARenderPass_BaseFactory","ThTAARenderPass_Factory","ThTAARenderPass_Template","ThTeapotGeometry","ɵThTeapotGeometry_BaseFactory","ThTeapotGeometry_Factory","ThTeapotGeometry_Template","ThTetrahedronGeometry","ɵThTetrahedronGeometry_BaseFactory","ThTetrahedronGeometry_Factory","ThTetrahedronGeometry_Template","ThTextGeometry","ɵThTextGeometry_BaseFactory","ThTextGeometry_Factory","ThTextGeometry_Template","ThTexturePass","ɵThTexturePass_BaseFactory","ThTexturePass_Factory","ThTexturePass_Template","ThTorusGeometry","ɵThTorusGeometry_BaseFactory","ThTorusGeometry_Factory","ThTorusGeometry_Template","ThTorusKnotGeometry","ɵThTorusKnotGeometry_BaseFactory","ThTorusKnotGeometry_Factory","ThTorusKnotGeometry_Template","ThTrackballControls","screen","noRotate","noZoom","noPan","noRoll","staticMoving","dynamicDampingFactor","up0","ɵThTrackballControls_BaseFactory","ThTrackballControls_Factory","ThTrackballControls_Template","ThTubeGeometry","tangents","normals","binormals","ɵThTubeGeometry_BaseFactory","ThTubeGeometry_Factory","ThTubeGeometry_Template","ThUnrealBloomPass","strength","radius","threshold","renderTargetsHorizontal","renderTargetsVertical","nMips","renderTargetBright","highPassUniforms","materialHighPassFilter","separableBlurMaterials","compositeMaterial","bloomTintColors","basic","ɵThUnrealBloomPass_BaseFactory","ThUnrealBloomPass_Factory","ThUnrealBloomPass_Template","ThVideoTexture","isVideoTexture","ɵThVideoTexture_BaseFactory","ThVideoTexture_Factory","ThVideoTexture_Template","ThWireframeGeometry","ɵThWireframeGeometry_BaseFactory","ThWireframeGeometry_Factory","ThWireframeGeometry_Template","NgxThreeGeneratedModule","NgxThreeGeneratedModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ThLoader","setCrossOrigin","cors","crossOrigin","setWithCredentials","credentials","withCredentials","createLoaderInstance","loader","clazz","ThCallbackLoaderService","load","ThCallbackLoaderBasePipe","transform","service","ThCallbackLoaderBaseDirective","url","_url","onLoaded","onLoaded$","onProgress","onProgress$","zone","initialized","_this","_asyncToGenerator","progress","onLoad","ThCallbackLoaderBaseDirective_Factory","ɵɵinvalidFactory","DDSLoaderService","arguments","ɵDDSLoaderService_BaseFactory","DDSLoaderService_Factory","providedIn","ThDDSLoaderPipe","ThDDSLoaderPipe_Factory","ɵpipe","ɵɵdefinePipe","pure","ThDDSLoaderDirective","ThDDSLoaderDirective_Factory","KTX2LoaderService","transcoderPath","setDecoderPath","path","setTranscoderPath","ɵKTX2LoaderService_BaseFactory","KTX2LoaderService_Factory","ThKTX2LoaderPipe","ThKTX2LoaderPipe_Factory","ThKTX2LoaderDirective","ThKTX2LoaderDirective_Factory","KTXLoaderService","ɵKTXLoaderService_BaseFactory","KTXLoaderService_Factory","ThKTXLoaderPipe","ThKTXLoaderPipe_Factory","ThKTXLoaderDirective","ThKTXLoaderDirective_Factory","PVRLoaderService","ɵPVRLoaderService_BaseFactory","PVRLoaderService_Factory","ThPVRLoaderPipe","ThPVRLoaderPipe_Factory","ThPVRLoaderDirective","ThPVRLoaderDirective_Factory","EXRLoaderService","ɵEXRLoaderService_BaseFactory","EXRLoaderService_Factory","ThEXRLoaderPipe","ThEXRLoaderPipe_Factory","ThEXRLoaderDirective","ThEXRLoaderDirective_Factory","RGBELoaderService","ɵRGBELoaderService_BaseFactory","RGBELoaderService_Factory","ThRGBELoaderPipe","ThRGBELoaderPipe_Factory","ThRGBELoaderDirective","ThRGBELoaderDirective_Factory","RGBMLoaderService","ɵRGBMLoaderService_BaseFactory","RGBMLoaderService_Factory","ThRGBMLoaderPipe","ThRGBMLoaderPipe_Factory","ThRGBMLoaderDirective","ThRGBMLoaderDirective_Factory","TGALoaderService","ɵTGALoaderService_BaseFactory","TGALoaderService_Factory","ThTGALoaderPipe","ThTGALoaderPipe_Factory","ThTGALoaderDirective","ThTGALoaderDirective_Factory","CubeTextureLoaderService","ɵCubeTextureLoaderService_BaseFactory","CubeTextureLoaderService_Factory","ThCubeTextureLoaderPipe","ThCubeTextureLoaderPipe_Factory","ThCubeTextureLoaderDirective","ThCubeTextureLoaderDirective_Factory","ThAsyncLoaderService","loadAsync","ɵThAsyncLoaderService_BaseFactory","ThAsyncLoaderService_Factory","ThAsyncLoaderBasePipe","response","ThAsyncLoaderBaseDirective","proxy","_this2","result","getRefFromResponse","ThAsyncLoaderBaseDirective_Factory","DRACOLoaderService","decoderPath","reuseInstance","setDecoderConfig","config","decoderConfig","setWorkerLimit","limit","workerLimit","setReuseInstance","reuse","ɵDRACOLoaderService_BaseFactory","DRACOLoaderService_Factory","GLTFLoaderService","dracoLoaderService","setDRACOLoader","GLTFLoaderService_Factory","ThGLTFLoaderPipe","ThGLTFLoaderPipe_Factory","ThGLTFLoaderDirective","ThGLTFLoaderDirective_Factory","TextureLoaderService","ɵTextureLoaderService_BaseFactory","TextureLoaderService_Factory","ThTextureLoaderPipe","ThTextureLoaderPipe_Factory","ThTextureLoaderDirective","ThTextureLoaderDirective_Factory","ClonePipe","clone","ClonePipe_Factory","ColorPipe","ColorPipe_Factory","FogPipe","FogPipe_Factory","Vector2Pipe","Vector2Pipe_Factory","Vector3Pipe","Vector3Pipe_Factory","Vector4Pipe","Vector4Pipe_Factory","ThRenderDirective","animationLoopService","beforeRender","renderOnDemand","onDemand","ThRenderDirective_Factory","StatsDirective","stats","renderSubscription","parentElement","dom","showPanel","appendChild","thStats","visibility","StatsDirective_Factory","OBJLoaderService","ɵOBJLoaderService_BaseFactory","OBJLoaderService_Factory","ThObjLoaderPipe","ThObjLoaderPipe_Factory","ThObjLoaderDirective","ThObjLoaderDirective_Factory","FBXLoaderService","ɵFBXLoaderService_BaseFactory","FBXLoaderService_Factory","ThFBXLoaderPipe","ThFBXLoaderPipe_Factory","ThFBXLoaderDirective","ThFBXLoaderDirective_Factory","LogLuvLoaderService","ɵLogLuvLoaderService_BaseFactory","LogLuvLoaderService_Factory","ThLogLuvLoaderPipe","ThLogLuvLoaderPipe_Factory","ThLogLuvLoaderDirective","ThLogLuvLoaderDirective_Factory","PLYLoaderService","ɵPLYLoaderService_BaseFactory","PLYLoaderService_Factory","ThPLYLoaderPipe","ThPLYLoaderPipe_Factory","ThPLYLoaderDirective","computeVertexNormals","_this3","ThPLYLoaderDirective_Factory","BindPipe","methodToBind","BindPipe_Factory","v1","v2","v3","defaultCalculatePosition","el","objectPos","setFromMatrixPosition","project","widthHalf","heightHalf","isObjectBehindCamera","cameraPos","deltaCamObj","sub","camDir","getWorldDirection","angleTo","PI","isObjectVisible","occlude","elPos","screenPos","intersects","intersectObjects","intersectionDistance","pointDistance","distanceTo","ray","origin","objectScale","vFOV","dist","scaleFOV","tan","objectZIndex","zIndexRange","A","B","round","epsilon","abs","getCSSMatrix","multipliers","prepend","matrix3d","elements","getCameraCSSMatrix","getObjectCSSMatrix","scaleMultipliers","factor","f","HtmlComponent","fullscreen","eps","sprite","onOcclude","calculatePosition","as","pointerEvents","computeInnerStyles","oldZoom","oldPosition","notOccluded","computeStyles","document","createElement","frameSubscription","onFrame","transformOuterRef","appendElement","portal","updateMatrixWorld","cssText","vec","getSize","updateWorldMatrix","isBehindCamera","raytraceTarget","item","previouslyVisible","display","zIndex","cameraMatrix","cameraTransform","transpose","copyPosition","perspective","transformInnerRef","distanceFactor","transformStyle","getBoundingClientRect","HtmlComponent_Factory","HtmlComponent_Query","wrapperClass","HtmlComponent_Template","ɵɵtemplateRefExtractor","_r1","NgTemplateOutlet","NgStyle","RefByIdDirective","refById","subscription","parentObj","applyRef","findById","setRef","RefByIdDirective_Factory","PlanePipe","normal","constant","PlanePipe_Factory","NgxThreeModule","NgxThreeModule_Factory","imports","createThProviderArray","cls","baseCls","isPrototypeOf","createObj3DProviderArray","createCameraProviderArray"],"sources":["C:/Users/bozok/Desktop/AngularProject/gnrrc2/node_modules/ngx-three/fesm2020/ngx-three.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injectable, EventEmitter, Component, Input, Output, ChangeDetectionStrategy, SkipSelf, Directive, Host, forwardRef, ContentChild, Optional, isDevMode, Inject, ContentChildren, ViewChild, NgModule, Pipe, Self } from '@angular/core';\nimport * as THREE from 'three';\nimport { Raycaster, Object3D, Scene, Clock, Vector4, WebGLRenderTarget, AmbientLight, LightProbe, AmbientLightProbe, PerspectiveCamera, ArrayCamera, ArrowHelper, Audio, AudioListener, Line, LineSegments, AxesHelper, Bone, Box3Helper, BufferGeometry, BoxGeometry, BoxHelper, CameraHelper, Texture, CanvasTexture, CapsuleGeometry, CircleGeometry, CompressedTexture, CompressedArrayTexture, CylinderGeometry, ConeGeometry, CubeCamera, CubeTexture, Data3DTexture, DataArrayTexture, DataTexture, DepthTexture, DirectionalLight, DirectionalLightHelper, PolyhedronGeometry, DodecahedronGeometry, EdgesGeometry, ExtrudeGeometry, FramebufferTexture, GridHelper, Group, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, InstancedBufferGeometry, Mesh, InstancedMesh, LatheGeometry, Material, LineBasicMaterial, LineDashedMaterial, LineLoop, LOD, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshStandardMaterial, MeshPhysicalMaterial, MeshToonMaterial, OctahedronGeometry, OrthographicCamera, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PositionalAudio, ShaderMaterial, RawShaderMaterial, RectAreaLight, RingGeometry, ShadowMaterial, ShapeGeometry, SkeletonHelper, SkinnedMesh, SphereGeometry, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, StereoCamera, TetrahedronGeometry, TorusGeometry, TorusKnotGeometry, TubeGeometry, VideoTexture, WireframeGeometry, CubeTextureLoader, TextureLoader, Color, Fog, Vector2, Vector3, Plane } from 'three';\nimport { ReplaySubject, Subject, takeUntil } from 'rxjs';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { AdaptiveToneMappingPass } from 'three/examples/jsm/postprocessing/AdaptiveToneMappingPass';\nimport { AfterimagePass } from 'three/examples/jsm/postprocessing/AfterimagePass';\nimport { ArcballControls } from 'three/examples/jsm/controls/ArcballControls';\nimport { BloomPass } from 'three/examples/jsm/postprocessing/BloomPass';\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass';\nimport { BoxLineGeometry } from 'three/examples/jsm/geometries/BoxLineGeometry';\nimport { ClearMaskPass, MaskPass } from 'three/examples/jsm/postprocessing/MaskPass';\nimport { ClearPass } from 'three/examples/jsm/postprocessing/ClearPass';\nimport { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry';\nimport { CubeTexturePass } from 'three/examples/jsm/postprocessing/CubeTexturePass';\nimport { DecalGeometry } from 'three/examples/jsm/geometries/DecalGeometry';\nimport { DotScreenPass } from 'three/examples/jsm/postprocessing/DotScreenPass';\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls';\nimport { FlyControls } from 'three/examples/jsm/controls/FlyControls';\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass';\nimport { HalftonePass } from 'three/examples/jsm/postprocessing/HalftonePass';\nimport { LightningStrike } from 'three/examples/jsm/geometries/LightningStrike';\nimport { LUTPass } from 'three/examples/jsm/postprocessing/LUTPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { MapControls } from 'three/examples/jsm/controls/MapControls';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass';\nimport { ParametricGeometry } from 'three/examples/jsm/geometries/ParametricGeometry';\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';\nimport { SAOPass } from 'three/examples/jsm/postprocessing/SAOPass';\nimport { SavePass } from 'three/examples/jsm/postprocessing/SavePass';\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass';\nimport { SSAARenderPass } from 'three/examples/jsm/postprocessing/SSAARenderPass';\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass';\nimport { SSRPass } from 'three/examples/jsm/postprocessing/SSRPass';\nimport { TAARenderPass } from 'three/examples/jsm/postprocessing/TAARenderPass';\nimport { TeapotGeometry } from 'three/examples/jsm/geometries/TeapotGeometry';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TexturePass } from 'three/examples/jsm/postprocessing/TexturePass';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { DDSLoader } from 'three/examples/jsm/loaders/DDSLoader';\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader';\nimport { KTXLoader } from 'three/examples/jsm/loaders/KTXLoader';\nimport { PVRLoader } from 'three/examples/jsm/loaders/PVRLoader';\nimport { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { RGBMLoader } from 'three/examples/jsm/loaders/RGBMLoader';\nimport { TGALoader } from 'three/examples/jsm/loaders/TGALoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { LogLuvLoader } from 'three/examples/jsm/loaders/LogLuvLoader';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\n\n// eslint-disable-next-line no-shadow\nvar RaycasterEvent;\n(function (RaycasterEvent) {\n    RaycasterEvent[\"mouseEnter\"] = \"mouseEnter\";\n    RaycasterEvent[\"mouseExit\"] = \"mouseExit\";\n    RaycasterEvent[\"click\"] = \"click\";\n    RaycasterEvent[\"pointerDown\"] = \"pointerDown\";\n    RaycasterEvent[\"pointerUp\"] = \"pointerUp\";\n})(RaycasterEvent || (RaycasterEvent = {}));\nconst RAYCASTER = new InjectionToken('A reference to the raycaster object', {\n    factory: () => new Raycaster()\n});\nclass RaycasterService {\n    constructor() {\n        this.raycaster = inject(RAYCASTER);\n        this.selected = null;\n        this.enabled = true;\n        this.groups = [];\n        this.paused = false;\n        this.maxClickDistance = 23;\n        this.nid = RaycasterService.instanceCnt++;\n        this.onPointerMove = this.onPointerMove.bind(this);\n        this.onPointerDown = this.onPointerDown.bind(this);\n        this.onPointerUp = this.onPointerUp.bind(this);\n    }\n    ngOnDestroy() {\n        this.disable();\n        this.unsubscribe();\n    }\n    subscribe() {\n        if (!this.canvas) {\n            throw new Error('missing canvas');\n        }\n        this.canvas.addEventListener('pointermove', this.onPointerMove);\n        this.canvas.addEventListener('pointerdown', this.onPointerDown);\n        this.canvas.addEventListener('pointerup', this.onPointerUp);\n    }\n    unsubscribe() {\n        if (!this.canvas) {\n            throw new Error('missing canvas');\n        }\n        this.canvas.removeEventListener('pointermove', this.onPointerMove);\n        this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n        this.canvas.removeEventListener('pointerup', this.onPointerUp);\n    }\n    enable() {\n        this.enabled = true;\n    }\n    disable() {\n        this.enabled = false;\n    }\n    pause() {\n        this.paused = true;\n    }\n    resume() {\n        this.paused = false;\n    }\n    get isEnabled() {\n        return this.enabled;\n    }\n    init(camera, canvas) {\n        // console.log('Add camera to raycaster', camera);\n        this.camera = camera;\n        this.canvas = canvas;\n        this.subscribe();\n    }\n    addEventTarget(target) {\n        // console.log('RaycasterService.addGroup', group.name, group);\n        this.groups.push(target);\n    }\n    removeEventTarget(target) {\n        const index = this.groups.indexOf(target);\n        if (index >= 0) {\n            this.groups.splice(index, 1);\n        }\n    }\n    onPointerMove(event /*MouseEvent  & { layerX: number, layerY: number}*/) {\n        if (!this.isReady()) {\n            return;\n        }\n        const i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.mouseEnter);\n        if (!this.selected || this.selected !== i?.target) {\n            if (this.selected) {\n                this.selected.host.objRef?.dispatchEvent({\n                    type: RaycasterEvent.mouseExit,\n                    component: this.selected.host\n                });\n                this.selected.emitOnMouseExit();\n                this.selected = null;\n            }\n            if (i && i.target) {\n                this.selected = i.target;\n                const evt = {\n                    type: RaycasterEvent.mouseEnter,\n                    component: i.target.host,\n                    ...i\n                };\n                this.selected.host.objRef?.dispatchEvent(evt);\n                this.selected.emitOnMouseEnter(evt);\n            }\n        }\n    }\n    onPointerDown(event) {\n        this.maxClickDistance = event.width;\n        this.pointerDownEvent = event;\n        if (!this.isReady()) {\n            return;\n        }\n        const i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.pointerDown);\n        if (i && i.target && i.target.host.objRef) {\n            const evt = { type: RaycasterEvent.pointerDown, component: i.target.host, ...i };\n            i.target.host.objRef.dispatchEvent(evt);\n            i.target.emitOnPointerDown(evt);\n        }\n    }\n    onPointerUp(event) {\n        const downEvent = this.pointerDownEvent;\n        this.pointerDownEvent = undefined;\n        if (!this.isReady()) {\n            return;\n        }\n        // pointer up\n        let i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.pointerUp);\n        if (i && i.target && i.target.host.objRef) {\n            const evt = { type: RaycasterEvent.pointerUp, component: i.target.host, ...i };\n            i.target.host.objRef.dispatchEvent(evt);\n            i.target.emitOnPointerUp(evt);\n        }\n        // click\n        if (this.calcPointerDownUpDinstance(event, downEvent) > this.maxClickDistance) {\n            return;\n        }\n        i = this.getFirstIntersectedGroup(event.layerX, event.layerY, RaycasterEvent.click);\n        if (i && i.target && i.target.host.objRef) {\n            const evt = { type: RaycasterEvent.click, component: i.target.host, ...i };\n            i.target.host.objRef.dispatchEvent(evt);\n            i.target.emitOnClick(evt);\n        }\n    }\n    isReady(ignorePaused) {\n        return !!(this.enabled &&\n            (ignorePaused || !this.paused) &&\n            this.camera &&\n            this.camera.objRef &&\n            this.groups &&\n            this.groups.length > 0);\n    }\n    calcPointerDownUpDinstance(upEvent, downEvent) {\n        if (!downEvent) {\n            return Number.MAX_VALUE;\n        }\n        const xDist = upEvent.layerX - downEvent.layerX;\n        const yDist = upEvent.layerY - downEvent.layerY;\n        return Math.sqrt(xDist * xDist + yDist * yDist);\n    }\n    getFirstIntersectedGroup(x, y, event) {\n        if (!this.camera || !this.canvas || !this.camera.objRef) {\n            return;\n        }\n        x = (x / this.canvas.clientWidth) * 2 - 1;\n        y = -(y / this.canvas.clientHeight) * 2 + 1;\n        const mouseVector = new THREE.Vector2(x, y);\n        this.raycaster.setFromCamera(mouseVector, this.camera.objRef);\n        // loop across all groups. Try to find the group with nearest distance.\n        let nearestIntersection;\n        let nearestGroup;\n        for (const group of this.groups) {\n            const i = group.host.objRef;\n            if (!group[event] || !i) {\n                continue;\n            }\n            const intersection = this.raycaster.intersectObject(i, true);\n            if (intersection.length > 0 &&\n                (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n                nearestIntersection = intersection[0];\n                nearestGroup = group;\n            }\n        }\n        // return the group with nearest distance\n        if (nearestGroup && nearestIntersection) {\n            return {\n                target: nearestGroup,\n                ...nearestIntersection\n            };\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nRaycasterService.instanceCnt = 0;\nRaycasterService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RaycasterService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRaycasterService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RaycasterService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RaycasterService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\nfunction isSettable(obj) {\n    return !!(obj && obj.set); // && obj.copy;\n}\n/**\n * tries to apply the new value to the target.\n * if the new value is 'setter arguments' then it uses set on the target.\n * else it tries to use the 'copy' method of the target if available\n * else it return the newValue as new target\n * if newValue is undefined the old target is returned\n *\n * @param target the target for the new value\n * @param newValue the value to be set\n * @returns the new target(value)\n */\nfunction applyValue(target, newValue) {\n    if (isSettable(target)) {\n        if (newValue === undefined) {\n            return target;\n        }\n        if (Array.isArray(newValue)) {\n            target.set(...newValue);\n            return target;\n        }\n        if (target.copy && newValue) {\n            target.copy(newValue);\n            return target;\n        }\n        // just set the value\n        if (newValue !== undefined) {\n            target.set(newValue);\n            return target;\n        }\n    }\n    else {\n        // apply the value\n        return newValue;\n    }\n    // nothing to do\n    return target;\n}\nfunction isDisposable(obj) {\n    if (obj && typeof obj.dispose === 'function') {\n        return true;\n    }\n    return false;\n}\n/**\n * compatibility function for checking if a subject is observed\n * works with RxJs 6.x.x and RxJs 7+\n *\n * @param s the subject\n * @returns true if the subject is observed\n */\nfunction isObserved(s) {\n    return (s !== undefined &&\n        (s.observed /* <-- needs at least RxJs 7.x.x */ || s.observers?.length > 0) /* <-- for RxJs < 7.x.x */);\n}\n// This can live anywhere in your codebase:\nfunction applyMixins(derivedCtor, constructors) {\n    constructors.forEach((baseCtor) => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null));\n        });\n    });\n}\n\nclass Object3DProxyHandler {\n    constructor(target) {\n        this.memberMap = new Map();\n        this.children = [];\n        this.eventListener = {};\n        this.loaded = false;\n        this.add = (...object) => {\n            if (this.objRef) {\n                this.objRef.add(...object);\n            }\n            this.children.push(...object);\n            return this;\n        };\n        this.remove = (...object) => {\n            if (this.objRef) {\n                this.objRef.remove(...object);\n            }\n            for (const obj of object) {\n                const index = this.children.indexOf(obj);\n                if (index >= 0) {\n                    this.children = this.children.splice(index, 1);\n                }\n            }\n            return this;\n        };\n        this.applyToObject3D = (objRef) => {\n            this.memberMap.forEach((value, key) => {\n                const member = objRef[key];\n                if (isSettable(member)) {\n                    applyValue(member, value);\n                }\n                else {\n                    objRef[key] = value;\n                }\n            });\n            this.children.forEach((child) => objRef.add(child));\n            if (this.objRef?.parent) {\n                const parent = this.objRef?.parent;\n                parent.remove(this.objRef);\n                parent.add(objRef);\n            }\n        };\n        /**\n         * Adds a listener to an event type.\n         *\n         * @param type The type of event to listen to.\n         * @param listener The function that gets called when the event is fired.\n         */\n        this.addEventListener = (type, listener) => {\n            let arr = this.eventListener[type];\n            if (!arr) {\n                arr = [];\n                this.eventListener[type] = arr;\n            }\n            arr.push(listener);\n            if (this.objRef) {\n                this.objRef.addEventListener(type, listener);\n            }\n        };\n        /**\n         * Removes a listener from an event type.\n         *\n         * @param type The type of the listener that gets removed.\n         * @param listener The listener function that gets removed.\n         */\n        this.removeEventListener = (type, listener) => {\n            const arr = this.eventListener[type];\n            if (!arr) {\n                return;\n            }\n            const index = arr.indexOf(listener);\n            if (index >= 0) {\n                arr.splice(index, 1);\n            }\n        };\n        this.objRef = target;\n    }\n    get(_target, p, receiver) {\n        switch (p) {\n            case '__isProxy':\n                return true;\n            case 'applyToObject3D':\n                return this.applyToObject3D;\n            case 'objRef':\n                if (this.loaded) {\n                    return this.objRef;\n                }\n                else {\n                    return undefined;\n                }\n            case 'add':\n                return this.add;\n            case 'remove':\n                return this.remove;\n            case 'children':\n                return this.objRef ? this.objRef.children : this.children;\n            default: {\n                const objKey = p;\n                const value = this.objRef[objKey];\n                if (value !== undefined) {\n                    // this is necessary for complex members\n                    // (returned by reference, they might be altered, we have to reapply them to the real object )\n                    this.memberMap.set(objKey, value);\n                }\n                return value;\n            }\n        }\n    }\n    set(_target, p, value, _receiver) {\n        if (p === 'objRef') {\n            if (value) {\n                this.applyToObject3D(value);\n            }\n            this.loaded = true;\n            this.objRef = value;\n        }\n        else {\n            // store to the member map\n            this.memberMap.set(p, value);\n            if (this.objRef) {\n                // and apply to the real object if present\n                this.objRef[p] = value;\n            }\n        }\n        return true;\n    }\n}\nfunction createLazyObject3DProxy(target = new Object3D()) {\n    const handler = new Object3DProxyHandler(target);\n    return new Proxy(handler, handler);\n}\nfunction isLazyObject3dProxy(object) {\n    return (\n    // eslint-disable-next-line no-underscore-dangle\n    object.__isProxy === true && object.objRef === undefined);\n}\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThWrapperBase {\n    set objRef(ref) {\n        this.applyObjRef(ref);\n    }\n    get objRef() {\n        return this._objRef;\n    }\n    constructor() {\n        this.autoAddToParent = true;\n        this.autoDispose = true;\n        // nothing to do\n    }\n    addToParent() {\n        // nothing to do, implement it in a derived class\n    }\n    removeFromParent() {\n        // nothing to do, implement it in a derived class\n    }\n    set threeEvents(eventMap) {\n        this.removeEvents();\n        this.eventListeners = eventMap;\n        this.applyEvents();\n    }\n    get threeEvents() {\n        return this.eventListeners;\n    }\n    get onUpdate() {\n        if (!this.updateEmitter) {\n            this.updateEmitter = new EventEmitter();\n        }\n        return this.updateEmitter;\n    }\n    /**\n     * emits the last assigned object ref\n     */\n    get objRef$() {\n        if (!this._objRef$) {\n            this._objRef$ = new ReplaySubject(1);\n        }\n        return this._objRef$;\n    }\n    ngOnInit() {\n        if (!this.objRef) {\n            this.objRef = this.createThreeInstance(this.args);\n        }\n    }\n    // Override this\n    getType() {\n        throw new Error('derive me');\n    }\n    createThreeInstance(args) {\n        if (Array.isArray(args)) {\n            return new (this.getType())(...args);\n        }\n        else {\n            return new (this.getType())(args);\n        }\n    }\n    ngOnChanges(changes) {\n        // console.log('on changes');\n        if (this.objRef && !isLazyObject3dProxy(this.objRef)) {\n            // the object is already set and it is no proxy\n            // emit the changes\n            this.emitPropertyChanges(changes);\n            // TODO: request animation frame\n            return;\n        }\n        if (!this.objRef) {\n            // no object and no proxy is set --> create an instance\n            this.objRef = this.createThreeInstance(changes.args?.currentValue);\n        }\n        // eslint-disable-next-line guard-for-in\n        for (const key in changes) {\n            this[key] = changes[key].currentValue;\n        }\n        this.emitPropertyChanges(changes);\n    }\n    disposeObjRef() {\n        if (isDisposable(this.objRef)) {\n            this.objRef.dispose();\n        }\n    }\n    ngOnDestroy() {\n        this.removeEvents();\n        this.removeFromParent();\n        if (this.autoDispose) {\n            this.disposeObjRef();\n        }\n    }\n    applyObjRef(objRef) {\n        if (this._objRef !== objRef) {\n            this.removeFromParent();\n            this._objRef = objRef;\n            if (this.autoAddToParent) {\n                this.addToParent();\n            }\n        }\n        this.emitObjRefChange();\n    }\n    emitObjRefChange() {\n        // only emit change if _objRef is no proxy,\n        // and trigger emit over objRef event emitter\n        if (this._objRef && !isLazyObject3dProxy(this._objRef)) {\n            this._objRef.dispatchEvent?.({ type: 'loaded', object: this._objRef });\n            if (this._objRef$) {\n                this._objRef$.next(this._objRef);\n            }\n        }\n    }\n    emitPropertyChanges(changes) {\n        if (this._objRef) {\n            this._objRef.dispatchEvent?.({ type: 'changes', changes });\n        }\n        if (this.updateEmitter) {\n            this.updateEmitter.next(changes);\n        }\n    }\n    removeEvents() {\n        if (this.eventListeners && this._objRef) {\n            for (const entry of Object.entries(this.eventListeners)) {\n                this._objRef.removeEventListener(entry[0], entry[1]);\n            }\n            this.eventListeners = undefined;\n        }\n    }\n    applyEvents() {\n        if (this.eventListeners && this._objRef) {\n            for (const entry of Object.entries(this.eventListeners)) {\n                this._objRef.addEventListener(entry[0], entry[1]);\n            }\n        }\n    }\n}\nThWrapperBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThWrapperBase, deps: [], target: i0.ɵɵFactoryTarget.Component });\nThWrapperBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThWrapperBase, selector: \"th-abs-wrapper\", inputs: { autoAddToParent: \"autoAddToParent\", autoDispose: \"autoDispose\", objRef: \"objRef\", args: \"args\", threeEvents: \"threeEvents\" }, outputs: { onUpdate: \"onUpdate\", objRef$: \"objRef$\" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThWrapperBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-abs-wrapper',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { autoAddToParent: [{\n                type: Input\n            }], autoDispose: [{\n                type: Input\n            }], objRef: [{\n                type: Input\n            }], args: [{\n                type: Input\n            }], threeEvents: [{\n                type: Input\n            }], onUpdate: [{\n                type: Output\n            }], objRef$: [{\n                type: Output\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThObjectBase extends ThWrapperBase {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n    addToParent() {\n        if (this._objRef &&\n            this.parent.objRef &&\n            (!this._objRef.parent || this._objRef.parent.uuid !== this.parent.objRef.uuid)) {\n            this.parent.objRef.add(this._objRef);\n        }\n    }\n    removeFromParent() {\n        this._objRef?.parent?.remove(this._objRef);\n    }\n    applyObjRef(objRef) {\n        if (this._objRef !== objRef || this._objRef?.parent?.uuid !== this.parent.objRef.uuid) {\n            this.removeFromParent();\n            this._objRef = objRef;\n            if (this.autoAddToParent) {\n                this.addToParent();\n            }\n        }\n        this.emitObjRefChange();\n    }\n    attachToParent(newRef, oldRef) {\n        if (!this.parent.objRef || (newRef === oldRef && oldRef?.parent?.uuid === this.parent.objRef.uuid)) {\n            return;\n        }\n        // remove old obj from parent\n        if (oldRef && oldRef.parent) {\n            oldRef.parent.remove(oldRef);\n        }\n        // add new obj to parent\n        if (newRef && (!newRef.parent || (newRef.parent && newRef.parent.uuid !== this.parent.objRef.uuid))) {\n            this.parent.objRef.add(newRef);\n        }\n    }\n    // object 3d methods\n    set lookAt(vector) {\n        Promise.resolve().then(() => {\n            // execute next microtick, to assume all\n            // position changes already happend,\n            // because lookAt triggers a world matrix calculation\n            if (!this.objRef) {\n                return;\n            }\n            if (Array.isArray(vector)) {\n                this.objRef.lookAt(...vector);\n            }\n            else {\n                this.objRef.lookAt(vector);\n            }\n        });\n    }\n}\nThObjectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObjectBase, deps: [{ token: ThObjectBase }], target: i0.ɵɵFactoryTarget.Component });\nThObjectBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThObjectBase, selector: \"th-abs-object\", inputs: { lookAt: \"lookAt\" }, usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObjectBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-abs-object',\n                    template: '<ng-content/>'\n                }]\n        }], ctorParameters: function () { return [{ type: ThObjectBase }]; }, propDecorators: { lookAt: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThObject3D extends ThObjectBase {\n    getType() {\n        return Object3D;\n    }\n    // @ts-ignore\n    get isObject3D() {\n        return this._objRef?.isObject3D;\n    }\n    // @ts-ignore\n    get id() {\n        return this._objRef?.id;\n    }\n    set uuid(value) {\n        if (this._objRef) {\n            this._objRef.uuid = value;\n        }\n    }\n    // @ts-ignore\n    get uuid() {\n        return this._objRef?.uuid;\n    }\n    set name(value) {\n        if (this._objRef) {\n            this._objRef.name = value;\n        }\n    }\n    // @ts-ignore\n    get name() {\n        return this._objRef?.name;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set children(value) {\n        if (this._objRef) {\n            this._objRef.children = value;\n        }\n    }\n    // @ts-ignore\n    get children() {\n        return this._objRef?.children;\n    }\n    set up(value) {\n        if (this._objRef) {\n            this._objRef.up = applyValue(this._objRef.up, value);\n        }\n    }\n    // @ts-ignore\n    get up() {\n        return this._objRef?.up;\n    }\n    set position(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.position, value);\n        }\n    }\n    // @ts-ignore\n    get position() {\n        return this._objRef?.position;\n    }\n    set rotation(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.rotation, value);\n        }\n    }\n    // @ts-ignore\n    get rotation() {\n        return this._objRef?.rotation;\n    }\n    set quaternion(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.quaternion, value);\n        }\n    }\n    // @ts-ignore\n    get quaternion() {\n        return this._objRef?.quaternion;\n    }\n    set scale(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.scale, value);\n        }\n    }\n    // @ts-ignore\n    get scale() {\n        return this._objRef?.scale;\n    }\n    set modelViewMatrix(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.modelViewMatrix, value);\n        }\n    }\n    // @ts-ignore\n    get modelViewMatrix() {\n        return this._objRef?.modelViewMatrix;\n    }\n    set normalMatrix(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.normalMatrix, value);\n        }\n    }\n    // @ts-ignore\n    get normalMatrix() {\n        return this._objRef?.normalMatrix;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set matrixWorld(value) {\n        if (this._objRef) {\n            this._objRef.matrixWorld = applyValue(this._objRef.matrixWorld, value);\n        }\n    }\n    // @ts-ignore\n    get matrixWorld() {\n        return this._objRef?.matrixWorld;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n    set matrixWorldAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixWorldAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixWorldAutoUpdate() {\n        return this._objRef?.matrixWorldAutoUpdate;\n    }\n    set matrixWorldNeedsUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixWorldNeedsUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixWorldNeedsUpdate() {\n        return this._objRef?.matrixWorldNeedsUpdate;\n    }\n    set layers(value) {\n        if (this._objRef) {\n            this._objRef.layers = applyValue(this._objRef.layers, value);\n        }\n    }\n    // @ts-ignore\n    get layers() {\n        return this._objRef?.layers;\n    }\n    set visible(value) {\n        if (this._objRef) {\n            this._objRef.visible = value;\n        }\n    }\n    // @ts-ignore\n    get visible() {\n        return this._objRef?.visible;\n    }\n    set castShadow(value) {\n        if (this._objRef) {\n            this._objRef.castShadow = value;\n        }\n    }\n    // @ts-ignore\n    get castShadow() {\n        return this._objRef?.castShadow;\n    }\n    set receiveShadow(value) {\n        if (this._objRef) {\n            this._objRef.receiveShadow = value;\n        }\n    }\n    // @ts-ignore\n    get receiveShadow() {\n        return this._objRef?.receiveShadow;\n    }\n    set frustumCulled(value) {\n        if (this._objRef) {\n            this._objRef.frustumCulled = value;\n        }\n    }\n    // @ts-ignore\n    get frustumCulled() {\n        return this._objRef?.frustumCulled;\n    }\n    set renderOrder(value) {\n        if (this._objRef) {\n            this._objRef.renderOrder = value;\n        }\n    }\n    // @ts-ignore\n    get renderOrder() {\n        return this._objRef?.renderOrder;\n    }\n    set animations(value) {\n        if (this._objRef) {\n            this._objRef.animations = value;\n        }\n    }\n    // @ts-ignore\n    get animations() {\n        return this._objRef?.animations;\n    }\n    set userData(value) {\n        if (this._objRef) {\n            this._objRef.userData = value;\n        }\n    }\n    // @ts-ignore\n    get userData() {\n        return this._objRef?.userData;\n    }\n    set customDepthMaterial(value) {\n        if (this._objRef) {\n            this._objRef.customDepthMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get customDepthMaterial() {\n        return this._objRef?.customDepthMaterial;\n    }\n    set customDistanceMaterial(value) {\n        if (this._objRef) {\n            this._objRef.customDistanceMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get customDistanceMaterial() {\n        return this._objRef?.customDistanceMaterial;\n    }\n    set onBeforeRender(value) {\n        if (this._objRef) {\n            this._objRef.onBeforeRender = value;\n        }\n    }\n    // @ts-ignore\n    get onBeforeRender() {\n        return this._objRef?.onBeforeRender;\n    }\n    set onAfterRender(value) {\n        if (this._objRef) {\n            this._objRef.onAfterRender = value;\n        }\n    }\n    // @ts-ignore\n    get onAfterRender() {\n        return this._objRef?.onAfterRender;\n    }\n    constructor(parent) {\n        super(parent);\n    }\n}\nThObject3D.DEFAULT_UP = Object3D.DEFAULT_UP;\nThObject3D.DEFAULT_MATRIX_AUTO_UPDATE = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\nThObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE;\nThObject3D.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObject3D, deps: [{ token: ThObject3D, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nThObject3D.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThObject3D, selector: \"th-object3D\", inputs: { uuid: \"uuid\", name: \"name\", children: \"children\", up: \"up\", position: \"position\", rotation: \"rotation\", quaternion: \"quaternion\", scale: \"scale\", modelViewMatrix: \"modelViewMatrix\", normalMatrix: \"normalMatrix\", matrix: \"matrix\", matrixWorld: \"matrixWorld\", matrixAutoUpdate: \"matrixAutoUpdate\", matrixWorldAutoUpdate: \"matrixWorldAutoUpdate\", matrixWorldNeedsUpdate: \"matrixWorldNeedsUpdate\", layers: \"layers\", visible: \"visible\", castShadow: \"castShadow\", receiveShadow: \"receiveShadow\", frustumCulled: \"frustumCulled\", renderOrder: \"renderOrder\", animations: \"animations\", userData: \"userData\", customDepthMaterial: \"customDepthMaterial\", customDistanceMaterial: \"customDistanceMaterial\", onBeforeRender: \"onBeforeRender\", onAfterRender: \"onAfterRender\" }, providers: [], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObject3D, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-object3D',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: SkipSelf\n                }] }]; }, propDecorators: { uuid: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], children: [{\n                type: Input\n            }], up: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], rotation: [{\n                type: Input\n            }], quaternion: [{\n                type: Input\n            }], scale: [{\n                type: Input\n            }], modelViewMatrix: [{\n                type: Input\n            }], normalMatrix: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], matrixWorld: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }], matrixWorldAutoUpdate: [{\n                type: Input\n            }], matrixWorldNeedsUpdate: [{\n                type: Input\n            }], layers: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], castShadow: [{\n                type: Input\n            }], receiveShadow: [{\n                type: Input\n            }], frustumCulled: [{\n                type: Input\n            }], renderOrder: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], userData: [{\n                type: Input\n            }], customDepthMaterial: [{\n                type: Input\n            }], customDistanceMaterial: [{\n                type: Input\n            }], onBeforeRender: [{\n                type: Input\n            }], onAfterRender: [{\n                type: Input\n            }] } });\n\nclass RaycasterEventDirective {\n    get onMouseEnter() {\n        if (!this.mouseEnter) {\n            this.mouseEnter = new EventEmitter();\n        }\n        return this.mouseEnter;\n    }\n    get onMouseExit() {\n        if (!this.mouseExit) {\n            this.mouseExit = new EventEmitter();\n        }\n        return this.mouseExit;\n    }\n    get onClick() {\n        if (!this.click) {\n            this.click = new EventEmitter();\n        }\n        return this.click;\n    }\n    get onPointerDown() {\n        if (!this.pointerDown) {\n            this.pointerDown = new EventEmitter();\n        }\n        return this.pointerDown;\n    }\n    get onPointerUp() {\n        if (!this.pointerUp) {\n            this.pointerUp = new EventEmitter();\n        }\n        return this.pointerUp;\n    }\n    constructor(host, raycasterService) {\n        this.host = host;\n        this.raycasterService = raycasterService;\n        this.emitOnMouseEnter = this.emitOnMouseEnter.bind(this);\n        this.emitOnMouseExit = this.emitOnMouseExit.bind(this);\n        this.emitOnClick = this.emitOnClick.bind(this);\n    }\n    ngAfterViewInit() {\n        this.subscribeEvents();\n    }\n    subscribeEvents() {\n        this.raycasterService.addEventTarget(this);\n    }\n    unSubscribeEvents() {\n        this.raycasterService.removeEventTarget(this);\n    }\n    emitOnMouseExit() {\n        this.mouseExit?.emit({\n            component: this.host,\n            type: RaycasterEvent.mouseExit\n        });\n    }\n    emitOnMouseEnter(event) {\n        // console.log('RaycasterGroupDirective.onMouseEnter', event);\n        this.mouseEnter?.emit(event);\n    }\n    emitOnClick(event) {\n        // console.log('onClick', event);\n        this.click?.emit(event);\n    }\n    emitOnPointerDown(event) {\n        // console.log('onClick', event);\n        this.pointerDown?.emit(event);\n    }\n    emitOnPointerUp(event) {\n        // console.log('onClick', event);\n        this.pointerUp?.emit(event);\n    }\n    ngOnDestroy() {\n        this.unSubscribeEvents();\n    }\n}\nRaycasterEventDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RaycasterEventDirective, deps: [{ token: ThObject3D, host: true }, { token: RaycasterService }], target: i0.ɵɵFactoryTarget.Directive });\nRaycasterEventDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: RaycasterEventDirective, selector: \"[onClick], [onMouseEnter], [onMouseExit], [onPointerDown], [onPointerUp]\", outputs: { onMouseEnter: \"onMouseEnter\", onMouseExit: \"onMouseExit\", onClick: \"onClick\", onPointerDown: \"onPointerDown\", onPointerUp: \"onPointerUp\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RaycasterEventDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[onClick], [onMouseEnter], [onMouseExit], [onPointerDown], [onPointerUp]' }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: Host\n                }] }, { type: RaycasterService }]; }, propDecorators: { onMouseEnter: [{\n                type: Output\n            }], onMouseExit: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onPointerDown: [{\n                type: Output\n            }], onPointerUp: [{\n                type: Output\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThEffectComposerGen extends ThWrapperBase {\n    getType() {\n        return EffectComposer;\n    }\n    set renderer(value) {\n        if (this._objRef) {\n            this._objRef.renderer = value;\n        }\n    }\n    // @ts-ignore\n    get renderer() {\n        return this._objRef?.renderer;\n    }\n    set renderTarget1(value) {\n        if (this._objRef) {\n            this._objRef.renderTarget1 = value;\n        }\n    }\n    // @ts-ignore\n    get renderTarget1() {\n        return this._objRef?.renderTarget1;\n    }\n    set renderTarget2(value) {\n        if (this._objRef) {\n            this._objRef.renderTarget2 = value;\n        }\n    }\n    // @ts-ignore\n    get renderTarget2() {\n        return this._objRef?.renderTarget2;\n    }\n    set writeBuffer(value) {\n        if (this._objRef) {\n            this._objRef.writeBuffer = value;\n        }\n    }\n    // @ts-ignore\n    get writeBuffer() {\n        return this._objRef?.writeBuffer;\n    }\n    set readBuffer(value) {\n        if (this._objRef) {\n            this._objRef.readBuffer = value;\n        }\n    }\n    // @ts-ignore\n    get readBuffer() {\n        return this._objRef?.readBuffer;\n    }\n    set passes(value) {\n        if (this._objRef) {\n            this._objRef.passes = value;\n        }\n    }\n    // @ts-ignore\n    get passes() {\n        return this._objRef?.passes;\n    }\n    set copyPass(value) {\n        if (this._objRef) {\n            this._objRef.copyPass = value;\n        }\n    }\n    // @ts-ignore\n    get copyPass() {\n        return this._objRef?.copyPass;\n    }\n    set clock(value) {\n        if (this._objRef) {\n            this._objRef.clock = value;\n        }\n    }\n    // @ts-ignore\n    get clock() {\n        return this._objRef?.clock;\n    }\n    set renderToScreen(value) {\n        if (this._objRef) {\n            this._objRef.renderToScreen = value;\n        }\n    }\n    // @ts-ignore\n    get renderToScreen() {\n        return this._objRef?.renderToScreen;\n    }\n}\nThEffectComposerGen.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEffectComposerGen, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThEffectComposerGen.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThEffectComposerGen, selector: \"th-effectComposerGen\", inputs: { renderer: \"renderer\", renderTarget1: \"renderTarget1\", renderTarget2: \"renderTarget2\", writeBuffer: \"writeBuffer\", readBuffer: \"readBuffer\", passes: \"passes\", copyPass: \"copyPass\", clock: \"clock\", renderToScreen: \"renderToScreen\" }, providers: [], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEffectComposerGen, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-effectComposerGen',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: []\n                }]\n        }], propDecorators: { renderer: [{\n                type: Input\n            }], renderTarget1: [{\n                type: Input\n            }], renderTarget2: [{\n                type: Input\n            }], writeBuffer: [{\n                type: Input\n            }], readBuffer: [{\n                type: Input\n            }], passes: [{\n                type: Input\n            }], copyPass: [{\n                type: Input\n            }], clock: [{\n                type: Input\n            }], renderToScreen: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCamera extends ThObject3D {\n    // @ts-ignore\n    get isCamera() {\n        return this._objRef?.isCamera;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set layers(value) {\n        if (this._objRef) {\n            this._objRef.layers = applyValue(this._objRef.layers, value);\n        }\n    }\n    // @ts-ignore\n    get layers() {\n        return this._objRef?.layers;\n    }\n    set matrixWorldInverse(value) {\n        if (this._objRef) {\n            this._objRef.matrixWorldInverse = applyValue(this._objRef.matrixWorldInverse, value);\n        }\n    }\n    // @ts-ignore\n    get matrixWorldInverse() {\n        return this._objRef?.matrixWorldInverse;\n    }\n    set projectionMatrix(value) {\n        if (this._objRef) {\n            this._objRef.projectionMatrix = applyValue(this._objRef.projectionMatrix, value);\n        }\n    }\n    // @ts-ignore\n    get projectionMatrix() {\n        return this._objRef?.projectionMatrix;\n    }\n    set projectionMatrixInverse(value) {\n        if (this._objRef) {\n            this._objRef.projectionMatrixInverse = applyValue(this._objRef.projectionMatrixInverse, value);\n        }\n    }\n    // @ts-ignore\n    get projectionMatrixInverse() {\n        return this._objRef?.projectionMatrixInverse;\n    }\n}\nThCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCamera, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCamera, selector: \"th-camera\", inputs: { layers: \"layers\", matrixWorldInverse: \"matrixWorldInverse\", projectionMatrix: \"projectionMatrix\", projectionMatrixInverse: \"projectionMatrixInverse\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCamera) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCamera, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-camera',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCamera) }]\n                }]\n        }], propDecorators: { layers: [{\n                type: Input\n            }], matrixWorldInverse: [{\n                type: Input\n            }], projectionMatrix: [{\n                type: Input\n            }], projectionMatrixInverse: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThScene extends ThObject3D {\n    getType() {\n        return Scene;\n    }\n    // @ts-ignore\n    get isScene() {\n        return this._objRef?.isScene;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n    set backgroundBlurriness(value) {\n        if (this._objRef) {\n            this._objRef.backgroundBlurriness = value;\n        }\n    }\n    // @ts-ignore\n    get backgroundBlurriness() {\n        return this._objRef?.backgroundBlurriness;\n    }\n    set backgroundIntensity(value) {\n        if (this._objRef) {\n            this._objRef.backgroundIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get backgroundIntensity() {\n        return this._objRef?.backgroundIntensity;\n    }\n    set overrideMaterial(value) {\n        if (this._objRef) {\n            this._objRef.overrideMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get overrideMaterial() {\n        return this._objRef?.overrideMaterial;\n    }\n    set background(value) {\n        if (this._objRef) {\n            this._objRef.background = applyValue(this._objRef.background, value);\n        }\n    }\n    // @ts-ignore\n    get background() {\n        return this._objRef?.background;\n    }\n    set environment(value) {\n        if (this._objRef) {\n            this._objRef.environment = value;\n        }\n    }\n    // @ts-ignore\n    get environment() {\n        return this._objRef?.environment;\n    }\n}\nThScene.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThScene, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThScene.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThScene, selector: \"th-scene\", inputs: { type: \"type\", fog: \"fog\", backgroundBlurriness: \"backgroundBlurriness\", backgroundIntensity: \"backgroundIntensity\", overrideMaterial: \"overrideMaterial\", background: \"background\", environment: \"environment\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThScene) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThScene, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-scene',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThScene) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }], backgroundBlurriness: [{\n                type: Input\n            }], backgroundIntensity: [{\n                type: Input\n            }], overrideMaterial: [{\n                type: Input\n            }], background: [{\n                type: Input\n            }], environment: [{\n                type: Input\n            }] } });\n\nconst RENDERER_DEFAULTS = {\n    alpha: true,\n    antialias: true,\n    preserveDrawingBuffer: true\n};\nclass ThEngineService {\n    get canvas() {\n        return this.rendererParameters?.domElement;\n    }\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.clock = new Clock();\n        this.destroyed$ = new Subject();\n        this.resizeEmitter = new EventEmitter();\n        this.beforeRenderEmitter = new EventEmitter();\n        this.views = [];\n        this.beforeRender$ = this.beforeRenderEmitter.pipe(takeUntil(this.destroyed$));\n        this.resize$ = this.resizeEmitter.pipe(takeUntil(this.destroyed$));\n    }\n    get renderer() {\n        return this._renderer;\n    }\n    ngOnDestroy() {\n        if (this.resizeObserver && this.canvas) {\n            this.resizeObserver.unobserve(this.canvas);\n        }\n    }\n    initResizeObserver() {\n        // We have to run this outside angular zones,\n        // because it could trigger heavy changeDetection cycles.\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.canvas) {\n                throw new Error('missing canvas element');\n            }\n            this.resize();\n            if (!this.resizeObserver) {\n                // @ts-ignore\n                this.resizeObserver = new ResizeObserver(() => {\n                    this.resize();\n                });\n            }\n            this.resizeObserver.observe(this.canvas);\n        });\n    }\n    initRenderer() {\n        if (this._renderer) {\n            return;\n        }\n        this._renderer = new THREE.WebGLRenderer({\n            canvas: this.rendererParameters?.domElement,\n            ...RENDERER_DEFAULTS\n        });\n        Object.assign(this._renderer, { ...RENDERER_DEFAULTS, ...this.rendererParameters });\n        this.resize();\n    }\n    setRenderer(options) {\n        this.rendererParameters = options;\n        this.initRenderer();\n        this.initResizeObserver();\n    }\n    addView(view) {\n        this.views.push(view);\n        const canvasDimensions = this.calcRendererSize();\n        if (canvasDimensions) {\n            this.adjustViewDimensions(view, canvasDimensions.width, canvasDimensions.height);\n        }\n    }\n    render() {\n        this.beforeRenderEmitter.emit({ engine: this, delta: this.clock.getDelta() });\n        for (const view of this.views) {\n            this.renderView(view);\n        }\n    }\n    renderView(view) {\n        if (!this._renderer) {\n            return;\n        }\n        const camera = view.camera;\n        const scene = view.scene;\n        if (!camera || !scene || !camera.objRef || !scene.objRef) {\n            return;\n        }\n        const renderer = this._renderer;\n        if (isObserved(view.onRender)) {\n            this.ngZone.run(() => view.onRender.emit({\n                renderer,\n                scene,\n                camera\n            }));\n        }\n        this.applyRendererParametersFromView(view);\n        if (view.effectComposer) {\n            view.effectComposer.render();\n        }\n        else {\n            this._renderer.render(scene.objRef, camera.objRef);\n        }\n    }\n    applyRendererParametersFromView(view) {\n        if (!this._renderer) {\n            return;\n        }\n        if (view.viewPort) {\n            if (view.viewPort instanceof Vector4) {\n                this._renderer.setViewport(view.viewPort);\n            }\n            else {\n                this._renderer.setViewport(view.viewPort.x, view.viewPort.y, view.viewPort.width, view.viewPort.height);\n            }\n        }\n        if (view.scissor) {\n            if (view.scissor instanceof Vector4) {\n                this._renderer.setScissor(view.scissor);\n            }\n            else {\n                this._renderer.setScissor(view.scissor.x, view.scissor.y, view.scissor.width, view.scissor.height);\n            }\n        }\n        if (view.scissorTest !== undefined) {\n            this._renderer.setScissorTest(view.scissorTest);\n        }\n        if (view.clearColor) {\n            this._renderer.setClearColor(view.clearColor);\n        }\n        if (view.clearAlpha !== undefined) {\n            this._renderer.setClearAlpha(view.clearAlpha);\n        }\n        if (view.shadow !== undefined) {\n            this._renderer.shadowMap.enabled = true;\n        }\n    }\n    resize() {\n        if (!this._renderer || !this.canvas) {\n            return false;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { width, height } = this.calcRendererSize();\n        this._renderer.setSize(width, height, false);\n        for (const view of this.views) {\n            this.adjustViewDimensions(view, width, height);\n        }\n        this.resizeEmitter.emit({ width, height });\n        return true;\n    }\n    calcRendererSize() {\n        if (!this._renderer || !this.canvas) {\n            return;\n        }\n        const pixelRatio = window.devicePixelRatio;\n        return {\n            width: (this.canvas.clientWidth ?? 0) * pixelRatio,\n            height: (this.canvas.clientHeight ?? 0) * pixelRatio\n        };\n    }\n    adjustViewDimensions(view, width, height) {\n        if (!view.viewPort) {\n            if (view.camera && view.camera.objRef.aspect) {\n                view.camera.objRef.aspect = width / height;\n                view.camera.objRef.updateProjectionMatrix();\n            }\n            view.effectComposer?.setSize(width, height);\n        }\n    }\n}\nThEngineService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEngineService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nThEngineService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEngineService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEngineService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThView {\n    constructor(engServ, raycaster) {\n        this.engServ = engServ;\n        this.raycaster = raycaster;\n        // -----------------------------------------------------------------------------------------------\n        // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n        this.onRender = new EventEmitter();\n    }\n    set contentScene(scene) {\n        if (scene) {\n            this.scene = scene;\n        }\n    }\n    set effectComposer(effectComposer) {\n        this._effectComposer = effectComposer;\n        this.configureEffectComposerRenderTarget();\n    }\n    get effectComposer() {\n        return this._effectComposer;\n    }\n    set camera(camera) {\n        this._camera = camera;\n        this.initRaycaster();\n    }\n    get camera() {\n        return this._camera;\n    }\n    set contentCamera(camera) {\n        if (camera) {\n            this.camera = camera;\n        }\n    }\n    set viewPort(viewPort) {\n        this._viewPort = viewPort;\n        this.configureEffectComposerRenderTarget();\n    }\n    get viewPort() {\n        return this._viewPort;\n    }\n    ngOnInit() {\n        this.initRaycaster();\n    }\n    initRaycaster() {\n        if (this.camera && this.engServ.canvas) {\n            this.raycaster.init(this.camera, this.engServ.canvas);\n        }\n    }\n    add(scene) {\n        // nothing to do here\n    }\n    remove(scene) {\n        // norhing to do\n    }\n    configureEffectComposerRenderTarget() {\n        if (!this.viewPort || !this.effectComposer) {\n            return;\n        }\n        else {\n            let width;\n            let height;\n            if (this.viewPort instanceof Vector4) {\n                width = this.viewPort.z;\n                height = this.viewPort?.width;\n            }\n            else {\n                width = this.viewPort.width;\n                height = this.viewPort.height;\n            }\n            //TODO: check if pixel ration ha\n            this.effectComposer.setSize(width, height);\n        }\n    }\n}\nThView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThView, deps: [{ token: ThEngineService }, { token: RaycasterService }], target: i0.ɵɵFactoryTarget.Component });\nThView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThView, selector: \"th-view\", inputs: { scene: \"scene\", effectComposer: \"effectComposer\", camera: \"camera\", shadow: \"shadow\", viewPort: \"viewPort\", scissor: \"scissor\", scissorTest: \"scissorTest\", clearColor: \"clearColor\", clearAlpha: \"clearAlpha\" }, outputs: { onRender: \"onRender\" }, providers: [\n        { provide: ThObject3D, useExisting: forwardRef(() => ThView) },\n        { provide: RAYCASTER, useValue: new Raycaster() },\n        RaycasterService\n    ], queries: [{ propertyName: \"contentScene\", first: true, predicate: ThScene, descendants: true }, { propertyName: \"contentCamera\", first: true, predicate: ThCamera, descendants: true }], ngImport: i0, template: '<ng-content/>', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThView, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-view',\n                    template: '<ng-content/>',\n                    providers: [\n                        { provide: ThObject3D, useExisting: forwardRef(() => ThView) },\n                        { provide: RAYCASTER, useValue: new Raycaster() },\n                        RaycasterService\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: ThEngineService }, { type: RaycasterService }]; }, propDecorators: { scene: [{\n                type: Input\n            }], contentScene: [{\n                type: ContentChild,\n                args: [ThScene]\n            }], effectComposer: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], contentCamera: [{\n                type: ContentChild,\n                args: [ThCamera]\n            }], shadow: [{\n                type: Input\n            }], viewPort: [{\n                type: Input\n            }], scissor: [{\n                type: Input\n            }], scissorTest: [{\n                type: Input\n            }], clearColor: [{\n                type: Input\n            }], clearAlpha: [{\n                type: Input\n            }], onRender: [{\n                type: Output\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThEffectComposer extends ThEffectComposerGen {\n    constructor(view, engineService) {\n        super();\n        this.view = view;\n        this.engineService = engineService;\n    }\n    createThreeInstance(args) {\n        if (!args) {\n            args = new Array(5);\n        }\n        args[0] = args[0] ?? this.engineService.renderer;\n        args[1] = args[1] ?? this.initRenderTarget();\n        return super.createThreeInstance(args);\n    }\n    initRenderTarget() {\n        if (!this.view.viewPort) {\n            return;\n        }\n        else {\n            let width;\n            let height;\n            if (this.view.viewPort instanceof Vector4) {\n                width = this.view.viewPort.z;\n                height = this.view.viewPort?.width;\n            }\n            else {\n                width = this.view.viewPort.width;\n                height = this.view.viewPort.height;\n            }\n            return new WebGLRenderTarget(width, height);\n        }\n    }\n    addToParent() {\n        if (this._objRef) {\n            this.view.effectComposer = this._objRef;\n        }\n    }\n    removeFromParent() {\n        this.view.effectComposer = undefined;\n    }\n}\nThEffectComposer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEffectComposer, deps: [{ token: ThView }, { token: ThEngineService }], target: i0.ɵɵFactoryTarget.Component });\nThEffectComposer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThEffectComposer, selector: \"th-effectComposer\", providers: [], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEffectComposer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-effectComposer',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: ThView }, { type: ThEngineService }]; } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThPassBase extends ThWrapperBase {\n    constructor(effectComposer) {\n        super();\n        this.effectComposer = effectComposer;\n    }\n    addToParent() {\n        if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n            this.effectComposer.objRef.addPass(this._objRef);\n        }\n    }\n    removeFromParent() {\n        if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n            this.effectComposer.objRef.removePass(this._objRef);\n        }\n    }\n}\nThPassBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPassBase, deps: [{ token: ThEffectComposer, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nThPassBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPassBase, selector: \"th-abs-control\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPassBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-abs-control',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: ThEffectComposer, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThPass extends ThPassBase {\n    getType() {\n        return Pass;\n    }\n    set isPass(value) {\n        if (this._objRef) {\n            this._objRef.isPass = value;\n        }\n    }\n    // @ts-ignore\n    get isPass() {\n        return this._objRef?.isPass;\n    }\n    set enabled(value) {\n        if (this._objRef) {\n            this._objRef.enabled = value;\n        }\n    }\n    // @ts-ignore\n    get enabled() {\n        return this._objRef?.enabled;\n    }\n    set needsSwap(value) {\n        if (this._objRef) {\n            this._objRef.needsSwap = value;\n        }\n    }\n    // @ts-ignore\n    get needsSwap() {\n        return this._objRef?.needsSwap;\n    }\n    set clear(value) {\n        if (this._objRef) {\n            this._objRef.clear = value;\n        }\n    }\n    // @ts-ignore\n    get clear() {\n        return this._objRef?.clear;\n    }\n    set renderToScreen(value) {\n        if (this._objRef) {\n            this._objRef.renderToScreen = value;\n        }\n    }\n    // @ts-ignore\n    get renderToScreen() {\n        return this._objRef?.renderToScreen;\n    }\n}\nThPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPass, selector: \"th-pass\", inputs: { isPass: \"isPass\", enabled: \"enabled\", needsSwap: \"needsSwap\", clear: \"clear\", renderToScreen: \"renderToScreen\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-pass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThPass) }]\n                }]\n        }], propDecorators: { isPass: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], needsSwap: [{\n                type: Input\n            }], clear: [{\n                type: Input\n            }], renderToScreen: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThRenderPassGen extends ThPass {\n    getType() {\n        return RenderPass;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set overrideMaterial(value) {\n        if (this._objRef) {\n            this._objRef.overrideMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get overrideMaterial() {\n        return this._objRef?.overrideMaterial;\n    }\n    set clearColor(value) {\n        if (this._objRef) {\n            this._objRef.clearColor = applyValue(this._objRef.clearColor, value);\n        }\n    }\n    // @ts-ignore\n    get clearColor() {\n        return this._objRef?.clearColor;\n    }\n    set clearAlpha(value) {\n        if (this._objRef) {\n            this._objRef.clearAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get clearAlpha() {\n        return this._objRef?.clearAlpha;\n    }\n    set clearDepth(value) {\n        if (this._objRef) {\n            this._objRef.clearDepth = value;\n        }\n    }\n    // @ts-ignore\n    get clearDepth() {\n        return this._objRef?.clearDepth;\n    }\n}\nThRenderPassGen.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRenderPassGen, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThRenderPassGen.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRenderPassGen, selector: \"th-renderPassGen\", inputs: { scene: \"scene\", camera: \"camera\", overrideMaterial: \"overrideMaterial\", clearColor: \"clearColor\", clearAlpha: \"clearAlpha\", clearDepth: \"clearDepth\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThRenderPassGen) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRenderPassGen, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-renderPassGen',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThRenderPassGen) }]\n                }]\n        }], propDecorators: { scene: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], overrideMaterial: [{\n                type: Input\n            }], clearColor: [{\n                type: Input\n            }], clearAlpha: [{\n                type: Input\n            }], clearDepth: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRenderPass extends ThRenderPassGen {\n    constructor(effectComposer, view) {\n        super(effectComposer);\n        this.effectComposer = effectComposer;\n        this.view = view;\n    }\n    createThreeInstance(args) {\n        if (!args) {\n            args = new Array(5);\n        }\n        args[0] = args[0] ?? this.view.scene;\n        args[1] = args[1] ?? this.view.camera;\n        args[2] = args[2] ?? this.overrideMaterial;\n        args[3] = args[3] ?? this.clearColor;\n        args[4] = args[4] ?? this.clearAlpha;\n        return super.createThreeInstance(args);\n    }\n    ngAfterContentChecked() {\n        if (!this._objRef) {\n            return;\n        }\n        if (this.view.scene && this.view.scene.objRef) {\n            this._objRef.scene = this.view.scene.objRef;\n        }\n        if (this.view.camera && this.view.camera.objRef) {\n            this._objRef.camera = this.view.camera.objRef;\n        }\n    }\n}\nThRenderPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRenderPass, deps: [{ token: ThEffectComposer }, { token: ThView }], target: i0.ɵɵFactoryTarget.Component });\nThRenderPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRenderPass, selector: \"th-renderPass\", providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThRenderPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRenderPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-renderPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThRenderPass) }]\n                }]\n        }], ctorParameters: function () { return [{ type: ThEffectComposer }, { type: ThView }]; } });\n\nclass ThAnimationLoopService {\n    constructor(engineService, ngZone) {\n        this.engineService = engineService;\n        this.ngZone = ngZone;\n        this.active = true;\n        this.destroyed$ = new Subject();\n        this.beforeRender$ = this.engineService.beforeRender$;\n        this.engineService.resize$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.requestAnimationFrame());\n    }\n    ngOnDestroy() {\n        this.stop();\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    /**\n     * start the loop\n     */\n    start() {\n        if (!this.active) {\n            this.active = true;\n            this.requestAnimationFrame();\n        }\n    }\n    /**\n     * stop the loop\n     */\n    stop() {\n        this.active = false;\n        if (this.frameId !== undefined) {\n            cancelAnimationFrame(this.frameId);\n            this.frameId = undefined;\n        }\n    }\n    /**\n     *\n     * @returns true if the render loop is active\n     */\n    isActive() {\n        return this.active;\n    }\n    /**\n     * trigger an animation frame request\n     */\n    requestAnimationFrame() {\n        if (this.frameId === undefined) {\n            this.ngZone.runOutsideAngular(() => (this.frameId = requestAnimationFrame(() => {\n                this.frameId = undefined;\n                this.engineService.render();\n                if (this.active) {\n                    this.requestAnimationFrame();\n                }\n            })));\n        }\n    }\n}\nThAnimationLoopService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAnimationLoopService, deps: [{ token: ThEngineService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nThAnimationLoopService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAnimationLoopService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAnimationLoopService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ThEngineService }, { type: i0.NgZone }]; } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThCanvas extends ThView {\n    get obj() {\n        return this;\n    }\n    set views(viewList) {\n        viewList.forEach((v) => this.engServ.addView(v));\n    }\n    set rendererCanvas(canvas) {\n        if (!canvas) {\n            return;\n        }\n        this._rendererCanvas = canvas;\n        canvas.nativeElement.id += this.nid;\n    }\n    get rendererCanvas() {\n        return this._rendererCanvas;\n    }\n    constructor(engServ, animationLoop, raycaster) {\n        super(engServ, raycaster);\n        this.engServ = engServ;\n        this.animationLoop = animationLoop;\n        this.raycaster = raycaster;\n        this.isDevMode = isDevMode;\n        this.nid = ThCanvas.instanceCnt++;\n        /**\n         * if true does not use the ThCanvas as view\n         * this is esepcially usefull if you have multiple views\n         * and want to iterate over all of them with *ngFor\n         * use statically (before ngOnInit is triggered)\n         */\n        this.disableDefaultView = false;\n    }\n    ngAfterContentChecked() {\n        this.animationLoop.requestAnimationFrame();\n    }\n    ngAfterViewInit() {\n        this.animationLoop.requestAnimationFrame();\n    }\n    ngOnInit() {\n        this.applyRendererParameters();\n        super.ngOnInit();\n        if (!this.disableDefaultView) {\n            this.engServ.addView(this);\n        }\n    }\n    applyRendererParameters() {\n        if (!this.rendererCanvas) {\n            throw new Error('Missing Canvas');\n        }\n        this.engServ.setRenderer({ ...this.rendererParameters, domElement: this.rendererCanvas.nativeElement });\n    }\n}\nThCanvas.instanceCnt = 0;\nThCanvas.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCanvas, deps: [{ token: ThEngineService }, { token: ThAnimationLoopService }, { token: forwardRef(() => RaycasterService) }], target: i0.ɵɵFactoryTarget.Component });\nThCanvas.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCanvas, selector: \"th-canvas\", inputs: { rendererParameters: \"rendererParameters\", disableDefaultView: \"disableDefaultView\" }, providers: [\n        { provide: ThObject3D, useExisting: forwardRef(() => ThCanvas) },\n        ThEngineService,\n        ThAnimationLoopService,\n        { provide: RAYCASTER, useValue: new Raycaster() },\n        forwardRef(() => RaycasterService),\n        { provide: ThView, useExisting: forwardRef(() => ThCanvas) }\n    ], queries: [{ propertyName: \"views\", predicate: ThView }], viewQueries: [{ propertyName: \"rendererCanvas\", first: true, predicate: [\"rendererCanvas\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: '<canvas #rendererCanvas id=\"rendererCanvas\"><ng-content *ngIf=\"isDevMode()\" ></ng-content></canvas>', isInline: true, styles: [\":host{display:flex;flex:auto;line-height:0;height:100%}canvas{flex:auto;outline:none;width:100%;height:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCanvas, decorators: [{\n            type: Component,\n            args: [{ selector: 'th-canvas', template: '<canvas #rendererCanvas id=\"rendererCanvas\"><ng-content *ngIf=\"isDevMode()\" ></ng-content></canvas>', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: ThObject3D, useExisting: forwardRef(() => ThCanvas) },\n                        ThEngineService,\n                        ThAnimationLoopService,\n                        { provide: RAYCASTER, useValue: new Raycaster() },\n                        forwardRef(() => RaycasterService),\n                        { provide: ThView, useExisting: forwardRef(() => ThCanvas) }\n                    ], styles: [\":host{display:flex;flex:auto;line-height:0;height:100%}canvas{flex:auto;outline:none;width:100%;height:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: ThEngineService }, { type: ThAnimationLoopService }, { type: RaycasterService, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => RaycasterService)]\n                }] }]; }, propDecorators: { rendererParameters: [{\n                type: Input\n            }], disableDefaultView: [{\n                type: Input\n            }], views: [{\n                type: ContentChildren,\n                args: [ThView]\n            }], rendererCanvas: [{\n                type: ViewChild,\n                args: ['rendererCanvas', { static: true }]\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThControlBase extends ThWrapperBase {\n    constructor(_camera, canvas) {\n        super();\n        this._camera = _camera;\n        this.canvas = canvas;\n        this.renderLoop = inject(ThAnimationLoopService);\n    }\n    createThreeInstance(args) {\n        if (!args) {\n            args = [this._camera.objRef, this.canvas?.rendererCanvas?.nativeElement];\n        }\n        const instance = super.createThreeInstance(args);\n        this.patchDispatchEvent(instance);\n        this.subscribeControlUpdater(instance);\n        return instance;\n    }\n    patchDispatchEvent(dispatcher) {\n        if (dispatcher.dispatchEvent) {\n            const origMethod = (this.origDispatchEventMethod = dispatcher.dispatchEvent);\n            dispatcher.dispatchEvent = (event) => {\n                origMethod.call(dispatcher, event);\n                // request an animation frame after an event was emitted;\n                this.renderLoop.requestAnimationFrame();\n            };\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.unpatchDispatchEvent();\n        this.unsubscribeControlUpdater();\n    }\n    unpatchDispatchEvent() {\n        if (this.origDispatchEventMethod && this._objRef) {\n            this._objRef.dispatchEvent = this.origDispatchEventMethod;\n        }\n    }\n    subscribeControlUpdater(control) {\n        if (control.update !== undefined) {\n            this.beforeRenderSubscription = this.renderLoop.beforeRender$.subscribe((state) => {\n                control.update(state.delta);\n            });\n        }\n    }\n    unsubscribeControlUpdater() {\n        if (this.beforeRenderSubscription) {\n            this.beforeRenderSubscription.unsubscribe();\n        }\n    }\n}\nThControlBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThControlBase, deps: [{ token: ThObject3D }, { token: ThCanvas }], target: i0.ɵɵFactoryTarget.Component });\nThControlBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThControlBase, selector: \"th-abs-control\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThControlBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-abs-control',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D }, { type: ThCanvas }]; } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTransformControlsGen extends ThControlBase {\n    getType() {\n        return TransformControls;\n    }\n    set domElement(value) {\n        if (this._objRef) {\n            this._objRef.domElement = value;\n        }\n    }\n    // @ts-ignore\n    get domElement() {\n        return this._objRef?.domElement;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set object(value) {\n        if (this._objRef) {\n            this._objRef.object = value;\n        }\n    }\n    // @ts-ignore\n    get object() {\n        return this._objRef?.object;\n    }\n    set enabled(value) {\n        if (this._objRef) {\n            this._objRef.enabled = value;\n        }\n    }\n    // @ts-ignore\n    get enabled() {\n        return this._objRef?.enabled;\n    }\n    set axis(value) {\n        if (this._objRef) {\n            this._objRef.axis = value;\n        }\n    }\n    // @ts-ignore\n    get axis() {\n        return this._objRef?.axis;\n    }\n    set mode(value) {\n        if (this._objRef) {\n            this._objRef.mode = value;\n        }\n    }\n    // @ts-ignore\n    get mode() {\n        return this._objRef?.mode;\n    }\n    set translationSnap(value) {\n        if (this._objRef) {\n            this._objRef.translationSnap = value;\n        }\n    }\n    // @ts-ignore\n    get translationSnap() {\n        return this._objRef?.translationSnap;\n    }\n    set rotationSnap(value) {\n        if (this._objRef) {\n            this._objRef.rotationSnap = value;\n        }\n    }\n    // @ts-ignore\n    get rotationSnap() {\n        return this._objRef?.rotationSnap;\n    }\n    set space(value) {\n        if (this._objRef) {\n            this._objRef.space = value;\n        }\n    }\n    // @ts-ignore\n    get space() {\n        return this._objRef?.space;\n    }\n    set size(value) {\n        if (this._objRef) {\n            this._objRef.size = value;\n        }\n    }\n    // @ts-ignore\n    get size() {\n        return this._objRef?.size;\n    }\n    set dragging(value) {\n        if (this._objRef) {\n            this._objRef.dragging = value;\n        }\n    }\n    // @ts-ignore\n    get dragging() {\n        return this._objRef?.dragging;\n    }\n    set showX(value) {\n        if (this._objRef) {\n            this._objRef.showX = value;\n        }\n    }\n    // @ts-ignore\n    get showX() {\n        return this._objRef?.showX;\n    }\n    set showY(value) {\n        if (this._objRef) {\n            this._objRef.showY = value;\n        }\n    }\n    // @ts-ignore\n    get showY() {\n        return this._objRef?.showY;\n    }\n    set showZ(value) {\n        if (this._objRef) {\n            this._objRef.showZ = value;\n        }\n    }\n    // @ts-ignore\n    get showZ() {\n        return this._objRef?.showZ;\n    }\n    // @ts-ignore\n    get isTransformControls() {\n        return this._objRef?.isTransformControls;\n    }\n    set mouseButtons(value) {\n        if (this._objRef) {\n            this._objRef.mouseButtons = value;\n        }\n    }\n    // @ts-ignore\n    get mouseButtons() {\n        return this._objRef?.mouseButtons;\n    }\n}\nThTransformControlsGen.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTransformControlsGen, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTransformControlsGen.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTransformControlsGen, selector: \"th-transformControlsGen\", inputs: { domElement: \"domElement\", camera: \"camera\", object: \"object\", enabled: \"enabled\", axis: \"axis\", mode: \"mode\", translationSnap: \"translationSnap\", rotationSnap: \"rotationSnap\", space: \"space\", size: \"size\", dragging: \"dragging\", showX: \"showX\", showY: \"showY\", showZ: \"showZ\", mouseButtons: \"mouseButtons\" }, providers: [\n        {\n            provide: ThControlBase,\n            useExisting: forwardRef(() => ThTransformControlsGen)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTransformControlsGen, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-transformControlsGen',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThControlBase,\n                            useExisting: forwardRef(() => ThTransformControlsGen)\n                        }\n                    ]\n                }]\n        }], propDecorators: { domElement: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], object: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], axis: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], translationSnap: [{\n                type: Input\n            }], rotationSnap: [{\n                type: Input\n            }], space: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], dragging: [{\n                type: Input\n            }], showX: [{\n                type: Input\n            }], showY: [{\n                type: Input\n            }], showZ: [{\n                type: Input\n            }], mouseButtons: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTransformControls extends ThTransformControlsGen {\n    getType() {\n        return TransformControls;\n    }\n    set object(value) {\n        if (this._objRef) {\n            this._objRef.object = value;\n            if (value) {\n                this._objRef.attach(value);\n            }\n            else {\n                this._objRef.detach();\n            }\n        }\n    }\n    addToParent() {\n        if (this._objRef) {\n            this.canvas?.scene?.objRef?.add(this._objRef);\n        }\n    }\n    removeFromParent() {\n        if (this._objRef) {\n            this.canvas?.scene?.objRef?.remove(this._objRef);\n        }\n    }\n}\nThTransformControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTransformControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTransformControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTransformControls, selector: \"th-transformControls\", inputs: { object: \"object\" }, providers: [\n        {\n            provide: ThControlBase,\n            useExisting: forwardRef(() => ThTransformControls)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTransformControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-transformControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThControlBase,\n                            useExisting: forwardRef(() => ThTransformControls)\n                        }\n                    ]\n                }]\n        }], propDecorators: { object: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThAdaptiveToneMappingPass extends ThPass {\n    getType() {\n        return AdaptiveToneMappingPass;\n    }\n    set adaptive(value) {\n        if (this._objRef) {\n            this._objRef.adaptive = value;\n        }\n    }\n    // @ts-ignore\n    get adaptive() {\n        return this._objRef?.adaptive;\n    }\n    set resolution(value) {\n        if (this._objRef) {\n            this._objRef.resolution = value;\n        }\n    }\n    // @ts-ignore\n    get resolution() {\n        return this._objRef?.resolution;\n    }\n    set needsInit(value) {\n        if (this._objRef) {\n            this._objRef.needsInit = value;\n        }\n    }\n    // @ts-ignore\n    get needsInit() {\n        return this._objRef?.needsInit;\n    }\n    set luminanceRT(value) {\n        if (this._objRef) {\n            this._objRef.luminanceRT = value;\n        }\n    }\n    // @ts-ignore\n    get luminanceRT() {\n        return this._objRef?.luminanceRT;\n    }\n    set previousLuminanceRT(value) {\n        if (this._objRef) {\n            this._objRef.previousLuminanceRT = value;\n        }\n    }\n    // @ts-ignore\n    get previousLuminanceRT() {\n        return this._objRef?.previousLuminanceRT;\n    }\n    set currentLuminanceRT(value) {\n        if (this._objRef) {\n            this._objRef.currentLuminanceRT = value;\n        }\n    }\n    // @ts-ignore\n    get currentLuminanceRT() {\n        return this._objRef?.currentLuminanceRT;\n    }\n    set copyUniforms(value) {\n        if (this._objRef) {\n            this._objRef.copyUniforms = value;\n        }\n    }\n    // @ts-ignore\n    get copyUniforms() {\n        return this._objRef?.copyUniforms;\n    }\n    set materialCopy(value) {\n        if (this._objRef) {\n            this._objRef.materialCopy = value;\n        }\n    }\n    // @ts-ignore\n    get materialCopy() {\n        return this._objRef?.materialCopy;\n    }\n    set materialLuminance(value) {\n        if (this._objRef) {\n            this._objRef.materialLuminance = value;\n        }\n    }\n    // @ts-ignore\n    get materialLuminance() {\n        return this._objRef?.materialLuminance;\n    }\n    set adaptLuminanceShader(value) {\n        if (this._objRef) {\n            this._objRef.adaptLuminanceShader = value;\n        }\n    }\n    // @ts-ignore\n    get adaptLuminanceShader() {\n        return this._objRef?.adaptLuminanceShader;\n    }\n    set materialAdaptiveLum(value) {\n        if (this._objRef) {\n            this._objRef.materialAdaptiveLum = value;\n        }\n    }\n    // @ts-ignore\n    get materialAdaptiveLum() {\n        return this._objRef?.materialAdaptiveLum;\n    }\n    set materialToneMap(value) {\n        if (this._objRef) {\n            this._objRef.materialToneMap = value;\n        }\n    }\n    // @ts-ignore\n    get materialToneMap() {\n        return this._objRef?.materialToneMap;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThAdaptiveToneMappingPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAdaptiveToneMappingPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThAdaptiveToneMappingPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAdaptiveToneMappingPass, selector: \"th-adaptiveToneMappingPass\", inputs: { adaptive: \"adaptive\", resolution: \"resolution\", needsInit: \"needsInit\", luminanceRT: \"luminanceRT\", previousLuminanceRT: \"previousLuminanceRT\", currentLuminanceRT: \"currentLuminanceRT\", copyUniforms: \"copyUniforms\", materialCopy: \"materialCopy\", materialLuminance: \"materialLuminance\", adaptLuminanceShader: \"adaptLuminanceShader\", materialAdaptiveLum: \"materialAdaptiveLum\", materialToneMap: \"materialToneMap\", fsQuad: \"fsQuad\" }, providers: [\n        {\n            provide: ThPassBase,\n            useExisting: forwardRef(() => ThAdaptiveToneMappingPass)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAdaptiveToneMappingPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-adaptiveToneMappingPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThPassBase,\n                            useExisting: forwardRef(() => ThAdaptiveToneMappingPass)\n                        }\n                    ]\n                }]\n        }], propDecorators: { adaptive: [{\n                type: Input\n            }], resolution: [{\n                type: Input\n            }], needsInit: [{\n                type: Input\n            }], luminanceRT: [{\n                type: Input\n            }], previousLuminanceRT: [{\n                type: Input\n            }], currentLuminanceRT: [{\n                type: Input\n            }], copyUniforms: [{\n                type: Input\n            }], materialCopy: [{\n                type: Input\n            }], materialLuminance: [{\n                type: Input\n            }], adaptLuminanceShader: [{\n                type: Input\n            }], materialAdaptiveLum: [{\n                type: Input\n            }], materialToneMap: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThAfterimagePass extends ThPass {\n    getType() {\n        return AfterimagePass;\n    }\n    set shader(value) {\n        if (this._objRef) {\n            this._objRef.shader = value;\n        }\n    }\n    // @ts-ignore\n    get shader() {\n        return this._objRef?.shader;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set textureComp(value) {\n        if (this._objRef) {\n            this._objRef.textureComp = value;\n        }\n    }\n    // @ts-ignore\n    get textureComp() {\n        return this._objRef?.textureComp;\n    }\n    set textureOld(value) {\n        if (this._objRef) {\n            this._objRef.textureOld = value;\n        }\n    }\n    // @ts-ignore\n    get textureOld() {\n        return this._objRef?.textureOld;\n    }\n    set shaderMaterial(value) {\n        if (this._objRef) {\n            this._objRef.shaderMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get shaderMaterial() {\n        return this._objRef?.shaderMaterial;\n    }\n    set compFsQuad(value) {\n        if (this._objRef) {\n            this._objRef.compFsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get compFsQuad() {\n        return this._objRef?.compFsQuad;\n    }\n    set copyFsQuad(value) {\n        if (this._objRef) {\n            this._objRef.copyFsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get copyFsQuad() {\n        return this._objRef?.copyFsQuad;\n    }\n}\nThAfterimagePass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAfterimagePass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThAfterimagePass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAfterimagePass, selector: \"th-afterimagePass\", inputs: { shader: \"shader\", uniforms: \"uniforms\", textureComp: \"textureComp\", textureOld: \"textureOld\", shaderMaterial: \"shaderMaterial\", compFsQuad: \"compFsQuad\", copyFsQuad: \"copyFsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThAfterimagePass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAfterimagePass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-afterimagePass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThAfterimagePass) }]\n                }]\n        }], propDecorators: { shader: [{\n                type: Input\n            }], uniforms: [{\n                type: Input\n            }], textureComp: [{\n                type: Input\n            }], textureOld: [{\n                type: Input\n            }], shaderMaterial: [{\n                type: Input\n            }], compFsQuad: [{\n                type: Input\n            }], copyFsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLight extends ThObject3D {\n    // @ts-ignore\n    get isLight() {\n        return this._objRef?.isLight;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set intensity(value) {\n        if (this._objRef) {\n            this._objRef.intensity = value;\n        }\n    }\n    // @ts-ignore\n    get intensity() {\n        return this._objRef?.intensity;\n    }\n    set shadow(value) {\n        if (this._objRef) {\n            this._objRef.shadow = value;\n        }\n    }\n    // @ts-ignore\n    get shadow() {\n        return this._objRef?.shadow;\n    }\n}\nThLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLight, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLight, selector: \"th-light\", inputs: { color: \"color\", intensity: \"intensity\", shadow: \"shadow\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLight) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLight, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-light',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLight) }]\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], intensity: [{\n                type: Input\n            }], shadow: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAmbientLight extends ThLight {\n    getType() {\n        return AmbientLight;\n    }\n    // @ts-ignore\n    get isAmbientLight() {\n        return this._objRef?.isAmbientLight;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThAmbientLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAmbientLight, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThAmbientLight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAmbientLight, selector: \"th-ambientLight\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLight) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAmbientLight, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-ambientLight',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLight) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLightProbe extends ThLight {\n    getType() {\n        return LightProbe;\n    }\n    // @ts-ignore\n    get isLightProbe() {\n        return this._objRef?.isLightProbe;\n    }\n    set sh(value) {\n        if (this._objRef) {\n            this._objRef.sh = applyValue(this._objRef.sh, value);\n        }\n    }\n    // @ts-ignore\n    get sh() {\n        return this._objRef?.sh;\n    }\n}\nThLightProbe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLightProbe, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLightProbe.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLightProbe, selector: \"th-lightProbe\", inputs: { sh: \"sh\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLightProbe) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLightProbe, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lightProbe',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLightProbe) }]\n                }]\n        }], propDecorators: { sh: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAmbientLightProbe extends ThLightProbe {\n    getType() {\n        return AmbientLightProbe;\n    }\n    // @ts-ignore\n    get isAmbientLightProbe() {\n        return this._objRef?.isAmbientLightProbe;\n    }\n}\nThAmbientLightProbe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAmbientLightProbe, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThAmbientLightProbe.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAmbientLightProbe, selector: \"th-ambientLightProbe\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLightProbe) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAmbientLightProbe, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-ambientLightProbe',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLightProbe) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThArcballControls extends ThControlBase {\n    getType() {\n        return ArcballControls;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set domElement(value) {\n        if (this._objRef) {\n            this._objRef.domElement = value;\n        }\n    }\n    // @ts-ignore\n    get domElement() {\n        return this._objRef?.domElement;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set focusAnimationTime(value) {\n        if (this._objRef) {\n            this._objRef.focusAnimationTime = value;\n        }\n    }\n    // @ts-ignore\n    get focusAnimationTime() {\n        return this._objRef?.focusAnimationTime;\n    }\n    set enabled(value) {\n        if (this._objRef) {\n            this._objRef.enabled = value;\n        }\n    }\n    // @ts-ignore\n    get enabled() {\n        return this._objRef?.enabled;\n    }\n    set enablePan(value) {\n        if (this._objRef) {\n            this._objRef.enablePan = value;\n        }\n    }\n    // @ts-ignore\n    get enablePan() {\n        return this._objRef?.enablePan;\n    }\n    set enableRotate(value) {\n        if (this._objRef) {\n            this._objRef.enableRotate = value;\n        }\n    }\n    // @ts-ignore\n    get enableRotate() {\n        return this._objRef?.enableRotate;\n    }\n    set enableZoom(value) {\n        if (this._objRef) {\n            this._objRef.enableZoom = value;\n        }\n    }\n    // @ts-ignore\n    get enableZoom() {\n        return this._objRef?.enableZoom;\n    }\n    set enableGizmos(value) {\n        if (this._objRef) {\n            this._objRef.enableGizmos = value;\n        }\n    }\n    // @ts-ignore\n    get enableGizmos() {\n        return this._objRef?.enableGizmos;\n    }\n    set adjustNearFar(value) {\n        if (this._objRef) {\n            this._objRef.adjustNearFar = value;\n        }\n    }\n    // @ts-ignore\n    get adjustNearFar() {\n        return this._objRef?.adjustNearFar;\n    }\n    set scaleFactor(value) {\n        if (this._objRef) {\n            this._objRef.scaleFactor = value;\n        }\n    }\n    // @ts-ignore\n    get scaleFactor() {\n        return this._objRef?.scaleFactor;\n    }\n    set dampingFactor(value) {\n        if (this._objRef) {\n            this._objRef.dampingFactor = value;\n        }\n    }\n    // @ts-ignore\n    get dampingFactor() {\n        return this._objRef?.dampingFactor;\n    }\n    set wMax(value) {\n        if (this._objRef) {\n            this._objRef.wMax = value;\n        }\n    }\n    // @ts-ignore\n    get wMax() {\n        return this._objRef?.wMax;\n    }\n    set enableAnimations(value) {\n        if (this._objRef) {\n            this._objRef.enableAnimations = value;\n        }\n    }\n    // @ts-ignore\n    get enableAnimations() {\n        return this._objRef?.enableAnimations;\n    }\n    set enableGrid(value) {\n        if (this._objRef) {\n            this._objRef.enableGrid = value;\n        }\n    }\n    // @ts-ignore\n    get enableGrid() {\n        return this._objRef?.enableGrid;\n    }\n    set cursorZoom(value) {\n        if (this._objRef) {\n            this._objRef.cursorZoom = value;\n        }\n    }\n    // @ts-ignore\n    get cursorZoom() {\n        return this._objRef?.cursorZoom;\n    }\n    set minFov(value) {\n        if (this._objRef) {\n            this._objRef.minFov = value;\n        }\n    }\n    // @ts-ignore\n    get minFov() {\n        return this._objRef?.minFov;\n    }\n    set maxFov(value) {\n        if (this._objRef) {\n            this._objRef.maxFov = value;\n        }\n    }\n    // @ts-ignore\n    get maxFov() {\n        return this._objRef?.maxFov;\n    }\n    set minDistance(value) {\n        if (this._objRef) {\n            this._objRef.minDistance = value;\n        }\n    }\n    // @ts-ignore\n    get minDistance() {\n        return this._objRef?.minDistance;\n    }\n    set maxDistance(value) {\n        if (this._objRef) {\n            this._objRef.maxDistance = value;\n        }\n    }\n    // @ts-ignore\n    get maxDistance() {\n        return this._objRef?.maxDistance;\n    }\n    set minZoom(value) {\n        if (this._objRef) {\n            this._objRef.minZoom = value;\n        }\n    }\n    // @ts-ignore\n    get minZoom() {\n        return this._objRef?.minZoom;\n    }\n    set maxZoom(value) {\n        if (this._objRef) {\n            this._objRef.maxZoom = value;\n        }\n    }\n    // @ts-ignore\n    get maxZoom() {\n        return this._objRef?.maxZoom;\n    }\n    set target(value) {\n        if (this._objRef) {\n            this._objRef.target = applyValue(this._objRef.target, value);\n        }\n    }\n    // @ts-ignore\n    get target() {\n        return this._objRef?.target;\n    }\n    set radiusFactor(value) {\n        if (this._objRef) {\n            this._objRef.radiusFactor = value;\n        }\n    }\n    // @ts-ignore\n    get radiusFactor() {\n        return this._objRef?.radiusFactor;\n    }\n}\nThArcballControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThArcballControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThArcballControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThArcballControls, selector: \"th-arcballControls\", inputs: { camera: \"camera\", domElement: \"domElement\", scene: \"scene\", focusAnimationTime: \"focusAnimationTime\", enabled: \"enabled\", enablePan: \"enablePan\", enableRotate: \"enableRotate\", enableZoom: \"enableZoom\", enableGizmos: \"enableGizmos\", adjustNearFar: \"adjustNearFar\", scaleFactor: \"scaleFactor\", dampingFactor: \"dampingFactor\", wMax: \"wMax\", enableAnimations: \"enableAnimations\", enableGrid: \"enableGrid\", cursorZoom: \"cursorZoom\", minFov: \"minFov\", maxFov: \"maxFov\", minDistance: \"minDistance\", maxDistance: \"maxDistance\", minZoom: \"minZoom\", maxZoom: \"maxZoom\", target: \"target\", radiusFactor: \"radiusFactor\" }, providers: [\n        {\n            provide: ThControlBase,\n            useExisting: forwardRef(() => ThArcballControls)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThArcballControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-arcballControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThControlBase,\n                            useExisting: forwardRef(() => ThArcballControls)\n                        }\n                    ]\n                }]\n        }], propDecorators: { camera: [{\n                type: Input\n            }], domElement: [{\n                type: Input\n            }], scene: [{\n                type: Input\n            }], focusAnimationTime: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], enablePan: [{\n                type: Input\n            }], enableRotate: [{\n                type: Input\n            }], enableZoom: [{\n                type: Input\n            }], enableGizmos: [{\n                type: Input\n            }], adjustNearFar: [{\n                type: Input\n            }], scaleFactor: [{\n                type: Input\n            }], dampingFactor: [{\n                type: Input\n            }], wMax: [{\n                type: Input\n            }], enableAnimations: [{\n                type: Input\n            }], enableGrid: [{\n                type: Input\n            }], cursorZoom: [{\n                type: Input\n            }], minFov: [{\n                type: Input\n            }], maxFov: [{\n                type: Input\n            }], minDistance: [{\n                type: Input\n            }], maxDistance: [{\n                type: Input\n            }], minZoom: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], target: [{\n                type: Input\n            }], radiusFactor: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPerspectiveCamera extends ThCamera {\n    getType() {\n        return PerspectiveCamera;\n    }\n    // @ts-ignore\n    get isPerspectiveCamera() {\n        return this._objRef?.isPerspectiveCamera;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set zoom(value) {\n        if (this._objRef) {\n            this._objRef.zoom = value;\n        }\n    }\n    // @ts-ignore\n    get zoom() {\n        return this._objRef?.zoom;\n    }\n    set fov(value) {\n        if (this._objRef) {\n            this._objRef.fov = value;\n        }\n    }\n    // @ts-ignore\n    get fov() {\n        return this._objRef?.fov;\n    }\n    set aspect(value) {\n        if (this._objRef) {\n            this._objRef.aspect = value;\n        }\n    }\n    // @ts-ignore\n    get aspect() {\n        return this._objRef?.aspect;\n    }\n    set near(value) {\n        if (this._objRef) {\n            this._objRef.near = value;\n        }\n    }\n    // @ts-ignore\n    get near() {\n        return this._objRef?.near;\n    }\n    set far(value) {\n        if (this._objRef) {\n            this._objRef.far = value;\n        }\n    }\n    // @ts-ignore\n    get far() {\n        return this._objRef?.far;\n    }\n    set focus(value) {\n        if (this._objRef) {\n            this._objRef.focus = value;\n        }\n    }\n    // @ts-ignore\n    get focus() {\n        return this._objRef?.focus;\n    }\n    set view(value) {\n        if (this._objRef) {\n            this._objRef.view = value;\n        }\n    }\n    // @ts-ignore\n    get view() {\n        return this._objRef?.view;\n    }\n    set filmGauge(value) {\n        if (this._objRef) {\n            this._objRef.filmGauge = value;\n        }\n    }\n    // @ts-ignore\n    get filmGauge() {\n        return this._objRef?.filmGauge;\n    }\n    set filmOffset(value) {\n        if (this._objRef) {\n            this._objRef.filmOffset = value;\n        }\n    }\n    // @ts-ignore\n    get filmOffset() {\n        return this._objRef?.filmOffset;\n    }\n}\nThPerspectiveCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPerspectiveCamera, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPerspectiveCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPerspectiveCamera, selector: \"th-perspectiveCamera\", inputs: { zoom: \"zoom\", fov: \"fov\", aspect: \"aspect\", near: \"near\", far: \"far\", focus: \"focus\", view: \"view\", filmGauge: \"filmGauge\", filmOffset: \"filmOffset\" }, providers: [\n        { provide: ThObject3D, useExisting: forwardRef(() => ThPerspectiveCamera) },\n        { provide: ThCamera, useExisting: forwardRef(() => ThPerspectiveCamera) }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPerspectiveCamera, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-perspectiveCamera',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        { provide: ThObject3D, useExisting: forwardRef(() => ThPerspectiveCamera) },\n                        { provide: ThCamera, useExisting: forwardRef(() => ThPerspectiveCamera) }\n                    ]\n                }]\n        }], propDecorators: { zoom: [{\n                type: Input\n            }], fov: [{\n                type: Input\n            }], aspect: [{\n                type: Input\n            }], near: [{\n                type: Input\n            }], far: [{\n                type: Input\n            }], focus: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], filmGauge: [{\n                type: Input\n            }], filmOffset: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThArrayCamera extends ThPerspectiveCamera {\n    getType() {\n        return ArrayCamera;\n    }\n    // @ts-ignore\n    get isArrayCamera() {\n        return this._objRef?.isArrayCamera;\n    }\n    set cameras(value) {\n        if (this._objRef) {\n            this._objRef.cameras = value;\n        }\n    }\n    // @ts-ignore\n    get cameras() {\n        return this._objRef?.cameras;\n    }\n}\nThArrayCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThArrayCamera, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThArrayCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThArrayCamera, selector: \"th-arrayCamera\", inputs: { cameras: \"cameras\" }, providers: [\n        { provide: ThObject3D, useExisting: forwardRef(() => ThArrayCamera) },\n        { provide: ThCamera, useExisting: forwardRef(() => ThArrayCamera) }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThArrayCamera, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-arrayCamera',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        { provide: ThObject3D, useExisting: forwardRef(() => ThArrayCamera) },\n                        { provide: ThCamera, useExisting: forwardRef(() => ThArrayCamera) }\n                    ]\n                }]\n        }], propDecorators: { cameras: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThArrowHelper extends ThObject3D {\n    getType() {\n        return ArrowHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set line(value) {\n        if (this._objRef) {\n            this._objRef.line = value;\n        }\n    }\n    // @ts-ignore\n    get line() {\n        return this._objRef?.line;\n    }\n    set cone(value) {\n        if (this._objRef) {\n            this._objRef.cone = value;\n        }\n    }\n    // @ts-ignore\n    get cone() {\n        return this._objRef?.cone;\n    }\n}\nThArrowHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThArrowHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThArrowHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThArrowHelper, selector: \"th-arrowHelper\", inputs: { line: \"line\", cone: \"cone\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThArrowHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThArrowHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-arrowHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThArrowHelper) }]\n                }]\n        }], propDecorators: { line: [{\n                type: Input\n            }], cone: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAudio extends ThObject3D {\n    getType() {\n        return Audio;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set listener(value) {\n        if (this._objRef) {\n            this._objRef.listener = value;\n        }\n    }\n    // @ts-ignore\n    get listener() {\n        return this._objRef?.listener;\n    }\n    set context(value) {\n        if (this._objRef) {\n            this._objRef.context = value;\n        }\n    }\n    // @ts-ignore\n    get context() {\n        return this._objRef?.context;\n    }\n    set gain(value) {\n        if (this._objRef) {\n            this._objRef.gain = value;\n        }\n    }\n    // @ts-ignore\n    get gain() {\n        return this._objRef?.gain;\n    }\n    set autoplay(value) {\n        if (this._objRef) {\n            this._objRef.autoplay = value;\n        }\n    }\n    // @ts-ignore\n    get autoplay() {\n        return this._objRef?.autoplay;\n    }\n    set buffer(value) {\n        if (this._objRef) {\n            this._objRef.buffer = value;\n        }\n    }\n    // @ts-ignore\n    get buffer() {\n        return this._objRef?.buffer;\n    }\n    set detune(value) {\n        if (this._objRef) {\n            this._objRef.detune = value;\n        }\n    }\n    // @ts-ignore\n    get detune() {\n        return this._objRef?.detune;\n    }\n    set loop(value) {\n        if (this._objRef) {\n            this._objRef.loop = value;\n        }\n    }\n    // @ts-ignore\n    get loop() {\n        return this._objRef?.loop;\n    }\n    set loopStart(value) {\n        if (this._objRef) {\n            this._objRef.loopStart = value;\n        }\n    }\n    // @ts-ignore\n    get loopStart() {\n        return this._objRef?.loopStart;\n    }\n    set loopEnd(value) {\n        if (this._objRef) {\n            this._objRef.loopEnd = value;\n        }\n    }\n    // @ts-ignore\n    get loopEnd() {\n        return this._objRef?.loopEnd;\n    }\n    set offset(value) {\n        if (this._objRef) {\n            this._objRef.offset = value;\n        }\n    }\n    // @ts-ignore\n    get offset() {\n        return this._objRef?.offset;\n    }\n    set duration(value) {\n        if (this._objRef) {\n            this._objRef.duration = value;\n        }\n    }\n    // @ts-ignore\n    get duration() {\n        return this._objRef?.duration;\n    }\n    set playbackRate(value) {\n        if (this._objRef) {\n            this._objRef.playbackRate = value;\n        }\n    }\n    // @ts-ignore\n    get playbackRate() {\n        return this._objRef?.playbackRate;\n    }\n    set isPlaying(value) {\n        if (this._objRef) {\n            this._objRef.isPlaying = value;\n        }\n    }\n    // @ts-ignore\n    get isPlaying() {\n        return this._objRef?.isPlaying;\n    }\n    set hasPlaybackControl(value) {\n        if (this._objRef) {\n            this._objRef.hasPlaybackControl = value;\n        }\n    }\n    // @ts-ignore\n    get hasPlaybackControl() {\n        return this._objRef?.hasPlaybackControl;\n    }\n    set sourceType(value) {\n        if (this._objRef) {\n            this._objRef.sourceType = value;\n        }\n    }\n    // @ts-ignore\n    get sourceType() {\n        return this._objRef?.sourceType;\n    }\n    set source(value) {\n        if (this._objRef) {\n            this._objRef.source = value;\n        }\n    }\n    // @ts-ignore\n    get source() {\n        return this._objRef?.source;\n    }\n    set filters(value) {\n        if (this._objRef) {\n            this._objRef.filters = value;\n        }\n    }\n    // @ts-ignore\n    get filters() {\n        return this._objRef?.filters;\n    }\n}\nThAudio.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAudio, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThAudio.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAudio, selector: \"th-audio\", inputs: { listener: \"listener\", context: \"context\", gain: \"gain\", autoplay: \"autoplay\", buffer: \"buffer\", detune: \"detune\", loop: \"loop\", loopStart: \"loopStart\", loopEnd: \"loopEnd\", offset: \"offset\", duration: \"duration\", playbackRate: \"playbackRate\", isPlaying: \"isPlaying\", hasPlaybackControl: \"hasPlaybackControl\", sourceType: \"sourceType\", source: \"source\", filters: \"filters\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAudio) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAudio, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-audio',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAudio) }]\n                }]\n        }], propDecorators: { listener: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], gain: [{\n                type: Input\n            }], autoplay: [{\n                type: Input\n            }], buffer: [{\n                type: Input\n            }], detune: [{\n                type: Input\n            }], loop: [{\n                type: Input\n            }], loopStart: [{\n                type: Input\n            }], loopEnd: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], duration: [{\n                type: Input\n            }], playbackRate: [{\n                type: Input\n            }], isPlaying: [{\n                type: Input\n            }], hasPlaybackControl: [{\n                type: Input\n            }], sourceType: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], filters: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAudioListener extends ThObject3D {\n    getType() {\n        return AudioListener;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set context(value) {\n        if (this._objRef) {\n            this._objRef.context = value;\n        }\n    }\n    // @ts-ignore\n    get context() {\n        return this._objRef?.context;\n    }\n    set gain(value) {\n        if (this._objRef) {\n            this._objRef.gain = value;\n        }\n    }\n    // @ts-ignore\n    get gain() {\n        return this._objRef?.gain;\n    }\n    set filter(value) {\n        if (this._objRef) {\n            this._objRef.filter = value;\n        }\n    }\n    // @ts-ignore\n    get filter() {\n        return this._objRef?.filter;\n    }\n    set timeDelta(value) {\n        if (this._objRef) {\n            this._objRef.timeDelta = value;\n        }\n    }\n    // @ts-ignore\n    get timeDelta() {\n        return this._objRef?.timeDelta;\n    }\n}\nThAudioListener.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAudioListener, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThAudioListener.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAudioListener, selector: \"th-audioListener\", inputs: { context: \"context\", gain: \"gain\", filter: \"filter\", timeDelta: \"timeDelta\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAudioListener) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAudioListener, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-audioListener',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAudioListener) }]\n                }]\n        }], propDecorators: { context: [{\n                type: Input\n            }], gain: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], timeDelta: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLine extends ThObject3D {\n    getType() {\n        return Line;\n    }\n    // @ts-ignore\n    get isLine() {\n        return this._objRef?.isLine;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set geometry(value) {\n        if (this._objRef) {\n            this._objRef.geometry = value;\n        }\n    }\n    // @ts-ignore\n    get geometry() {\n        return this._objRef?.geometry;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set morphTargetInfluences(value) {\n        if (this._objRef) {\n            this._objRef.morphTargetInfluences = value;\n        }\n    }\n    // @ts-ignore\n    get morphTargetInfluences() {\n        return this._objRef?.morphTargetInfluences;\n    }\n    set morphTargetDictionary(value) {\n        if (this._objRef) {\n            this._objRef.morphTargetDictionary = value;\n        }\n    }\n    // @ts-ignore\n    get morphTargetDictionary() {\n        return this._objRef?.morphTargetDictionary;\n    }\n}\nThLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLine, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLine.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLine, selector: \"th-line\", inputs: { geometry: \"geometry\", material: \"material\", morphTargetInfluences: \"morphTargetInfluences\", morphTargetDictionary: \"morphTargetDictionary\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLine) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLine, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-line',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLine) }]\n                }]\n        }], propDecorators: { geometry: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], morphTargetInfluences: [{\n                type: Input\n            }], morphTargetDictionary: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineSegments extends ThLine {\n    getType() {\n        return LineSegments;\n    }\n    // @ts-ignore\n    get isLineSegments() {\n        return this._objRef?.isLineSegments;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThLineSegments.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineSegments, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLineSegments.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLineSegments, selector: \"th-lineSegments\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLineSegments) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineSegments, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lineSegments',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLineSegments) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThAxesHelper extends ThLineSegments {\n    getType() {\n        return AxesHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThAxesHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAxesHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThAxesHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAxesHelper, selector: \"th-axesHelper\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAxesHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAxesHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-axesHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAxesHelper) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThBloomPass extends ThPass {\n    getType() {\n        return BloomPass;\n    }\n    set renderTargetX(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetX = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetX() {\n        return this._objRef?.renderTargetX;\n    }\n    set renderTargetY(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetY = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetY() {\n        return this._objRef?.renderTargetY;\n    }\n    set copyUniforms(value) {\n        if (this._objRef) {\n            this._objRef.copyUniforms = value;\n        }\n    }\n    // @ts-ignore\n    get copyUniforms() {\n        return this._objRef?.copyUniforms;\n    }\n    set materialCopy(value) {\n        if (this._objRef) {\n            this._objRef.materialCopy = value;\n        }\n    }\n    // @ts-ignore\n    get materialCopy() {\n        return this._objRef?.materialCopy;\n    }\n    set convolutionUniforms(value) {\n        if (this._objRef) {\n            this._objRef.convolutionUniforms = value;\n        }\n    }\n    // @ts-ignore\n    get convolutionUniforms() {\n        return this._objRef?.convolutionUniforms;\n    }\n    set materialConvolution(value) {\n        if (this._objRef) {\n            this._objRef.materialConvolution = value;\n        }\n    }\n    // @ts-ignore\n    get materialConvolution() {\n        return this._objRef?.materialConvolution;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThBloomPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBloomPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThBloomPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBloomPass, selector: \"th-bloomPass\", inputs: { renderTargetX: \"renderTargetX\", renderTargetY: \"renderTargetY\", copyUniforms: \"copyUniforms\", materialCopy: \"materialCopy\", convolutionUniforms: \"convolutionUniforms\", materialConvolution: \"materialConvolution\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThBloomPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBloomPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-bloomPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThBloomPass) }]\n                }]\n        }], propDecorators: { renderTargetX: [{\n                type: Input\n            }], renderTargetY: [{\n                type: Input\n            }], copyUniforms: [{\n                type: Input\n            }], materialCopy: [{\n                type: Input\n            }], convolutionUniforms: [{\n                type: Input\n            }], materialConvolution: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThBokehPass extends ThPass {\n    getType() {\n        return BokehPass;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set renderTargetColor(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetColor = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetColor() {\n        return this._objRef?.renderTargetColor;\n    }\n    set renderTargetDepth(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetDepth = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetDepth() {\n        return this._objRef?.renderTargetDepth;\n    }\n    set materialDepth(value) {\n        if (this._objRef) {\n            this._objRef.materialDepth = value;\n        }\n    }\n    // @ts-ignore\n    get materialDepth() {\n        return this._objRef?.materialDepth;\n    }\n    set materialBokeh(value) {\n        if (this._objRef) {\n            this._objRef.materialBokeh = value;\n        }\n    }\n    // @ts-ignore\n    get materialBokeh() {\n        return this._objRef?.materialBokeh;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n    set oldClearColor(value) {\n        if (this._objRef) {\n            this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n        }\n    }\n    // @ts-ignore\n    get oldClearColor() {\n        return this._objRef?.oldClearColor;\n    }\n}\nThBokehPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBokehPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThBokehPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBokehPass, selector: \"th-bokehPass\", inputs: { scene: \"scene\", camera: \"camera\", renderTargetColor: \"renderTargetColor\", renderTargetDepth: \"renderTargetDepth\", materialDepth: \"materialDepth\", materialBokeh: \"materialBokeh\", uniforms: \"uniforms\", fsQuad: \"fsQuad\", oldClearColor: \"oldClearColor\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThBokehPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBokehPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-bokehPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThBokehPass) }]\n                }]\n        }], propDecorators: { scene: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], renderTargetColor: [{\n                type: Input\n            }], renderTargetDepth: [{\n                type: Input\n            }], materialDepth: [{\n                type: Input\n            }], materialBokeh: [{\n                type: Input\n            }], uniforms: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }], oldClearColor: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBone extends ThObject3D {\n    getType() {\n        return Bone;\n    }\n    // @ts-ignore\n    get isBone() {\n        return this._objRef?.isBone;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThBone.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBone, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThBone.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBone, selector: \"th-bone\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBone) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBone, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-bone',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBone) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBox3Helper extends ThLineSegments {\n    getType() {\n        return Box3Helper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set box(value) {\n        if (this._objRef) {\n            this._objRef.box = applyValue(this._objRef.box, value);\n        }\n    }\n    // @ts-ignore\n    get box() {\n        return this._objRef?.box;\n    }\n}\nThBox3Helper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBox3Helper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThBox3Helper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBox3Helper, selector: \"th-box3Helper\", inputs: { box: \"box\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBox3Helper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBox3Helper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-box3Helper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBox3Helper) }]\n                }]\n        }], propDecorators: { box: [{\n                type: Input\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThGeometryBase extends ThWrapperBase {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n    addToParent() {\n        if (!this.parent.objRef) {\n            return;\n            //throw new Error(\"parent object doesn't hold a three js object instance\");\n        }\n        this.parent.objRef.geometry = this.objRef;\n        if (this.parent.objRef.updateMorphTargets) {\n            this.parent.objRef.updateMorphTargets();\n        }\n    }\n    removeFromParent() {\n        if (this._objRef && this.parent && this.parent.objRef) {\n            this.parent.objRef.geometry = undefined;\n        }\n    }\n}\nThGeometryBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGeometryBase, deps: [{ token: ThObject3D }], target: i0.ɵɵFactoryTarget.Component });\nThGeometryBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThGeometryBase, selector: \"th-abs-geometry\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGeometryBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-abs-geometry',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D }]; } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBufferGeometry extends ThGeometryBase {\n    getType() {\n        return BufferGeometry;\n    }\n    set id(value) {\n        if (this._objRef) {\n            this._objRef.id = value;\n        }\n    }\n    // @ts-ignore\n    get id() {\n        return this._objRef?.id;\n    }\n    set uuid(value) {\n        if (this._objRef) {\n            this._objRef.uuid = value;\n        }\n    }\n    // @ts-ignore\n    get uuid() {\n        return this._objRef?.uuid;\n    }\n    set name(value) {\n        if (this._objRef) {\n            this._objRef.name = value;\n        }\n    }\n    // @ts-ignore\n    get name() {\n        return this._objRef?.name;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set index(value) {\n        if (this._objRef) {\n            this._objRef.index = applyValue(this._objRef.index, value);\n        }\n    }\n    // @ts-ignore\n    get index() {\n        return this._objRef?.index;\n    }\n    set attributes(value) {\n        if (this._objRef) {\n            this._objRef.attributes = value;\n        }\n    }\n    // @ts-ignore\n    get attributes() {\n        return this._objRef?.attributes;\n    }\n    set morphAttributes(value) {\n        if (this._objRef) {\n            this._objRef.morphAttributes = value;\n        }\n    }\n    // @ts-ignore\n    get morphAttributes() {\n        return this._objRef?.morphAttributes;\n    }\n    set morphTargetsRelative(value) {\n        if (this._objRef) {\n            this._objRef.morphTargetsRelative = value;\n        }\n    }\n    // @ts-ignore\n    get morphTargetsRelative() {\n        return this._objRef?.morphTargetsRelative;\n    }\n    set groups(value) {\n        if (this._objRef) {\n            this._objRef.groups = value;\n        }\n    }\n    // @ts-ignore\n    get groups() {\n        return this._objRef?.groups;\n    }\n    set boundingBox(value) {\n        if (this._objRef) {\n            this._objRef.boundingBox = applyValue(this._objRef.boundingBox, value);\n        }\n    }\n    // @ts-ignore\n    get boundingBox() {\n        return this._objRef?.boundingBox;\n    }\n    set boundingSphere(value) {\n        if (this._objRef) {\n            this._objRef.boundingSphere = applyValue(this._objRef.boundingSphere, value);\n        }\n    }\n    // @ts-ignore\n    get boundingSphere() {\n        return this._objRef?.boundingSphere;\n    }\n    set drawRange(value) {\n        if (this._objRef) {\n            this._objRef.drawRange = value;\n        }\n    }\n    // @ts-ignore\n    get drawRange() {\n        return this._objRef?.drawRange;\n    }\n    set userData(value) {\n        if (this._objRef) {\n            this._objRef.userData = value;\n        }\n    }\n    // @ts-ignore\n    get userData() {\n        return this._objRef?.userData;\n    }\n    // @ts-ignore\n    get isBufferGeometry() {\n        return this._objRef?.isBufferGeometry;\n    }\n    constructor(hostObject) {\n        super(hostObject);\n    }\n}\nThBufferGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBufferGeometry, deps: [{ token: ThObject3D, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nThBufferGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBufferGeometry, selector: \"th-bufferGeometry\", inputs: { id: \"id\", uuid: \"uuid\", name: \"name\", index: \"index\", attributes: \"attributes\", morphAttributes: \"morphAttributes\", morphTargetsRelative: \"morphTargetsRelative\", groups: \"groups\", boundingBox: \"boundingBox\", boundingSphere: \"boundingSphere\", drawRange: \"drawRange\", userData: \"userData\" }, providers: [], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBufferGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-bufferGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: SkipSelf\n                }] }]; }, propDecorators: { id: [{\n                type: Input\n            }], uuid: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], attributes: [{\n                type: Input\n            }], morphAttributes: [{\n                type: Input\n            }], morphTargetsRelative: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], boundingBox: [{\n                type: Input\n            }], boundingSphere: [{\n                type: Input\n            }], drawRange: [{\n                type: Input\n            }], userData: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBoxGeometry extends ThBufferGeometry {\n    getType() {\n        return BoxGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThBoxGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBoxGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThBoxGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBoxGeometry, selector: \"th-boxGeometry\", providers: [{ provide: ThBufferGeometry, useExisting: forwardRef(() => ThBoxGeometry) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBoxGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-boxGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThBufferGeometry, useExisting: forwardRef(() => ThBoxGeometry) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBoxHelper extends ThLineSegments {\n    getType() {\n        return BoxHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThBoxHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBoxHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThBoxHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBoxHelper, selector: \"th-boxHelper\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBoxHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBoxHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-boxHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBoxHelper) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThBoxLineGeometry extends ThBufferGeometry {\n    getType() {\n        return BoxLineGeometry;\n    }\n}\nThBoxLineGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBoxLineGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThBoxLineGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThBoxLineGeometry, selector: \"th-boxLineGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThBoxLineGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThBoxLineGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-boxLineGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThBoxLineGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCameraHelper extends ThLineSegments {\n    getType() {\n        return CameraHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set pointMap(value) {\n        if (this._objRef) {\n            this._objRef.pointMap = value;\n        }\n    }\n    // @ts-ignore\n    get pointMap() {\n        return this._objRef?.pointMap;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n}\nThCameraHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCameraHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCameraHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCameraHelper, selector: \"th-cameraHelper\", inputs: { camera: \"camera\", pointMap: \"pointMap\", matrix: \"matrix\", matrixAutoUpdate: \"matrixAutoUpdate\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCameraHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCameraHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-cameraHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCameraHelper) }]\n                }]\n        }], propDecorators: { camera: [{\n                type: Input\n            }], pointMap: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThTextureBase extends ThWrapperBase {\n}\nThTextureBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextureBase, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTextureBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTextureBase, selector: \"th-abs-texture\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextureBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-abs-texture',\n                    template: ''\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTexture extends ThTextureBase {\n    getType() {\n        return Texture;\n    }\n    // @ts-ignore\n    get isTexture() {\n        return this._objRef?.isTexture;\n    }\n    // @ts-ignore\n    get id() {\n        return this._objRef?.id;\n    }\n    set uuid(value) {\n        if (this._objRef) {\n            this._objRef.uuid = value;\n        }\n    }\n    // @ts-ignore\n    get uuid() {\n        return this._objRef?.uuid;\n    }\n    set name(value) {\n        if (this._objRef) {\n            this._objRef.name = value;\n        }\n    }\n    // @ts-ignore\n    get name() {\n        return this._objRef?.name;\n    }\n    set source(value) {\n        if (this._objRef) {\n            this._objRef.source = value;\n        }\n    }\n    // @ts-ignore\n    get source() {\n        return this._objRef?.source;\n    }\n    set mipmaps(value) {\n        if (this._objRef) {\n            this._objRef.mipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get mipmaps() {\n        return this._objRef?.mipmaps;\n    }\n    set mapping(value) {\n        if (this._objRef) {\n            this._objRef.mapping = value;\n        }\n    }\n    // @ts-ignore\n    get mapping() {\n        return this._objRef?.mapping;\n    }\n    set channel(value) {\n        if (this._objRef) {\n            this._objRef.channel = value;\n        }\n    }\n    // @ts-ignore\n    get channel() {\n        return this._objRef?.channel;\n    }\n    set wrapS(value) {\n        if (this._objRef) {\n            this._objRef.wrapS = value;\n        }\n    }\n    // @ts-ignore\n    get wrapS() {\n        return this._objRef?.wrapS;\n    }\n    set wrapT(value) {\n        if (this._objRef) {\n            this._objRef.wrapT = value;\n        }\n    }\n    // @ts-ignore\n    get wrapT() {\n        return this._objRef?.wrapT;\n    }\n    set magFilter(value) {\n        if (this._objRef) {\n            this._objRef.magFilter = value;\n        }\n    }\n    // @ts-ignore\n    get magFilter() {\n        return this._objRef?.magFilter;\n    }\n    set minFilter(value) {\n        if (this._objRef) {\n            this._objRef.minFilter = value;\n        }\n    }\n    // @ts-ignore\n    get minFilter() {\n        return this._objRef?.minFilter;\n    }\n    set anisotropy(value) {\n        if (this._objRef) {\n            this._objRef.anisotropy = value;\n        }\n    }\n    // @ts-ignore\n    get anisotropy() {\n        return this._objRef?.anisotropy;\n    }\n    set format(value) {\n        if (this._objRef) {\n            this._objRef.format = value;\n        }\n    }\n    // @ts-ignore\n    get format() {\n        return this._objRef?.format;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set internalFormat(value) {\n        if (this._objRef) {\n            this._objRef.internalFormat = value;\n        }\n    }\n    // @ts-ignore\n    get internalFormat() {\n        return this._objRef?.internalFormat;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n    set offset(value) {\n        if (this._objRef) {\n            this._objRef.offset = applyValue(this._objRef.offset, value);\n        }\n    }\n    // @ts-ignore\n    get offset() {\n        return this._objRef?.offset;\n    }\n    set repeat(value) {\n        if (this._objRef) {\n            this._objRef.repeat = applyValue(this._objRef.repeat, value);\n        }\n    }\n    // @ts-ignore\n    get repeat() {\n        return this._objRef?.repeat;\n    }\n    set center(value) {\n        if (this._objRef) {\n            this._objRef.center = applyValue(this._objRef.center, value);\n        }\n    }\n    // @ts-ignore\n    get center() {\n        return this._objRef?.center;\n    }\n    set rotation(value) {\n        if (this._objRef) {\n            this._objRef.rotation = value;\n        }\n    }\n    // @ts-ignore\n    get rotation() {\n        return this._objRef?.rotation;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n    set premultiplyAlpha(value) {\n        if (this._objRef) {\n            this._objRef.premultiplyAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get premultiplyAlpha() {\n        return this._objRef?.premultiplyAlpha;\n    }\n    set flipY(value) {\n        if (this._objRef) {\n            this._objRef.flipY = value;\n        }\n    }\n    // @ts-ignore\n    get flipY() {\n        return this._objRef?.flipY;\n    }\n    set unpackAlignment(value) {\n        if (this._objRef) {\n            this._objRef.unpackAlignment = value;\n        }\n    }\n    // @ts-ignore\n    get unpackAlignment() {\n        return this._objRef?.unpackAlignment;\n    }\n    set encoding(value) {\n        if (this._objRef) {\n            this._objRef.encoding = value;\n        }\n    }\n    // @ts-ignore\n    get encoding() {\n        return this._objRef?.encoding;\n    }\n    set isRenderTargetTexture(value) {\n        if (this._objRef) {\n            this._objRef.isRenderTargetTexture = value;\n        }\n    }\n    // @ts-ignore\n    get isRenderTargetTexture() {\n        return this._objRef?.isRenderTargetTexture;\n    }\n    set needsPMREMUpdate(value) {\n        if (this._objRef) {\n            this._objRef.needsPMREMUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get needsPMREMUpdate() {\n        return this._objRef?.needsPMREMUpdate;\n    }\n    set userData(value) {\n        if (this._objRef) {\n            this._objRef.userData = value;\n        }\n    }\n    // @ts-ignore\n    get userData() {\n        return this._objRef?.userData;\n    }\n    set version(value) {\n        if (this._objRef) {\n            this._objRef.version = value;\n        }\n    }\n    // @ts-ignore\n    get version() {\n        return this._objRef?.version;\n    }\n}\nThTexture.DEFAULT_ANISOTROPY = Texture.DEFAULT_ANISOTROPY;\nThTexture.DEFAULT_IMAGE = Texture.DEFAULT_IMAGE;\nThTexture.DEFAULT_MAPPING = Texture.DEFAULT_MAPPING;\nThTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTexture, selector: \"th-texture\", inputs: { uuid: \"uuid\", name: \"name\", source: \"source\", mipmaps: \"mipmaps\", mapping: \"mapping\", channel: \"channel\", wrapS: \"wrapS\", wrapT: \"wrapT\", magFilter: \"magFilter\", minFilter: \"minFilter\", anisotropy: \"anisotropy\", format: \"format\", type: \"type\", internalFormat: \"internalFormat\", matrix: \"matrix\", matrixAutoUpdate: \"matrixAutoUpdate\", offset: \"offset\", repeat: \"repeat\", center: \"center\", rotation: \"rotation\", generateMipmaps: \"generateMipmaps\", premultiplyAlpha: \"premultiplyAlpha\", flipY: \"flipY\", unpackAlignment: \"unpackAlignment\", encoding: \"encoding\", isRenderTargetTexture: \"isRenderTargetTexture\", needsPMREMUpdate: \"needsPMREMUpdate\", userData: \"userData\", version: \"version\" }, providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThTexture) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-texture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThTexture) }]\n                }]\n        }], propDecorators: { uuid: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], mipmaps: [{\n                type: Input\n            }], mapping: [{\n                type: Input\n            }], channel: [{\n                type: Input\n            }], wrapS: [{\n                type: Input\n            }], wrapT: [{\n                type: Input\n            }], magFilter: [{\n                type: Input\n            }], minFilter: [{\n                type: Input\n            }], anisotropy: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], internalFormat: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], repeat: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], rotation: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }], premultiplyAlpha: [{\n                type: Input\n            }], flipY: [{\n                type: Input\n            }], unpackAlignment: [{\n                type: Input\n            }], encoding: [{\n                type: Input\n            }], isRenderTargetTexture: [{\n                type: Input\n            }], needsPMREMUpdate: [{\n                type: Input\n            }], userData: [{\n                type: Input\n            }], version: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCanvasTexture extends ThTexture {\n    getType() {\n        return CanvasTexture;\n    }\n    // @ts-ignore\n    get isCanvasTexture() {\n        return this._objRef?.isCanvasTexture;\n    }\n}\nThCanvasTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCanvasTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCanvasTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCanvasTexture, selector: \"th-canvasTexture\", providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThCanvasTexture) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCanvasTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-canvasTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThCanvasTexture) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCapsuleGeometry extends ThBufferGeometry {\n    getType() {\n        return CapsuleGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThCapsuleGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCapsuleGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCapsuleGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCapsuleGeometry, selector: \"th-capsuleGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThCapsuleGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCapsuleGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-capsuleGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThCapsuleGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCircleGeometry extends ThBufferGeometry {\n    getType() {\n        return CircleGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThCircleGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCircleGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCircleGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCircleGeometry, selector: \"th-circleGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThCircleGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCircleGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-circleGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThCircleGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThClearMaskPass extends ThPass {\n    getType() {\n        return ClearMaskPass;\n    }\n}\nThClearMaskPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThClearMaskPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThClearMaskPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThClearMaskPass, selector: \"th-clearMaskPass\", providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThClearMaskPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThClearMaskPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-clearMaskPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThClearMaskPass) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThClearPass extends ThPass {\n    getType() {\n        return ClearPass;\n    }\n    set clearColor(value) {\n        if (this._objRef) {\n            this._objRef.clearColor = value;\n        }\n    }\n    // @ts-ignore\n    get clearColor() {\n        return this._objRef?.clearColor;\n    }\n    set clearAlpha(value) {\n        if (this._objRef) {\n            this._objRef.clearAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get clearAlpha() {\n        return this._objRef?.clearAlpha;\n    }\n}\nThClearPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThClearPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThClearPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThClearPass, selector: \"th-clearPass\", inputs: { clearColor: \"clearColor\", clearAlpha: \"clearAlpha\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThClearPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThClearPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-clearPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThClearPass) }]\n                }]\n        }], propDecorators: { clearColor: [{\n                type: Input\n            }], clearAlpha: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCompressedTexture extends ThTexture {\n    getType() {\n        return CompressedTexture;\n    }\n    // @ts-ignore\n    get isCompressedTexture() {\n        return this._objRef?.isCompressedTexture;\n    }\n    set mipmaps(value) {\n        if (this._objRef) {\n            this._objRef.mipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get mipmaps() {\n        return this._objRef?.mipmaps;\n    }\n    set format(value) {\n        if (this._objRef) {\n            this._objRef.format = value;\n        }\n    }\n    // @ts-ignore\n    get format() {\n        return this._objRef?.format;\n    }\n    set flipY(value) {\n        if (this._objRef) {\n            this._objRef.flipY = value;\n        }\n    }\n    // @ts-ignore\n    get flipY() {\n        return this._objRef?.flipY;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n}\nThCompressedTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCompressedTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCompressedTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCompressedTexture, selector: \"th-compressedTexture\", inputs: { mipmaps: \"mipmaps\", format: \"format\", flipY: \"flipY\", generateMipmaps: \"generateMipmaps\" }, providers: [\n        {\n            provide: ThTextureBase,\n            useExisting: forwardRef(() => ThCompressedTexture)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCompressedTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-compressedTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThTextureBase,\n                            useExisting: forwardRef(() => ThCompressedTexture)\n                        }\n                    ]\n                }]\n        }], propDecorators: { mipmaps: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], flipY: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCompressedArrayTexture extends ThCompressedTexture {\n    getType() {\n        return CompressedArrayTexture;\n    }\n    // @ts-ignore\n    get isCompressedArrayTexture() {\n        return this._objRef?.isCompressedArrayTexture;\n    }\n    set wrapR(value) {\n        if (this._objRef) {\n            this._objRef.wrapR = value;\n        }\n    }\n    // @ts-ignore\n    get wrapR() {\n        return this._objRef?.wrapR;\n    }\n}\nThCompressedArrayTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCompressedArrayTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCompressedArrayTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCompressedArrayTexture, selector: \"th-compressedArrayTexture\", inputs: { wrapR: \"wrapR\" }, providers: [\n        {\n            provide: ThTextureBase,\n            useExisting: forwardRef(() => ThCompressedArrayTexture)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCompressedArrayTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-compressedArrayTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThTextureBase,\n                            useExisting: forwardRef(() => ThCompressedArrayTexture)\n                        }\n                    ]\n                }]\n        }], propDecorators: { wrapR: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCylinderGeometry extends ThBufferGeometry {\n    getType() {\n        return CylinderGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThCylinderGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCylinderGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCylinderGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCylinderGeometry, selector: \"th-cylinderGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThCylinderGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCylinderGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-cylinderGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThCylinderGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThConeGeometry extends ThCylinderGeometry {\n    getType() {\n        return ConeGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThConeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThConeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThConeGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThConeGeometry, selector: \"th-coneGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThConeGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThConeGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-coneGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThConeGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThConvexGeometry extends ThBufferGeometry {\n    getType() {\n        return ConvexGeometry;\n    }\n}\nThConvexGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThConvexGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThConvexGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThConvexGeometry, selector: \"th-convexGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThConvexGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThConvexGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-convexGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThConvexGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCubeCamera extends ThObject3D {\n    getType() {\n        return CubeCamera;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set renderTarget(value) {\n        if (this._objRef) {\n            this._objRef.renderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get renderTarget() {\n        return this._objRef?.renderTarget;\n    }\n}\nThCubeCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeCamera, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCubeCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCubeCamera, selector: \"th-cubeCamera\", inputs: { renderTarget: \"renderTarget\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCubeCamera) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeCamera, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-cubeCamera',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCubeCamera) }]\n                }]\n        }], propDecorators: { renderTarget: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThCubeTexture extends ThTexture {\n    getType() {\n        return CubeTexture;\n    }\n    // @ts-ignore\n    get isCubeTexture() {\n        return this._objRef?.isCubeTexture;\n    }\n    set mapping(value) {\n        if (this._objRef) {\n            this._objRef.mapping = value;\n        }\n    }\n    // @ts-ignore\n    get mapping() {\n        return this._objRef?.mapping;\n    }\n    set flipY(value) {\n        if (this._objRef) {\n            this._objRef.flipY = value;\n        }\n    }\n    // @ts-ignore\n    get flipY() {\n        return this._objRef?.flipY;\n    }\n}\nThCubeTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCubeTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCubeTexture, selector: \"th-cubeTexture\", inputs: { mapping: \"mapping\", flipY: \"flipY\" }, providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThCubeTexture) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-cubeTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThCubeTexture) }]\n                }]\n        }], propDecorators: { mapping: [{\n                type: Input\n            }], flipY: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThCubeTexturePass extends ThPass {\n    getType() {\n        return CubeTexturePass;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set cubeShader(value) {\n        if (this._objRef) {\n            this._objRef.cubeShader = value;\n        }\n    }\n    // @ts-ignore\n    get cubeShader() {\n        return this._objRef?.cubeShader;\n    }\n    set cubeMesh(value) {\n        if (this._objRef) {\n            this._objRef.cubeMesh = value;\n        }\n    }\n    // @ts-ignore\n    get cubeMesh() {\n        return this._objRef?.cubeMesh;\n    }\n    set envMap(value) {\n        if (this._objRef) {\n            this._objRef.envMap = value;\n        }\n    }\n    // @ts-ignore\n    get envMap() {\n        return this._objRef?.envMap;\n    }\n    set opacity(value) {\n        if (this._objRef) {\n            this._objRef.opacity = value;\n        }\n    }\n    // @ts-ignore\n    get opacity() {\n        return this._objRef?.opacity;\n    }\n    set cubeScene(value) {\n        if (this._objRef) {\n            this._objRef.cubeScene = value;\n        }\n    }\n    // @ts-ignore\n    get cubeScene() {\n        return this._objRef?.cubeScene;\n    }\n    set cubeCamera(value) {\n        if (this._objRef) {\n            this._objRef.cubeCamera = value;\n        }\n    }\n    // @ts-ignore\n    get cubeCamera() {\n        return this._objRef?.cubeCamera;\n    }\n}\nThCubeTexturePass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTexturePass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThCubeTexturePass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCubeTexturePass, selector: \"th-cubeTexturePass\", inputs: { camera: \"camera\", cubeShader: \"cubeShader\", cubeMesh: \"cubeMesh\", envMap: \"envMap\", opacity: \"opacity\", cubeScene: \"cubeScene\", cubeCamera: \"cubeCamera\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThCubeTexturePass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTexturePass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-cubeTexturePass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThCubeTexturePass) }]\n                }]\n        }], propDecorators: { camera: [{\n                type: Input\n            }], cubeShader: [{\n                type: Input\n            }], cubeMesh: [{\n                type: Input\n            }], envMap: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], cubeScene: [{\n                type: Input\n            }], cubeCamera: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThData3DTexture extends ThTexture {\n    getType() {\n        return Data3DTexture;\n    }\n    // @ts-ignore\n    get isData3DTexture() {\n        return this._objRef?.isData3DTexture;\n    }\n    set magFilter(value) {\n        if (this._objRef) {\n            this._objRef.magFilter = value;\n        }\n    }\n    // @ts-ignore\n    get magFilter() {\n        return this._objRef?.magFilter;\n    }\n    set minFilter(value) {\n        if (this._objRef) {\n            this._objRef.minFilter = value;\n        }\n    }\n    // @ts-ignore\n    get minFilter() {\n        return this._objRef?.minFilter;\n    }\n    set wrapR(value) {\n        if (this._objRef) {\n            this._objRef.wrapR = value;\n        }\n    }\n    // @ts-ignore\n    get wrapR() {\n        return this._objRef?.wrapR;\n    }\n    set flipY(value) {\n        if (this._objRef) {\n            this._objRef.flipY = value;\n        }\n    }\n    // @ts-ignore\n    get flipY() {\n        return this._objRef?.flipY;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n    set unpackAlignment(value) {\n        if (this._objRef) {\n            this._objRef.unpackAlignment = value;\n        }\n    }\n    // @ts-ignore\n    get unpackAlignment() {\n        return this._objRef?.unpackAlignment;\n    }\n}\nThData3DTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThData3DTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThData3DTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThData3DTexture, selector: \"th-data3DTexture\", inputs: { magFilter: \"magFilter\", minFilter: \"minFilter\", wrapR: \"wrapR\", flipY: \"flipY\", generateMipmaps: \"generateMipmaps\", unpackAlignment: \"unpackAlignment\" }, providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThData3DTexture) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThData3DTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-data3DTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThData3DTexture) }]\n                }]\n        }], propDecorators: { magFilter: [{\n                type: Input\n            }], minFilter: [{\n                type: Input\n            }], wrapR: [{\n                type: Input\n            }], flipY: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }], unpackAlignment: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDataArrayTexture extends ThTexture {\n    getType() {\n        return DataArrayTexture;\n    }\n    // @ts-ignore\n    get isDataArrayTexture() {\n        return this._objRef?.isDataArrayTexture;\n    }\n    set magFilter(value) {\n        if (this._objRef) {\n            this._objRef.magFilter = value;\n        }\n    }\n    // @ts-ignore\n    get magFilter() {\n        return this._objRef?.magFilter;\n    }\n    set minFilter(value) {\n        if (this._objRef) {\n            this._objRef.minFilter = value;\n        }\n    }\n    // @ts-ignore\n    get minFilter() {\n        return this._objRef?.minFilter;\n    }\n    set wrapR(value) {\n        if (this._objRef) {\n            this._objRef.wrapR = value;\n        }\n    }\n    // @ts-ignore\n    get wrapR() {\n        return this._objRef?.wrapR;\n    }\n    set flipY(value) {\n        if (this._objRef) {\n            this._objRef.flipY = value;\n        }\n    }\n    // @ts-ignore\n    get flipY() {\n        return this._objRef?.flipY;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n    set unpackAlignment(value) {\n        if (this._objRef) {\n            this._objRef.unpackAlignment = value;\n        }\n    }\n    // @ts-ignore\n    get unpackAlignment() {\n        return this._objRef?.unpackAlignment;\n    }\n}\nThDataArrayTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDataArrayTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDataArrayTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDataArrayTexture, selector: \"th-dataArrayTexture\", inputs: { magFilter: \"magFilter\", minFilter: \"minFilter\", wrapR: \"wrapR\", flipY: \"flipY\", generateMipmaps: \"generateMipmaps\", unpackAlignment: \"unpackAlignment\" }, providers: [\n        {\n            provide: ThTextureBase,\n            useExisting: forwardRef(() => ThDataArrayTexture)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDataArrayTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-dataArrayTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThTextureBase,\n                            useExisting: forwardRef(() => ThDataArrayTexture)\n                        }\n                    ]\n                }]\n        }], propDecorators: { magFilter: [{\n                type: Input\n            }], minFilter: [{\n                type: Input\n            }], wrapR: [{\n                type: Input\n            }], flipY: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }], unpackAlignment: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDataTexture extends ThTexture {\n    getType() {\n        return DataTexture;\n    }\n    // @ts-ignore\n    get isDataTexture() {\n        return this._objRef?.isDataTexture;\n    }\n    set magFilter(value) {\n        if (this._objRef) {\n            this._objRef.magFilter = value;\n        }\n    }\n    // @ts-ignore\n    get magFilter() {\n        return this._objRef?.magFilter;\n    }\n    set minFilter(value) {\n        if (this._objRef) {\n            this._objRef.minFilter = value;\n        }\n    }\n    // @ts-ignore\n    get minFilter() {\n        return this._objRef?.minFilter;\n    }\n    set flipY(value) {\n        if (this._objRef) {\n            this._objRef.flipY = value;\n        }\n    }\n    // @ts-ignore\n    get flipY() {\n        return this._objRef?.flipY;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n    set unpackAlignment(value) {\n        if (this._objRef) {\n            this._objRef.unpackAlignment = value;\n        }\n    }\n    // @ts-ignore\n    get unpackAlignment() {\n        return this._objRef?.unpackAlignment;\n    }\n}\nThDataTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDataTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDataTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDataTexture, selector: \"th-dataTexture\", inputs: { magFilter: \"magFilter\", minFilter: \"minFilter\", flipY: \"flipY\", generateMipmaps: \"generateMipmaps\", unpackAlignment: \"unpackAlignment\" }, providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThDataTexture) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDataTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-dataTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThDataTexture) }]\n                }]\n        }], propDecorators: { magFilter: [{\n                type: Input\n            }], minFilter: [{\n                type: Input\n            }], flipY: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }], unpackAlignment: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDecalGeometry extends ThBufferGeometry {\n    getType() {\n        return DecalGeometry;\n    }\n}\nThDecalGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDecalGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDecalGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDecalGeometry, selector: \"th-decalGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThDecalGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDecalGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-decalGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThDecalGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDepthTexture extends ThTexture {\n    getType() {\n        return DepthTexture;\n    }\n    // @ts-ignore\n    get isDepthTexture() {\n        return this._objRef?.isDepthTexture;\n    }\n    set flipY(value) {\n        if (this._objRef) {\n            this._objRef.flipY = value;\n        }\n    }\n    // @ts-ignore\n    get flipY() {\n        return this._objRef?.flipY;\n    }\n    set magFilter(value) {\n        if (this._objRef) {\n            this._objRef.magFilter = value;\n        }\n    }\n    // @ts-ignore\n    get magFilter() {\n        return this._objRef?.magFilter;\n    }\n    set minFilter(value) {\n        if (this._objRef) {\n            this._objRef.minFilter = value;\n        }\n    }\n    // @ts-ignore\n    get minFilter() {\n        return this._objRef?.minFilter;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n    set format(value) {\n        if (this._objRef) {\n            this._objRef.format = value;\n        }\n    }\n    // @ts-ignore\n    get format() {\n        return this._objRef?.format;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThDepthTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDepthTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDepthTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDepthTexture, selector: \"th-depthTexture\", inputs: { flipY: \"flipY\", magFilter: \"magFilter\", minFilter: \"minFilter\", generateMipmaps: \"generateMipmaps\", format: \"format\", type: \"type\" }, providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThDepthTexture) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDepthTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-depthTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThDepthTexture) }]\n                }]\n        }], propDecorators: { flipY: [{\n                type: Input\n            }], magFilter: [{\n                type: Input\n            }], minFilter: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDirectionalLight extends ThLight {\n    getType() {\n        return DirectionalLight;\n    }\n    // @ts-ignore\n    get isDirectionalLight() {\n        return this._objRef?.isDirectionalLight;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set castShadow(value) {\n        if (this._objRef) {\n            this._objRef.castShadow = value;\n        }\n    }\n    // @ts-ignore\n    get castShadow() {\n        return this._objRef?.castShadow;\n    }\n    set position(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.position, value);\n        }\n    }\n    // @ts-ignore\n    get position() {\n        return this._objRef?.position;\n    }\n    set shadow(value) {\n        if (this._objRef) {\n            this._objRef.shadow = value;\n        }\n    }\n    // @ts-ignore\n    get shadow() {\n        return this._objRef?.shadow;\n    }\n    set target(value) {\n        if (this._objRef) {\n            this._objRef.target = value;\n        }\n    }\n    // @ts-ignore\n    get target() {\n        return this._objRef?.target;\n    }\n}\nThDirectionalLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDirectionalLight, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDirectionalLight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDirectionalLight, selector: \"th-directionalLight\", inputs: { castShadow: \"castShadow\", position: \"position\", shadow: \"shadow\", target: \"target\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThDirectionalLight) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDirectionalLight, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-directionalLight',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThDirectionalLight) }]\n                }]\n        }], propDecorators: { castShadow: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], shadow: [{\n                type: Input\n            }], target: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDirectionalLightHelper extends ThObject3D {\n    getType() {\n        return DirectionalLightHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set lightPlane(value) {\n        if (this._objRef) {\n            this._objRef.lightPlane = value;\n        }\n    }\n    // @ts-ignore\n    get lightPlane() {\n        return this._objRef?.lightPlane;\n    }\n    set light(value) {\n        if (this._objRef) {\n            this._objRef.light = value;\n        }\n    }\n    // @ts-ignore\n    get light() {\n        return this._objRef?.light;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = value;\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set targetLine(value) {\n        if (this._objRef) {\n            this._objRef.targetLine = value;\n        }\n    }\n    // @ts-ignore\n    get targetLine() {\n        return this._objRef?.targetLine;\n    }\n}\nThDirectionalLightHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDirectionalLightHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDirectionalLightHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDirectionalLightHelper, selector: \"th-directionalLightHelper\", inputs: { lightPlane: \"lightPlane\", light: \"light\", matrix: \"matrix\", matrixAutoUpdate: \"matrixAutoUpdate\", color: \"color\", targetLine: \"targetLine\" }, providers: [\n        {\n            provide: ThObject3D,\n            useExisting: forwardRef(() => ThDirectionalLightHelper)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDirectionalLightHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-directionalLightHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThObject3D,\n                            useExisting: forwardRef(() => ThDirectionalLightHelper)\n                        }\n                    ]\n                }]\n        }], propDecorators: { lightPlane: [{\n                type: Input\n            }], light: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], targetLine: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPolyhedronGeometry extends ThBufferGeometry {\n    getType() {\n        return PolyhedronGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThPolyhedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPolyhedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPolyhedronGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPolyhedronGeometry, selector: \"th-polyhedronGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThPolyhedronGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPolyhedronGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-polyhedronGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThPolyhedronGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDodecahedronGeometry extends ThPolyhedronGeometry {\n    getType() {\n        return DodecahedronGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThDodecahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDodecahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDodecahedronGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDodecahedronGeometry, selector: \"th-dodecahedronGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThDodecahedronGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDodecahedronGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-dodecahedronGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThDodecahedronGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThDotScreenPass extends ThPass {\n    getType() {\n        return DotScreenPass;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThDotScreenPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDotScreenPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDotScreenPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDotScreenPass, selector: \"th-dotScreenPass\", inputs: { uniforms: \"uniforms\", material: \"material\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThDotScreenPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDotScreenPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-dotScreenPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThDotScreenPass) }]\n                }]\n        }], propDecorators: { uniforms: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThDragControls extends ThControlBase {\n    getType() {\n        return DragControls;\n    }\n    set object(value) {\n        if (this._objRef) {\n            this._objRef.object = value;\n        }\n    }\n    // @ts-ignore\n    get object() {\n        return this._objRef?.object;\n    }\n    set enabled(value) {\n        if (this._objRef) {\n            this._objRef.enabled = value;\n        }\n    }\n    // @ts-ignore\n    get enabled() {\n        return this._objRef?.enabled;\n    }\n    set transformGroup(value) {\n        if (this._objRef) {\n            this._objRef.transformGroup = value;\n        }\n    }\n    // @ts-ignore\n    get transformGroup() {\n        return this._objRef?.transformGroup;\n    }\n}\nThDragControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDragControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThDragControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDragControls, selector: \"th-dragControls\", inputs: { object: \"object\", enabled: \"enabled\", transformGroup: \"transformGroup\" }, providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThDragControls) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDragControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-dragControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThDragControls) }]\n                }]\n        }], propDecorators: { object: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], transformGroup: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThEdgesGeometry extends ThBufferGeometry {\n    getType() {\n        return EdgesGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThEdgesGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEdgesGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThEdgesGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThEdgesGeometry, selector: \"th-edgesGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThEdgesGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEdgesGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-edgesGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThEdgesGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThExtrudeGeometry extends ThBufferGeometry {\n    getType() {\n        return ExtrudeGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThExtrudeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThExtrudeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThExtrudeGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThExtrudeGeometry, selector: \"th-extrudeGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThExtrudeGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThExtrudeGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-extrudeGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThExtrudeGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThFilmPass extends ThPass {\n    getType() {\n        return FilmPass;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThFilmPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFilmPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThFilmPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThFilmPass, selector: \"th-filmPass\", inputs: { uniforms: \"uniforms\", material: \"material\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThFilmPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFilmPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-filmPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThFilmPass) }]\n                }]\n        }], propDecorators: { uniforms: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThFirstPersonControls extends ThControlBase {\n    getType() {\n        return FirstPersonControls;\n    }\n    set object(value) {\n        if (this._objRef) {\n            this._objRef.object = value;\n        }\n    }\n    // @ts-ignore\n    get object() {\n        return this._objRef?.object;\n    }\n    set domElement(value) {\n        if (this._objRef) {\n            this._objRef.domElement = value;\n        }\n    }\n    // @ts-ignore\n    get domElement() {\n        return this._objRef?.domElement;\n    }\n    set enabled(value) {\n        if (this._objRef) {\n            this._objRef.enabled = value;\n        }\n    }\n    // @ts-ignore\n    get enabled() {\n        return this._objRef?.enabled;\n    }\n    set movementSpeed(value) {\n        if (this._objRef) {\n            this._objRef.movementSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get movementSpeed() {\n        return this._objRef?.movementSpeed;\n    }\n    set lookSpeed(value) {\n        if (this._objRef) {\n            this._objRef.lookSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get lookSpeed() {\n        return this._objRef?.lookSpeed;\n    }\n    set lookVertical(value) {\n        if (this._objRef) {\n            this._objRef.lookVertical = value;\n        }\n    }\n    // @ts-ignore\n    get lookVertical() {\n        return this._objRef?.lookVertical;\n    }\n    set autoForward(value) {\n        if (this._objRef) {\n            this._objRef.autoForward = value;\n        }\n    }\n    // @ts-ignore\n    get autoForward() {\n        return this._objRef?.autoForward;\n    }\n    set activeLook(value) {\n        if (this._objRef) {\n            this._objRef.activeLook = value;\n        }\n    }\n    // @ts-ignore\n    get activeLook() {\n        return this._objRef?.activeLook;\n    }\n    set heightSpeed(value) {\n        if (this._objRef) {\n            this._objRef.heightSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get heightSpeed() {\n        return this._objRef?.heightSpeed;\n    }\n    set heightCoef(value) {\n        if (this._objRef) {\n            this._objRef.heightCoef = value;\n        }\n    }\n    // @ts-ignore\n    get heightCoef() {\n        return this._objRef?.heightCoef;\n    }\n    set heightMin(value) {\n        if (this._objRef) {\n            this._objRef.heightMin = value;\n        }\n    }\n    // @ts-ignore\n    get heightMin() {\n        return this._objRef?.heightMin;\n    }\n    set heightMax(value) {\n        if (this._objRef) {\n            this._objRef.heightMax = value;\n        }\n    }\n    // @ts-ignore\n    get heightMax() {\n        return this._objRef?.heightMax;\n    }\n    set constrainVertical(value) {\n        if (this._objRef) {\n            this._objRef.constrainVertical = value;\n        }\n    }\n    // @ts-ignore\n    get constrainVertical() {\n        return this._objRef?.constrainVertical;\n    }\n    set verticalMin(value) {\n        if (this._objRef) {\n            this._objRef.verticalMin = value;\n        }\n    }\n    // @ts-ignore\n    get verticalMin() {\n        return this._objRef?.verticalMin;\n    }\n    set verticalMax(value) {\n        if (this._objRef) {\n            this._objRef.verticalMax = value;\n        }\n    }\n    // @ts-ignore\n    get verticalMax() {\n        return this._objRef?.verticalMax;\n    }\n    set mouseDragOn(value) {\n        if (this._objRef) {\n            this._objRef.mouseDragOn = value;\n        }\n    }\n    // @ts-ignore\n    get mouseDragOn() {\n        return this._objRef?.mouseDragOn;\n    }\n}\nThFirstPersonControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFirstPersonControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThFirstPersonControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThFirstPersonControls, selector: \"th-firstPersonControls\", inputs: { object: \"object\", domElement: \"domElement\", enabled: \"enabled\", movementSpeed: \"movementSpeed\", lookSpeed: \"lookSpeed\", lookVertical: \"lookVertical\", autoForward: \"autoForward\", activeLook: \"activeLook\", heightSpeed: \"heightSpeed\", heightCoef: \"heightCoef\", heightMin: \"heightMin\", heightMax: \"heightMax\", constrainVertical: \"constrainVertical\", verticalMin: \"verticalMin\", verticalMax: \"verticalMax\", mouseDragOn: \"mouseDragOn\" }, providers: [\n        {\n            provide: ThControlBase,\n            useExisting: forwardRef(() => ThFirstPersonControls)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFirstPersonControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-firstPersonControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThControlBase,\n                            useExisting: forwardRef(() => ThFirstPersonControls)\n                        }\n                    ]\n                }]\n        }], propDecorators: { object: [{\n                type: Input\n            }], domElement: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], movementSpeed: [{\n                type: Input\n            }], lookSpeed: [{\n                type: Input\n            }], lookVertical: [{\n                type: Input\n            }], autoForward: [{\n                type: Input\n            }], activeLook: [{\n                type: Input\n            }], heightSpeed: [{\n                type: Input\n            }], heightCoef: [{\n                type: Input\n            }], heightMin: [{\n                type: Input\n            }], heightMax: [{\n                type: Input\n            }], constrainVertical: [{\n                type: Input\n            }], verticalMin: [{\n                type: Input\n            }], verticalMax: [{\n                type: Input\n            }], mouseDragOn: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThFlyControls extends ThControlBase {\n    getType() {\n        return FlyControls;\n    }\n    set object(value) {\n        if (this._objRef) {\n            this._objRef.object = value;\n        }\n    }\n    // @ts-ignore\n    get object() {\n        return this._objRef?.object;\n    }\n    set domElement(value) {\n        if (this._objRef) {\n            this._objRef.domElement = value;\n        }\n    }\n    // @ts-ignore\n    get domElement() {\n        return this._objRef?.domElement;\n    }\n    set movementSpeed(value) {\n        if (this._objRef) {\n            this._objRef.movementSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get movementSpeed() {\n        return this._objRef?.movementSpeed;\n    }\n    set rollSpeed(value) {\n        if (this._objRef) {\n            this._objRef.rollSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get rollSpeed() {\n        return this._objRef?.rollSpeed;\n    }\n    set dragToLook(value) {\n        if (this._objRef) {\n            this._objRef.dragToLook = value;\n        }\n    }\n    // @ts-ignore\n    get dragToLook() {\n        return this._objRef?.dragToLook;\n    }\n    set autoForward(value) {\n        if (this._objRef) {\n            this._objRef.autoForward = value;\n        }\n    }\n    // @ts-ignore\n    get autoForward() {\n        return this._objRef?.autoForward;\n    }\n}\nThFlyControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFlyControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThFlyControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThFlyControls, selector: \"th-flyControls\", inputs: { object: \"object\", domElement: \"domElement\", movementSpeed: \"movementSpeed\", rollSpeed: \"rollSpeed\", dragToLook: \"dragToLook\", autoForward: \"autoForward\" }, providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThFlyControls) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFlyControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-flyControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThFlyControls) }]\n                }]\n        }], propDecorators: { object: [{\n                type: Input\n            }], domElement: [{\n                type: Input\n            }], movementSpeed: [{\n                type: Input\n            }], rollSpeed: [{\n                type: Input\n            }], dragToLook: [{\n                type: Input\n            }], autoForward: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThFramebufferTexture extends ThTexture {\n    getType() {\n        return FramebufferTexture;\n    }\n    // @ts-ignore\n    get isFramebufferTexture() {\n        return this._objRef?.isFramebufferTexture;\n    }\n    set magFilter(value) {\n        if (this._objRef) {\n            this._objRef.magFilter = value;\n        }\n    }\n    // @ts-ignore\n    get magFilter() {\n        return this._objRef?.magFilter;\n    }\n    set minFilter(value) {\n        if (this._objRef) {\n            this._objRef.minFilter = value;\n        }\n    }\n    // @ts-ignore\n    get minFilter() {\n        return this._objRef?.minFilter;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n}\nThFramebufferTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFramebufferTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThFramebufferTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThFramebufferTexture, selector: \"th-framebufferTexture\", inputs: { magFilter: \"magFilter\", minFilter: \"minFilter\", generateMipmaps: \"generateMipmaps\" }, providers: [\n        {\n            provide: ThTextureBase,\n            useExisting: forwardRef(() => ThFramebufferTexture)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFramebufferTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-framebufferTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThTextureBase,\n                            useExisting: forwardRef(() => ThFramebufferTexture)\n                        }\n                    ]\n                }]\n        }], propDecorators: { magFilter: [{\n                type: Input\n            }], minFilter: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThGlitchPass extends ThPass {\n    getType() {\n        return GlitchPass;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n    set goWild(value) {\n        if (this._objRef) {\n            this._objRef.goWild = value;\n        }\n    }\n    // @ts-ignore\n    get goWild() {\n        return this._objRef?.goWild;\n    }\n    set curF(value) {\n        if (this._objRef) {\n            this._objRef.curF = value;\n        }\n    }\n    // @ts-ignore\n    get curF() {\n        return this._objRef?.curF;\n    }\n    set randX(value) {\n        if (this._objRef) {\n            this._objRef.randX = value;\n        }\n    }\n    // @ts-ignore\n    get randX() {\n        return this._objRef?.randX;\n    }\n}\nThGlitchPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGlitchPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThGlitchPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThGlitchPass, selector: \"th-glitchPass\", inputs: { uniforms: \"uniforms\", material: \"material\", fsQuad: \"fsQuad\", goWild: \"goWild\", curF: \"curF\", randX: \"randX\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThGlitchPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGlitchPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-glitchPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThGlitchPass) }]\n                }]\n        }], propDecorators: { uniforms: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }], goWild: [{\n                type: Input\n            }], curF: [{\n                type: Input\n            }], randX: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThGridHelper extends ThLineSegments {\n    getType() {\n        return GridHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThGridHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGridHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThGridHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThGridHelper, selector: \"th-gridHelper\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThGridHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGridHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-gridHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThGridHelper) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThGroup extends ThObject3D {\n    getType() {\n        return Group;\n    }\n    // @ts-ignore\n    get isGroup() {\n        return this._objRef?.isGroup;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThGroup, selector: \"th-group\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThGroup) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGroup, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-group',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThGroup) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThHalftonePass extends ThPass {\n    getType() {\n        return HalftonePass;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThHalftonePass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHalftonePass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThHalftonePass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThHalftonePass, selector: \"th-halftonePass\", inputs: { uniforms: \"uniforms\", material: \"material\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThHalftonePass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHalftonePass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-halftonePass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThHalftonePass) }]\n                }]\n        }], propDecorators: { uniforms: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThHemisphereLight extends ThLight {\n    getType() {\n        return HemisphereLight;\n    }\n    // @ts-ignore\n    get isHemisphereLight() {\n        return this._objRef?.isHemisphereLight;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set position(value) {\n        if (this._objRef) {\n            applyValue(this._objRef.position, value);\n        }\n    }\n    // @ts-ignore\n    get position() {\n        return this._objRef?.position;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set groundColor(value) {\n        if (this._objRef) {\n            this._objRef.groundColor = applyValue(this._objRef.groundColor, value);\n        }\n    }\n    // @ts-ignore\n    get groundColor() {\n        return this._objRef?.groundColor;\n    }\n}\nThHemisphereLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHemisphereLight, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThHemisphereLight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThHemisphereLight, selector: \"th-hemisphereLight\", inputs: { position: \"position\", color: \"color\", groundColor: \"groundColor\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThHemisphereLight) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHemisphereLight, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-hemisphereLight',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThHemisphereLight) }]\n                }]\n        }], propDecorators: { position: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], groundColor: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThHemisphereLightHelper extends ThObject3D {\n    getType() {\n        return HemisphereLightHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set light(value) {\n        if (this._objRef) {\n            this._objRef.light = value;\n        }\n    }\n    // @ts-ignore\n    get light() {\n        return this._objRef?.light;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = value;\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n}\nThHemisphereLightHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHemisphereLightHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThHemisphereLightHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThHemisphereLightHelper, selector: \"th-hemisphereLightHelper\", inputs: { light: \"light\", matrix: \"matrix\", matrixAutoUpdate: \"matrixAutoUpdate\", material: \"material\", color: \"color\" }, providers: [\n        {\n            provide: ThObject3D,\n            useExisting: forwardRef(() => ThHemisphereLightHelper)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHemisphereLightHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-hemisphereLightHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThObject3D,\n                            useExisting: forwardRef(() => ThHemisphereLightHelper)\n                        }\n                    ]\n                }]\n        }], propDecorators: { light: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThHemisphereLightProbe extends ThLightProbe {\n    getType() {\n        return HemisphereLightProbe;\n    }\n    // @ts-ignore\n    get isHemisphereLightProbe() {\n        return this._objRef?.isHemisphereLightProbe;\n    }\n}\nThHemisphereLightProbe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHemisphereLightProbe, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThHemisphereLightProbe.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThHemisphereLightProbe, selector: \"th-hemisphereLightProbe\", providers: [\n        {\n            provide: ThObject3D,\n            useExisting: forwardRef(() => ThHemisphereLightProbe)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThHemisphereLightProbe, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-hemisphereLightProbe',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThObject3D,\n                            useExisting: forwardRef(() => ThHemisphereLightProbe)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThIcosahedronGeometry extends ThPolyhedronGeometry {\n    getType() {\n        return IcosahedronGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThIcosahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThIcosahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThIcosahedronGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThIcosahedronGeometry, selector: \"th-icosahedronGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThIcosahedronGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThIcosahedronGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-icosahedronGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThIcosahedronGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThInstancedBufferGeometry extends ThBufferGeometry {\n    getType() {\n        return InstancedBufferGeometry;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get isInstancedBufferGeometry() {\n        return this._objRef?.isInstancedBufferGeometry;\n    }\n    set instanceCount(value) {\n        if (this._objRef) {\n            this._objRef.instanceCount = value;\n        }\n    }\n    // @ts-ignore\n    get instanceCount() {\n        return this._objRef?.instanceCount;\n    }\n}\nThInstancedBufferGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThInstancedBufferGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThInstancedBufferGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThInstancedBufferGeometry, selector: \"th-instancedBufferGeometry\", inputs: { type: \"type\", instanceCount: \"instanceCount\" }, providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThInstancedBufferGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThInstancedBufferGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-instancedBufferGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThInstancedBufferGeometry)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], instanceCount: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMesh extends ThObject3D {\n    getType() {\n        return Mesh;\n    }\n    // @ts-ignore\n    get isMesh() {\n        return this._objRef?.isMesh;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set geometry(value) {\n        if (this._objRef) {\n            this._objRef.geometry = value;\n        }\n    }\n    // @ts-ignore\n    get geometry() {\n        return this._objRef?.geometry;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set morphTargetInfluences(value) {\n        if (this._objRef) {\n            this._objRef.morphTargetInfluences = value;\n        }\n    }\n    // @ts-ignore\n    get morphTargetInfluences() {\n        return this._objRef?.morphTargetInfluences;\n    }\n    set morphTargetDictionary(value) {\n        if (this._objRef) {\n            this._objRef.morphTargetDictionary = value;\n        }\n    }\n    // @ts-ignore\n    get morphTargetDictionary() {\n        return this._objRef?.morphTargetDictionary;\n    }\n}\nThMesh.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMesh, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMesh.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMesh, selector: \"th-mesh\", inputs: { geometry: \"geometry\", material: \"material\", morphTargetInfluences: \"morphTargetInfluences\", morphTargetDictionary: \"morphTargetDictionary\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThMesh) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMesh, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-mesh',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThMesh) }]\n                }]\n        }], propDecorators: { geometry: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], morphTargetInfluences: [{\n                type: Input\n            }], morphTargetDictionary: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThInstancedMesh extends ThMesh {\n    getType() {\n        return InstancedMesh;\n    }\n    // @ts-ignore\n    get isInstancedMesh() {\n        return this._objRef?.isInstancedMesh;\n    }\n    set boundingBox(value) {\n        if (this._objRef) {\n            this._objRef.boundingBox = applyValue(this._objRef.boundingBox, value);\n        }\n    }\n    // @ts-ignore\n    get boundingBox() {\n        return this._objRef?.boundingBox;\n    }\n    set boundingSphere(value) {\n        if (this._objRef) {\n            this._objRef.boundingSphere = applyValue(this._objRef.boundingSphere, value);\n        }\n    }\n    // @ts-ignore\n    get boundingSphere() {\n        return this._objRef?.boundingSphere;\n    }\n    set count(value) {\n        if (this._objRef) {\n            this._objRef.count = value;\n        }\n    }\n    // @ts-ignore\n    get count() {\n        return this._objRef?.count;\n    }\n    set instanceColor(value) {\n        if (this._objRef) {\n            this._objRef.instanceColor = applyValue(this._objRef.instanceColor, value);\n        }\n    }\n    // @ts-ignore\n    get instanceColor() {\n        return this._objRef?.instanceColor;\n    }\n    set instanceMatrix(value) {\n        if (this._objRef) {\n            this._objRef.instanceMatrix = applyValue(this._objRef.instanceMatrix, value);\n        }\n    }\n    // @ts-ignore\n    get instanceMatrix() {\n        return this._objRef?.instanceMatrix;\n    }\n}\nThInstancedMesh.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThInstancedMesh, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThInstancedMesh.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThInstancedMesh, selector: \"th-instancedMesh\", inputs: { boundingBox: \"boundingBox\", boundingSphere: \"boundingSphere\", count: \"count\", instanceColor: \"instanceColor\", instanceMatrix: \"instanceMatrix\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThInstancedMesh) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThInstancedMesh, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-instancedMesh',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThInstancedMesh) }]\n                }]\n        }], propDecorators: { boundingBox: [{\n                type: Input\n            }], boundingSphere: [{\n                type: Input\n            }], count: [{\n                type: Input\n            }], instanceColor: [{\n                type: Input\n            }], instanceMatrix: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLatheGeometry extends ThBufferGeometry {\n    getType() {\n        return LatheGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThLatheGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLatheGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLatheGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLatheGeometry, selector: \"th-latheGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThLatheGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLatheGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-latheGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThLatheGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLightningStrike extends ThBufferGeometry {\n    getType() {\n        return LightningStrike;\n    }\n    set state(value) {\n        if (this._objRef) {\n            this._objRef.state = value;\n        }\n    }\n    // @ts-ignore\n    get state() {\n        return this._objRef?.state;\n    }\n}\nThLightningStrike.RAY_INITIALIZED = LightningStrike.RAY_INITIALIZED;\nThLightningStrike.RAY_UNBORN = LightningStrike.RAY_UNBORN;\nThLightningStrike.RAY_PROPAGATING = LightningStrike.RAY_PROPAGATING;\nThLightningStrike.RAY_STEADY = LightningStrike.RAY_STEADY;\nThLightningStrike.RAY_VANISHING = LightningStrike.RAY_VANISHING;\nThLightningStrike.RAY_EXTINGUISHED = LightningStrike.RAY_EXTINGUISHED;\nThLightningStrike.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLightningStrike, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLightningStrike.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLightningStrike, selector: \"th-lightningStrike\", inputs: { state: \"state\" }, providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThLightningStrike)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLightningStrike, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lightningStrike',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThLightningStrike)\n                        }\n                    ]\n                }]\n        }], propDecorators: { state: [{\n                type: Input\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass ThMaterialBase extends ThWrapperBase {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n    addToParent() {\n        if (!this.parent.objRef) {\n            throw new Error(\"parent object doesn't hold a three js object instance\");\n        }\n        this.parent.objRef.material = this.objRef;\n    }\n    removeFromParent() {\n        if (this._objRef && this.parent && this.parent.objRef) {\n            this.parent.objRef.material = undefined;\n        }\n    }\n}\nThMaterialBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMaterialBase, deps: [{ token: ThObject3D }], target: i0.ɵɵFactoryTarget.Component });\nThMaterialBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMaterialBase, selector: \"th-abs-material\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMaterialBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-abs-material',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D }]; } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMaterial extends ThMaterialBase {\n    getType() {\n        return Material;\n    }\n    set alphaTest(value) {\n        if (this._objRef) {\n            this._objRef.alphaTest = value;\n        }\n    }\n    // @ts-ignore\n    get alphaTest() {\n        return this._objRef?.alphaTest;\n    }\n    set alphaToCoverage(value) {\n        if (this._objRef) {\n            this._objRef.alphaToCoverage = value;\n        }\n    }\n    // @ts-ignore\n    get alphaToCoverage() {\n        return this._objRef?.alphaToCoverage;\n    }\n    set blendDst(value) {\n        if (this._objRef) {\n            this._objRef.blendDst = value;\n        }\n    }\n    // @ts-ignore\n    get blendDst() {\n        return this._objRef?.blendDst;\n    }\n    set blendDstAlpha(value) {\n        if (this._objRef) {\n            this._objRef.blendDstAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get blendDstAlpha() {\n        return this._objRef?.blendDstAlpha;\n    }\n    set blendEquation(value) {\n        if (this._objRef) {\n            this._objRef.blendEquation = value;\n        }\n    }\n    // @ts-ignore\n    get blendEquation() {\n        return this._objRef?.blendEquation;\n    }\n    set blendEquationAlpha(value) {\n        if (this._objRef) {\n            this._objRef.blendEquationAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get blendEquationAlpha() {\n        return this._objRef?.blendEquationAlpha;\n    }\n    set blending(value) {\n        if (this._objRef) {\n            this._objRef.blending = value;\n        }\n    }\n    // @ts-ignore\n    get blending() {\n        return this._objRef?.blending;\n    }\n    set blendSrc(value) {\n        if (this._objRef) {\n            this._objRef.blendSrc = value;\n        }\n    }\n    // @ts-ignore\n    get blendSrc() {\n        return this._objRef?.blendSrc;\n    }\n    set blendSrcAlpha(value) {\n        if (this._objRef) {\n            this._objRef.blendSrcAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get blendSrcAlpha() {\n        return this._objRef?.blendSrcAlpha;\n    }\n    set clipIntersection(value) {\n        if (this._objRef) {\n            this._objRef.clipIntersection = value;\n        }\n    }\n    // @ts-ignore\n    get clipIntersection() {\n        return this._objRef?.clipIntersection;\n    }\n    set clippingPlanes(value) {\n        if (this._objRef) {\n            this._objRef.clippingPlanes = value;\n        }\n    }\n    // @ts-ignore\n    get clippingPlanes() {\n        return this._objRef?.clippingPlanes;\n    }\n    set clipShadows(value) {\n        if (this._objRef) {\n            this._objRef.clipShadows = value;\n        }\n    }\n    // @ts-ignore\n    get clipShadows() {\n        return this._objRef?.clipShadows;\n    }\n    set colorWrite(value) {\n        if (this._objRef) {\n            this._objRef.colorWrite = value;\n        }\n    }\n    // @ts-ignore\n    get colorWrite() {\n        return this._objRef?.colorWrite;\n    }\n    set defines(value) {\n        if (this._objRef) {\n            this._objRef.defines = value;\n        }\n    }\n    // @ts-ignore\n    get defines() {\n        return this._objRef?.defines;\n    }\n    set depthFunc(value) {\n        if (this._objRef) {\n            this._objRef.depthFunc = value;\n        }\n    }\n    // @ts-ignore\n    get depthFunc() {\n        return this._objRef?.depthFunc;\n    }\n    set depthTest(value) {\n        if (this._objRef) {\n            this._objRef.depthTest = value;\n        }\n    }\n    // @ts-ignore\n    get depthTest() {\n        return this._objRef?.depthTest;\n    }\n    set depthWrite(value) {\n        if (this._objRef) {\n            this._objRef.depthWrite = value;\n        }\n    }\n    // @ts-ignore\n    get depthWrite() {\n        return this._objRef?.depthWrite;\n    }\n    set id(value) {\n        if (this._objRef) {\n            this._objRef.id = value;\n        }\n    }\n    // @ts-ignore\n    get id() {\n        return this._objRef?.id;\n    }\n    set stencilWrite(value) {\n        if (this._objRef) {\n            this._objRef.stencilWrite = value;\n        }\n    }\n    // @ts-ignore\n    get stencilWrite() {\n        return this._objRef?.stencilWrite;\n    }\n    set stencilFunc(value) {\n        if (this._objRef) {\n            this._objRef.stencilFunc = value;\n        }\n    }\n    // @ts-ignore\n    get stencilFunc() {\n        return this._objRef?.stencilFunc;\n    }\n    set stencilRef(value) {\n        if (this._objRef) {\n            this._objRef.stencilRef = value;\n        }\n    }\n    // @ts-ignore\n    get stencilRef() {\n        return this._objRef?.stencilRef;\n    }\n    set stencilWriteMask(value) {\n        if (this._objRef) {\n            this._objRef.stencilWriteMask = value;\n        }\n    }\n    // @ts-ignore\n    get stencilWriteMask() {\n        return this._objRef?.stencilWriteMask;\n    }\n    set stencilFuncMask(value) {\n        if (this._objRef) {\n            this._objRef.stencilFuncMask = value;\n        }\n    }\n    // @ts-ignore\n    get stencilFuncMask() {\n        return this._objRef?.stencilFuncMask;\n    }\n    set stencilFail(value) {\n        if (this._objRef) {\n            this._objRef.stencilFail = value;\n        }\n    }\n    // @ts-ignore\n    get stencilFail() {\n        return this._objRef?.stencilFail;\n    }\n    set stencilZFail(value) {\n        if (this._objRef) {\n            this._objRef.stencilZFail = value;\n        }\n    }\n    // @ts-ignore\n    get stencilZFail() {\n        return this._objRef?.stencilZFail;\n    }\n    set stencilZPass(value) {\n        if (this._objRef) {\n            this._objRef.stencilZPass = value;\n        }\n    }\n    // @ts-ignore\n    get stencilZPass() {\n        return this._objRef?.stencilZPass;\n    }\n    // @ts-ignore\n    get isMaterial() {\n        return this._objRef?.isMaterial;\n    }\n    set name(value) {\n        if (this._objRef) {\n            this._objRef.name = value;\n        }\n    }\n    // @ts-ignore\n    get name() {\n        return this._objRef?.name;\n    }\n    set needsUpdate(value) {\n        if (this._objRef) {\n            this._objRef.needsUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get needsUpdate() {\n        return this._objRef?.needsUpdate;\n    }\n    set opacity(value) {\n        if (this._objRef) {\n            this._objRef.opacity = value;\n        }\n    }\n    // @ts-ignore\n    get opacity() {\n        return this._objRef?.opacity;\n    }\n    set polygonOffset(value) {\n        if (this._objRef) {\n            this._objRef.polygonOffset = value;\n        }\n    }\n    // @ts-ignore\n    get polygonOffset() {\n        return this._objRef?.polygonOffset;\n    }\n    set polygonOffsetFactor(value) {\n        if (this._objRef) {\n            this._objRef.polygonOffsetFactor = value;\n        }\n    }\n    // @ts-ignore\n    get polygonOffsetFactor() {\n        return this._objRef?.polygonOffsetFactor;\n    }\n    set polygonOffsetUnits(value) {\n        if (this._objRef) {\n            this._objRef.polygonOffsetUnits = value;\n        }\n    }\n    // @ts-ignore\n    get polygonOffsetUnits() {\n        return this._objRef?.polygonOffsetUnits;\n    }\n    set precision(value) {\n        if (this._objRef) {\n            this._objRef.precision = value;\n        }\n    }\n    // @ts-ignore\n    get precision() {\n        return this._objRef?.precision;\n    }\n    set premultipliedAlpha(value) {\n        if (this._objRef) {\n            this._objRef.premultipliedAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get premultipliedAlpha() {\n        return this._objRef?.premultipliedAlpha;\n    }\n    set forceSinglePass(value) {\n        if (this._objRef) {\n            this._objRef.forceSinglePass = value;\n        }\n    }\n    // @ts-ignore\n    get forceSinglePass() {\n        return this._objRef?.forceSinglePass;\n    }\n    set dithering(value) {\n        if (this._objRef) {\n            this._objRef.dithering = value;\n        }\n    }\n    // @ts-ignore\n    get dithering() {\n        return this._objRef?.dithering;\n    }\n    set side(value) {\n        if (this._objRef) {\n            this._objRef.side = value;\n        }\n    }\n    // @ts-ignore\n    get side() {\n        return this._objRef?.side;\n    }\n    set shadowSide(value) {\n        if (this._objRef) {\n            this._objRef.shadowSide = value;\n        }\n    }\n    // @ts-ignore\n    get shadowSide() {\n        return this._objRef?.shadowSide;\n    }\n    set toneMapped(value) {\n        if (this._objRef) {\n            this._objRef.toneMapped = value;\n        }\n    }\n    // @ts-ignore\n    get toneMapped() {\n        return this._objRef?.toneMapped;\n    }\n    set transparent(value) {\n        if (this._objRef) {\n            this._objRef.transparent = value;\n        }\n    }\n    // @ts-ignore\n    get transparent() {\n        return this._objRef?.transparent;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set uuid(value) {\n        if (this._objRef) {\n            this._objRef.uuid = value;\n        }\n    }\n    // @ts-ignore\n    get uuid() {\n        return this._objRef?.uuid;\n    }\n    set vertexColors(value) {\n        if (this._objRef) {\n            this._objRef.vertexColors = value;\n        }\n    }\n    // @ts-ignore\n    get vertexColors() {\n        return this._objRef?.vertexColors;\n    }\n    set visible(value) {\n        if (this._objRef) {\n            this._objRef.visible = value;\n        }\n    }\n    // @ts-ignore\n    get visible() {\n        return this._objRef?.visible;\n    }\n    set userData(value) {\n        if (this._objRef) {\n            this._objRef.userData = value;\n        }\n    }\n    // @ts-ignore\n    get userData() {\n        return this._objRef?.userData;\n    }\n    set version(value) {\n        if (this._objRef) {\n            this._objRef.version = value;\n        }\n    }\n    // @ts-ignore\n    get version() {\n        return this._objRef?.version;\n    }\n    constructor(hostObject) {\n        super(hostObject);\n    }\n}\nThMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMaterial, deps: [{ token: ThObject3D, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nThMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMaterial, selector: \"th-material\", inputs: { alphaTest: \"alphaTest\", alphaToCoverage: \"alphaToCoverage\", blendDst: \"blendDst\", blendDstAlpha: \"blendDstAlpha\", blendEquation: \"blendEquation\", blendEquationAlpha: \"blendEquationAlpha\", blending: \"blending\", blendSrc: \"blendSrc\", blendSrcAlpha: \"blendSrcAlpha\", clipIntersection: \"clipIntersection\", clippingPlanes: \"clippingPlanes\", clipShadows: \"clipShadows\", colorWrite: \"colorWrite\", defines: \"defines\", depthFunc: \"depthFunc\", depthTest: \"depthTest\", depthWrite: \"depthWrite\", id: \"id\", stencilWrite: \"stencilWrite\", stencilFunc: \"stencilFunc\", stencilRef: \"stencilRef\", stencilWriteMask: \"stencilWriteMask\", stencilFuncMask: \"stencilFuncMask\", stencilFail: \"stencilFail\", stencilZFail: \"stencilZFail\", stencilZPass: \"stencilZPass\", name: \"name\", needsUpdate: \"needsUpdate\", opacity: \"opacity\", polygonOffset: \"polygonOffset\", polygonOffsetFactor: \"polygonOffsetFactor\", polygonOffsetUnits: \"polygonOffsetUnits\", precision: \"precision\", premultipliedAlpha: \"premultipliedAlpha\", forceSinglePass: \"forceSinglePass\", dithering: \"dithering\", side: \"side\", shadowSide: \"shadowSide\", toneMapped: \"toneMapped\", transparent: \"transparent\", type: \"type\", uuid: \"uuid\", vertexColors: \"vertexColors\", visible: \"visible\", userData: \"userData\", version: \"version\" }, providers: [], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-material',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: SkipSelf\n                }] }]; }, propDecorators: { alphaTest: [{\n                type: Input\n            }], alphaToCoverage: [{\n                type: Input\n            }], blendDst: [{\n                type: Input\n            }], blendDstAlpha: [{\n                type: Input\n            }], blendEquation: [{\n                type: Input\n            }], blendEquationAlpha: [{\n                type: Input\n            }], blending: [{\n                type: Input\n            }], blendSrc: [{\n                type: Input\n            }], blendSrcAlpha: [{\n                type: Input\n            }], clipIntersection: [{\n                type: Input\n            }], clippingPlanes: [{\n                type: Input\n            }], clipShadows: [{\n                type: Input\n            }], colorWrite: [{\n                type: Input\n            }], defines: [{\n                type: Input\n            }], depthFunc: [{\n                type: Input\n            }], depthTest: [{\n                type: Input\n            }], depthWrite: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], stencilWrite: [{\n                type: Input\n            }], stencilFunc: [{\n                type: Input\n            }], stencilRef: [{\n                type: Input\n            }], stencilWriteMask: [{\n                type: Input\n            }], stencilFuncMask: [{\n                type: Input\n            }], stencilFail: [{\n                type: Input\n            }], stencilZFail: [{\n                type: Input\n            }], stencilZPass: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], needsUpdate: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], polygonOffset: [{\n                type: Input\n            }], polygonOffsetFactor: [{\n                type: Input\n            }], polygonOffsetUnits: [{\n                type: Input\n            }], precision: [{\n                type: Input\n            }], premultipliedAlpha: [{\n                type: Input\n            }], forceSinglePass: [{\n                type: Input\n            }], dithering: [{\n                type: Input\n            }], side: [{\n                type: Input\n            }], shadowSide: [{\n                type: Input\n            }], toneMapped: [{\n                type: Input\n            }], transparent: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], uuid: [{\n                type: Input\n            }], vertexColors: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], userData: [{\n                type: Input\n            }], version: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineBasicMaterial extends ThMaterial {\n    getType() {\n        return LineBasicMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n    set linewidth(value) {\n        if (this._objRef) {\n            this._objRef.linewidth = value;\n        }\n    }\n    // @ts-ignore\n    get linewidth() {\n        return this._objRef?.linewidth;\n    }\n    set linecap(value) {\n        if (this._objRef) {\n            this._objRef.linecap = value;\n        }\n    }\n    // @ts-ignore\n    get linecap() {\n        return this._objRef?.linecap;\n    }\n    set linejoin(value) {\n        if (this._objRef) {\n            this._objRef.linejoin = value;\n        }\n    }\n    // @ts-ignore\n    get linejoin() {\n        return this._objRef?.linejoin;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n}\nThLineBasicMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineBasicMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLineBasicMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLineBasicMaterial, selector: \"th-lineBasicMaterial\", inputs: { type: \"type\", color: \"color\", fog: \"fog\", linewidth: \"linewidth\", linecap: \"linecap\", linejoin: \"linejoin\", map: \"map\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThLineBasicMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineBasicMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lineBasicMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThLineBasicMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }], linewidth: [{\n                type: Input\n            }], linecap: [{\n                type: Input\n            }], linejoin: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineDashedMaterial extends ThLineBasicMaterial {\n    getType() {\n        return LineDashedMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set scale(value) {\n        if (this._objRef) {\n            this._objRef.scale = value;\n        }\n    }\n    // @ts-ignore\n    get scale() {\n        return this._objRef?.scale;\n    }\n    set dashSize(value) {\n        if (this._objRef) {\n            this._objRef.dashSize = value;\n        }\n    }\n    // @ts-ignore\n    get dashSize() {\n        return this._objRef?.dashSize;\n    }\n    set gapSize(value) {\n        if (this._objRef) {\n            this._objRef.gapSize = value;\n        }\n    }\n    // @ts-ignore\n    get gapSize() {\n        return this._objRef?.gapSize;\n    }\n    // @ts-ignore\n    get isLineDashedMaterial() {\n        return this._objRef?.isLineDashedMaterial;\n    }\n}\nThLineDashedMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineDashedMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLineDashedMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLineDashedMaterial, selector: \"th-lineDashedMaterial\", inputs: { type: \"type\", scale: \"scale\", dashSize: \"dashSize\", gapSize: \"gapSize\" }, providers: [\n        {\n            provide: ThMaterial,\n            useExisting: forwardRef(() => ThLineDashedMaterial)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineDashedMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lineDashedMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThMaterial,\n                            useExisting: forwardRef(() => ThLineDashedMaterial)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], scale: [{\n                type: Input\n            }], dashSize: [{\n                type: Input\n            }], gapSize: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLineLoop extends ThLine {\n    getType() {\n        return LineLoop;\n    }\n    // @ts-ignore\n    get isLineLoop() {\n        return this._objRef?.isLineLoop;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThLineLoop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineLoop, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLineLoop.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLineLoop, selector: \"th-lineLoop\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLineLoop) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLineLoop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lineLoop',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLineLoop) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThLOD extends ThObject3D {\n    getType() {\n        return LOD;\n    }\n    // @ts-ignore\n    get isLOD() {\n        return this._objRef?.isLOD;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set levels(value) {\n        if (this._objRef) {\n            this._objRef.levels = value;\n        }\n    }\n    // @ts-ignore\n    get levels() {\n        return this._objRef?.levels;\n    }\n    set autoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.autoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get autoUpdate() {\n        return this._objRef?.autoUpdate;\n    }\n}\nThLOD.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLOD, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLOD.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLOD, selector: \"th-lOD\", inputs: { levels: \"levels\", autoUpdate: \"autoUpdate\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLOD) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLOD, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lOD',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLOD) }]\n                }]\n        }], propDecorators: { levels: [{\n                type: Input\n            }], autoUpdate: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThShaderPass extends ThPass {\n    getType() {\n        return ShaderPass;\n    }\n    set textureID(value) {\n        if (this._objRef) {\n            this._objRef.textureID = value;\n        }\n    }\n    // @ts-ignore\n    get textureID() {\n        return this._objRef?.textureID;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThShaderPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShaderPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThShaderPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThShaderPass, selector: \"th-shaderPass\", inputs: { textureID: \"textureID\", uniforms: \"uniforms\", material: \"material\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThShaderPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShaderPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-shaderPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThShaderPass) }]\n                }]\n        }], propDecorators: { textureID: [{\n                type: Input\n            }], uniforms: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThLUTPass extends ThShaderPass {\n    getType() {\n        return LUTPass;\n    }\n    set lut(value) {\n        if (this._objRef) {\n            this._objRef.lut = value;\n        }\n    }\n    // @ts-ignore\n    get lut() {\n        return this._objRef?.lut;\n    }\n    set intensity(value) {\n        if (this._objRef) {\n            this._objRef.intensity = value;\n        }\n    }\n    // @ts-ignore\n    get intensity() {\n        return this._objRef?.intensity;\n    }\n}\nThLUTPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLUTPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThLUTPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLUTPass, selector: \"th-lUTPass\", inputs: { lut: \"lut\", intensity: \"intensity\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThLUTPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLUTPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-lUTPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThLUTPass) }]\n                }]\n        }], propDecorators: { lut: [{\n                type: Input\n            }], intensity: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThOrbitControls extends ThControlBase {\n    getType() {\n        return OrbitControls;\n    }\n    set object(value) {\n        if (this._objRef) {\n            this._objRef.object = value;\n        }\n    }\n    // @ts-ignore\n    get object() {\n        return this._objRef?.object;\n    }\n    set domElement(value) {\n        if (this._objRef) {\n            this._objRef.domElement = value;\n        }\n    }\n    // @ts-ignore\n    get domElement() {\n        return this._objRef?.domElement;\n    }\n    set enabled(value) {\n        if (this._objRef) {\n            this._objRef.enabled = value;\n        }\n    }\n    // @ts-ignore\n    get enabled() {\n        return this._objRef?.enabled;\n    }\n    set target(value) {\n        if (this._objRef) {\n            this._objRef.target = applyValue(this._objRef.target, value);\n        }\n    }\n    // @ts-ignore\n    get target() {\n        return this._objRef?.target;\n    }\n    set center(value) {\n        if (this._objRef) {\n            this._objRef.center = applyValue(this._objRef.center, value);\n        }\n    }\n    // @ts-ignore\n    get center() {\n        return this._objRef?.center;\n    }\n    set minDistance(value) {\n        if (this._objRef) {\n            this._objRef.minDistance = value;\n        }\n    }\n    // @ts-ignore\n    get minDistance() {\n        return this._objRef?.minDistance;\n    }\n    set maxDistance(value) {\n        if (this._objRef) {\n            this._objRef.maxDistance = value;\n        }\n    }\n    // @ts-ignore\n    get maxDistance() {\n        return this._objRef?.maxDistance;\n    }\n    set minZoom(value) {\n        if (this._objRef) {\n            this._objRef.minZoom = value;\n        }\n    }\n    // @ts-ignore\n    get minZoom() {\n        return this._objRef?.minZoom;\n    }\n    set maxZoom(value) {\n        if (this._objRef) {\n            this._objRef.maxZoom = value;\n        }\n    }\n    // @ts-ignore\n    get maxZoom() {\n        return this._objRef?.maxZoom;\n    }\n    set minPolarAngle(value) {\n        if (this._objRef) {\n            this._objRef.minPolarAngle = value;\n        }\n    }\n    // @ts-ignore\n    get minPolarAngle() {\n        return this._objRef?.minPolarAngle;\n    }\n    set maxPolarAngle(value) {\n        if (this._objRef) {\n            this._objRef.maxPolarAngle = value;\n        }\n    }\n    // @ts-ignore\n    get maxPolarAngle() {\n        return this._objRef?.maxPolarAngle;\n    }\n    set minAzimuthAngle(value) {\n        if (this._objRef) {\n            this._objRef.minAzimuthAngle = value;\n        }\n    }\n    // @ts-ignore\n    get minAzimuthAngle() {\n        return this._objRef?.minAzimuthAngle;\n    }\n    set maxAzimuthAngle(value) {\n        if (this._objRef) {\n            this._objRef.maxAzimuthAngle = value;\n        }\n    }\n    // @ts-ignore\n    get maxAzimuthAngle() {\n        return this._objRef?.maxAzimuthAngle;\n    }\n    set enableDamping(value) {\n        if (this._objRef) {\n            this._objRef.enableDamping = value;\n        }\n    }\n    // @ts-ignore\n    get enableDamping() {\n        return this._objRef?.enableDamping;\n    }\n    set dampingFactor(value) {\n        if (this._objRef) {\n            this._objRef.dampingFactor = value;\n        }\n    }\n    // @ts-ignore\n    get dampingFactor() {\n        return this._objRef?.dampingFactor;\n    }\n    set enableZoom(value) {\n        if (this._objRef) {\n            this._objRef.enableZoom = value;\n        }\n    }\n    // @ts-ignore\n    get enableZoom() {\n        return this._objRef?.enableZoom;\n    }\n    set zoomSpeed(value) {\n        if (this._objRef) {\n            this._objRef.zoomSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get zoomSpeed() {\n        return this._objRef?.zoomSpeed;\n    }\n    set enableRotate(value) {\n        if (this._objRef) {\n            this._objRef.enableRotate = value;\n        }\n    }\n    // @ts-ignore\n    get enableRotate() {\n        return this._objRef?.enableRotate;\n    }\n    set rotateSpeed(value) {\n        if (this._objRef) {\n            this._objRef.rotateSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get rotateSpeed() {\n        return this._objRef?.rotateSpeed;\n    }\n    set enablePan(value) {\n        if (this._objRef) {\n            this._objRef.enablePan = value;\n        }\n    }\n    // @ts-ignore\n    get enablePan() {\n        return this._objRef?.enablePan;\n    }\n    set panSpeed(value) {\n        if (this._objRef) {\n            this._objRef.panSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get panSpeed() {\n        return this._objRef?.panSpeed;\n    }\n    set screenSpacePanning(value) {\n        if (this._objRef) {\n            this._objRef.screenSpacePanning = value;\n        }\n    }\n    // @ts-ignore\n    get screenSpacePanning() {\n        return this._objRef?.screenSpacePanning;\n    }\n    set keyPanSpeed(value) {\n        if (this._objRef) {\n            this._objRef.keyPanSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get keyPanSpeed() {\n        return this._objRef?.keyPanSpeed;\n    }\n    set autoRotate(value) {\n        if (this._objRef) {\n            this._objRef.autoRotate = value;\n        }\n    }\n    // @ts-ignore\n    get autoRotate() {\n        return this._objRef?.autoRotate;\n    }\n    set autoRotateSpeed(value) {\n        if (this._objRef) {\n            this._objRef.autoRotateSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get autoRotateSpeed() {\n        return this._objRef?.autoRotateSpeed;\n    }\n    set keys(value) {\n        if (this._objRef) {\n            this._objRef.keys = value;\n        }\n    }\n    // @ts-ignore\n    get keys() {\n        return this._objRef?.keys;\n    }\n    set mouseButtons(value) {\n        if (this._objRef) {\n            this._objRef.mouseButtons = value;\n        }\n    }\n    // @ts-ignore\n    get mouseButtons() {\n        return this._objRef?.mouseButtons;\n    }\n    set touches(value) {\n        if (this._objRef) {\n            this._objRef.touches = value;\n        }\n    }\n    // @ts-ignore\n    get touches() {\n        return this._objRef?.touches;\n    }\n    set target0(value) {\n        if (this._objRef) {\n            this._objRef.target0 = applyValue(this._objRef.target0, value);\n        }\n    }\n    // @ts-ignore\n    get target0() {\n        return this._objRef?.target0;\n    }\n    set position0(value) {\n        if (this._objRef) {\n            this._objRef.position0 = applyValue(this._objRef.position0, value);\n        }\n    }\n    // @ts-ignore\n    get position0() {\n        return this._objRef?.position0;\n    }\n    set zoom0(value) {\n        if (this._objRef) {\n            this._objRef.zoom0 = value;\n        }\n    }\n    // @ts-ignore\n    get zoom0() {\n        return this._objRef?.zoom0;\n    }\n}\nThOrbitControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOrbitControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThOrbitControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThOrbitControls, selector: \"th-orbitControls\", inputs: { object: \"object\", domElement: \"domElement\", enabled: \"enabled\", target: \"target\", center: \"center\", minDistance: \"minDistance\", maxDistance: \"maxDistance\", minZoom: \"minZoom\", maxZoom: \"maxZoom\", minPolarAngle: \"minPolarAngle\", maxPolarAngle: \"maxPolarAngle\", minAzimuthAngle: \"minAzimuthAngle\", maxAzimuthAngle: \"maxAzimuthAngle\", enableDamping: \"enableDamping\", dampingFactor: \"dampingFactor\", enableZoom: \"enableZoom\", zoomSpeed: \"zoomSpeed\", enableRotate: \"enableRotate\", rotateSpeed: \"rotateSpeed\", enablePan: \"enablePan\", panSpeed: \"panSpeed\", screenSpacePanning: \"screenSpacePanning\", keyPanSpeed: \"keyPanSpeed\", autoRotate: \"autoRotate\", autoRotateSpeed: \"autoRotateSpeed\", keys: \"keys\", mouseButtons: \"mouseButtons\", touches: \"touches\", target0: \"target0\", position0: \"position0\", zoom0: \"zoom0\" }, providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThOrbitControls) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOrbitControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-orbitControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThOrbitControls) }]\n                }]\n        }], propDecorators: { object: [{\n                type: Input\n            }], domElement: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], target: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], minDistance: [{\n                type: Input\n            }], maxDistance: [{\n                type: Input\n            }], minZoom: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], minPolarAngle: [{\n                type: Input\n            }], maxPolarAngle: [{\n                type: Input\n            }], minAzimuthAngle: [{\n                type: Input\n            }], maxAzimuthAngle: [{\n                type: Input\n            }], enableDamping: [{\n                type: Input\n            }], dampingFactor: [{\n                type: Input\n            }], enableZoom: [{\n                type: Input\n            }], zoomSpeed: [{\n                type: Input\n            }], enableRotate: [{\n                type: Input\n            }], rotateSpeed: [{\n                type: Input\n            }], enablePan: [{\n                type: Input\n            }], panSpeed: [{\n                type: Input\n            }], screenSpacePanning: [{\n                type: Input\n            }], keyPanSpeed: [{\n                type: Input\n            }], autoRotate: [{\n                type: Input\n            }], autoRotateSpeed: [{\n                type: Input\n            }], keys: [{\n                type: Input\n            }], mouseButtons: [{\n                type: Input\n            }], touches: [{\n                type: Input\n            }], target0: [{\n                type: Input\n            }], position0: [{\n                type: Input\n            }], zoom0: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMapControls extends ThOrbitControls {\n    getType() {\n        return MapControls;\n    }\n}\nThMapControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMapControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMapControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMapControls, selector: \"th-mapControls\", providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThMapControls) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMapControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-mapControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThControlBase, useExisting: forwardRef(() => ThMapControls) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThMaskPass extends ThPass {\n    getType() {\n        return MaskPass;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set inverse(value) {\n        if (this._objRef) {\n            this._objRef.inverse = value;\n        }\n    }\n    // @ts-ignore\n    get inverse() {\n        return this._objRef?.inverse;\n    }\n}\nThMaskPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMaskPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMaskPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMaskPass, selector: \"th-maskPass\", inputs: { scene: \"scene\", camera: \"camera\", inverse: \"inverse\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThMaskPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMaskPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-maskPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThMaskPass) }]\n                }]\n        }], propDecorators: { scene: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], inverse: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshBasicMaterial extends ThMaterial {\n    getType() {\n        return MeshBasicMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set lightMap(value) {\n        if (this._objRef) {\n            this._objRef.lightMap = value;\n        }\n    }\n    // @ts-ignore\n    get lightMap() {\n        return this._objRef?.lightMap;\n    }\n    set lightMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.lightMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get lightMapIntensity() {\n        return this._objRef?.lightMapIntensity;\n    }\n    set aoMap(value) {\n        if (this._objRef) {\n            this._objRef.aoMap = value;\n        }\n    }\n    // @ts-ignore\n    get aoMap() {\n        return this._objRef?.aoMap;\n    }\n    set aoMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.aoMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get aoMapIntensity() {\n        return this._objRef?.aoMapIntensity;\n    }\n    set specularMap(value) {\n        if (this._objRef) {\n            this._objRef.specularMap = value;\n        }\n    }\n    // @ts-ignore\n    get specularMap() {\n        return this._objRef?.specularMap;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set envMap(value) {\n        if (this._objRef) {\n            this._objRef.envMap = value;\n        }\n    }\n    // @ts-ignore\n    get envMap() {\n        return this._objRef?.envMap;\n    }\n    set combine(value) {\n        if (this._objRef) {\n            this._objRef.combine = value;\n        }\n    }\n    // @ts-ignore\n    get combine() {\n        return this._objRef?.combine;\n    }\n    set reflectivity(value) {\n        if (this._objRef) {\n            this._objRef.reflectivity = value;\n        }\n    }\n    // @ts-ignore\n    get reflectivity() {\n        return this._objRef?.reflectivity;\n    }\n    set refractionRatio(value) {\n        if (this._objRef) {\n            this._objRef.refractionRatio = value;\n        }\n    }\n    // @ts-ignore\n    get refractionRatio() {\n        return this._objRef?.refractionRatio;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set wireframeLinecap(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinecap = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinecap() {\n        return this._objRef?.wireframeLinecap;\n    }\n    set wireframeLinejoin(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinejoin = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinejoin() {\n        return this._objRef?.wireframeLinejoin;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThMeshBasicMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshBasicMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshBasicMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshBasicMaterial, selector: \"th-meshBasicMaterial\", inputs: { type: \"type\", color: \"color\", map: \"map\", lightMap: \"lightMap\", lightMapIntensity: \"lightMapIntensity\", aoMap: \"aoMap\", aoMapIntensity: \"aoMapIntensity\", specularMap: \"specularMap\", alphaMap: \"alphaMap\", envMap: \"envMap\", combine: \"combine\", reflectivity: \"reflectivity\", refractionRatio: \"refractionRatio\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", wireframeLinecap: \"wireframeLinecap\", wireframeLinejoin: \"wireframeLinejoin\", fog: \"fog\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshBasicMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshBasicMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshBasicMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshBasicMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], lightMap: [{\n                type: Input\n            }], lightMapIntensity: [{\n                type: Input\n            }], aoMap: [{\n                type: Input\n            }], aoMapIntensity: [{\n                type: Input\n            }], specularMap: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], envMap: [{\n                type: Input\n            }], combine: [{\n                type: Input\n            }], reflectivity: [{\n                type: Input\n            }], refractionRatio: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], wireframeLinecap: [{\n                type: Input\n            }], wireframeLinejoin: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshDepthMaterial extends ThMaterial {\n    getType() {\n        return MeshDepthMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set depthPacking(value) {\n        if (this._objRef) {\n            this._objRef.depthPacking = value;\n        }\n    }\n    // @ts-ignore\n    get depthPacking() {\n        return this._objRef?.depthPacking;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThMeshDepthMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshDepthMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshDepthMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshDepthMaterial, selector: \"th-meshDepthMaterial\", inputs: { type: \"type\", map: \"map\", alphaMap: \"alphaMap\", depthPacking: \"depthPacking\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", fog: \"fog\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshDepthMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshDepthMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshDepthMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshDepthMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], depthPacking: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshDistanceMaterial extends ThMaterial {\n    getType() {\n        return MeshDistanceMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThMeshDistanceMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshDistanceMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshDistanceMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshDistanceMaterial, selector: \"th-meshDistanceMaterial\", inputs: { type: \"type\", map: \"map\", alphaMap: \"alphaMap\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", fog: \"fog\" }, providers: [\n        {\n            provide: ThMaterial,\n            useExisting: forwardRef(() => ThMeshDistanceMaterial)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshDistanceMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshDistanceMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThMaterial,\n                            useExisting: forwardRef(() => ThMeshDistanceMaterial)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshLambertMaterial extends ThMaterial {\n    getType() {\n        return MeshLambertMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set bumpMap(value) {\n        if (this._objRef) {\n            this._objRef.bumpMap = value;\n        }\n    }\n    // @ts-ignore\n    get bumpMap() {\n        return this._objRef?.bumpMap;\n    }\n    set bumpScale(value) {\n        if (this._objRef) {\n            this._objRef.bumpScale = value;\n        }\n    }\n    // @ts-ignore\n    get bumpScale() {\n        return this._objRef?.bumpScale;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set emissive(value) {\n        if (this._objRef) {\n            this._objRef.emissive = applyValue(this._objRef.emissive, value);\n        }\n    }\n    // @ts-ignore\n    get emissive() {\n        return this._objRef?.emissive;\n    }\n    set emissiveIntensity(value) {\n        if (this._objRef) {\n            this._objRef.emissiveIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveIntensity() {\n        return this._objRef?.emissiveIntensity;\n    }\n    set emissiveMap(value) {\n        if (this._objRef) {\n            this._objRef.emissiveMap = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveMap() {\n        return this._objRef?.emissiveMap;\n    }\n    set flatShading(value) {\n        if (this._objRef) {\n            this._objRef.flatShading = value;\n        }\n    }\n    // @ts-ignore\n    get flatShading() {\n        return this._objRef?.flatShading;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set lightMap(value) {\n        if (this._objRef) {\n            this._objRef.lightMap = value;\n        }\n    }\n    // @ts-ignore\n    get lightMap() {\n        return this._objRef?.lightMap;\n    }\n    set lightMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.lightMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get lightMapIntensity() {\n        return this._objRef?.lightMapIntensity;\n    }\n    set normalMap(value) {\n        if (this._objRef) {\n            this._objRef.normalMap = value;\n        }\n    }\n    // @ts-ignore\n    get normalMap() {\n        return this._objRef?.normalMap;\n    }\n    set normalMapType(value) {\n        if (this._objRef) {\n            this._objRef.normalMapType = value;\n        }\n    }\n    // @ts-ignore\n    get normalMapType() {\n        return this._objRef?.normalMapType;\n    }\n    set normalScale(value) {\n        if (this._objRef) {\n            this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n        }\n    }\n    // @ts-ignore\n    get normalScale() {\n        return this._objRef?.normalScale;\n    }\n    set aoMap(value) {\n        if (this._objRef) {\n            this._objRef.aoMap = value;\n        }\n    }\n    // @ts-ignore\n    get aoMap() {\n        return this._objRef?.aoMap;\n    }\n    set aoMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.aoMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get aoMapIntensity() {\n        return this._objRef?.aoMapIntensity;\n    }\n    set specularMap(value) {\n        if (this._objRef) {\n            this._objRef.specularMap = value;\n        }\n    }\n    // @ts-ignore\n    get specularMap() {\n        return this._objRef?.specularMap;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set envMap(value) {\n        if (this._objRef) {\n            this._objRef.envMap = value;\n        }\n    }\n    // @ts-ignore\n    get envMap() {\n        return this._objRef?.envMap;\n    }\n    set combine(value) {\n        if (this._objRef) {\n            this._objRef.combine = value;\n        }\n    }\n    // @ts-ignore\n    get combine() {\n        return this._objRef?.combine;\n    }\n    set reflectivity(value) {\n        if (this._objRef) {\n            this._objRef.reflectivity = value;\n        }\n    }\n    // @ts-ignore\n    get reflectivity() {\n        return this._objRef?.reflectivity;\n    }\n    set refractionRatio(value) {\n        if (this._objRef) {\n            this._objRef.refractionRatio = value;\n        }\n    }\n    // @ts-ignore\n    get refractionRatio() {\n        return this._objRef?.refractionRatio;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set wireframeLinecap(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinecap = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinecap() {\n        return this._objRef?.wireframeLinecap;\n    }\n    set wireframeLinejoin(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinejoin = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinejoin() {\n        return this._objRef?.wireframeLinejoin;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThMeshLambertMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshLambertMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshLambertMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshLambertMaterial, selector: \"th-meshLambertMaterial\", inputs: { type: \"type\", color: \"color\", bumpMap: \"bumpMap\", bumpScale: \"bumpScale\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", emissive: \"emissive\", emissiveIntensity: \"emissiveIntensity\", emissiveMap: \"emissiveMap\", flatShading: \"flatShading\", map: \"map\", lightMap: \"lightMap\", lightMapIntensity: \"lightMapIntensity\", normalMap: \"normalMap\", normalMapType: \"normalMapType\", normalScale: \"normalScale\", aoMap: \"aoMap\", aoMapIntensity: \"aoMapIntensity\", specularMap: \"specularMap\", alphaMap: \"alphaMap\", envMap: \"envMap\", combine: \"combine\", reflectivity: \"reflectivity\", refractionRatio: \"refractionRatio\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", wireframeLinecap: \"wireframeLinecap\", wireframeLinejoin: \"wireframeLinejoin\", fog: \"fog\" }, providers: [\n        {\n            provide: ThMaterial,\n            useExisting: forwardRef(() => ThMeshLambertMaterial)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshLambertMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshLambertMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThMaterial,\n                            useExisting: forwardRef(() => ThMeshLambertMaterial)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], bumpMap: [{\n                type: Input\n            }], bumpScale: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], emissive: [{\n                type: Input\n            }], emissiveIntensity: [{\n                type: Input\n            }], emissiveMap: [{\n                type: Input\n            }], flatShading: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], lightMap: [{\n                type: Input\n            }], lightMapIntensity: [{\n                type: Input\n            }], normalMap: [{\n                type: Input\n            }], normalMapType: [{\n                type: Input\n            }], normalScale: [{\n                type: Input\n            }], aoMap: [{\n                type: Input\n            }], aoMapIntensity: [{\n                type: Input\n            }], specularMap: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], envMap: [{\n                type: Input\n            }], combine: [{\n                type: Input\n            }], reflectivity: [{\n                type: Input\n            }], refractionRatio: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], wireframeLinecap: [{\n                type: Input\n            }], wireframeLinejoin: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshMatcapMaterial extends ThMaterial {\n    getType() {\n        return MeshMatcapMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set defines(value) {\n        if (this._objRef) {\n            this._objRef.defines = value;\n        }\n    }\n    // @ts-ignore\n    get defines() {\n        return this._objRef?.defines;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set matcap(value) {\n        if (this._objRef) {\n            this._objRef.matcap = value;\n        }\n    }\n    // @ts-ignore\n    get matcap() {\n        return this._objRef?.matcap;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set bumpMap(value) {\n        if (this._objRef) {\n            this._objRef.bumpMap = value;\n        }\n    }\n    // @ts-ignore\n    get bumpMap() {\n        return this._objRef?.bumpMap;\n    }\n    set bumpScale(value) {\n        if (this._objRef) {\n            this._objRef.bumpScale = value;\n        }\n    }\n    // @ts-ignore\n    get bumpScale() {\n        return this._objRef?.bumpScale;\n    }\n    set normalMap(value) {\n        if (this._objRef) {\n            this._objRef.normalMap = value;\n        }\n    }\n    // @ts-ignore\n    get normalMap() {\n        return this._objRef?.normalMap;\n    }\n    set normalMapType(value) {\n        if (this._objRef) {\n            this._objRef.normalMapType = value;\n        }\n    }\n    // @ts-ignore\n    get normalMapType() {\n        return this._objRef?.normalMapType;\n    }\n    set normalScale(value) {\n        if (this._objRef) {\n            this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n        }\n    }\n    // @ts-ignore\n    get normalScale() {\n        return this._objRef?.normalScale;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set flatShading(value) {\n        if (this._objRef) {\n            this._objRef.flatShading = value;\n        }\n    }\n    // @ts-ignore\n    get flatShading() {\n        return this._objRef?.flatShading;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThMeshMatcapMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshMatcapMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshMatcapMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshMatcapMaterial, selector: \"th-meshMatcapMaterial\", inputs: { type: \"type\", defines: \"defines\", color: \"color\", matcap: \"matcap\", map: \"map\", bumpMap: \"bumpMap\", bumpScale: \"bumpScale\", normalMap: \"normalMap\", normalMapType: \"normalMapType\", normalScale: \"normalScale\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", alphaMap: \"alphaMap\", flatShading: \"flatShading\", fog: \"fog\" }, providers: [\n        {\n            provide: ThMaterial,\n            useExisting: forwardRef(() => ThMeshMatcapMaterial)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshMatcapMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshMatcapMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThMaterial,\n                            useExisting: forwardRef(() => ThMeshMatcapMaterial)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], defines: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], matcap: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], bumpMap: [{\n                type: Input\n            }], bumpScale: [{\n                type: Input\n            }], normalMap: [{\n                type: Input\n            }], normalMapType: [{\n                type: Input\n            }], normalScale: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], flatShading: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshNormalMaterial extends ThMaterial {\n    getType() {\n        return MeshNormalMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set bumpMap(value) {\n        if (this._objRef) {\n            this._objRef.bumpMap = value;\n        }\n    }\n    // @ts-ignore\n    get bumpMap() {\n        return this._objRef?.bumpMap;\n    }\n    set bumpScale(value) {\n        if (this._objRef) {\n            this._objRef.bumpScale = value;\n        }\n    }\n    // @ts-ignore\n    get bumpScale() {\n        return this._objRef?.bumpScale;\n    }\n    set normalMap(value) {\n        if (this._objRef) {\n            this._objRef.normalMap = value;\n        }\n    }\n    // @ts-ignore\n    get normalMap() {\n        return this._objRef?.normalMap;\n    }\n    set normalMapType(value) {\n        if (this._objRef) {\n            this._objRef.normalMapType = value;\n        }\n    }\n    // @ts-ignore\n    get normalMapType() {\n        return this._objRef?.normalMapType;\n    }\n    set normalScale(value) {\n        if (this._objRef) {\n            this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n        }\n    }\n    // @ts-ignore\n    get normalScale() {\n        return this._objRef?.normalScale;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set flatShading(value) {\n        if (this._objRef) {\n            this._objRef.flatShading = value;\n        }\n    }\n    // @ts-ignore\n    get flatShading() {\n        return this._objRef?.flatShading;\n    }\n}\nThMeshNormalMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshNormalMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshNormalMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshNormalMaterial, selector: \"th-meshNormalMaterial\", inputs: { type: \"type\", bumpMap: \"bumpMap\", bumpScale: \"bumpScale\", normalMap: \"normalMap\", normalMapType: \"normalMapType\", normalScale: \"normalScale\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", flatShading: \"flatShading\" }, providers: [\n        {\n            provide: ThMaterial,\n            useExisting: forwardRef(() => ThMeshNormalMaterial)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshNormalMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshNormalMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThMaterial,\n                            useExisting: forwardRef(() => ThMeshNormalMaterial)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], bumpMap: [{\n                type: Input\n            }], bumpScale: [{\n                type: Input\n            }], normalMap: [{\n                type: Input\n            }], normalMapType: [{\n                type: Input\n            }], normalScale: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], flatShading: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshPhongMaterial extends ThMaterial {\n    getType() {\n        return MeshPhongMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set specular(value) {\n        if (this._objRef) {\n            this._objRef.specular = applyValue(this._objRef.specular, value);\n        }\n    }\n    // @ts-ignore\n    get specular() {\n        return this._objRef?.specular;\n    }\n    set shininess(value) {\n        if (this._objRef) {\n            this._objRef.shininess = value;\n        }\n    }\n    // @ts-ignore\n    get shininess() {\n        return this._objRef?.shininess;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set lightMap(value) {\n        if (this._objRef) {\n            this._objRef.lightMap = value;\n        }\n    }\n    // @ts-ignore\n    get lightMap() {\n        return this._objRef?.lightMap;\n    }\n    set lightMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.lightMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get lightMapIntensity() {\n        return this._objRef?.lightMapIntensity;\n    }\n    set aoMap(value) {\n        if (this._objRef) {\n            this._objRef.aoMap = value;\n        }\n    }\n    // @ts-ignore\n    get aoMap() {\n        return this._objRef?.aoMap;\n    }\n    set aoMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.aoMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get aoMapIntensity() {\n        return this._objRef?.aoMapIntensity;\n    }\n    set emissive(value) {\n        if (this._objRef) {\n            this._objRef.emissive = applyValue(this._objRef.emissive, value);\n        }\n    }\n    // @ts-ignore\n    get emissive() {\n        return this._objRef?.emissive;\n    }\n    set emissiveIntensity(value) {\n        if (this._objRef) {\n            this._objRef.emissiveIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveIntensity() {\n        return this._objRef?.emissiveIntensity;\n    }\n    set emissiveMap(value) {\n        if (this._objRef) {\n            this._objRef.emissiveMap = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveMap() {\n        return this._objRef?.emissiveMap;\n    }\n    set bumpMap(value) {\n        if (this._objRef) {\n            this._objRef.bumpMap = value;\n        }\n    }\n    // @ts-ignore\n    get bumpMap() {\n        return this._objRef?.bumpMap;\n    }\n    set bumpScale(value) {\n        if (this._objRef) {\n            this._objRef.bumpScale = value;\n        }\n    }\n    // @ts-ignore\n    get bumpScale() {\n        return this._objRef?.bumpScale;\n    }\n    set normalMap(value) {\n        if (this._objRef) {\n            this._objRef.normalMap = value;\n        }\n    }\n    // @ts-ignore\n    get normalMap() {\n        return this._objRef?.normalMap;\n    }\n    set normalMapType(value) {\n        if (this._objRef) {\n            this._objRef.normalMapType = value;\n        }\n    }\n    // @ts-ignore\n    get normalMapType() {\n        return this._objRef?.normalMapType;\n    }\n    set normalScale(value) {\n        if (this._objRef) {\n            this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n        }\n    }\n    // @ts-ignore\n    get normalScale() {\n        return this._objRef?.normalScale;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set specularMap(value) {\n        if (this._objRef) {\n            this._objRef.specularMap = value;\n        }\n    }\n    // @ts-ignore\n    get specularMap() {\n        return this._objRef?.specularMap;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set envMap(value) {\n        if (this._objRef) {\n            this._objRef.envMap = value;\n        }\n    }\n    // @ts-ignore\n    get envMap() {\n        return this._objRef?.envMap;\n    }\n    set combine(value) {\n        if (this._objRef) {\n            this._objRef.combine = value;\n        }\n    }\n    // @ts-ignore\n    get combine() {\n        return this._objRef?.combine;\n    }\n    set reflectivity(value) {\n        if (this._objRef) {\n            this._objRef.reflectivity = value;\n        }\n    }\n    // @ts-ignore\n    get reflectivity() {\n        return this._objRef?.reflectivity;\n    }\n    set refractionRatio(value) {\n        if (this._objRef) {\n            this._objRef.refractionRatio = value;\n        }\n    }\n    // @ts-ignore\n    get refractionRatio() {\n        return this._objRef?.refractionRatio;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set wireframeLinecap(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinecap = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinecap() {\n        return this._objRef?.wireframeLinecap;\n    }\n    set wireframeLinejoin(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinejoin = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinejoin() {\n        return this._objRef?.wireframeLinejoin;\n    }\n    set flatShading(value) {\n        if (this._objRef) {\n            this._objRef.flatShading = value;\n        }\n    }\n    // @ts-ignore\n    get flatShading() {\n        return this._objRef?.flatShading;\n    }\n    set metal(value) {\n        if (this._objRef) {\n            this._objRef.metal = value;\n        }\n    }\n    // @ts-ignore\n    get metal() {\n        return this._objRef?.metal;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThMeshPhongMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshPhongMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshPhongMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshPhongMaterial, selector: \"th-meshPhongMaterial\", inputs: { type: \"type\", color: \"color\", specular: \"specular\", shininess: \"shininess\", map: \"map\", lightMap: \"lightMap\", lightMapIntensity: \"lightMapIntensity\", aoMap: \"aoMap\", aoMapIntensity: \"aoMapIntensity\", emissive: \"emissive\", emissiveIntensity: \"emissiveIntensity\", emissiveMap: \"emissiveMap\", bumpMap: \"bumpMap\", bumpScale: \"bumpScale\", normalMap: \"normalMap\", normalMapType: \"normalMapType\", normalScale: \"normalScale\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", specularMap: \"specularMap\", alphaMap: \"alphaMap\", envMap: \"envMap\", combine: \"combine\", reflectivity: \"reflectivity\", refractionRatio: \"refractionRatio\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", wireframeLinecap: \"wireframeLinecap\", wireframeLinejoin: \"wireframeLinejoin\", flatShading: \"flatShading\", metal: \"metal\", fog: \"fog\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshPhongMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshPhongMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshPhongMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshPhongMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], specular: [{\n                type: Input\n            }], shininess: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], lightMap: [{\n                type: Input\n            }], lightMapIntensity: [{\n                type: Input\n            }], aoMap: [{\n                type: Input\n            }], aoMapIntensity: [{\n                type: Input\n            }], emissive: [{\n                type: Input\n            }], emissiveIntensity: [{\n                type: Input\n            }], emissiveMap: [{\n                type: Input\n            }], bumpMap: [{\n                type: Input\n            }], bumpScale: [{\n                type: Input\n            }], normalMap: [{\n                type: Input\n            }], normalMapType: [{\n                type: Input\n            }], normalScale: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], specularMap: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], envMap: [{\n                type: Input\n            }], combine: [{\n                type: Input\n            }], reflectivity: [{\n                type: Input\n            }], refractionRatio: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], wireframeLinecap: [{\n                type: Input\n            }], wireframeLinejoin: [{\n                type: Input\n            }], flatShading: [{\n                type: Input\n            }], metal: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshStandardMaterial extends ThMaterial {\n    getType() {\n        return MeshStandardMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set defines(value) {\n        if (this._objRef) {\n            this._objRef.defines = value;\n        }\n    }\n    // @ts-ignore\n    get defines() {\n        return this._objRef?.defines;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set roughness(value) {\n        if (this._objRef) {\n            this._objRef.roughness = value;\n        }\n    }\n    // @ts-ignore\n    get roughness() {\n        return this._objRef?.roughness;\n    }\n    set metalness(value) {\n        if (this._objRef) {\n            this._objRef.metalness = value;\n        }\n    }\n    // @ts-ignore\n    get metalness() {\n        return this._objRef?.metalness;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set lightMap(value) {\n        if (this._objRef) {\n            this._objRef.lightMap = value;\n        }\n    }\n    // @ts-ignore\n    get lightMap() {\n        return this._objRef?.lightMap;\n    }\n    set lightMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.lightMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get lightMapIntensity() {\n        return this._objRef?.lightMapIntensity;\n    }\n    set aoMap(value) {\n        if (this._objRef) {\n            this._objRef.aoMap = value;\n        }\n    }\n    // @ts-ignore\n    get aoMap() {\n        return this._objRef?.aoMap;\n    }\n    set aoMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.aoMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get aoMapIntensity() {\n        return this._objRef?.aoMapIntensity;\n    }\n    set emissive(value) {\n        if (this._objRef) {\n            this._objRef.emissive = applyValue(this._objRef.emissive, value);\n        }\n    }\n    // @ts-ignore\n    get emissive() {\n        return this._objRef?.emissive;\n    }\n    set emissiveIntensity(value) {\n        if (this._objRef) {\n            this._objRef.emissiveIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveIntensity() {\n        return this._objRef?.emissiveIntensity;\n    }\n    set emissiveMap(value) {\n        if (this._objRef) {\n            this._objRef.emissiveMap = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveMap() {\n        return this._objRef?.emissiveMap;\n    }\n    set bumpMap(value) {\n        if (this._objRef) {\n            this._objRef.bumpMap = value;\n        }\n    }\n    // @ts-ignore\n    get bumpMap() {\n        return this._objRef?.bumpMap;\n    }\n    set bumpScale(value) {\n        if (this._objRef) {\n            this._objRef.bumpScale = value;\n        }\n    }\n    // @ts-ignore\n    get bumpScale() {\n        return this._objRef?.bumpScale;\n    }\n    set normalMap(value) {\n        if (this._objRef) {\n            this._objRef.normalMap = value;\n        }\n    }\n    // @ts-ignore\n    get normalMap() {\n        return this._objRef?.normalMap;\n    }\n    set normalMapType(value) {\n        if (this._objRef) {\n            this._objRef.normalMapType = value;\n        }\n    }\n    // @ts-ignore\n    get normalMapType() {\n        return this._objRef?.normalMapType;\n    }\n    set normalScale(value) {\n        if (this._objRef) {\n            this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n        }\n    }\n    // @ts-ignore\n    get normalScale() {\n        return this._objRef?.normalScale;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set roughnessMap(value) {\n        if (this._objRef) {\n            this._objRef.roughnessMap = value;\n        }\n    }\n    // @ts-ignore\n    get roughnessMap() {\n        return this._objRef?.roughnessMap;\n    }\n    set metalnessMap(value) {\n        if (this._objRef) {\n            this._objRef.metalnessMap = value;\n        }\n    }\n    // @ts-ignore\n    get metalnessMap() {\n        return this._objRef?.metalnessMap;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set envMap(value) {\n        if (this._objRef) {\n            this._objRef.envMap = value;\n        }\n    }\n    // @ts-ignore\n    get envMap() {\n        return this._objRef?.envMap;\n    }\n    set envMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.envMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get envMapIntensity() {\n        return this._objRef?.envMapIntensity;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set wireframeLinecap(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinecap = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinecap() {\n        return this._objRef?.wireframeLinecap;\n    }\n    set wireframeLinejoin(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinejoin = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinejoin() {\n        return this._objRef?.wireframeLinejoin;\n    }\n    set flatShading(value) {\n        if (this._objRef) {\n            this._objRef.flatShading = value;\n        }\n    }\n    // @ts-ignore\n    get flatShading() {\n        return this._objRef?.flatShading;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n    set isMeshStandardMaterial(value) {\n        if (this._objRef) {\n            this._objRef.isMeshStandardMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get isMeshStandardMaterial() {\n        return this._objRef?.isMeshStandardMaterial;\n    }\n}\nThMeshStandardMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshStandardMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshStandardMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshStandardMaterial, selector: \"th-meshStandardMaterial\", inputs: { type: \"type\", defines: \"defines\", color: \"color\", roughness: \"roughness\", metalness: \"metalness\", map: \"map\", lightMap: \"lightMap\", lightMapIntensity: \"lightMapIntensity\", aoMap: \"aoMap\", aoMapIntensity: \"aoMapIntensity\", emissive: \"emissive\", emissiveIntensity: \"emissiveIntensity\", emissiveMap: \"emissiveMap\", bumpMap: \"bumpMap\", bumpScale: \"bumpScale\", normalMap: \"normalMap\", normalMapType: \"normalMapType\", normalScale: \"normalScale\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", roughnessMap: \"roughnessMap\", metalnessMap: \"metalnessMap\", alphaMap: \"alphaMap\", envMap: \"envMap\", envMapIntensity: \"envMapIntensity\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", wireframeLinecap: \"wireframeLinecap\", wireframeLinejoin: \"wireframeLinejoin\", flatShading: \"flatShading\", fog: \"fog\", isMeshStandardMaterial: \"isMeshStandardMaterial\" }, providers: [\n        {\n            provide: ThMaterial,\n            useExisting: forwardRef(() => ThMeshStandardMaterial)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshStandardMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshStandardMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThMaterial,\n                            useExisting: forwardRef(() => ThMeshStandardMaterial)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], defines: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], roughness: [{\n                type: Input\n            }], metalness: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], lightMap: [{\n                type: Input\n            }], lightMapIntensity: [{\n                type: Input\n            }], aoMap: [{\n                type: Input\n            }], aoMapIntensity: [{\n                type: Input\n            }], emissive: [{\n                type: Input\n            }], emissiveIntensity: [{\n                type: Input\n            }], emissiveMap: [{\n                type: Input\n            }], bumpMap: [{\n                type: Input\n            }], bumpScale: [{\n                type: Input\n            }], normalMap: [{\n                type: Input\n            }], normalMapType: [{\n                type: Input\n            }], normalScale: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], roughnessMap: [{\n                type: Input\n            }], metalnessMap: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], envMap: [{\n                type: Input\n            }], envMapIntensity: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], wireframeLinecap: [{\n                type: Input\n            }], wireframeLinejoin: [{\n                type: Input\n            }], flatShading: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }], isMeshStandardMaterial: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshPhysicalMaterial extends ThMeshStandardMaterial {\n    getType() {\n        return MeshPhysicalMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set defines(value) {\n        if (this._objRef) {\n            this._objRef.defines = value;\n        }\n    }\n    // @ts-ignore\n    get defines() {\n        return this._objRef?.defines;\n    }\n    set clearcoat(value) {\n        if (this._objRef) {\n            this._objRef.clearcoat = value;\n        }\n    }\n    // @ts-ignore\n    get clearcoat() {\n        return this._objRef?.clearcoat;\n    }\n    set clearcoatMap(value) {\n        if (this._objRef) {\n            this._objRef.clearcoatMap = value;\n        }\n    }\n    // @ts-ignore\n    get clearcoatMap() {\n        return this._objRef?.clearcoatMap;\n    }\n    set clearcoatRoughness(value) {\n        if (this._objRef) {\n            this._objRef.clearcoatRoughness = value;\n        }\n    }\n    // @ts-ignore\n    get clearcoatRoughness() {\n        return this._objRef?.clearcoatRoughness;\n    }\n    set clearcoatRoughnessMap(value) {\n        if (this._objRef) {\n            this._objRef.clearcoatRoughnessMap = value;\n        }\n    }\n    // @ts-ignore\n    get clearcoatRoughnessMap() {\n        return this._objRef?.clearcoatRoughnessMap;\n    }\n    set clearcoatNormalScale(value) {\n        if (this._objRef) {\n            this._objRef.clearcoatNormalScale = applyValue(this._objRef.clearcoatNormalScale, value);\n        }\n    }\n    // @ts-ignore\n    get clearcoatNormalScale() {\n        return this._objRef?.clearcoatNormalScale;\n    }\n    set clearcoatNormalMap(value) {\n        if (this._objRef) {\n            this._objRef.clearcoatNormalMap = value;\n        }\n    }\n    // @ts-ignore\n    get clearcoatNormalMap() {\n        return this._objRef?.clearcoatNormalMap;\n    }\n    set reflectivity(value) {\n        if (this._objRef) {\n            this._objRef.reflectivity = value;\n        }\n    }\n    // @ts-ignore\n    get reflectivity() {\n        return this._objRef?.reflectivity;\n    }\n    set ior(value) {\n        if (this._objRef) {\n            this._objRef.ior = value;\n        }\n    }\n    // @ts-ignore\n    get ior() {\n        return this._objRef?.ior;\n    }\n    set sheen(value) {\n        if (this._objRef) {\n            this._objRef.sheen = value;\n        }\n    }\n    // @ts-ignore\n    get sheen() {\n        return this._objRef?.sheen;\n    }\n    set sheenColor(value) {\n        if (this._objRef) {\n            this._objRef.sheenColor = applyValue(this._objRef.sheenColor, value);\n        }\n    }\n    // @ts-ignore\n    get sheenColor() {\n        return this._objRef?.sheenColor;\n    }\n    set sheenColorMap(value) {\n        if (this._objRef) {\n            this._objRef.sheenColorMap = value;\n        }\n    }\n    // @ts-ignore\n    get sheenColorMap() {\n        return this._objRef?.sheenColorMap;\n    }\n    set sheenRoughness(value) {\n        if (this._objRef) {\n            this._objRef.sheenRoughness = value;\n        }\n    }\n    // @ts-ignore\n    get sheenRoughness() {\n        return this._objRef?.sheenRoughness;\n    }\n    set sheenRoughnessMap(value) {\n        if (this._objRef) {\n            this._objRef.sheenRoughnessMap = value;\n        }\n    }\n    // @ts-ignore\n    get sheenRoughnessMap() {\n        return this._objRef?.sheenRoughnessMap;\n    }\n    set transmission(value) {\n        if (this._objRef) {\n            this._objRef.transmission = value;\n        }\n    }\n    // @ts-ignore\n    get transmission() {\n        return this._objRef?.transmission;\n    }\n    set transmissionMap(value) {\n        if (this._objRef) {\n            this._objRef.transmissionMap = value;\n        }\n    }\n    // @ts-ignore\n    get transmissionMap() {\n        return this._objRef?.transmissionMap;\n    }\n    set thickness(value) {\n        if (this._objRef) {\n            this._objRef.thickness = value;\n        }\n    }\n    // @ts-ignore\n    get thickness() {\n        return this._objRef?.thickness;\n    }\n    set thicknessMap(value) {\n        if (this._objRef) {\n            this._objRef.thicknessMap = value;\n        }\n    }\n    // @ts-ignore\n    get thicknessMap() {\n        return this._objRef?.thicknessMap;\n    }\n    set attenuationDistance(value) {\n        if (this._objRef) {\n            this._objRef.attenuationDistance = value;\n        }\n    }\n    // @ts-ignore\n    get attenuationDistance() {\n        return this._objRef?.attenuationDistance;\n    }\n    set attenuationColor(value) {\n        if (this._objRef) {\n            this._objRef.attenuationColor = applyValue(this._objRef.attenuationColor, value);\n        }\n    }\n    // @ts-ignore\n    get attenuationColor() {\n        return this._objRef?.attenuationColor;\n    }\n    set specularIntensity(value) {\n        if (this._objRef) {\n            this._objRef.specularIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get specularIntensity() {\n        return this._objRef?.specularIntensity;\n    }\n    set specularColor(value) {\n        if (this._objRef) {\n            this._objRef.specularColor = applyValue(this._objRef.specularColor, value);\n        }\n    }\n    // @ts-ignore\n    get specularColor() {\n        return this._objRef?.specularColor;\n    }\n    set specularIntensityMap(value) {\n        if (this._objRef) {\n            this._objRef.specularIntensityMap = value;\n        }\n    }\n    // @ts-ignore\n    get specularIntensityMap() {\n        return this._objRef?.specularIntensityMap;\n    }\n    set specularColorMap(value) {\n        if (this._objRef) {\n            this._objRef.specularColorMap = value;\n        }\n    }\n    // @ts-ignore\n    get specularColorMap() {\n        return this._objRef?.specularColorMap;\n    }\n    set iridescenceMap(value) {\n        if (this._objRef) {\n            this._objRef.iridescenceMap = value;\n        }\n    }\n    // @ts-ignore\n    get iridescenceMap() {\n        return this._objRef?.iridescenceMap;\n    }\n    set iridescenceIOR(value) {\n        if (this._objRef) {\n            this._objRef.iridescenceIOR = value;\n        }\n    }\n    // @ts-ignore\n    get iridescenceIOR() {\n        return this._objRef?.iridescenceIOR;\n    }\n    set iridescence(value) {\n        if (this._objRef) {\n            this._objRef.iridescence = value;\n        }\n    }\n    // @ts-ignore\n    get iridescence() {\n        return this._objRef?.iridescence;\n    }\n    set iridescenceThicknessRange(value) {\n        if (this._objRef) {\n            this._objRef.iridescenceThicknessRange = value;\n        }\n    }\n    // @ts-ignore\n    get iridescenceThicknessRange() {\n        return this._objRef?.iridescenceThicknessRange;\n    }\n    set iridescenceThicknessMap(value) {\n        if (this._objRef) {\n            this._objRef.iridescenceThicknessMap = value;\n        }\n    }\n    // @ts-ignore\n    get iridescenceThicknessMap() {\n        return this._objRef?.iridescenceThicknessMap;\n    }\n}\nThMeshPhysicalMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshPhysicalMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshPhysicalMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshPhysicalMaterial, selector: \"th-meshPhysicalMaterial\", inputs: { type: \"type\", defines: \"defines\", clearcoat: \"clearcoat\", clearcoatMap: \"clearcoatMap\", clearcoatRoughness: \"clearcoatRoughness\", clearcoatRoughnessMap: \"clearcoatRoughnessMap\", clearcoatNormalScale: \"clearcoatNormalScale\", clearcoatNormalMap: \"clearcoatNormalMap\", reflectivity: \"reflectivity\", ior: \"ior\", sheen: \"sheen\", sheenColor: \"sheenColor\", sheenColorMap: \"sheenColorMap\", sheenRoughness: \"sheenRoughness\", sheenRoughnessMap: \"sheenRoughnessMap\", transmission: \"transmission\", transmissionMap: \"transmissionMap\", thickness: \"thickness\", thicknessMap: \"thicknessMap\", attenuationDistance: \"attenuationDistance\", attenuationColor: \"attenuationColor\", specularIntensity: \"specularIntensity\", specularColor: \"specularColor\", specularIntensityMap: \"specularIntensityMap\", specularColorMap: \"specularColorMap\", iridescenceMap: \"iridescenceMap\", iridescenceIOR: \"iridescenceIOR\", iridescence: \"iridescence\", iridescenceThicknessRange: \"iridescenceThicknessRange\", iridescenceThicknessMap: \"iridescenceThicknessMap\" }, providers: [\n        {\n            provide: ThMaterial,\n            useExisting: forwardRef(() => ThMeshPhysicalMaterial)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshPhysicalMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshPhysicalMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThMaterial,\n                            useExisting: forwardRef(() => ThMeshPhysicalMaterial)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], defines: [{\n                type: Input\n            }], clearcoat: [{\n                type: Input\n            }], clearcoatMap: [{\n                type: Input\n            }], clearcoatRoughness: [{\n                type: Input\n            }], clearcoatRoughnessMap: [{\n                type: Input\n            }], clearcoatNormalScale: [{\n                type: Input\n            }], clearcoatNormalMap: [{\n                type: Input\n            }], reflectivity: [{\n                type: Input\n            }], ior: [{\n                type: Input\n            }], sheen: [{\n                type: Input\n            }], sheenColor: [{\n                type: Input\n            }], sheenColorMap: [{\n                type: Input\n            }], sheenRoughness: [{\n                type: Input\n            }], sheenRoughnessMap: [{\n                type: Input\n            }], transmission: [{\n                type: Input\n            }], transmissionMap: [{\n                type: Input\n            }], thickness: [{\n                type: Input\n            }], thicknessMap: [{\n                type: Input\n            }], attenuationDistance: [{\n                type: Input\n            }], attenuationColor: [{\n                type: Input\n            }], specularIntensity: [{\n                type: Input\n            }], specularColor: [{\n                type: Input\n            }], specularIntensityMap: [{\n                type: Input\n            }], specularColorMap: [{\n                type: Input\n            }], iridescenceMap: [{\n                type: Input\n            }], iridescenceIOR: [{\n                type: Input\n            }], iridescence: [{\n                type: Input\n            }], iridescenceThicknessRange: [{\n                type: Input\n            }], iridescenceThicknessMap: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThMeshToonMaterial extends ThMaterial {\n    getType() {\n        return MeshToonMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set defines(value) {\n        if (this._objRef) {\n            this._objRef.defines = value;\n        }\n    }\n    // @ts-ignore\n    get defines() {\n        return this._objRef?.defines;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set gradientMap(value) {\n        if (this._objRef) {\n            this._objRef.gradientMap = value;\n        }\n    }\n    // @ts-ignore\n    get gradientMap() {\n        return this._objRef?.gradientMap;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set lightMap(value) {\n        if (this._objRef) {\n            this._objRef.lightMap = value;\n        }\n    }\n    // @ts-ignore\n    get lightMap() {\n        return this._objRef?.lightMap;\n    }\n    set lightMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.lightMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get lightMapIntensity() {\n        return this._objRef?.lightMapIntensity;\n    }\n    set aoMap(value) {\n        if (this._objRef) {\n            this._objRef.aoMap = value;\n        }\n    }\n    // @ts-ignore\n    get aoMap() {\n        return this._objRef?.aoMap;\n    }\n    set aoMapIntensity(value) {\n        if (this._objRef) {\n            this._objRef.aoMapIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get aoMapIntensity() {\n        return this._objRef?.aoMapIntensity;\n    }\n    set emissive(value) {\n        if (this._objRef) {\n            this._objRef.emissive = applyValue(this._objRef.emissive, value);\n        }\n    }\n    // @ts-ignore\n    get emissive() {\n        return this._objRef?.emissive;\n    }\n    set emissiveIntensity(value) {\n        if (this._objRef) {\n            this._objRef.emissiveIntensity = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveIntensity() {\n        return this._objRef?.emissiveIntensity;\n    }\n    set emissiveMap(value) {\n        if (this._objRef) {\n            this._objRef.emissiveMap = value;\n        }\n    }\n    // @ts-ignore\n    get emissiveMap() {\n        return this._objRef?.emissiveMap;\n    }\n    set bumpMap(value) {\n        if (this._objRef) {\n            this._objRef.bumpMap = value;\n        }\n    }\n    // @ts-ignore\n    get bumpMap() {\n        return this._objRef?.bumpMap;\n    }\n    set bumpScale(value) {\n        if (this._objRef) {\n            this._objRef.bumpScale = value;\n        }\n    }\n    // @ts-ignore\n    get bumpScale() {\n        return this._objRef?.bumpScale;\n    }\n    set normalMap(value) {\n        if (this._objRef) {\n            this._objRef.normalMap = value;\n        }\n    }\n    // @ts-ignore\n    get normalMap() {\n        return this._objRef?.normalMap;\n    }\n    set normalMapType(value) {\n        if (this._objRef) {\n            this._objRef.normalMapType = value;\n        }\n    }\n    // @ts-ignore\n    get normalMapType() {\n        return this._objRef?.normalMapType;\n    }\n    set normalScale(value) {\n        if (this._objRef) {\n            this._objRef.normalScale = applyValue(this._objRef.normalScale, value);\n        }\n    }\n    // @ts-ignore\n    get normalScale() {\n        return this._objRef?.normalScale;\n    }\n    set displacementMap(value) {\n        if (this._objRef) {\n            this._objRef.displacementMap = value;\n        }\n    }\n    // @ts-ignore\n    get displacementMap() {\n        return this._objRef?.displacementMap;\n    }\n    set displacementScale(value) {\n        if (this._objRef) {\n            this._objRef.displacementScale = value;\n        }\n    }\n    // @ts-ignore\n    get displacementScale() {\n        return this._objRef?.displacementScale;\n    }\n    set displacementBias(value) {\n        if (this._objRef) {\n            this._objRef.displacementBias = value;\n        }\n    }\n    // @ts-ignore\n    get displacementBias() {\n        return this._objRef?.displacementBias;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set wireframeLinecap(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinecap = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinecap() {\n        return this._objRef?.wireframeLinecap;\n    }\n    set wireframeLinejoin(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinejoin = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinejoin() {\n        return this._objRef?.wireframeLinejoin;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThMeshToonMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshToonMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThMeshToonMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThMeshToonMaterial, selector: \"th-meshToonMaterial\", inputs: { type: \"type\", defines: \"defines\", color: \"color\", gradientMap: \"gradientMap\", map: \"map\", lightMap: \"lightMap\", lightMapIntensity: \"lightMapIntensity\", aoMap: \"aoMap\", aoMapIntensity: \"aoMapIntensity\", emissive: \"emissive\", emissiveIntensity: \"emissiveIntensity\", emissiveMap: \"emissiveMap\", bumpMap: \"bumpMap\", bumpScale: \"bumpScale\", normalMap: \"normalMap\", normalMapType: \"normalMapType\", normalScale: \"normalScale\", displacementMap: \"displacementMap\", displacementScale: \"displacementScale\", displacementBias: \"displacementBias\", alphaMap: \"alphaMap\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", wireframeLinecap: \"wireframeLinecap\", wireframeLinejoin: \"wireframeLinejoin\", fog: \"fog\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshToonMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThMeshToonMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-meshToonMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThMeshToonMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], defines: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], gradientMap: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], lightMap: [{\n                type: Input\n            }], lightMapIntensity: [{\n                type: Input\n            }], aoMap: [{\n                type: Input\n            }], aoMapIntensity: [{\n                type: Input\n            }], emissive: [{\n                type: Input\n            }], emissiveIntensity: [{\n                type: Input\n            }], emissiveMap: [{\n                type: Input\n            }], bumpMap: [{\n                type: Input\n            }], bumpScale: [{\n                type: Input\n            }], normalMap: [{\n                type: Input\n            }], normalMapType: [{\n                type: Input\n            }], normalScale: [{\n                type: Input\n            }], displacementMap: [{\n                type: Input\n            }], displacementScale: [{\n                type: Input\n            }], displacementBias: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], wireframeLinecap: [{\n                type: Input\n            }], wireframeLinejoin: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThOctahedronGeometry extends ThPolyhedronGeometry {\n    getType() {\n        return OctahedronGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThOctahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOctahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThOctahedronGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThOctahedronGeometry, selector: \"th-octahedronGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThOctahedronGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOctahedronGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-octahedronGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThOctahedronGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThOrthographicCamera extends ThCamera {\n    getType() {\n        return OrthographicCamera;\n    }\n    // @ts-ignore\n    get isOrthographicCamera() {\n        return this._objRef?.isOrthographicCamera;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set zoom(value) {\n        if (this._objRef) {\n            this._objRef.zoom = value;\n        }\n    }\n    // @ts-ignore\n    get zoom() {\n        return this._objRef?.zoom;\n    }\n    set view(value) {\n        if (this._objRef) {\n            this._objRef.view = value;\n        }\n    }\n    // @ts-ignore\n    get view() {\n        return this._objRef?.view;\n    }\n    set left(value) {\n        if (this._objRef) {\n            this._objRef.left = value;\n        }\n    }\n    // @ts-ignore\n    get left() {\n        return this._objRef?.left;\n    }\n    set right(value) {\n        if (this._objRef) {\n            this._objRef.right = value;\n        }\n    }\n    // @ts-ignore\n    get right() {\n        return this._objRef?.right;\n    }\n    set top(value) {\n        if (this._objRef) {\n            this._objRef.top = value;\n        }\n    }\n    // @ts-ignore\n    get top() {\n        return this._objRef?.top;\n    }\n    set bottom(value) {\n        if (this._objRef) {\n            this._objRef.bottom = value;\n        }\n    }\n    // @ts-ignore\n    get bottom() {\n        return this._objRef?.bottom;\n    }\n    set near(value) {\n        if (this._objRef) {\n            this._objRef.near = value;\n        }\n    }\n    // @ts-ignore\n    get near() {\n        return this._objRef?.near;\n    }\n    set far(value) {\n        if (this._objRef) {\n            this._objRef.far = value;\n        }\n    }\n    // @ts-ignore\n    get far() {\n        return this._objRef?.far;\n    }\n}\nThOrthographicCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOrthographicCamera, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThOrthographicCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThOrthographicCamera, selector: \"th-orthographicCamera\", inputs: { zoom: \"zoom\", view: \"view\", left: \"left\", right: \"right\", top: \"top\", bottom: \"bottom\", near: \"near\", far: \"far\" }, providers: [\n        {\n            provide: ThObject3D,\n            useExisting: forwardRef(() => ThOrthographicCamera)\n        },\n        { provide: ThCamera, useExisting: forwardRef(() => ThOrthographicCamera) }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOrthographicCamera, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-orthographicCamera',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThObject3D,\n                            useExisting: forwardRef(() => ThOrthographicCamera)\n                        },\n                        { provide: ThCamera, useExisting: forwardRef(() => ThOrthographicCamera) }\n                    ]\n                }]\n        }], propDecorators: { zoom: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], left: [{\n                type: Input\n            }], right: [{\n                type: Input\n            }], top: [{\n                type: Input\n            }], bottom: [{\n                type: Input\n            }], near: [{\n                type: Input\n            }], far: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThOutlinePass extends ThPass {\n    getType() {\n        return OutlinePass;\n    }\n    set renderScene(value) {\n        if (this._objRef) {\n            this._objRef.renderScene = value;\n        }\n    }\n    // @ts-ignore\n    get renderScene() {\n        return this._objRef?.renderScene;\n    }\n    set renderCamera(value) {\n        if (this._objRef) {\n            this._objRef.renderCamera = value;\n        }\n    }\n    // @ts-ignore\n    get renderCamera() {\n        return this._objRef?.renderCamera;\n    }\n    set selectedObjects(value) {\n        if (this._objRef) {\n            this._objRef.selectedObjects = value;\n        }\n    }\n    // @ts-ignore\n    get selectedObjects() {\n        return this._objRef?.selectedObjects;\n    }\n    set visibleEdgeColor(value) {\n        if (this._objRef) {\n            this._objRef.visibleEdgeColor = applyValue(this._objRef.visibleEdgeColor, value);\n        }\n    }\n    // @ts-ignore\n    get visibleEdgeColor() {\n        return this._objRef?.visibleEdgeColor;\n    }\n    set hiddenEdgeColor(value) {\n        if (this._objRef) {\n            this._objRef.hiddenEdgeColor = applyValue(this._objRef.hiddenEdgeColor, value);\n        }\n    }\n    // @ts-ignore\n    get hiddenEdgeColor() {\n        return this._objRef?.hiddenEdgeColor;\n    }\n    set edgeGlow(value) {\n        if (this._objRef) {\n            this._objRef.edgeGlow = value;\n        }\n    }\n    // @ts-ignore\n    get edgeGlow() {\n        return this._objRef?.edgeGlow;\n    }\n    set usePatternTexture(value) {\n        if (this._objRef) {\n            this._objRef.usePatternTexture = value;\n        }\n    }\n    // @ts-ignore\n    get usePatternTexture() {\n        return this._objRef?.usePatternTexture;\n    }\n    set edgeThickness(value) {\n        if (this._objRef) {\n            this._objRef.edgeThickness = value;\n        }\n    }\n    // @ts-ignore\n    get edgeThickness() {\n        return this._objRef?.edgeThickness;\n    }\n    set edgeStrength(value) {\n        if (this._objRef) {\n            this._objRef.edgeStrength = value;\n        }\n    }\n    // @ts-ignore\n    get edgeStrength() {\n        return this._objRef?.edgeStrength;\n    }\n    set downSampleRatio(value) {\n        if (this._objRef) {\n            this._objRef.downSampleRatio = value;\n        }\n    }\n    // @ts-ignore\n    get downSampleRatio() {\n        return this._objRef?.downSampleRatio;\n    }\n    set pulsePeriod(value) {\n        if (this._objRef) {\n            this._objRef.pulsePeriod = value;\n        }\n    }\n    // @ts-ignore\n    get pulsePeriod() {\n        return this._objRef?.pulsePeriod;\n    }\n    set resolution(value) {\n        if (this._objRef) {\n            this._objRef.resolution = applyValue(this._objRef.resolution, value);\n        }\n    }\n    // @ts-ignore\n    get resolution() {\n        return this._objRef?.resolution;\n    }\n    set patternTexture(value) {\n        if (this._objRef) {\n            this._objRef.patternTexture = value;\n        }\n    }\n    // @ts-ignore\n    get patternTexture() {\n        return this._objRef?.patternTexture;\n    }\n    set maskBufferMaterial(value) {\n        if (this._objRef) {\n            this._objRef.maskBufferMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get maskBufferMaterial() {\n        return this._objRef?.maskBufferMaterial;\n    }\n    set renderTargetMaskBuffer(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetMaskBuffer = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetMaskBuffer() {\n        return this._objRef?.renderTargetMaskBuffer;\n    }\n    set depthMaterial(value) {\n        if (this._objRef) {\n            this._objRef.depthMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get depthMaterial() {\n        return this._objRef?.depthMaterial;\n    }\n    set prepareMaskMaterial(value) {\n        if (this._objRef) {\n            this._objRef.prepareMaskMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get prepareMaskMaterial() {\n        return this._objRef?.prepareMaskMaterial;\n    }\n    set renderTargetDepthBuffer(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetDepthBuffer = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetDepthBuffer() {\n        return this._objRef?.renderTargetDepthBuffer;\n    }\n    set renderTargetMaskDownSampleBuffer(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetMaskDownSampleBuffer = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetMaskDownSampleBuffer() {\n        return this._objRef?.renderTargetMaskDownSampleBuffer;\n    }\n    set renderTargetBlurBuffer1(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetBlurBuffer1 = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetBlurBuffer1() {\n        return this._objRef?.renderTargetBlurBuffer1;\n    }\n    set renderTargetBlurBuffer2(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetBlurBuffer2 = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetBlurBuffer2() {\n        return this._objRef?.renderTargetBlurBuffer2;\n    }\n    set edgeDetectionMaterial(value) {\n        if (this._objRef) {\n            this._objRef.edgeDetectionMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get edgeDetectionMaterial() {\n        return this._objRef?.edgeDetectionMaterial;\n    }\n    set renderTargetEdgeBuffer1(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetEdgeBuffer1 = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetEdgeBuffer1() {\n        return this._objRef?.renderTargetEdgeBuffer1;\n    }\n    set renderTargetEdgeBuffer2(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetEdgeBuffer2 = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetEdgeBuffer2() {\n        return this._objRef?.renderTargetEdgeBuffer2;\n    }\n    set separableBlurMaterial1(value) {\n        if (this._objRef) {\n            this._objRef.separableBlurMaterial1 = value;\n        }\n    }\n    // @ts-ignore\n    get separableBlurMaterial1() {\n        return this._objRef?.separableBlurMaterial1;\n    }\n    set separableBlurMaterial2(value) {\n        if (this._objRef) {\n            this._objRef.separableBlurMaterial2 = value;\n        }\n    }\n    // @ts-ignore\n    get separableBlurMaterial2() {\n        return this._objRef?.separableBlurMaterial2;\n    }\n    set overlayMaterial(value) {\n        if (this._objRef) {\n            this._objRef.overlayMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get overlayMaterial() {\n        return this._objRef?.overlayMaterial;\n    }\n    set copyUniforms(value) {\n        if (this._objRef) {\n            this._objRef.copyUniforms = value;\n        }\n    }\n    // @ts-ignore\n    get copyUniforms() {\n        return this._objRef?.copyUniforms;\n    }\n    set materialCopy(value) {\n        if (this._objRef) {\n            this._objRef.materialCopy = value;\n        }\n    }\n    // @ts-ignore\n    get materialCopy() {\n        return this._objRef?.materialCopy;\n    }\n    set oldClearColor(value) {\n        if (this._objRef) {\n            this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n        }\n    }\n    // @ts-ignore\n    get oldClearColor() {\n        return this._objRef?.oldClearColor;\n    }\n    set oldClearAlpha(value) {\n        if (this._objRef) {\n            this._objRef.oldClearAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get oldClearAlpha() {\n        return this._objRef?.oldClearAlpha;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n    set tempPulseColor1(value) {\n        if (this._objRef) {\n            this._objRef.tempPulseColor1 = applyValue(this._objRef.tempPulseColor1, value);\n        }\n    }\n    // @ts-ignore\n    get tempPulseColor1() {\n        return this._objRef?.tempPulseColor1;\n    }\n    set tempPulseColor2(value) {\n        if (this._objRef) {\n            this._objRef.tempPulseColor2 = applyValue(this._objRef.tempPulseColor2, value);\n        }\n    }\n    // @ts-ignore\n    get tempPulseColor2() {\n        return this._objRef?.tempPulseColor2;\n    }\n    set textureMatrix(value) {\n        if (this._objRef) {\n            this._objRef.textureMatrix = applyValue(this._objRef.textureMatrix, value);\n        }\n    }\n    // @ts-ignore\n    get textureMatrix() {\n        return this._objRef?.textureMatrix;\n    }\n}\nThOutlinePass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOutlinePass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThOutlinePass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThOutlinePass, selector: \"th-outlinePass\", inputs: { renderScene: \"renderScene\", renderCamera: \"renderCamera\", selectedObjects: \"selectedObjects\", visibleEdgeColor: \"visibleEdgeColor\", hiddenEdgeColor: \"hiddenEdgeColor\", edgeGlow: \"edgeGlow\", usePatternTexture: \"usePatternTexture\", edgeThickness: \"edgeThickness\", edgeStrength: \"edgeStrength\", downSampleRatio: \"downSampleRatio\", pulsePeriod: \"pulsePeriod\", resolution: \"resolution\", patternTexture: \"patternTexture\", maskBufferMaterial: \"maskBufferMaterial\", renderTargetMaskBuffer: \"renderTargetMaskBuffer\", depthMaterial: \"depthMaterial\", prepareMaskMaterial: \"prepareMaskMaterial\", renderTargetDepthBuffer: \"renderTargetDepthBuffer\", renderTargetMaskDownSampleBuffer: \"renderTargetMaskDownSampleBuffer\", renderTargetBlurBuffer1: \"renderTargetBlurBuffer1\", renderTargetBlurBuffer2: \"renderTargetBlurBuffer2\", edgeDetectionMaterial: \"edgeDetectionMaterial\", renderTargetEdgeBuffer1: \"renderTargetEdgeBuffer1\", renderTargetEdgeBuffer2: \"renderTargetEdgeBuffer2\", separableBlurMaterial1: \"separableBlurMaterial1\", separableBlurMaterial2: \"separableBlurMaterial2\", overlayMaterial: \"overlayMaterial\", copyUniforms: \"copyUniforms\", materialCopy: \"materialCopy\", oldClearColor: \"oldClearColor\", oldClearAlpha: \"oldClearAlpha\", fsQuad: \"fsQuad\", tempPulseColor1: \"tempPulseColor1\", tempPulseColor2: \"tempPulseColor2\", textureMatrix: \"textureMatrix\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThOutlinePass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThOutlinePass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-outlinePass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThOutlinePass) }]\n                }]\n        }], propDecorators: { renderScene: [{\n                type: Input\n            }], renderCamera: [{\n                type: Input\n            }], selectedObjects: [{\n                type: Input\n            }], visibleEdgeColor: [{\n                type: Input\n            }], hiddenEdgeColor: [{\n                type: Input\n            }], edgeGlow: [{\n                type: Input\n            }], usePatternTexture: [{\n                type: Input\n            }], edgeThickness: [{\n                type: Input\n            }], edgeStrength: [{\n                type: Input\n            }], downSampleRatio: [{\n                type: Input\n            }], pulsePeriod: [{\n                type: Input\n            }], resolution: [{\n                type: Input\n            }], patternTexture: [{\n                type: Input\n            }], maskBufferMaterial: [{\n                type: Input\n            }], renderTargetMaskBuffer: [{\n                type: Input\n            }], depthMaterial: [{\n                type: Input\n            }], prepareMaskMaterial: [{\n                type: Input\n            }], renderTargetDepthBuffer: [{\n                type: Input\n            }], renderTargetMaskDownSampleBuffer: [{\n                type: Input\n            }], renderTargetBlurBuffer1: [{\n                type: Input\n            }], renderTargetBlurBuffer2: [{\n                type: Input\n            }], edgeDetectionMaterial: [{\n                type: Input\n            }], renderTargetEdgeBuffer1: [{\n                type: Input\n            }], renderTargetEdgeBuffer2: [{\n                type: Input\n            }], separableBlurMaterial1: [{\n                type: Input\n            }], separableBlurMaterial2: [{\n                type: Input\n            }], overlayMaterial: [{\n                type: Input\n            }], copyUniforms: [{\n                type: Input\n            }], materialCopy: [{\n                type: Input\n            }], oldClearColor: [{\n                type: Input\n            }], oldClearAlpha: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }], tempPulseColor1: [{\n                type: Input\n            }], tempPulseColor2: [{\n                type: Input\n            }], textureMatrix: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThParametricGeometry extends ThBufferGeometry {\n    getType() {\n        return ParametricGeometry;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set parameters(value) {\n        if (this._objRef) {\n            this._objRef.parameters = value;\n        }\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThParametricGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThParametricGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThParametricGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThParametricGeometry, selector: \"th-parametricGeometry\", inputs: { type: \"type\", parameters: \"parameters\" }, providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThParametricGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThParametricGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-parametricGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThParametricGeometry)\n                        }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], parameters: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPlaneGeometry extends ThBufferGeometry {\n    getType() {\n        return PlaneGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThPlaneGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPlaneGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPlaneGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPlaneGeometry, selector: \"th-planeGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThPlaneGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPlaneGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-planeGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThPlaneGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPlaneHelper extends ThLineSegments {\n    getType() {\n        return PlaneHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set plane(value) {\n        if (this._objRef) {\n            this._objRef.plane = applyValue(this._objRef.plane, value);\n        }\n    }\n    // @ts-ignore\n    get plane() {\n        return this._objRef?.plane;\n    }\n    set size(value) {\n        if (this._objRef) {\n            this._objRef.size = value;\n        }\n    }\n    // @ts-ignore\n    get size() {\n        return this._objRef?.size;\n    }\n}\nThPlaneHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPlaneHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPlaneHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPlaneHelper, selector: \"th-planeHelper\", inputs: { plane: \"plane\", size: \"size\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPlaneHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPlaneHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-planeHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPlaneHelper) }]\n                }]\n        }], propDecorators: { plane: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointerLockControls extends ThControlBase {\n    getType() {\n        return PointerLockControls;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set domElement(value) {\n        if (this._objRef) {\n            this._objRef.domElement = value;\n        }\n    }\n    // @ts-ignore\n    get domElement() {\n        return this._objRef?.domElement;\n    }\n    set isLocked(value) {\n        if (this._objRef) {\n            this._objRef.isLocked = value;\n        }\n    }\n    // @ts-ignore\n    get isLocked() {\n        return this._objRef?.isLocked;\n    }\n    set minPolarAngle(value) {\n        if (this._objRef) {\n            this._objRef.minPolarAngle = value;\n        }\n    }\n    // @ts-ignore\n    get minPolarAngle() {\n        return this._objRef?.minPolarAngle;\n    }\n    set maxPolarAngle(value) {\n        if (this._objRef) {\n            this._objRef.maxPolarAngle = value;\n        }\n    }\n    // @ts-ignore\n    get maxPolarAngle() {\n        return this._objRef?.maxPolarAngle;\n    }\n    set pointerSpeed(value) {\n        if (this._objRef) {\n            this._objRef.pointerSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get pointerSpeed() {\n        return this._objRef?.pointerSpeed;\n    }\n}\nThPointerLockControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointerLockControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPointerLockControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPointerLockControls, selector: \"th-pointerLockControls\", inputs: { camera: \"camera\", domElement: \"domElement\", isLocked: \"isLocked\", minPolarAngle: \"minPolarAngle\", maxPolarAngle: \"maxPolarAngle\", pointerSpeed: \"pointerSpeed\" }, providers: [\n        {\n            provide: ThControlBase,\n            useExisting: forwardRef(() => ThPointerLockControls)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointerLockControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-pointerLockControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThControlBase,\n                            useExisting: forwardRef(() => ThPointerLockControls)\n                        }\n                    ]\n                }]\n        }], propDecorators: { camera: [{\n                type: Input\n            }], domElement: [{\n                type: Input\n            }], isLocked: [{\n                type: Input\n            }], minPolarAngle: [{\n                type: Input\n            }], maxPolarAngle: [{\n                type: Input\n            }], pointerSpeed: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointLight extends ThLight {\n    getType() {\n        return PointLight;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set intensity(value) {\n        if (this._objRef) {\n            this._objRef.intensity = value;\n        }\n    }\n    // @ts-ignore\n    get intensity() {\n        return this._objRef?.intensity;\n    }\n    set distance(value) {\n        if (this._objRef) {\n            this._objRef.distance = value;\n        }\n    }\n    // @ts-ignore\n    get distance() {\n        return this._objRef?.distance;\n    }\n    set castShadow(value) {\n        if (this._objRef) {\n            this._objRef.castShadow = value;\n        }\n    }\n    // @ts-ignore\n    get castShadow() {\n        return this._objRef?.castShadow;\n    }\n    set decay(value) {\n        if (this._objRef) {\n            this._objRef.decay = value;\n        }\n    }\n    // @ts-ignore\n    get decay() {\n        return this._objRef?.decay;\n    }\n    set shadow(value) {\n        if (this._objRef) {\n            this._objRef.shadow = value;\n        }\n    }\n    // @ts-ignore\n    get shadow() {\n        return this._objRef?.shadow;\n    }\n    set power(value) {\n        if (this._objRef) {\n            this._objRef.power = value;\n        }\n    }\n    // @ts-ignore\n    get power() {\n        return this._objRef?.power;\n    }\n}\nThPointLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointLight, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPointLight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPointLight, selector: \"th-pointLight\", inputs: { type: \"type\", intensity: \"intensity\", distance: \"distance\", castShadow: \"castShadow\", decay: \"decay\", shadow: \"shadow\", power: \"power\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPointLight) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointLight, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-pointLight',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPointLight) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], intensity: [{\n                type: Input\n            }], distance: [{\n                type: Input\n            }], castShadow: [{\n                type: Input\n            }], decay: [{\n                type: Input\n            }], shadow: [{\n                type: Input\n            }], power: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointLightHelper extends ThObject3D {\n    getType() {\n        return PointLightHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set light(value) {\n        if (this._objRef) {\n            this._objRef.light = value;\n        }\n    }\n    // @ts-ignore\n    get light() {\n        return this._objRef?.light;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = value;\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n}\nThPointLightHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointLightHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPointLightHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPointLightHelper, selector: \"th-pointLightHelper\", inputs: { light: \"light\", matrix: \"matrix\", color: \"color\", matrixAutoUpdate: \"matrixAutoUpdate\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPointLightHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointLightHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-pointLightHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPointLightHelper) }]\n                }]\n        }], propDecorators: { light: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPoints extends ThObject3D {\n    getType() {\n        return Points;\n    }\n    // @ts-ignore\n    get isPoints() {\n        return this._objRef?.isPoints;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set morphTargetInfluences(value) {\n        if (this._objRef) {\n            this._objRef.morphTargetInfluences = value;\n        }\n    }\n    // @ts-ignore\n    get morphTargetInfluences() {\n        return this._objRef?.morphTargetInfluences;\n    }\n    set morphTargetDictionary(value) {\n        if (this._objRef) {\n            this._objRef.morphTargetDictionary = value;\n        }\n    }\n    // @ts-ignore\n    get morphTargetDictionary() {\n        return this._objRef?.morphTargetDictionary;\n    }\n    set geometry(value) {\n        if (this._objRef) {\n            this._objRef.geometry = value;\n        }\n    }\n    // @ts-ignore\n    get geometry() {\n        return this._objRef?.geometry;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n}\nThPoints.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPoints, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPoints.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPoints, selector: \"th-points\", inputs: { morphTargetInfluences: \"morphTargetInfluences\", morphTargetDictionary: \"morphTargetDictionary\", geometry: \"geometry\", material: \"material\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPoints) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPoints, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-points',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPoints) }]\n                }]\n        }], propDecorators: { morphTargetInfluences: [{\n                type: Input\n            }], morphTargetDictionary: [{\n                type: Input\n            }], geometry: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPointsMaterial extends ThMaterial {\n    getType() {\n        return PointsMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set size(value) {\n        if (this._objRef) {\n            this._objRef.size = value;\n        }\n    }\n    // @ts-ignore\n    get size() {\n        return this._objRef?.size;\n    }\n    set sizeAttenuation(value) {\n        if (this._objRef) {\n            this._objRef.sizeAttenuation = value;\n        }\n    }\n    // @ts-ignore\n    get sizeAttenuation() {\n        return this._objRef?.sizeAttenuation;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThPointsMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointsMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPointsMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPointsMaterial, selector: \"th-pointsMaterial\", inputs: { type: \"type\", color: \"color\", map: \"map\", alphaMap: \"alphaMap\", size: \"size\", sizeAttenuation: \"sizeAttenuation\", fog: \"fog\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThPointsMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPointsMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-pointsMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThPointsMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], sizeAttenuation: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPolarGridHelper extends ThLineSegments {\n    getType() {\n        return PolarGridHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThPolarGridHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPolarGridHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPolarGridHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPolarGridHelper, selector: \"th-polarGridHelper\", providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPolarGridHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPolarGridHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-polarGridHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPolarGridHelper) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThPositionalAudio extends ThAudio {\n    getType() {\n        return PositionalAudio;\n    }\n    set panner(value) {\n        if (this._objRef) {\n            this._objRef.panner = value;\n        }\n    }\n    // @ts-ignore\n    get panner() {\n        return this._objRef?.panner;\n    }\n}\nThPositionalAudio.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPositionalAudio, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThPositionalAudio.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPositionalAudio, selector: \"th-positionalAudio\", inputs: { panner: \"panner\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPositionalAudio) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPositionalAudio, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-positionalAudio',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPositionalAudio) }]\n                }]\n        }], propDecorators: { panner: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThShaderMaterial extends ThMaterial {\n    getType() {\n        return ShaderMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set defines(value) {\n        if (this._objRef) {\n            this._objRef.defines = value;\n        }\n    }\n    // @ts-ignore\n    get defines() {\n        return this._objRef?.defines;\n    }\n    set uniforms(value) {\n        if (this._objRef) {\n            this._objRef.uniforms = value;\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        return this._objRef?.uniforms;\n    }\n    set vertexShader(value) {\n        if (this._objRef) {\n            this._objRef.vertexShader = value;\n        }\n    }\n    // @ts-ignore\n    get vertexShader() {\n        return this._objRef?.vertexShader;\n    }\n    set fragmentShader(value) {\n        if (this._objRef) {\n            this._objRef.fragmentShader = value;\n        }\n    }\n    // @ts-ignore\n    get fragmentShader() {\n        return this._objRef?.fragmentShader;\n    }\n    set linewidth(value) {\n        if (this._objRef) {\n            this._objRef.linewidth = value;\n        }\n    }\n    // @ts-ignore\n    get linewidth() {\n        return this._objRef?.linewidth;\n    }\n    set wireframe(value) {\n        if (this._objRef) {\n            this._objRef.wireframe = value;\n        }\n    }\n    // @ts-ignore\n    get wireframe() {\n        return this._objRef?.wireframe;\n    }\n    set wireframeLinewidth(value) {\n        if (this._objRef) {\n            this._objRef.wireframeLinewidth = value;\n        }\n    }\n    // @ts-ignore\n    get wireframeLinewidth() {\n        return this._objRef?.wireframeLinewidth;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n    set lights(value) {\n        if (this._objRef) {\n            this._objRef.lights = value;\n        }\n    }\n    // @ts-ignore\n    get lights() {\n        return this._objRef?.lights;\n    }\n    set clipping(value) {\n        if (this._objRef) {\n            this._objRef.clipping = value;\n        }\n    }\n    // @ts-ignore\n    get clipping() {\n        return this._objRef?.clipping;\n    }\n    set derivatives(value) {\n        if (this._objRef) {\n            this._objRef.derivatives = value;\n        }\n    }\n    // @ts-ignore\n    get derivatives() {\n        return this._objRef?.derivatives;\n    }\n    set extensions(value) {\n        if (this._objRef) {\n            this._objRef.extensions = value;\n        }\n    }\n    // @ts-ignore\n    get extensions() {\n        return this._objRef?.extensions;\n    }\n    set defaultAttributeValues(value) {\n        if (this._objRef) {\n            this._objRef.defaultAttributeValues = value;\n        }\n    }\n    // @ts-ignore\n    get defaultAttributeValues() {\n        return this._objRef?.defaultAttributeValues;\n    }\n    set index0AttributeName(value) {\n        if (this._objRef) {\n            this._objRef.index0AttributeName = value;\n        }\n    }\n    // @ts-ignore\n    get index0AttributeName() {\n        return this._objRef?.index0AttributeName;\n    }\n    set uniformsNeedUpdate(value) {\n        if (this._objRef) {\n            this._objRef.uniformsNeedUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get uniformsNeedUpdate() {\n        return this._objRef?.uniformsNeedUpdate;\n    }\n    set glslVersion(value) {\n        if (this._objRef) {\n            this._objRef.glslVersion = value;\n        }\n    }\n    // @ts-ignore\n    get glslVersion() {\n        return this._objRef?.glslVersion;\n    }\n    set isShaderMaterial(value) {\n        if (this._objRef) {\n            this._objRef.isShaderMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get isShaderMaterial() {\n        return this._objRef?.isShaderMaterial;\n    }\n}\nThShaderMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShaderMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThShaderMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThShaderMaterial, selector: \"th-shaderMaterial\", inputs: { type: \"type\", defines: \"defines\", uniforms: \"uniforms\", vertexShader: \"vertexShader\", fragmentShader: \"fragmentShader\", linewidth: \"linewidth\", wireframe: \"wireframe\", wireframeLinewidth: \"wireframeLinewidth\", fog: \"fog\", lights: \"lights\", clipping: \"clipping\", derivatives: \"derivatives\", extensions: \"extensions\", defaultAttributeValues: \"defaultAttributeValues\", index0AttributeName: \"index0AttributeName\", uniformsNeedUpdate: \"uniformsNeedUpdate\", glslVersion: \"glslVersion\", isShaderMaterial: \"isShaderMaterial\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThShaderMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShaderMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-shaderMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThShaderMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], defines: [{\n                type: Input\n            }], uniforms: [{\n                type: Input\n            }], vertexShader: [{\n                type: Input\n            }], fragmentShader: [{\n                type: Input\n            }], linewidth: [{\n                type: Input\n            }], wireframe: [{\n                type: Input\n            }], wireframeLinewidth: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }], lights: [{\n                type: Input\n            }], clipping: [{\n                type: Input\n            }], derivatives: [{\n                type: Input\n            }], extensions: [{\n                type: Input\n            }], defaultAttributeValues: [{\n                type: Input\n            }], index0AttributeName: [{\n                type: Input\n            }], uniformsNeedUpdate: [{\n                type: Input\n            }], glslVersion: [{\n                type: Input\n            }], isShaderMaterial: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRawShaderMaterial extends ThShaderMaterial {\n    getType() {\n        return RawShaderMaterial;\n    }\n}\nThRawShaderMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRawShaderMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThRawShaderMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRawShaderMaterial, selector: \"th-rawShaderMaterial\", providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThRawShaderMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRawShaderMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-rawShaderMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThRawShaderMaterial) }]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRectAreaLight extends ThLight {\n    getType() {\n        return RectAreaLight;\n    }\n    // @ts-ignore\n    get isRectAreaLight() {\n        return this._objRef?.isRectAreaLight;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set width(value) {\n        if (this._objRef) {\n            this._objRef.width = value;\n        }\n    }\n    // @ts-ignore\n    get width() {\n        return this._objRef?.width;\n    }\n    set height(value) {\n        if (this._objRef) {\n            this._objRef.height = value;\n        }\n    }\n    // @ts-ignore\n    get height() {\n        return this._objRef?.height;\n    }\n    set intensity(value) {\n        if (this._objRef) {\n            this._objRef.intensity = value;\n        }\n    }\n    // @ts-ignore\n    get intensity() {\n        return this._objRef?.intensity;\n    }\n    set power(value) {\n        if (this._objRef) {\n            this._objRef.power = value;\n        }\n    }\n    // @ts-ignore\n    get power() {\n        return this._objRef?.power;\n    }\n}\nThRectAreaLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRectAreaLight, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThRectAreaLight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRectAreaLight, selector: \"th-rectAreaLight\", inputs: { width: \"width\", height: \"height\", intensity: \"intensity\", power: \"power\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThRectAreaLight) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRectAreaLight, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-rectAreaLight',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThRectAreaLight) }]\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], intensity: [{\n                type: Input\n            }], power: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRingGeometry extends ThBufferGeometry {\n    getType() {\n        return RingGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThRingGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRingGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThRingGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRingGeometry, selector: \"th-ringGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThRingGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRingGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-ringGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThRingGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThRoundedBoxGeometry extends ThBoxGeometry {\n    getType() {\n        return RoundedBoxGeometry;\n    }\n}\nThRoundedBoxGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRoundedBoxGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThRoundedBoxGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRoundedBoxGeometry, selector: \"th-roundedBoxGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThRoundedBoxGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRoundedBoxGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-roundedBoxGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThRoundedBoxGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSAOPass extends ThPass {\n    getType() {\n        return SAOPass;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set supportsDepthTextureExtension(value) {\n        if (this._objRef) {\n            this._objRef.supportsDepthTextureExtension = value;\n        }\n    }\n    // @ts-ignore\n    get supportsDepthTextureExtension() {\n        return this._objRef?.supportsDepthTextureExtension;\n    }\n    set supportsNormalTexture(value) {\n        if (this._objRef) {\n            this._objRef.supportsNormalTexture = value;\n        }\n    }\n    // @ts-ignore\n    get supportsNormalTexture() {\n        return this._objRef?.supportsNormalTexture;\n    }\n    set originalClearColor(value) {\n        if (this._objRef) {\n            this._objRef.originalClearColor = applyValue(this._objRef.originalClearColor, value);\n        }\n    }\n    // @ts-ignore\n    get originalClearColor() {\n        return this._objRef?.originalClearColor;\n    }\n    set oldClearColor(value) {\n        if (this._objRef) {\n            this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n        }\n    }\n    // @ts-ignore\n    get oldClearColor() {\n        return this._objRef?.oldClearColor;\n    }\n    set oldClearAlpha(value) {\n        if (this._objRef) {\n            this._objRef.oldClearAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get oldClearAlpha() {\n        return this._objRef?.oldClearAlpha;\n    }\n    set resolution(value) {\n        if (this._objRef) {\n            this._objRef.resolution = applyValue(this._objRef.resolution, value);\n        }\n    }\n    // @ts-ignore\n    get resolution() {\n        return this._objRef?.resolution;\n    }\n    set saoRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.saoRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get saoRenderTarget() {\n        return this._objRef?.saoRenderTarget;\n    }\n    set blurIntermediateRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.blurIntermediateRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get blurIntermediateRenderTarget() {\n        return this._objRef?.blurIntermediateRenderTarget;\n    }\n    set beautyRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.beautyRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get beautyRenderTarget() {\n        return this._objRef?.beautyRenderTarget;\n    }\n    set normalRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.normalRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get normalRenderTarget() {\n        return this._objRef?.normalRenderTarget;\n    }\n    set depthRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.depthRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get depthRenderTarget() {\n        return this._objRef?.depthRenderTarget;\n    }\n    set depthMaterial(value) {\n        if (this._objRef) {\n            this._objRef.depthMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get depthMaterial() {\n        return this._objRef?.depthMaterial;\n    }\n    set normalMaterial(value) {\n        if (this._objRef) {\n            this._objRef.normalMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get normalMaterial() {\n        return this._objRef?.normalMaterial;\n    }\n    set saoMaterial(value) {\n        if (this._objRef) {\n            this._objRef.saoMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get saoMaterial() {\n        return this._objRef?.saoMaterial;\n    }\n    set vBlurMaterial(value) {\n        if (this._objRef) {\n            this._objRef.vBlurMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get vBlurMaterial() {\n        return this._objRef?.vBlurMaterial;\n    }\n    set hBlurMaterial(value) {\n        if (this._objRef) {\n            this._objRef.hBlurMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get hBlurMaterial() {\n        return this._objRef?.hBlurMaterial;\n    }\n    set materialCopy(value) {\n        if (this._objRef) {\n            this._objRef.materialCopy = value;\n        }\n    }\n    // @ts-ignore\n    get materialCopy() {\n        return this._objRef?.materialCopy;\n    }\n    set depthCopy(value) {\n        if (this._objRef) {\n            this._objRef.depthCopy = value;\n        }\n    }\n    // @ts-ignore\n    get depthCopy() {\n        return this._objRef?.depthCopy;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n    set params(value) {\n        if (this._objRef) {\n            this._objRef.params = value;\n        }\n    }\n    // @ts-ignore\n    get params() {\n        return this._objRef?.params;\n    }\n}\nThSAOPass.OUTPUT = SAOPass.OUTPUT;\nThSAOPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSAOPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSAOPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSAOPass, selector: \"th-sAOPass\", inputs: { scene: \"scene\", camera: \"camera\", supportsDepthTextureExtension: \"supportsDepthTextureExtension\", supportsNormalTexture: \"supportsNormalTexture\", originalClearColor: \"originalClearColor\", oldClearColor: \"oldClearColor\", oldClearAlpha: \"oldClearAlpha\", resolution: \"resolution\", saoRenderTarget: \"saoRenderTarget\", blurIntermediateRenderTarget: \"blurIntermediateRenderTarget\", beautyRenderTarget: \"beautyRenderTarget\", normalRenderTarget: \"normalRenderTarget\", depthRenderTarget: \"depthRenderTarget\", depthMaterial: \"depthMaterial\", normalMaterial: \"normalMaterial\", saoMaterial: \"saoMaterial\", vBlurMaterial: \"vBlurMaterial\", hBlurMaterial: \"hBlurMaterial\", materialCopy: \"materialCopy\", depthCopy: \"depthCopy\", fsQuad: \"fsQuad\", params: \"params\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSAOPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSAOPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-sAOPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSAOPass) }]\n                }]\n        }], propDecorators: { scene: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], supportsDepthTextureExtension: [{\n                type: Input\n            }], supportsNormalTexture: [{\n                type: Input\n            }], originalClearColor: [{\n                type: Input\n            }], oldClearColor: [{\n                type: Input\n            }], oldClearAlpha: [{\n                type: Input\n            }], resolution: [{\n                type: Input\n            }], saoRenderTarget: [{\n                type: Input\n            }], blurIntermediateRenderTarget: [{\n                type: Input\n            }], beautyRenderTarget: [{\n                type: Input\n            }], normalRenderTarget: [{\n                type: Input\n            }], depthRenderTarget: [{\n                type: Input\n            }], depthMaterial: [{\n                type: Input\n            }], normalMaterial: [{\n                type: Input\n            }], saoMaterial: [{\n                type: Input\n            }], vBlurMaterial: [{\n                type: Input\n            }], hBlurMaterial: [{\n                type: Input\n            }], materialCopy: [{\n                type: Input\n            }], depthCopy: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }], params: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSavePass extends ThPass {\n    getType() {\n        return SavePass;\n    }\n    set textureID(value) {\n        if (this._objRef) {\n            this._objRef.textureID = value;\n        }\n    }\n    // @ts-ignore\n    get textureID() {\n        return this._objRef?.textureID;\n    }\n    set renderTarget(value) {\n        if (this._objRef) {\n            this._objRef.renderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get renderTarget() {\n        return this._objRef?.renderTarget;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThSavePass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSavePass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSavePass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSavePass, selector: \"th-savePass\", inputs: { textureID: \"textureID\", renderTarget: \"renderTarget\", uniforms: \"uniforms\", material: \"material\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSavePass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSavePass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-savePass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSavePass) }]\n                }]\n        }], propDecorators: { textureID: [{\n                type: Input\n            }], renderTarget: [{\n                type: Input\n            }], uniforms: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThShadowMaterial extends ThMaterial {\n    getType() {\n        return ShadowMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set transparent(value) {\n        if (this._objRef) {\n            this._objRef.transparent = value;\n        }\n    }\n    // @ts-ignore\n    get transparent() {\n        return this._objRef?.transparent;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n}\nThShadowMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShadowMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThShadowMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThShadowMaterial, selector: \"th-shadowMaterial\", inputs: { type: \"type\", color: \"color\", transparent: \"transparent\", fog: \"fog\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThShadowMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShadowMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-shadowMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThShadowMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], transparent: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThShapeGeometry extends ThBufferGeometry {\n    getType() {\n        return ShapeGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThShapeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShapeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThShapeGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThShapeGeometry, selector: \"th-shapeGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThShapeGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThShapeGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-shapeGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThShapeGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSkeletonHelper extends ThLineSegments {\n    getType() {\n        return SkeletonHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set bones(value) {\n        if (this._objRef) {\n            this._objRef.bones = value;\n        }\n    }\n    // @ts-ignore\n    get bones() {\n        return this._objRef?.bones;\n    }\n    set root(value) {\n        if (this._objRef) {\n            this._objRef.root = value;\n        }\n    }\n    // @ts-ignore\n    get root() {\n        return this._objRef?.root;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n}\nThSkeletonHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSkeletonHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSkeletonHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSkeletonHelper, selector: \"th-skeletonHelper\", inputs: { bones: \"bones\", root: \"root\", matrix: \"matrix\", matrixAutoUpdate: \"matrixAutoUpdate\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSkeletonHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSkeletonHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-skeletonHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSkeletonHelper) }]\n                }]\n        }], propDecorators: { bones: [{\n                type: Input\n            }], root: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSkinnedMesh extends ThMesh {\n    getType() {\n        return SkinnedMesh;\n    }\n    // @ts-ignore\n    get isSkinnedMesh() {\n        return this._objRef?.isSkinnedMesh;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set bindMode(value) {\n        if (this._objRef) {\n            this._objRef.bindMode = value;\n        }\n    }\n    // @ts-ignore\n    get bindMode() {\n        return this._objRef?.bindMode;\n    }\n    set bindMatrix(value) {\n        if (this._objRef) {\n            this._objRef.bindMatrix = applyValue(this._objRef.bindMatrix, value);\n        }\n    }\n    // @ts-ignore\n    get bindMatrix() {\n        return this._objRef?.bindMatrix;\n    }\n    set bindMatrixInverse(value) {\n        if (this._objRef) {\n            this._objRef.bindMatrixInverse = applyValue(this._objRef.bindMatrixInverse, value);\n        }\n    }\n    // @ts-ignore\n    get bindMatrixInverse() {\n        return this._objRef?.bindMatrixInverse;\n    }\n    set boundingBox(value) {\n        if (this._objRef) {\n            this._objRef.boundingBox = applyValue(this._objRef.boundingBox, value);\n        }\n    }\n    // @ts-ignore\n    get boundingBox() {\n        return this._objRef?.boundingBox;\n    }\n    set boundingSphere(value) {\n        if (this._objRef) {\n            this._objRef.boundingSphere = applyValue(this._objRef.boundingSphere, value);\n        }\n    }\n    // @ts-ignore\n    get boundingSphere() {\n        return this._objRef?.boundingSphere;\n    }\n    set skeleton(value) {\n        if (this._objRef) {\n            this._objRef.skeleton = value;\n        }\n    }\n    // @ts-ignore\n    get skeleton() {\n        return this._objRef?.skeleton;\n    }\n}\nThSkinnedMesh.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSkinnedMesh, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSkinnedMesh.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSkinnedMesh, selector: \"th-skinnedMesh\", inputs: { bindMode: \"bindMode\", bindMatrix: \"bindMatrix\", bindMatrixInverse: \"bindMatrixInverse\", boundingBox: \"boundingBox\", boundingSphere: \"boundingSphere\", skeleton: \"skeleton\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSkinnedMesh) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSkinnedMesh, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-skinnedMesh',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSkinnedMesh) }]\n                }]\n        }], propDecorators: { bindMode: [{\n                type: Input\n            }], bindMatrix: [{\n                type: Input\n            }], bindMatrixInverse: [{\n                type: Input\n            }], boundingBox: [{\n                type: Input\n            }], boundingSphere: [{\n                type: Input\n            }], skeleton: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSMAAPass extends ThPass {\n    getType() {\n        return SMAAPass;\n    }\n    set edgesRT(value) {\n        if (this._objRef) {\n            this._objRef.edgesRT = value;\n        }\n    }\n    // @ts-ignore\n    get edgesRT() {\n        return this._objRef?.edgesRT;\n    }\n    set weightsRT(value) {\n        if (this._objRef) {\n            this._objRef.weightsRT = value;\n        }\n    }\n    // @ts-ignore\n    get weightsRT() {\n        return this._objRef?.weightsRT;\n    }\n    set areaTexture(value) {\n        if (this._objRef) {\n            this._objRef.areaTexture = value;\n        }\n    }\n    // @ts-ignore\n    get areaTexture() {\n        return this._objRef?.areaTexture;\n    }\n    set searchTexture(value) {\n        if (this._objRef) {\n            this._objRef.searchTexture = value;\n        }\n    }\n    // @ts-ignore\n    get searchTexture() {\n        return this._objRef?.searchTexture;\n    }\n    set uniformsEdges(value) {\n        if (this._objRef) {\n            this._objRef.uniformsEdges = value;\n        }\n    }\n    // @ts-ignore\n    get uniformsEdges() {\n        return this._objRef?.uniformsEdges;\n    }\n    set materialEdges(value) {\n        if (this._objRef) {\n            this._objRef.materialEdges = value;\n        }\n    }\n    // @ts-ignore\n    get materialEdges() {\n        return this._objRef?.materialEdges;\n    }\n    set uniformsWeights(value) {\n        if (this._objRef) {\n            this._objRef.uniformsWeights = value;\n        }\n    }\n    // @ts-ignore\n    get uniformsWeights() {\n        return this._objRef?.uniformsWeights;\n    }\n    set materialWeights(value) {\n        if (this._objRef) {\n            this._objRef.materialWeights = value;\n        }\n    }\n    // @ts-ignore\n    get materialWeights() {\n        return this._objRef?.materialWeights;\n    }\n    set uniformsBlend(value) {\n        if (this._objRef) {\n            this._objRef.uniformsBlend = value;\n        }\n    }\n    // @ts-ignore\n    get uniformsBlend() {\n        return this._objRef?.uniformsBlend;\n    }\n    set materialBlend(value) {\n        if (this._objRef) {\n            this._objRef.materialBlend = value;\n        }\n    }\n    // @ts-ignore\n    get materialBlend() {\n        return this._objRef?.materialBlend;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThSMAAPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSMAAPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSMAAPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSMAAPass, selector: \"th-sMAAPass\", inputs: { edgesRT: \"edgesRT\", weightsRT: \"weightsRT\", areaTexture: \"areaTexture\", searchTexture: \"searchTexture\", uniformsEdges: \"uniformsEdges\", materialEdges: \"materialEdges\", uniformsWeights: \"uniformsWeights\", materialWeights: \"materialWeights\", uniformsBlend: \"uniformsBlend\", materialBlend: \"materialBlend\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSMAAPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSMAAPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-sMAAPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSMAAPass) }]\n                }]\n        }], propDecorators: { edgesRT: [{\n                type: Input\n            }], weightsRT: [{\n                type: Input\n            }], areaTexture: [{\n                type: Input\n            }], searchTexture: [{\n                type: Input\n            }], uniformsEdges: [{\n                type: Input\n            }], materialEdges: [{\n                type: Input\n            }], uniformsWeights: [{\n                type: Input\n            }], materialWeights: [{\n                type: Input\n            }], uniformsBlend: [{\n                type: Input\n            }], materialBlend: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSphereGeometry extends ThBufferGeometry {\n    getType() {\n        return SphereGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThSphereGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSphereGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSphereGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSphereGeometry, selector: \"th-sphereGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThSphereGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSphereGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-sphereGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThSphereGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSpotLight extends ThLight {\n    getType() {\n        return SpotLight;\n    }\n    // @ts-ignore\n    get isSpotLight() {\n        return this._objRef?.isSpotLight;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set position(value) {\n        if (this._objRef) {\n            this._objRef.position = applyValue(this._objRef.position, value);\n        }\n    }\n    // @ts-ignore\n    get position() {\n        return this._objRef?.position;\n    }\n    set target(value) {\n        if (this._objRef) {\n            this._objRef.target = value;\n        }\n    }\n    // @ts-ignore\n    get target() {\n        return this._objRef?.target;\n    }\n    set castShadow(value) {\n        if (this._objRef) {\n            this._objRef.castShadow = value;\n        }\n    }\n    // @ts-ignore\n    get castShadow() {\n        return this._objRef?.castShadow;\n    }\n    set intensity(value) {\n        if (this._objRef) {\n            this._objRef.intensity = value;\n        }\n    }\n    // @ts-ignore\n    get intensity() {\n        return this._objRef?.intensity;\n    }\n    set distance(value) {\n        if (this._objRef) {\n            this._objRef.distance = value;\n        }\n    }\n    // @ts-ignore\n    get distance() {\n        return this._objRef?.distance;\n    }\n    set angle(value) {\n        if (this._objRef) {\n            this._objRef.angle = value;\n        }\n    }\n    // @ts-ignore\n    get angle() {\n        return this._objRef?.angle;\n    }\n    set decay(value) {\n        if (this._objRef) {\n            this._objRef.decay = value;\n        }\n    }\n    // @ts-ignore\n    get decay() {\n        return this._objRef?.decay;\n    }\n    set shadow(value) {\n        if (this._objRef) {\n            this._objRef.shadow = value;\n        }\n    }\n    // @ts-ignore\n    get shadow() {\n        return this._objRef?.shadow;\n    }\n    set power(value) {\n        if (this._objRef) {\n            this._objRef.power = value;\n        }\n    }\n    // @ts-ignore\n    get power() {\n        return this._objRef?.power;\n    }\n    set penumbra(value) {\n        if (this._objRef) {\n            this._objRef.penumbra = value;\n        }\n    }\n    // @ts-ignore\n    get penumbra() {\n        return this._objRef?.penumbra;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n}\nThSpotLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSpotLight, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSpotLight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSpotLight, selector: \"th-spotLight\", inputs: { position: \"position\", target: \"target\", castShadow: \"castShadow\", intensity: \"intensity\", distance: \"distance\", angle: \"angle\", decay: \"decay\", shadow: \"shadow\", power: \"power\", penumbra: \"penumbra\", map: \"map\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSpotLight) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSpotLight, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-spotLight',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSpotLight) }]\n                }]\n        }], propDecorators: { position: [{\n                type: Input\n            }], target: [{\n                type: Input\n            }], castShadow: [{\n                type: Input\n            }], intensity: [{\n                type: Input\n            }], distance: [{\n                type: Input\n            }], angle: [{\n                type: Input\n            }], decay: [{\n                type: Input\n            }], shadow: [{\n                type: Input\n            }], power: [{\n                type: Input\n            }], penumbra: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSpotLightHelper extends ThObject3D {\n    getType() {\n        return SpotLightHelper;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set cone(value) {\n        if (this._objRef) {\n            this._objRef.cone = value;\n        }\n    }\n    // @ts-ignore\n    get cone() {\n        return this._objRef?.cone;\n    }\n    set light(value) {\n        if (this._objRef) {\n            this._objRef.light = value;\n        }\n    }\n    // @ts-ignore\n    get light() {\n        return this._objRef?.light;\n    }\n    set matrix(value) {\n        if (this._objRef) {\n            this._objRef.matrix = applyValue(this._objRef.matrix, value);\n        }\n    }\n    // @ts-ignore\n    get matrix() {\n        return this._objRef?.matrix;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = value;\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set matrixAutoUpdate(value) {\n        if (this._objRef) {\n            this._objRef.matrixAutoUpdate = value;\n        }\n    }\n    // @ts-ignore\n    get matrixAutoUpdate() {\n        return this._objRef?.matrixAutoUpdate;\n    }\n}\nThSpotLightHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSpotLightHelper, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSpotLightHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSpotLightHelper, selector: \"th-spotLightHelper\", inputs: { cone: \"cone\", light: \"light\", matrix: \"matrix\", color: \"color\", matrixAutoUpdate: \"matrixAutoUpdate\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSpotLightHelper) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSpotLightHelper, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-spotLightHelper',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSpotLightHelper) }]\n                }]\n        }], propDecorators: { cone: [{\n                type: Input\n            }], light: [{\n                type: Input\n            }], matrix: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], matrixAutoUpdate: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSprite extends ThObject3D {\n    getType() {\n        return Sprite;\n    }\n    // @ts-ignore\n    get isSprite() {\n        return this._objRef?.isSprite;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set castShadow(value) {\n        if (this._objRef) {\n            this._objRef.castShadow = value;\n        }\n    }\n    // @ts-ignore\n    get castShadow() {\n        return this._objRef?.castShadow;\n    }\n    set geometry(value) {\n        if (this._objRef) {\n            this._objRef.geometry = value;\n        }\n    }\n    // @ts-ignore\n    get geometry() {\n        return this._objRef?.geometry;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set center(value) {\n        if (this._objRef) {\n            this._objRef.center = applyValue(this._objRef.center, value);\n        }\n    }\n    // @ts-ignore\n    get center() {\n        return this._objRef?.center;\n    }\n}\nThSprite.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSprite, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSprite.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSprite, selector: \"th-sprite\", inputs: { castShadow: \"castShadow\", geometry: \"geometry\", material: \"material\", center: \"center\" }, providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSprite) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSprite, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-sprite',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSprite) }]\n                }]\n        }], propDecorators: { castShadow: [{\n                type: Input\n            }], geometry: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThSpriteMaterial extends ThMaterial {\n    getType() {\n        return SpriteMaterial;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set color(value) {\n        if (this._objRef) {\n            this._objRef.color = applyValue(this._objRef.color, value);\n        }\n    }\n    // @ts-ignore\n    get color() {\n        return this._objRef?.color;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set alphaMap(value) {\n        if (this._objRef) {\n            this._objRef.alphaMap = value;\n        }\n    }\n    // @ts-ignore\n    get alphaMap() {\n        return this._objRef?.alphaMap;\n    }\n    set rotation(value) {\n        if (this._objRef) {\n            this._objRef.rotation = value;\n        }\n    }\n    // @ts-ignore\n    get rotation() {\n        return this._objRef?.rotation;\n    }\n    set sizeAttenuation(value) {\n        if (this._objRef) {\n            this._objRef.sizeAttenuation = value;\n        }\n    }\n    // @ts-ignore\n    get sizeAttenuation() {\n        return this._objRef?.sizeAttenuation;\n    }\n    set transparent(value) {\n        if (this._objRef) {\n            this._objRef.transparent = value;\n        }\n    }\n    // @ts-ignore\n    get transparent() {\n        return this._objRef?.transparent;\n    }\n    set fog(value) {\n        if (this._objRef) {\n            this._objRef.fog = value;\n        }\n    }\n    // @ts-ignore\n    get fog() {\n        return this._objRef?.fog;\n    }\n    // @ts-ignore\n    get isSpriteMaterial() {\n        return this._objRef?.isSpriteMaterial;\n    }\n}\nThSpriteMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSpriteMaterial, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSpriteMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSpriteMaterial, selector: \"th-spriteMaterial\", inputs: { type: \"type\", color: \"color\", map: \"map\", alphaMap: \"alphaMap\", rotation: \"rotation\", sizeAttenuation: \"sizeAttenuation\", transparent: \"transparent\", fog: \"fog\" }, providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThSpriteMaterial) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSpriteMaterial, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-spriteMaterial',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThMaterial, useExisting: forwardRef(() => ThSpriteMaterial) }]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], map: [{\n                type: Input\n            }], alphaMap: [{\n                type: Input\n            }], rotation: [{\n                type: Input\n            }], sizeAttenuation: [{\n                type: Input\n            }], transparent: [{\n                type: Input\n            }], fog: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSSAARenderPass extends ThPass {\n    getType() {\n        return SSAARenderPass;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set sampleLevel(value) {\n        if (this._objRef) {\n            this._objRef.sampleLevel = value;\n        }\n    }\n    // @ts-ignore\n    get sampleLevel() {\n        return this._objRef?.sampleLevel;\n    }\n    set unbiased(value) {\n        if (this._objRef) {\n            this._objRef.unbiased = value;\n        }\n    }\n    // @ts-ignore\n    get unbiased() {\n        return this._objRef?.unbiased;\n    }\n    set clearColor(value) {\n        if (this._objRef) {\n            this._objRef.clearColor = value;\n        }\n    }\n    // @ts-ignore\n    get clearColor() {\n        return this._objRef?.clearColor;\n    }\n    set clearAlpha(value) {\n        if (this._objRef) {\n            this._objRef.clearAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get clearAlpha() {\n        return this._objRef?.clearAlpha;\n    }\n    set copyUniforms(value) {\n        if (this._objRef) {\n            this._objRef.copyUniforms = value;\n        }\n    }\n    // @ts-ignore\n    get copyUniforms() {\n        return this._objRef?.copyUniforms;\n    }\n    set copyMaterial(value) {\n        if (this._objRef) {\n            this._objRef.copyMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get copyMaterial() {\n        return this._objRef?.copyMaterial;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n    set sampleRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.sampleRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get sampleRenderTarget() {\n        return this._objRef?.sampleRenderTarget;\n    }\n}\nThSSAARenderPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSSAARenderPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSSAARenderPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSSAARenderPass, selector: \"th-sSAARenderPass\", inputs: { scene: \"scene\", camera: \"camera\", sampleLevel: \"sampleLevel\", unbiased: \"unbiased\", clearColor: \"clearColor\", clearAlpha: \"clearAlpha\", copyUniforms: \"copyUniforms\", copyMaterial: \"copyMaterial\", fsQuad: \"fsQuad\", sampleRenderTarget: \"sampleRenderTarget\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSAARenderPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSSAARenderPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-sSAARenderPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSAARenderPass) }]\n                }]\n        }], propDecorators: { scene: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], sampleLevel: [{\n                type: Input\n            }], unbiased: [{\n                type: Input\n            }], clearColor: [{\n                type: Input\n            }], clearAlpha: [{\n                type: Input\n            }], copyUniforms: [{\n                type: Input\n            }], copyMaterial: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }], sampleRenderTarget: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSSAOPass extends ThPass {\n    getType() {\n        return SSAOPass;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set width(value) {\n        if (this._objRef) {\n            this._objRef.width = value;\n        }\n    }\n    // @ts-ignore\n    get width() {\n        return this._objRef?.width;\n    }\n    set height(value) {\n        if (this._objRef) {\n            this._objRef.height = value;\n        }\n    }\n    // @ts-ignore\n    get height() {\n        return this._objRef?.height;\n    }\n    set clear(value) {\n        if (this._objRef) {\n            this._objRef.clear = value;\n        }\n    }\n    // @ts-ignore\n    get clear() {\n        return this._objRef?.clear;\n    }\n    set kernelRadius(value) {\n        if (this._objRef) {\n            this._objRef.kernelRadius = value;\n        }\n    }\n    // @ts-ignore\n    get kernelRadius() {\n        return this._objRef?.kernelRadius;\n    }\n    set kernelSize(value) {\n        if (this._objRef) {\n            this._objRef.kernelSize = value;\n        }\n    }\n    // @ts-ignore\n    get kernelSize() {\n        return this._objRef?.kernelSize;\n    }\n    set kernel(value) {\n        if (this._objRef) {\n            this._objRef.kernel = value;\n        }\n    }\n    // @ts-ignore\n    get kernel() {\n        return this._objRef?.kernel;\n    }\n    set noiseTexture(value) {\n        if (this._objRef) {\n            this._objRef.noiseTexture = value;\n        }\n    }\n    // @ts-ignore\n    get noiseTexture() {\n        return this._objRef?.noiseTexture;\n    }\n    set output(value) {\n        if (this._objRef) {\n            this._objRef.output = value;\n        }\n    }\n    // @ts-ignore\n    get output() {\n        return this._objRef?.output;\n    }\n    set minDistance(value) {\n        if (this._objRef) {\n            this._objRef.minDistance = value;\n        }\n    }\n    // @ts-ignore\n    get minDistance() {\n        return this._objRef?.minDistance;\n    }\n    set maxDistance(value) {\n        if (this._objRef) {\n            this._objRef.maxDistance = value;\n        }\n    }\n    // @ts-ignore\n    get maxDistance() {\n        return this._objRef?.maxDistance;\n    }\n    set beautyRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.beautyRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get beautyRenderTarget() {\n        return this._objRef?.beautyRenderTarget;\n    }\n    set normalRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.normalRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get normalRenderTarget() {\n        return this._objRef?.normalRenderTarget;\n    }\n    set ssaoRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.ssaoRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get ssaoRenderTarget() {\n        return this._objRef?.ssaoRenderTarget;\n    }\n    set blurRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.blurRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get blurRenderTarget() {\n        return this._objRef?.blurRenderTarget;\n    }\n    set ssaoMaterial(value) {\n        if (this._objRef) {\n            this._objRef.ssaoMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get ssaoMaterial() {\n        return this._objRef?.ssaoMaterial;\n    }\n    set normalMaterial(value) {\n        if (this._objRef) {\n            this._objRef.normalMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get normalMaterial() {\n        return this._objRef?.normalMaterial;\n    }\n    set blurMaterial(value) {\n        if (this._objRef) {\n            this._objRef.blurMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get blurMaterial() {\n        return this._objRef?.blurMaterial;\n    }\n    set depthRenderMaterial(value) {\n        if (this._objRef) {\n            this._objRef.depthRenderMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get depthRenderMaterial() {\n        return this._objRef?.depthRenderMaterial;\n    }\n    set copyMaterial(value) {\n        if (this._objRef) {\n            this._objRef.copyMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get copyMaterial() {\n        return this._objRef?.copyMaterial;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n    set originalClearColor(value) {\n        if (this._objRef) {\n            this._objRef.originalClearColor = applyValue(this._objRef.originalClearColor, value);\n        }\n    }\n    // @ts-ignore\n    get originalClearColor() {\n        return this._objRef?.originalClearColor;\n    }\n}\nThSSAOPass.OUTPUT = SSAOPass.OUTPUT;\nThSSAOPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSSAOPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSSAOPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSSAOPass, selector: \"th-sSAOPass\", inputs: { scene: \"scene\", camera: \"camera\", width: \"width\", height: \"height\", clear: \"clear\", kernelRadius: \"kernelRadius\", kernelSize: \"kernelSize\", kernel: \"kernel\", noiseTexture: \"noiseTexture\", output: \"output\", minDistance: \"minDistance\", maxDistance: \"maxDistance\", beautyRenderTarget: \"beautyRenderTarget\", normalRenderTarget: \"normalRenderTarget\", ssaoRenderTarget: \"ssaoRenderTarget\", blurRenderTarget: \"blurRenderTarget\", ssaoMaterial: \"ssaoMaterial\", normalMaterial: \"normalMaterial\", blurMaterial: \"blurMaterial\", depthRenderMaterial: \"depthRenderMaterial\", copyMaterial: \"copyMaterial\", fsQuad: \"fsQuad\", originalClearColor: \"originalClearColor\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSAOPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSSAOPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-sSAOPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSAOPass) }]\n                }]\n        }], propDecorators: { scene: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], clear: [{\n                type: Input\n            }], kernelRadius: [{\n                type: Input\n            }], kernelSize: [{\n                type: Input\n            }], kernel: [{\n                type: Input\n            }], noiseTexture: [{\n                type: Input\n            }], output: [{\n                type: Input\n            }], minDistance: [{\n                type: Input\n            }], maxDistance: [{\n                type: Input\n            }], beautyRenderTarget: [{\n                type: Input\n            }], normalRenderTarget: [{\n                type: Input\n            }], ssaoRenderTarget: [{\n                type: Input\n            }], blurRenderTarget: [{\n                type: Input\n            }], ssaoMaterial: [{\n                type: Input\n            }], normalMaterial: [{\n                type: Input\n            }], blurMaterial: [{\n                type: Input\n            }], depthRenderMaterial: [{\n                type: Input\n            }], copyMaterial: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }], originalClearColor: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThSSRPass extends ThPass {\n    getType() {\n        return SSRPass;\n    }\n    set width(value) {\n        if (this._objRef) {\n            this._objRef.width = value;\n        }\n    }\n    // @ts-ignore\n    get width() {\n        return this._objRef?.width;\n    }\n    set height(value) {\n        if (this._objRef) {\n            this._objRef.height = value;\n        }\n    }\n    // @ts-ignore\n    get height() {\n        return this._objRef?.height;\n    }\n    set clear(value) {\n        if (this._objRef) {\n            this._objRef.clear = value;\n        }\n    }\n    // @ts-ignore\n    get clear() {\n        return this._objRef?.clear;\n    }\n    set renderer(value) {\n        if (this._objRef) {\n            this._objRef.renderer = value;\n        }\n    }\n    // @ts-ignore\n    get renderer() {\n        return this._objRef?.renderer;\n    }\n    set scene(value) {\n        if (this._objRef) {\n            this._objRef.scene = value;\n        }\n    }\n    // @ts-ignore\n    get scene() {\n        return this._objRef?.scene;\n    }\n    set camera(value) {\n        if (this._objRef) {\n            this._objRef.camera = value;\n        }\n    }\n    // @ts-ignore\n    get camera() {\n        return this._objRef?.camera;\n    }\n    set groundReflector(value) {\n        if (this._objRef) {\n            this._objRef.groundReflector = value;\n        }\n    }\n    // @ts-ignore\n    get groundReflector() {\n        return this._objRef?.groundReflector;\n    }\n    set opacity(value) {\n        if (this._objRef) {\n            this._objRef.opacity = value;\n        }\n    }\n    // @ts-ignore\n    get opacity() {\n        return this._objRef?.opacity;\n    }\n    set output(value) {\n        if (this._objRef) {\n            this._objRef.output = value;\n        }\n    }\n    // @ts-ignore\n    get output() {\n        return this._objRef?.output;\n    }\n    set maxDistance(value) {\n        if (this._objRef) {\n            this._objRef.maxDistance = value;\n        }\n    }\n    // @ts-ignore\n    get maxDistance() {\n        return this._objRef?.maxDistance;\n    }\n    set thickness(value) {\n        if (this._objRef) {\n            this._objRef.thickness = value;\n        }\n    }\n    // @ts-ignore\n    get thickness() {\n        return this._objRef?.thickness;\n    }\n    set tempColor(value) {\n        if (this._objRef) {\n            this._objRef.tempColor = applyValue(this._objRef.tempColor, value);\n        }\n    }\n    // @ts-ignore\n    get tempColor() {\n        return this._objRef?.tempColor;\n    }\n    set selective(value) {\n        if (this._objRef) {\n            this._objRef.selective = value;\n        }\n    }\n    // @ts-ignore\n    get selective() {\n        return this._objRef?.selective;\n    }\n    set blur(value) {\n        if (this._objRef) {\n            this._objRef.blur = value;\n        }\n    }\n    // @ts-ignore\n    get blur() {\n        return this._objRef?.blur;\n    }\n    set thickTolerance(value) {\n        if (this._objRef) {\n            this._objRef.thickTolerance = value;\n        }\n    }\n    // @ts-ignore\n    get thickTolerance() {\n        return this._objRef?.thickTolerance;\n    }\n    set beautyRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.beautyRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get beautyRenderTarget() {\n        return this._objRef?.beautyRenderTarget;\n    }\n    set prevRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.prevRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get prevRenderTarget() {\n        return this._objRef?.prevRenderTarget;\n    }\n    set normalRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.normalRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get normalRenderTarget() {\n        return this._objRef?.normalRenderTarget;\n    }\n    set metalnessRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.metalnessRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get metalnessRenderTarget() {\n        return this._objRef?.metalnessRenderTarget;\n    }\n    set ssrRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.ssrRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get ssrRenderTarget() {\n        return this._objRef?.ssrRenderTarget;\n    }\n    set blurRenderTarget(value) {\n        if (this._objRef) {\n            this._objRef.blurRenderTarget = value;\n        }\n    }\n    // @ts-ignore\n    get blurRenderTarget() {\n        return this._objRef?.blurRenderTarget;\n    }\n    set blurRenderTarget2(value) {\n        if (this._objRef) {\n            this._objRef.blurRenderTarget2 = value;\n        }\n    }\n    // @ts-ignore\n    get blurRenderTarget2() {\n        return this._objRef?.blurRenderTarget2;\n    }\n    set ssrMaterial(value) {\n        if (this._objRef) {\n            this._objRef.ssrMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get ssrMaterial() {\n        return this._objRef?.ssrMaterial;\n    }\n    set normalMaterial(value) {\n        if (this._objRef) {\n            this._objRef.normalMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get normalMaterial() {\n        return this._objRef?.normalMaterial;\n    }\n    set metalnessOnMaterial(value) {\n        if (this._objRef) {\n            this._objRef.metalnessOnMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get metalnessOnMaterial() {\n        return this._objRef?.metalnessOnMaterial;\n    }\n    set metalnessOffMaterial(value) {\n        if (this._objRef) {\n            this._objRef.metalnessOffMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get metalnessOffMaterial() {\n        return this._objRef?.metalnessOffMaterial;\n    }\n    set blurMaterial(value) {\n        if (this._objRef) {\n            this._objRef.blurMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get blurMaterial() {\n        return this._objRef?.blurMaterial;\n    }\n    set blurMaterial2(value) {\n        if (this._objRef) {\n            this._objRef.blurMaterial2 = value;\n        }\n    }\n    // @ts-ignore\n    get blurMaterial2() {\n        return this._objRef?.blurMaterial2;\n    }\n    set depthRenderMaterial(value) {\n        if (this._objRef) {\n            this._objRef.depthRenderMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get depthRenderMaterial() {\n        return this._objRef?.depthRenderMaterial;\n    }\n    set copyMaterial(value) {\n        if (this._objRef) {\n            this._objRef.copyMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get copyMaterial() {\n        return this._objRef?.copyMaterial;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n    set originalClearColor(value) {\n        if (this._objRef) {\n            this._objRef.originalClearColor = applyValue(this._objRef.originalClearColor, value);\n        }\n    }\n    // @ts-ignore\n    get originalClearColor() {\n        return this._objRef?.originalClearColor;\n    }\n    set dispose(value) {\n        if (this._objRef) {\n            this._objRef.dispose = value;\n        }\n    }\n    // @ts-ignore\n    get dispose() {\n        return this._objRef?.dispose;\n    }\n    set renderPass(value) {\n        if (this._objRef) {\n            this._objRef.renderPass = value;\n        }\n    }\n    // @ts-ignore\n    get renderPass() {\n        return this._objRef?.renderPass;\n    }\n    set renderOverride(value) {\n        if (this._objRef) {\n            this._objRef.renderOverride = value;\n        }\n    }\n    // @ts-ignore\n    get renderOverride() {\n        return this._objRef?.renderOverride;\n    }\n    set renderMetalness(value) {\n        if (this._objRef) {\n            this._objRef.renderMetalness = value;\n        }\n    }\n    // @ts-ignore\n    get renderMetalness() {\n        return this._objRef?.renderMetalness;\n    }\n}\nThSSRPass.OUTPUT = SSRPass.OUTPUT;\nThSSRPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSSRPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThSSRPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThSSRPass, selector: \"th-sSRPass\", inputs: { width: \"width\", height: \"height\", clear: \"clear\", renderer: \"renderer\", scene: \"scene\", camera: \"camera\", groundReflector: \"groundReflector\", opacity: \"opacity\", output: \"output\", maxDistance: \"maxDistance\", thickness: \"thickness\", tempColor: \"tempColor\", selective: \"selective\", blur: \"blur\", thickTolerance: \"thickTolerance\", beautyRenderTarget: \"beautyRenderTarget\", prevRenderTarget: \"prevRenderTarget\", normalRenderTarget: \"normalRenderTarget\", metalnessRenderTarget: \"metalnessRenderTarget\", ssrRenderTarget: \"ssrRenderTarget\", blurRenderTarget: \"blurRenderTarget\", blurRenderTarget2: \"blurRenderTarget2\", ssrMaterial: \"ssrMaterial\", normalMaterial: \"normalMaterial\", metalnessOnMaterial: \"metalnessOnMaterial\", metalnessOffMaterial: \"metalnessOffMaterial\", blurMaterial: \"blurMaterial\", blurMaterial2: \"blurMaterial2\", depthRenderMaterial: \"depthRenderMaterial\", copyMaterial: \"copyMaterial\", fsQuad: \"fsQuad\", originalClearColor: \"originalClearColor\", dispose: \"dispose\", renderPass: \"renderPass\", renderOverride: \"renderOverride\", renderMetalness: \"renderMetalness\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSRPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThSSRPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-sSRPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThSSRPass) }]\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], clear: [{\n                type: Input\n            }], renderer: [{\n                type: Input\n            }], scene: [{\n                type: Input\n            }], camera: [{\n                type: Input\n            }], groundReflector: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], output: [{\n                type: Input\n            }], maxDistance: [{\n                type: Input\n            }], thickness: [{\n                type: Input\n            }], tempColor: [{\n                type: Input\n            }], selective: [{\n                type: Input\n            }], blur: [{\n                type: Input\n            }], thickTolerance: [{\n                type: Input\n            }], beautyRenderTarget: [{\n                type: Input\n            }], prevRenderTarget: [{\n                type: Input\n            }], normalRenderTarget: [{\n                type: Input\n            }], metalnessRenderTarget: [{\n                type: Input\n            }], ssrRenderTarget: [{\n                type: Input\n            }], blurRenderTarget: [{\n                type: Input\n            }], blurRenderTarget2: [{\n                type: Input\n            }], ssrMaterial: [{\n                type: Input\n            }], normalMaterial: [{\n                type: Input\n            }], metalnessOnMaterial: [{\n                type: Input\n            }], metalnessOffMaterial: [{\n                type: Input\n            }], blurMaterial: [{\n                type: Input\n            }], blurMaterial2: [{\n                type: Input\n            }], depthRenderMaterial: [{\n                type: Input\n            }], copyMaterial: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }], originalClearColor: [{\n                type: Input\n            }], dispose: [{\n                type: Input\n            }], renderPass: [{\n                type: Input\n            }], renderOverride: [{\n                type: Input\n            }], renderMetalness: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThStereoCamera extends ThCamera {\n    getType() {\n        return StereoCamera;\n    }\n    set type(value) {\n        if (this._objRef) {\n            this._objRef.type = value;\n        }\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    set aspect(value) {\n        if (this._objRef) {\n            this._objRef.aspect = value;\n        }\n    }\n    // @ts-ignore\n    get aspect() {\n        return this._objRef?.aspect;\n    }\n    set eyeSep(value) {\n        if (this._objRef) {\n            this._objRef.eyeSep = value;\n        }\n    }\n    // @ts-ignore\n    get eyeSep() {\n        return this._objRef?.eyeSep;\n    }\n    set cameraL(value) {\n        if (this._objRef) {\n            this._objRef.cameraL = value;\n        }\n    }\n    // @ts-ignore\n    get cameraL() {\n        return this._objRef?.cameraL;\n    }\n    set cameraR(value) {\n        if (this._objRef) {\n            this._objRef.cameraR = value;\n        }\n    }\n    // @ts-ignore\n    get cameraR() {\n        return this._objRef?.cameraR;\n    }\n}\nThStereoCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThStereoCamera, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThStereoCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThStereoCamera, selector: \"th-stereoCamera\", inputs: { type: \"type\", aspect: \"aspect\", eyeSep: \"eyeSep\", cameraL: \"cameraL\", cameraR: \"cameraR\" }, providers: [\n        { provide: ThObject3D, useExisting: forwardRef(() => ThStereoCamera) },\n        { provide: ThCamera, useExisting: forwardRef(() => ThStereoCamera) }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThStereoCamera, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-stereoCamera',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        { provide: ThObject3D, useExisting: forwardRef(() => ThStereoCamera) },\n                        { provide: ThCamera, useExisting: forwardRef(() => ThStereoCamera) }\n                    ]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], aspect: [{\n                type: Input\n            }], eyeSep: [{\n                type: Input\n            }], cameraL: [{\n                type: Input\n            }], cameraR: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThTAARenderPass extends ThSSAARenderPass {\n    getType() {\n        return TAARenderPass;\n    }\n    set accumulate(value) {\n        if (this._objRef) {\n            this._objRef.accumulate = value;\n        }\n    }\n    // @ts-ignore\n    get accumulate() {\n        return this._objRef?.accumulate;\n    }\n}\nThTAARenderPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTAARenderPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTAARenderPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTAARenderPass, selector: \"th-tAARenderPass\", inputs: { accumulate: \"accumulate\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThTAARenderPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTAARenderPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-tAARenderPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThTAARenderPass) }]\n                }]\n        }], propDecorators: { accumulate: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTeapotGeometry extends ThBufferGeometry {\n    getType() {\n        return TeapotGeometry;\n    }\n}\nThTeapotGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTeapotGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTeapotGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTeapotGeometry, selector: \"th-teapotGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThTeapotGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTeapotGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-teapotGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThTeapotGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTetrahedronGeometry extends ThPolyhedronGeometry {\n    getType() {\n        return TetrahedronGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n}\nThTetrahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTetrahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTetrahedronGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTetrahedronGeometry, selector: \"th-tetrahedronGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThTetrahedronGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTetrahedronGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-tetrahedronGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThTetrahedronGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTextGeometry extends ThExtrudeGeometry {\n    getType() {\n        return TextGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThTextGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTextGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTextGeometry, selector: \"th-textGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThTextGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-textGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThTextGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThTexturePass extends ThPass {\n    getType() {\n        return TexturePass;\n    }\n    set map(value) {\n        if (this._objRef) {\n            this._objRef.map = value;\n        }\n    }\n    // @ts-ignore\n    get map() {\n        return this._objRef?.map;\n    }\n    set opacity(value) {\n        if (this._objRef) {\n            this._objRef.opacity = value;\n        }\n    }\n    // @ts-ignore\n    get opacity() {\n        return this._objRef?.opacity;\n    }\n    set uniforms(map) {\n        if (this._objRef) {\n            Object.assign(this._objRef.uniforms, map);\n        }\n    }\n    // @ts-ignore\n    get uniforms() {\n        // @ts-ignore\n        return this._objRef?.uniforms;\n    }\n    set material(value) {\n        if (this._objRef) {\n            this._objRef.material = value;\n        }\n    }\n    // @ts-ignore\n    get material() {\n        return this._objRef?.material;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThTexturePass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTexturePass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTexturePass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTexturePass, selector: \"th-texturePass\", inputs: { map: \"map\", opacity: \"opacity\", uniforms: \"uniforms\", material: \"material\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThTexturePass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTexturePass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-texturePass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThTexturePass) }]\n                }]\n        }], propDecorators: { map: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], uniforms: [{\n                type: Input\n            }], material: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTorusGeometry extends ThBufferGeometry {\n    getType() {\n        return TorusGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThTorusGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTorusGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTorusGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTorusGeometry, selector: \"th-torusGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThTorusGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTorusGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-torusGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThTorusGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTorusKnotGeometry extends ThBufferGeometry {\n    getType() {\n        return TorusKnotGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThTorusKnotGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTorusKnotGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTorusKnotGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTorusKnotGeometry, selector: \"th-torusKnotGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThTorusKnotGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTorusKnotGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-torusKnotGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThTorusKnotGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTrackballControls extends ThControlBase {\n    getType() {\n        return TrackballControls;\n    }\n    set object(value) {\n        if (this._objRef) {\n            this._objRef.object = value;\n        }\n    }\n    // @ts-ignore\n    get object() {\n        return this._objRef?.object;\n    }\n    set domElement(value) {\n        if (this._objRef) {\n            this._objRef.domElement = value;\n        }\n    }\n    // @ts-ignore\n    get domElement() {\n        return this._objRef?.domElement;\n    }\n    set enabled(value) {\n        if (this._objRef) {\n            this._objRef.enabled = value;\n        }\n    }\n    // @ts-ignore\n    get enabled() {\n        return this._objRef?.enabled;\n    }\n    set screen(value) {\n        if (this._objRef) {\n            this._objRef.screen = value;\n        }\n    }\n    // @ts-ignore\n    get screen() {\n        return this._objRef?.screen;\n    }\n    set rotateSpeed(value) {\n        if (this._objRef) {\n            this._objRef.rotateSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get rotateSpeed() {\n        return this._objRef?.rotateSpeed;\n    }\n    set zoomSpeed(value) {\n        if (this._objRef) {\n            this._objRef.zoomSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get zoomSpeed() {\n        return this._objRef?.zoomSpeed;\n    }\n    set panSpeed(value) {\n        if (this._objRef) {\n            this._objRef.panSpeed = value;\n        }\n    }\n    // @ts-ignore\n    get panSpeed() {\n        return this._objRef?.panSpeed;\n    }\n    set noRotate(value) {\n        if (this._objRef) {\n            this._objRef.noRotate = value;\n        }\n    }\n    // @ts-ignore\n    get noRotate() {\n        return this._objRef?.noRotate;\n    }\n    set noZoom(value) {\n        if (this._objRef) {\n            this._objRef.noZoom = value;\n        }\n    }\n    // @ts-ignore\n    get noZoom() {\n        return this._objRef?.noZoom;\n    }\n    set noPan(value) {\n        if (this._objRef) {\n            this._objRef.noPan = value;\n        }\n    }\n    // @ts-ignore\n    get noPan() {\n        return this._objRef?.noPan;\n    }\n    set noRoll(value) {\n        if (this._objRef) {\n            this._objRef.noRoll = value;\n        }\n    }\n    // @ts-ignore\n    get noRoll() {\n        return this._objRef?.noRoll;\n    }\n    set staticMoving(value) {\n        if (this._objRef) {\n            this._objRef.staticMoving = value;\n        }\n    }\n    // @ts-ignore\n    get staticMoving() {\n        return this._objRef?.staticMoving;\n    }\n    set dynamicDampingFactor(value) {\n        if (this._objRef) {\n            this._objRef.dynamicDampingFactor = value;\n        }\n    }\n    // @ts-ignore\n    get dynamicDampingFactor() {\n        return this._objRef?.dynamicDampingFactor;\n    }\n    set minDistance(value) {\n        if (this._objRef) {\n            this._objRef.minDistance = value;\n        }\n    }\n    // @ts-ignore\n    get minDistance() {\n        return this._objRef?.minDistance;\n    }\n    set maxDistance(value) {\n        if (this._objRef) {\n            this._objRef.maxDistance = value;\n        }\n    }\n    // @ts-ignore\n    get maxDistance() {\n        return this._objRef?.maxDistance;\n    }\n    set minZoom(value) {\n        if (this._objRef) {\n            this._objRef.minZoom = value;\n        }\n    }\n    // @ts-ignore\n    get minZoom() {\n        return this._objRef?.minZoom;\n    }\n    set maxZoom(value) {\n        if (this._objRef) {\n            this._objRef.maxZoom = value;\n        }\n    }\n    // @ts-ignore\n    get maxZoom() {\n        return this._objRef?.maxZoom;\n    }\n    set keys(value) {\n        if (this._objRef) {\n            this._objRef.keys = value;\n        }\n    }\n    // @ts-ignore\n    get keys() {\n        return this._objRef?.keys;\n    }\n    set mouseButtons(value) {\n        if (this._objRef) {\n            this._objRef.mouseButtons = value;\n        }\n    }\n    // @ts-ignore\n    get mouseButtons() {\n        return this._objRef?.mouseButtons;\n    }\n    set target(value) {\n        if (this._objRef) {\n            this._objRef.target = applyValue(this._objRef.target, value);\n        }\n    }\n    // @ts-ignore\n    get target() {\n        return this._objRef?.target;\n    }\n    set position0(value) {\n        if (this._objRef) {\n            this._objRef.position0 = applyValue(this._objRef.position0, value);\n        }\n    }\n    // @ts-ignore\n    get position0() {\n        return this._objRef?.position0;\n    }\n    set target0(value) {\n        if (this._objRef) {\n            this._objRef.target0 = applyValue(this._objRef.target0, value);\n        }\n    }\n    // @ts-ignore\n    get target0() {\n        return this._objRef?.target0;\n    }\n    set up0(value) {\n        if (this._objRef) {\n            this._objRef.up0 = applyValue(this._objRef.up0, value);\n        }\n    }\n    // @ts-ignore\n    get up0() {\n        return this._objRef?.up0;\n    }\n}\nThTrackballControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTrackballControls, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTrackballControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTrackballControls, selector: \"th-trackballControls\", inputs: { object: \"object\", domElement: \"domElement\", enabled: \"enabled\", screen: \"screen\", rotateSpeed: \"rotateSpeed\", zoomSpeed: \"zoomSpeed\", panSpeed: \"panSpeed\", noRotate: \"noRotate\", noZoom: \"noZoom\", noPan: \"noPan\", noRoll: \"noRoll\", staticMoving: \"staticMoving\", dynamicDampingFactor: \"dynamicDampingFactor\", minDistance: \"minDistance\", maxDistance: \"maxDistance\", minZoom: \"minZoom\", maxZoom: \"maxZoom\", keys: \"keys\", mouseButtons: \"mouseButtons\", target: \"target\", position0: \"position0\", target0: \"target0\", up0: \"up0\" }, providers: [\n        {\n            provide: ThControlBase,\n            useExisting: forwardRef(() => ThTrackballControls)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTrackballControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-trackballControls',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThControlBase,\n                            useExisting: forwardRef(() => ThTrackballControls)\n                        }\n                    ]\n                }]\n        }], propDecorators: { object: [{\n                type: Input\n            }], domElement: [{\n                type: Input\n            }], enabled: [{\n                type: Input\n            }], screen: [{\n                type: Input\n            }], rotateSpeed: [{\n                type: Input\n            }], zoomSpeed: [{\n                type: Input\n            }], panSpeed: [{\n                type: Input\n            }], noRotate: [{\n                type: Input\n            }], noZoom: [{\n                type: Input\n            }], noPan: [{\n                type: Input\n            }], noRoll: [{\n                type: Input\n            }], staticMoving: [{\n                type: Input\n            }], dynamicDampingFactor: [{\n                type: Input\n            }], minDistance: [{\n                type: Input\n            }], maxDistance: [{\n                type: Input\n            }], minZoom: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], keys: [{\n                type: Input\n            }], mouseButtons: [{\n                type: Input\n            }], target: [{\n                type: Input\n            }], position0: [{\n                type: Input\n            }], target0: [{\n                type: Input\n            }], up0: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThTubeGeometry extends ThBufferGeometry {\n    getType() {\n        return TubeGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n    set tangents(value) {\n        if (this._objRef) {\n            this._objRef.tangents = value;\n        }\n    }\n    // @ts-ignore\n    get tangents() {\n        return this._objRef?.tangents;\n    }\n    set normals(value) {\n        if (this._objRef) {\n            this._objRef.normals = value;\n        }\n    }\n    // @ts-ignore\n    get normals() {\n        return this._objRef?.normals;\n    }\n    set binormals(value) {\n        if (this._objRef) {\n            this._objRef.binormals = value;\n        }\n    }\n    // @ts-ignore\n    get binormals() {\n        return this._objRef?.binormals;\n    }\n}\nThTubeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTubeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThTubeGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTubeGeometry, selector: \"th-tubeGeometry\", inputs: { tangents: \"tangents\", normals: \"normals\", binormals: \"binormals\" }, providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThTubeGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTubeGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-tubeGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThTubeGeometry)\n                        }\n                    ]\n                }]\n        }], propDecorators: { tangents: [{\n                type: Input\n            }], normals: [{\n                type: Input\n            }], binormals: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/ban-types */\nclass ThUnrealBloomPass extends ThPass {\n    getType() {\n        return UnrealBloomPass;\n    }\n    set resolution(value) {\n        if (this._objRef) {\n            this._objRef.resolution = applyValue(this._objRef.resolution, value);\n        }\n    }\n    // @ts-ignore\n    get resolution() {\n        return this._objRef?.resolution;\n    }\n    set strength(value) {\n        if (this._objRef) {\n            this._objRef.strength = value;\n        }\n    }\n    // @ts-ignore\n    get strength() {\n        return this._objRef?.strength;\n    }\n    set radius(value) {\n        if (this._objRef) {\n            this._objRef.radius = value;\n        }\n    }\n    // @ts-ignore\n    get radius() {\n        return this._objRef?.radius;\n    }\n    set threshold(value) {\n        if (this._objRef) {\n            this._objRef.threshold = value;\n        }\n    }\n    // @ts-ignore\n    get threshold() {\n        return this._objRef?.threshold;\n    }\n    set clearColor(value) {\n        if (this._objRef) {\n            this._objRef.clearColor = applyValue(this._objRef.clearColor, value);\n        }\n    }\n    // @ts-ignore\n    get clearColor() {\n        return this._objRef?.clearColor;\n    }\n    set renderTargetsHorizontal(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetsHorizontal = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetsHorizontal() {\n        return this._objRef?.renderTargetsHorizontal;\n    }\n    set renderTargetsVertical(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetsVertical = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetsVertical() {\n        return this._objRef?.renderTargetsVertical;\n    }\n    set nMips(value) {\n        if (this._objRef) {\n            this._objRef.nMips = value;\n        }\n    }\n    // @ts-ignore\n    get nMips() {\n        return this._objRef?.nMips;\n    }\n    set renderTargetBright(value) {\n        if (this._objRef) {\n            this._objRef.renderTargetBright = value;\n        }\n    }\n    // @ts-ignore\n    get renderTargetBright() {\n        return this._objRef?.renderTargetBright;\n    }\n    set highPassUniforms(value) {\n        if (this._objRef) {\n            this._objRef.highPassUniforms = value;\n        }\n    }\n    // @ts-ignore\n    get highPassUniforms() {\n        return this._objRef?.highPassUniforms;\n    }\n    set materialHighPassFilter(value) {\n        if (this._objRef) {\n            this._objRef.materialHighPassFilter = value;\n        }\n    }\n    // @ts-ignore\n    get materialHighPassFilter() {\n        return this._objRef?.materialHighPassFilter;\n    }\n    set separableBlurMaterials(value) {\n        if (this._objRef) {\n            this._objRef.separableBlurMaterials = value;\n        }\n    }\n    // @ts-ignore\n    get separableBlurMaterials() {\n        return this._objRef?.separableBlurMaterials;\n    }\n    set compositeMaterial(value) {\n        if (this._objRef) {\n            this._objRef.compositeMaterial = value;\n        }\n    }\n    // @ts-ignore\n    get compositeMaterial() {\n        return this._objRef?.compositeMaterial;\n    }\n    set bloomTintColors(value) {\n        if (this._objRef) {\n            this._objRef.bloomTintColors = value;\n        }\n    }\n    // @ts-ignore\n    get bloomTintColors() {\n        return this._objRef?.bloomTintColors;\n    }\n    set copyUniforms(value) {\n        if (this._objRef) {\n            this._objRef.copyUniforms = value;\n        }\n    }\n    // @ts-ignore\n    get copyUniforms() {\n        return this._objRef?.copyUniforms;\n    }\n    set materialCopy(value) {\n        if (this._objRef) {\n            this._objRef.materialCopy = value;\n        }\n    }\n    // @ts-ignore\n    get materialCopy() {\n        return this._objRef?.materialCopy;\n    }\n    set oldClearColor(value) {\n        if (this._objRef) {\n            this._objRef.oldClearColor = applyValue(this._objRef.oldClearColor, value);\n        }\n    }\n    // @ts-ignore\n    get oldClearColor() {\n        return this._objRef?.oldClearColor;\n    }\n    set oldClearAlpha(value) {\n        if (this._objRef) {\n            this._objRef.oldClearAlpha = value;\n        }\n    }\n    // @ts-ignore\n    get oldClearAlpha() {\n        return this._objRef?.oldClearAlpha;\n    }\n    set basic(value) {\n        if (this._objRef) {\n            this._objRef.basic = value;\n        }\n    }\n    // @ts-ignore\n    get basic() {\n        return this._objRef?.basic;\n    }\n    set fsQuad(value) {\n        if (this._objRef) {\n            this._objRef.fsQuad = value;\n        }\n    }\n    // @ts-ignore\n    get fsQuad() {\n        return this._objRef?.fsQuad;\n    }\n}\nThUnrealBloomPass.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThUnrealBloomPass, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThUnrealBloomPass.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThUnrealBloomPass, selector: \"th-unrealBloomPass\", inputs: { resolution: \"resolution\", strength: \"strength\", radius: \"radius\", threshold: \"threshold\", clearColor: \"clearColor\", renderTargetsHorizontal: \"renderTargetsHorizontal\", renderTargetsVertical: \"renderTargetsVertical\", nMips: \"nMips\", renderTargetBright: \"renderTargetBright\", highPassUniforms: \"highPassUniforms\", materialHighPassFilter: \"materialHighPassFilter\", separableBlurMaterials: \"separableBlurMaterials\", compositeMaterial: \"compositeMaterial\", bloomTintColors: \"bloomTintColors\", copyUniforms: \"copyUniforms\", materialCopy: \"materialCopy\", oldClearColor: \"oldClearColor\", oldClearAlpha: \"oldClearAlpha\", basic: \"basic\", fsQuad: \"fsQuad\" }, providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThUnrealBloomPass) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThUnrealBloomPass, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-unrealBloomPass',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThUnrealBloomPass) }]\n                }]\n        }], propDecorators: { resolution: [{\n                type: Input\n            }], strength: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], threshold: [{\n                type: Input\n            }], clearColor: [{\n                type: Input\n            }], renderTargetsHorizontal: [{\n                type: Input\n            }], renderTargetsVertical: [{\n                type: Input\n            }], nMips: [{\n                type: Input\n            }], renderTargetBright: [{\n                type: Input\n            }], highPassUniforms: [{\n                type: Input\n            }], materialHighPassFilter: [{\n                type: Input\n            }], separableBlurMaterials: [{\n                type: Input\n            }], compositeMaterial: [{\n                type: Input\n            }], bloomTintColors: [{\n                type: Input\n            }], copyUniforms: [{\n                type: Input\n            }], materialCopy: [{\n                type: Input\n            }], oldClearColor: [{\n                type: Input\n            }], oldClearAlpha: [{\n                type: Input\n            }], basic: [{\n                type: Input\n            }], fsQuad: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThVideoTexture extends ThTexture {\n    getType() {\n        return VideoTexture;\n    }\n    // @ts-ignore\n    get isVideoTexture() {\n        return this._objRef?.isVideoTexture;\n    }\n    set magFilter(value) {\n        if (this._objRef) {\n            this._objRef.magFilter = value;\n        }\n    }\n    // @ts-ignore\n    get magFilter() {\n        return this._objRef?.magFilter;\n    }\n    set minFilter(value) {\n        if (this._objRef) {\n            this._objRef.minFilter = value;\n        }\n    }\n    // @ts-ignore\n    get minFilter() {\n        return this._objRef?.minFilter;\n    }\n    set generateMipmaps(value) {\n        if (this._objRef) {\n            this._objRef.generateMipmaps = value;\n        }\n    }\n    // @ts-ignore\n    get generateMipmaps() {\n        return this._objRef?.generateMipmaps;\n    }\n}\nThVideoTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThVideoTexture, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThVideoTexture.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThVideoTexture, selector: \"th-videoTexture\", inputs: { magFilter: \"magFilter\", minFilter: \"minFilter\", generateMipmaps: \"generateMipmaps\" }, providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThVideoTexture) }], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThVideoTexture, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-videoTexture',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{ provide: ThTextureBase, useExisting: forwardRef(() => ThVideoTexture) }]\n                }]\n        }], propDecorators: { magFilter: [{\n                type: Input\n            }], minFilter: [{\n                type: Input\n            }], generateMipmaps: [{\n                type: Input\n            }] } });\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass ThWireframeGeometry extends ThBufferGeometry {\n    getType() {\n        return WireframeGeometry;\n    }\n    // @ts-ignore\n    get type() {\n        return this._objRef?.type;\n    }\n    // @ts-ignore\n    get parameters() {\n        return this._objRef?.parameters;\n    }\n}\nThWireframeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThWireframeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Component });\nThWireframeGeometry.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThWireframeGeometry, selector: \"th-wireframeGeometry\", providers: [\n        {\n            provide: ThBufferGeometry,\n            useExisting: forwardRef(() => ThWireframeGeometry)\n        }\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content/>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThWireframeGeometry, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th-wireframeGeometry',\n                    template: '<ng-content/>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: ThBufferGeometry,\n                            useExisting: forwardRef(() => ThWireframeGeometry)\n                        }\n                    ]\n                }]\n        }] });\n\nclass NgxThreeGeneratedModule {\n}\nNgxThreeGeneratedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeGeneratedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxThreeGeneratedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeGeneratedModule, declarations: [ThTransformControlsGen,\n        ThTransformControls,\n        ThArcballControls,\n        ThDragControls,\n        ThFirstPersonControls,\n        ThFlyControls,\n        ThOrbitControls,\n        ThMapControls,\n        ThPointerLockControls,\n        ThTrackballControls,\n        ThAudioListener,\n        ThPositionalAudio,\n        ThAudio,\n        ThStereoCamera,\n        ThPerspectiveCamera,\n        ThOrthographicCamera,\n        ThCubeCamera,\n        ThArrayCamera,\n        ThObject3D,\n        ThSpotLightHelper,\n        ThSkeletonHelper,\n        ThPointLightHelper,\n        ThHemisphereLightHelper,\n        ThGridHelper,\n        ThPolarGridHelper,\n        ThDirectionalLightHelper,\n        ThCameraHelper,\n        ThBoxHelper,\n        ThBox3Helper,\n        ThPlaneHelper,\n        ThArrowHelper,\n        ThAxesHelper,\n        ThSpotLight,\n        ThPointLight,\n        ThRectAreaLight,\n        ThHemisphereLight,\n        ThDirectionalLight,\n        ThAmbientLight,\n        ThAmbientLightProbe,\n        ThHemisphereLightProbe,\n        ThLightProbe,\n        ThSprite,\n        ThLOD,\n        ThInstancedMesh,\n        ThSkinnedMesh,\n        ThBone,\n        ThMesh,\n        ThLineSegments,\n        ThLineLoop,\n        ThLine,\n        ThPoints,\n        ThGroup,\n        ThScene,\n        ThShadowMaterial,\n        ThSpriteMaterial,\n        ThRawShaderMaterial,\n        ThShaderMaterial,\n        ThPointsMaterial,\n        ThMeshPhysicalMaterial,\n        ThMeshStandardMaterial,\n        ThMeshPhongMaterial,\n        ThMeshToonMaterial,\n        ThMeshNormalMaterial,\n        ThMeshLambertMaterial,\n        ThMeshDepthMaterial,\n        ThMeshDistanceMaterial,\n        ThMeshBasicMaterial,\n        ThMeshMatcapMaterial,\n        ThLineDashedMaterial,\n        ThLineBasicMaterial,\n        ThMaterial,\n        ThInstancedBufferGeometry,\n        ThBufferGeometry,\n        ThBoxGeometry,\n        ThCapsuleGeometry,\n        ThCircleGeometry,\n        ThConeGeometry,\n        ThCylinderGeometry,\n        ThDodecahedronGeometry,\n        ThEdgesGeometry,\n        ThExtrudeGeometry,\n        ThIcosahedronGeometry,\n        ThLatheGeometry,\n        ThOctahedronGeometry,\n        ThPlaneGeometry,\n        ThPolyhedronGeometry,\n        ThRingGeometry,\n        ThShapeGeometry,\n        ThSphereGeometry,\n        ThTetrahedronGeometry,\n        ThTorusGeometry,\n        ThTorusKnotGeometry,\n        ThTubeGeometry,\n        ThWireframeGeometry,\n        ThBoxLineGeometry,\n        ThConvexGeometry,\n        ThDecalGeometry,\n        ThLightningStrike,\n        ThParametricGeometry,\n        ThRoundedBoxGeometry,\n        ThTeapotGeometry,\n        ThTextGeometry,\n        ThPass,\n        ThEffectComposerGen,\n        ThEffectComposer,\n        ThAdaptiveToneMappingPass,\n        ThAfterimagePass,\n        ThBloomPass,\n        ThBokehPass,\n        ThClearPass,\n        ThCubeTexturePass,\n        ThDotScreenPass,\n        ThFilmPass,\n        ThGlitchPass,\n        ThHalftonePass,\n        ThLUTPass,\n        ThMaskPass,\n        ThClearMaskPass,\n        ThOutlinePass,\n        ThRenderPassGen,\n        ThRenderPass,\n        ThSAOPass,\n        ThSMAAPass,\n        ThSSAARenderPass,\n        ThSSAOPass,\n        ThSSRPass,\n        ThSavePass,\n        ThShaderPass,\n        ThTAARenderPass,\n        ThTexturePass,\n        ThUnrealBloomPass,\n        ThVideoTexture,\n        ThCompressedArrayTexture,\n        ThDataTexture,\n        ThCompressedTexture,\n        ThCubeTexture,\n        ThData3DTexture,\n        ThDataArrayTexture,\n        ThCanvasTexture,\n        ThDepthTexture,\n        ThFramebufferTexture,\n        ThTexture], exports: [ThTransformControlsGen,\n        ThTransformControls,\n        ThArcballControls,\n        ThDragControls,\n        ThFirstPersonControls,\n        ThFlyControls,\n        ThOrbitControls,\n        ThMapControls,\n        ThPointerLockControls,\n        ThTrackballControls,\n        ThAudioListener,\n        ThPositionalAudio,\n        ThAudio,\n        ThStereoCamera,\n        ThPerspectiveCamera,\n        ThOrthographicCamera,\n        ThCubeCamera,\n        ThArrayCamera,\n        ThObject3D,\n        ThSpotLightHelper,\n        ThSkeletonHelper,\n        ThPointLightHelper,\n        ThHemisphereLightHelper,\n        ThGridHelper,\n        ThPolarGridHelper,\n        ThDirectionalLightHelper,\n        ThCameraHelper,\n        ThBoxHelper,\n        ThBox3Helper,\n        ThPlaneHelper,\n        ThArrowHelper,\n        ThAxesHelper,\n        ThSpotLight,\n        ThPointLight,\n        ThRectAreaLight,\n        ThHemisphereLight,\n        ThDirectionalLight,\n        ThAmbientLight,\n        ThAmbientLightProbe,\n        ThHemisphereLightProbe,\n        ThLightProbe,\n        ThSprite,\n        ThLOD,\n        ThInstancedMesh,\n        ThSkinnedMesh,\n        ThBone,\n        ThMesh,\n        ThLineSegments,\n        ThLineLoop,\n        ThLine,\n        ThPoints,\n        ThGroup,\n        ThScene,\n        ThShadowMaterial,\n        ThSpriteMaterial,\n        ThRawShaderMaterial,\n        ThShaderMaterial,\n        ThPointsMaterial,\n        ThMeshPhysicalMaterial,\n        ThMeshStandardMaterial,\n        ThMeshPhongMaterial,\n        ThMeshToonMaterial,\n        ThMeshNormalMaterial,\n        ThMeshLambertMaterial,\n        ThMeshDepthMaterial,\n        ThMeshDistanceMaterial,\n        ThMeshBasicMaterial,\n        ThMeshMatcapMaterial,\n        ThLineDashedMaterial,\n        ThLineBasicMaterial,\n        ThMaterial,\n        ThInstancedBufferGeometry,\n        ThBufferGeometry,\n        ThBoxGeometry,\n        ThCapsuleGeometry,\n        ThCircleGeometry,\n        ThConeGeometry,\n        ThCylinderGeometry,\n        ThDodecahedronGeometry,\n        ThEdgesGeometry,\n        ThExtrudeGeometry,\n        ThIcosahedronGeometry,\n        ThLatheGeometry,\n        ThOctahedronGeometry,\n        ThPlaneGeometry,\n        ThPolyhedronGeometry,\n        ThRingGeometry,\n        ThShapeGeometry,\n        ThSphereGeometry,\n        ThTetrahedronGeometry,\n        ThTorusGeometry,\n        ThTorusKnotGeometry,\n        ThTubeGeometry,\n        ThWireframeGeometry,\n        ThBoxLineGeometry,\n        ThConvexGeometry,\n        ThDecalGeometry,\n        ThLightningStrike,\n        ThParametricGeometry,\n        ThRoundedBoxGeometry,\n        ThTeapotGeometry,\n        ThTextGeometry,\n        ThPass,\n        ThEffectComposerGen,\n        ThEffectComposer,\n        ThAdaptiveToneMappingPass,\n        ThAfterimagePass,\n        ThBloomPass,\n        ThBokehPass,\n        ThClearPass,\n        ThCubeTexturePass,\n        ThDotScreenPass,\n        ThFilmPass,\n        ThGlitchPass,\n        ThHalftonePass,\n        ThLUTPass,\n        ThMaskPass,\n        ThClearMaskPass,\n        ThOutlinePass,\n        ThRenderPassGen,\n        ThRenderPass,\n        ThSAOPass,\n        ThSMAAPass,\n        ThSSAARenderPass,\n        ThSSAOPass,\n        ThSSRPass,\n        ThSavePass,\n        ThShaderPass,\n        ThTAARenderPass,\n        ThTexturePass,\n        ThUnrealBloomPass,\n        ThVideoTexture,\n        ThCompressedArrayTexture,\n        ThDataTexture,\n        ThCompressedTexture,\n        ThCubeTexture,\n        ThData3DTexture,\n        ThDataArrayTexture,\n        ThCanvasTexture,\n        ThDepthTexture,\n        ThFramebufferTexture,\n        ThTexture] });\nNgxThreeGeneratedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeGeneratedModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeGeneratedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ThTransformControlsGen,\n                        ThTransformControls,\n                        ThArcballControls,\n                        ThDragControls,\n                        ThFirstPersonControls,\n                        ThFlyControls,\n                        ThOrbitControls,\n                        ThMapControls,\n                        ThPointerLockControls,\n                        ThTrackballControls,\n                        ThAudioListener,\n                        ThPositionalAudio,\n                        ThAudio,\n                        ThStereoCamera,\n                        ThPerspectiveCamera,\n                        ThOrthographicCamera,\n                        ThCubeCamera,\n                        ThArrayCamera,\n                        ThObject3D,\n                        ThSpotLightHelper,\n                        ThSkeletonHelper,\n                        ThPointLightHelper,\n                        ThHemisphereLightHelper,\n                        ThGridHelper,\n                        ThPolarGridHelper,\n                        ThDirectionalLightHelper,\n                        ThCameraHelper,\n                        ThBoxHelper,\n                        ThBox3Helper,\n                        ThPlaneHelper,\n                        ThArrowHelper,\n                        ThAxesHelper,\n                        ThSpotLight,\n                        ThPointLight,\n                        ThRectAreaLight,\n                        ThHemisphereLight,\n                        ThDirectionalLight,\n                        ThAmbientLight,\n                        ThAmbientLightProbe,\n                        ThHemisphereLightProbe,\n                        ThLightProbe,\n                        ThSprite,\n                        ThLOD,\n                        ThInstancedMesh,\n                        ThSkinnedMesh,\n                        ThBone,\n                        ThMesh,\n                        ThLineSegments,\n                        ThLineLoop,\n                        ThLine,\n                        ThPoints,\n                        ThGroup,\n                        ThScene,\n                        ThShadowMaterial,\n                        ThSpriteMaterial,\n                        ThRawShaderMaterial,\n                        ThShaderMaterial,\n                        ThPointsMaterial,\n                        ThMeshPhysicalMaterial,\n                        ThMeshStandardMaterial,\n                        ThMeshPhongMaterial,\n                        ThMeshToonMaterial,\n                        ThMeshNormalMaterial,\n                        ThMeshLambertMaterial,\n                        ThMeshDepthMaterial,\n                        ThMeshDistanceMaterial,\n                        ThMeshBasicMaterial,\n                        ThMeshMatcapMaterial,\n                        ThLineDashedMaterial,\n                        ThLineBasicMaterial,\n                        ThMaterial,\n                        ThInstancedBufferGeometry,\n                        ThBufferGeometry,\n                        ThBoxGeometry,\n                        ThCapsuleGeometry,\n                        ThCircleGeometry,\n                        ThConeGeometry,\n                        ThCylinderGeometry,\n                        ThDodecahedronGeometry,\n                        ThEdgesGeometry,\n                        ThExtrudeGeometry,\n                        ThIcosahedronGeometry,\n                        ThLatheGeometry,\n                        ThOctahedronGeometry,\n                        ThPlaneGeometry,\n                        ThPolyhedronGeometry,\n                        ThRingGeometry,\n                        ThShapeGeometry,\n                        ThSphereGeometry,\n                        ThTetrahedronGeometry,\n                        ThTorusGeometry,\n                        ThTorusKnotGeometry,\n                        ThTubeGeometry,\n                        ThWireframeGeometry,\n                        ThBoxLineGeometry,\n                        ThConvexGeometry,\n                        ThDecalGeometry,\n                        ThLightningStrike,\n                        ThParametricGeometry,\n                        ThRoundedBoxGeometry,\n                        ThTeapotGeometry,\n                        ThTextGeometry,\n                        ThPass,\n                        ThEffectComposerGen,\n                        ThEffectComposer,\n                        ThAdaptiveToneMappingPass,\n                        ThAfterimagePass,\n                        ThBloomPass,\n                        ThBokehPass,\n                        ThClearPass,\n                        ThCubeTexturePass,\n                        ThDotScreenPass,\n                        ThFilmPass,\n                        ThGlitchPass,\n                        ThHalftonePass,\n                        ThLUTPass,\n                        ThMaskPass,\n                        ThClearMaskPass,\n                        ThOutlinePass,\n                        ThRenderPassGen,\n                        ThRenderPass,\n                        ThSAOPass,\n                        ThSMAAPass,\n                        ThSSAARenderPass,\n                        ThSSAOPass,\n                        ThSSRPass,\n                        ThSavePass,\n                        ThShaderPass,\n                        ThTAARenderPass,\n                        ThTexturePass,\n                        ThUnrealBloomPass,\n                        ThVideoTexture,\n                        ThCompressedArrayTexture,\n                        ThDataTexture,\n                        ThCompressedTexture,\n                        ThCubeTexture,\n                        ThData3DTexture,\n                        ThDataArrayTexture,\n                        ThCanvasTexture,\n                        ThDepthTexture,\n                        ThFramebufferTexture,\n                        ThTexture,\n                    ],\n                    exports: [\n                        ThTransformControlsGen,\n                        ThTransformControls,\n                        ThArcballControls,\n                        ThDragControls,\n                        ThFirstPersonControls,\n                        ThFlyControls,\n                        ThOrbitControls,\n                        ThMapControls,\n                        ThPointerLockControls,\n                        ThTrackballControls,\n                        ThAudioListener,\n                        ThPositionalAudio,\n                        ThAudio,\n                        ThStereoCamera,\n                        ThPerspectiveCamera,\n                        ThOrthographicCamera,\n                        ThCubeCamera,\n                        ThArrayCamera,\n                        ThObject3D,\n                        ThSpotLightHelper,\n                        ThSkeletonHelper,\n                        ThPointLightHelper,\n                        ThHemisphereLightHelper,\n                        ThGridHelper,\n                        ThPolarGridHelper,\n                        ThDirectionalLightHelper,\n                        ThCameraHelper,\n                        ThBoxHelper,\n                        ThBox3Helper,\n                        ThPlaneHelper,\n                        ThArrowHelper,\n                        ThAxesHelper,\n                        ThSpotLight,\n                        ThPointLight,\n                        ThRectAreaLight,\n                        ThHemisphereLight,\n                        ThDirectionalLight,\n                        ThAmbientLight,\n                        ThAmbientLightProbe,\n                        ThHemisphereLightProbe,\n                        ThLightProbe,\n                        ThSprite,\n                        ThLOD,\n                        ThInstancedMesh,\n                        ThSkinnedMesh,\n                        ThBone,\n                        ThMesh,\n                        ThLineSegments,\n                        ThLineLoop,\n                        ThLine,\n                        ThPoints,\n                        ThGroup,\n                        ThScene,\n                        ThShadowMaterial,\n                        ThSpriteMaterial,\n                        ThRawShaderMaterial,\n                        ThShaderMaterial,\n                        ThPointsMaterial,\n                        ThMeshPhysicalMaterial,\n                        ThMeshStandardMaterial,\n                        ThMeshPhongMaterial,\n                        ThMeshToonMaterial,\n                        ThMeshNormalMaterial,\n                        ThMeshLambertMaterial,\n                        ThMeshDepthMaterial,\n                        ThMeshDistanceMaterial,\n                        ThMeshBasicMaterial,\n                        ThMeshMatcapMaterial,\n                        ThLineDashedMaterial,\n                        ThLineBasicMaterial,\n                        ThMaterial,\n                        ThInstancedBufferGeometry,\n                        ThBufferGeometry,\n                        ThBoxGeometry,\n                        ThCapsuleGeometry,\n                        ThCircleGeometry,\n                        ThConeGeometry,\n                        ThCylinderGeometry,\n                        ThDodecahedronGeometry,\n                        ThEdgesGeometry,\n                        ThExtrudeGeometry,\n                        ThIcosahedronGeometry,\n                        ThLatheGeometry,\n                        ThOctahedronGeometry,\n                        ThPlaneGeometry,\n                        ThPolyhedronGeometry,\n                        ThRingGeometry,\n                        ThShapeGeometry,\n                        ThSphereGeometry,\n                        ThTetrahedronGeometry,\n                        ThTorusGeometry,\n                        ThTorusKnotGeometry,\n                        ThTubeGeometry,\n                        ThWireframeGeometry,\n                        ThBoxLineGeometry,\n                        ThConvexGeometry,\n                        ThDecalGeometry,\n                        ThLightningStrike,\n                        ThParametricGeometry,\n                        ThRoundedBoxGeometry,\n                        ThTeapotGeometry,\n                        ThTextGeometry,\n                        ThPass,\n                        ThEffectComposerGen,\n                        ThEffectComposer,\n                        ThAdaptiveToneMappingPass,\n                        ThAfterimagePass,\n                        ThBloomPass,\n                        ThBokehPass,\n                        ThClearPass,\n                        ThCubeTexturePass,\n                        ThDotScreenPass,\n                        ThFilmPass,\n                        ThGlitchPass,\n                        ThHalftonePass,\n                        ThLUTPass,\n                        ThMaskPass,\n                        ThClearMaskPass,\n                        ThOutlinePass,\n                        ThRenderPassGen,\n                        ThRenderPass,\n                        ThSAOPass,\n                        ThSMAAPass,\n                        ThSSAARenderPass,\n                        ThSSAOPass,\n                        ThSSRPass,\n                        ThSavePass,\n                        ThShaderPass,\n                        ThTAARenderPass,\n                        ThTexturePass,\n                        ThUnrealBloomPass,\n                        ThVideoTexture,\n                        ThCompressedArrayTexture,\n                        ThDataTexture,\n                        ThCompressedTexture,\n                        ThCubeTexture,\n                        ThData3DTexture,\n                        ThDataArrayTexture,\n                        ThCanvasTexture,\n                        ThDepthTexture,\n                        ThFramebufferTexture,\n                        ThTexture,\n                    ],\n                }]\n        }] });\n\nclass ThLoader {\n    setCrossOrigin(cors) {\n        this.crossOrigin = cors;\n    }\n    setWithCredentials(credentials) {\n        this.withCredentials = credentials;\n    }\n    createLoaderInstance() {\n        const loader = new this.clazz();\n        if (this.crossOrigin) {\n            loader.setCrossOrigin(this.crossOrigin);\n        }\n        if (this.withCredentials !== undefined) {\n            loader.setWithCredentials(this.withCredentials);\n        }\n        return loader;\n    }\n}\n\nclass ThCallbackLoaderService extends ThLoader {\n    load(...args) {\n        const loader = this.createLoaderInstance();\n        return loader.load(...args);\n    }\n}\nclass ThCallbackLoaderBasePipe {\n    transform(...args) {\n        return this.service.load(...args);\n    }\n}\nclass ThCallbackLoaderBaseDirective {\n    set url(url) {\n        this._url = url;\n        this.load();\n    }\n    get url() {\n        return this._url;\n    }\n    get onLoaded() {\n        if (!this.onLoaded$) {\n            this.onLoaded$ = new EventEmitter();\n        }\n        return this.onLoaded$;\n    }\n    get onProgress() {\n        if (!this.onProgress$) {\n            this.onProgress$ = new EventEmitter();\n        }\n        return this.onProgress$;\n    }\n    constructor(host, zone) {\n        this.host = host;\n        this.zone = zone;\n        this.initialized = false;\n    }\n    ngOnInit() {\n        this.initialized = true;\n        this.load();\n        // this.zone.runOutsideAngular(() => );\n    }\n    async load() {\n        if (!this.initialized) {\n            return;\n        }\n        if (this._url === undefined) {\n            throw new Error('missing url');\n        }\n        const url = this._url;\n        const onProgress = isObserved(this.onProgress$)\n            ? (progress) => {\n                this.onProgress$?.next(progress);\n            }\n            : undefined;\n        const onLoad = isObserved(this.onLoaded$)\n            ? (...args) => {\n                this.onLoaded$?.next(args[0]);\n            }\n            : undefined;\n        this.host.objRef = this.zone.runOutsideAngular(() => this.service.load(url, onProgress, onLoad));\n    }\n}\nThCallbackLoaderBaseDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCallbackLoaderBaseDirective, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\nThCallbackLoaderBaseDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCallbackLoaderBaseDirective, inputs: { url: \"url\" }, outputs: { onLoaded: \"onLoaded\", onProgress: \"onProgress\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCallbackLoaderBaseDirective, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }]; }, propDecorators: { url: [{\n                type: Input\n            }], onLoaded: [{\n                type: Output\n            }], onProgress: [{\n                type: Output\n            }] } });\n\nclass DDSLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = DDSLoader;\n    }\n}\nDDSLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: DDSLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nDDSLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: DDSLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: DDSLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThDDSLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThDDSLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDDSLoaderPipe, deps: [{ token: DDSLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThDDSLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDDSLoaderPipe, name: \"loadDDSTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDDSLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadDDSTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: DDSLoaderService }]; } });\nclass ThDDSLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThDDSLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDDSLoaderDirective, deps: [{ token: ThCompressedTexture, host: true }, { token: i0.NgZone }, { token: DDSLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThDDSLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThDDSLoaderDirective, selector: \"[loadDDSTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThDDSLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadDDSTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThCompressedTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: DDSLoaderService }]; } });\n\nclass KTX2LoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = KTX2Loader;\n        this.transcoderPath = '';\n    }\n    setDecoderPath(path) {\n        this.transcoderPath = path;\n    }\n    createLoaderInstance() {\n        const loader = super.createLoaderInstance();\n        loader.setTranscoderPath(this.transcoderPath);\n        return loader;\n    }\n}\nKTX2LoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: KTX2LoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nKTX2LoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: KTX2LoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: KTX2LoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThKTX2LoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThKTX2LoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTX2LoaderPipe, deps: [{ token: KTX2LoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThKTX2LoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTX2LoaderPipe, name: \"loadKTX2Texture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTX2LoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadKTX2Texture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: KTX2LoaderService }]; } });\nclass ThKTX2LoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThKTX2LoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTX2LoaderDirective, deps: [{ token: ThTexture, host: true }, { token: i0.NgZone }, { token: KTX2LoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThKTX2LoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThKTX2LoaderDirective, selector: \"[loadKTX2Texture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTX2LoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadKTX2Texture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: KTX2LoaderService }]; } });\n\nclass KTXLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = KTXLoader;\n    }\n}\nKTXLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: KTXLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nKTXLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: KTXLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: KTXLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThKTXLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThKTXLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTXLoaderPipe, deps: [{ token: KTXLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThKTXLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTXLoaderPipe, name: \"loadKTXTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTXLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadKTXTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: KTXLoaderService }]; } });\nclass ThKTXLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThKTXLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTXLoaderDirective, deps: [{ token: ThCompressedTexture, host: true }, { token: i0.NgZone }, { token: KTXLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThKTXLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThKTXLoaderDirective, selector: \"[loadKTXTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThKTXLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadKTXTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThCompressedTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: KTXLoaderService }]; } });\n\nclass PVRLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = PVRLoader;\n    }\n}\nPVRLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PVRLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nPVRLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PVRLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PVRLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThPVRLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThPVRLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPVRLoaderPipe, deps: [{ token: PVRLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThPVRLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPVRLoaderPipe, name: \"loadPVRTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPVRLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadPVRTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: PVRLoaderService }]; } });\nclass ThPVRLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThPVRLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPVRLoaderDirective, deps: [{ token: ThCompressedTexture, host: true }, { token: i0.NgZone }, { token: PVRLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThPVRLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPVRLoaderDirective, selector: \"[loadPVRTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPVRLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadPVRTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThCompressedTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: PVRLoaderService }]; } });\n\nclass EXRLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = EXRLoader;\n    }\n}\nEXRLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: EXRLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nEXRLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: EXRLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: EXRLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThEXRLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThEXRLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEXRLoaderPipe, deps: [{ token: EXRLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThEXRLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEXRLoaderPipe, name: \"loadEXRTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEXRLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadEXRTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: EXRLoaderService }]; } });\nclass ThEXRLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThEXRLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEXRLoaderDirective, deps: [{ token: ThDataTexture, host: true }, { token: i0.NgZone }, { token: EXRLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThEXRLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThEXRLoaderDirective, selector: \"[loadEXRTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThEXRLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadEXRTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThDataTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: EXRLoaderService }]; } });\n\nclass RGBELoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = RGBELoader;\n    }\n}\nRGBELoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RGBELoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nRGBELoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RGBELoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RGBELoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThRGBELoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThRGBELoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBELoaderPipe, deps: [{ token: RGBELoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThRGBELoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBELoaderPipe, name: \"loadRGBETexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBELoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadRGBETexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: RGBELoaderService }]; } });\nclass ThRGBELoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThRGBELoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBELoaderDirective, deps: [{ token: ThDataTexture, host: true }, { token: i0.NgZone }, { token: RGBELoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThRGBELoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRGBELoaderDirective, selector: \"[loadRGBETexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBELoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadRGBETexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThDataTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: RGBELoaderService }]; } });\n\nclass RGBMLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = RGBMLoader;\n    }\n}\nRGBMLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RGBMLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nRGBMLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RGBMLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RGBMLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThRGBMLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThRGBMLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBMLoaderPipe, deps: [{ token: RGBMLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThRGBMLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBMLoaderPipe, name: \"loadRGBMTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBMLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadRGBMTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: RGBMLoaderService }]; } });\nclass ThRGBMLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThRGBMLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBMLoaderDirective, deps: [{ token: ThDataTexture, host: true }, { token: i0.NgZone }, { token: RGBMLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThRGBMLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRGBMLoaderDirective, selector: \"[loadRGBMTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRGBMLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadRGBMTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThDataTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: RGBMLoaderService }]; } });\n\nclass TGALoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = TGALoader;\n    }\n}\nTGALoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: TGALoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nTGALoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: TGALoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: TGALoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThTGALoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThTGALoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTGALoaderPipe, deps: [{ token: TGALoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThTGALoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTGALoaderPipe, name: \"loadTGATexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTGALoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadTGATexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: TGALoaderService }]; } });\nclass ThTGALoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThTGALoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTGALoaderDirective, deps: [{ token: ThDataTexture, host: true }, { token: i0.NgZone }, { token: TGALoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThTGALoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTGALoaderDirective, selector: \"[loadTGATexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTGALoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadTGATexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThDataTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: TGALoaderService }]; } });\n\nclass CubeTextureLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = CubeTextureLoader;\n    }\n}\nCubeTextureLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: CubeTextureLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nCubeTextureLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: CubeTextureLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: CubeTextureLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThCubeTextureLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThCubeTextureLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTextureLoaderPipe, deps: [{ token: CubeTextureLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThCubeTextureLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTextureLoaderPipe, name: \"loadCubeTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTextureLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadCubeTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: CubeTextureLoaderService }]; } });\nclass ThCubeTextureLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThCubeTextureLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTextureLoaderDirective, deps: [{ token: ThTexture, host: true }, { token: i0.NgZone }, { token: CubeTextureLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThCubeTextureLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThCubeTextureLoaderDirective, selector: \"[loadCubeTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThCubeTextureLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadCubeTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: CubeTextureLoaderService }]; } });\n\nclass ThAsyncLoaderService extends ThLoader {\n    load(...args) {\n        const loader = this.createLoaderInstance();\n        return loader.loadAsync(...args);\n    }\n}\nThAsyncLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAsyncLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nThAsyncLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAsyncLoaderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAsyncLoaderService, decorators: [{\n            type: Injectable\n        }] });\nclass ThAsyncLoaderBasePipe {\n    constructor() {\n        this.animationLoop = inject(ThAnimationLoopService);\n    }\n    transform(...args) {\n        return this.service.load(...args).then((response) => {\n            this.animationLoop.requestAnimationFrame();\n            return response;\n        });\n    }\n}\nclass ThAsyncLoaderBaseDirective {\n    set url(url) {\n        this._url = url;\n        this.load();\n    }\n    get url() {\n        return this._url;\n    }\n    get onLoaded() {\n        if (!this.onLoaded$) {\n            this.onLoaded$ = new EventEmitter();\n        }\n        return this.onLoaded$;\n    }\n    get onProgress() {\n        if (!this.onProgress$) {\n            this.onProgress$ = new EventEmitter();\n        }\n        return this.onProgress$;\n    }\n    constructor(host, zone) {\n        this.host = host;\n        this.zone = zone;\n        this.initialized = false;\n        this.animationLoop = inject(ThAnimationLoopService);\n        this.proxy = createLazyObject3DProxy();\n        host.objRef = this.proxy;\n    }\n    ngOnInit() {\n        this.initialized = true;\n        this.load();\n        // this.zone.runOutsideAngular(() => );\n    }\n    async load() {\n        if (!this.initialized) {\n            return;\n        }\n        if (this._url === undefined) {\n            throw new Error('missing url');\n        }\n        if (!this.proxy) {\n            return;\n        }\n        const url = this._url;\n        const onProgress = isObserved(this.onProgress$)\n            ? (progress) => {\n                this.zone.run(() => {\n                    this.onProgress$?.next(progress);\n                });\n            }\n            : undefined;\n        const result = await this.zone.runOutsideAngular(() => this.service.load(url, onProgress));\n        this.animationLoop.requestAnimationFrame();\n        this.proxy.objRef = this.getRefFromResponse(result);\n        // add the new object to the parent and\n        // emit a loaded event directly on the three.js object and on objRef$\n        this.host.objRef = this.proxy;\n        if (this.onLoaded$ && result !== undefined) {\n            this.zone.run(() => this.onLoaded$?.next(result));\n        }\n    }\n}\nThAsyncLoaderBaseDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAsyncLoaderBaseDirective, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\nThAsyncLoaderBaseDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThAsyncLoaderBaseDirective, inputs: { url: \"url\" }, outputs: { onLoaded: \"onLoaded\", onProgress: \"onProgress\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThAsyncLoaderBaseDirective, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }]; }, propDecorators: { url: [{\n                type: Input\n            }], onLoaded: [{\n                type: Output\n            }], onProgress: [{\n                type: Output\n            }] } });\n\nclass DRACOLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = DRACOLoader;\n        this.decoderPath = '';\n        this.reuseInstance = true;\n    }\n    setDecoderPath(path) {\n        this.decoderPath = path;\n    }\n    setDecoderConfig(config) {\n        this.decoderConfig = config;\n    }\n    setWorkerLimit(limit) {\n        this.workerLimit = limit;\n    }\n    setReuseInstance(reuse) {\n        this.reuseInstance = reuse;\n    }\n    createLoaderInstance() {\n        if (this.reuseInstance && this.instance) {\n            return this.instance;\n        }\n        const loader = super.createLoaderInstance();\n        loader.setDecoderPath(this.decoderPath);\n        if (this.decoderConfig) {\n            loader.setDecoderConfig(this.decoderConfig);\n        }\n        if (this.workerLimit) {\n            loader.setWorkerLimit(this.workerLimit);\n        }\n        if (this.reuseInstance) {\n            this.instance = loader;\n        }\n        return loader;\n    }\n}\nDRACOLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: DRACOLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nDRACOLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: DRACOLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: DRACOLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass GLTFLoaderService extends ThAsyncLoaderService {\n    constructor(dracoLoaderService) {\n        super();\n        this.dracoLoaderService = dracoLoaderService;\n        this.clazz = GLTFLoader;\n    }\n    createLoaderInstance() {\n        const loader = super.createLoaderInstance();\n        loader.setDRACOLoader(this.dracoLoaderService.createLoaderInstance());\n        return loader;\n    }\n}\nGLTFLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: GLTFLoaderService, deps: [{ token: DRACOLoaderService }], target: i0.ɵɵFactoryTarget.Injectable });\nGLTFLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: GLTFLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: GLTFLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: DRACOLoaderService }]; } });\nclass ThGLTFLoaderPipe extends ThAsyncLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThGLTFLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGLTFLoaderPipe, deps: [{ token: GLTFLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThGLTFLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGLTFLoaderPipe, name: \"loadGLTF\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGLTFLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadGLTF',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: GLTFLoaderService }]; } });\nclass ThGLTFLoaderDirective extends ThAsyncLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n    getRefFromResponse(response) {\n        return response.scene;\n    }\n}\nThGLTFLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGLTFLoaderDirective, deps: [{ token: ThObject3D, host: true }, { token: i0.NgZone }, { token: GLTFLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThGLTFLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThGLTFLoaderDirective, selector: \"[loadGLTF]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThGLTFLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadGLTF]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: GLTFLoaderService }]; } });\n\nclass TextureLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = TextureLoader;\n    }\n}\nTextureLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: TextureLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nTextureLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: TextureLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: TextureLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThTextureLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThTextureLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextureLoaderPipe, deps: [{ token: TextureLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThTextureLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextureLoaderPipe, name: \"loadTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextureLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: TextureLoaderService }]; } });\nclass ThTextureLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThTextureLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextureLoaderDirective, deps: [{ token: ThTexture, host: true }, { token: i0.NgZone }, { token: TextureLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThTextureLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThTextureLoaderDirective, selector: \"[loadTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThTextureLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: TextureLoaderService }]; } });\n\n/**\n * create a clone of any \"cloneable\" three.js class (or from it's ngx-three warpper)\n */\nclass ClonePipe {\n    transform(value) {\n        if (!value) {\n            return;\n        }\n        if (value instanceof ThWrapperBase) {\n            return value.objRef?.clone();\n        }\n        else {\n            return value.clone();\n        }\n    }\n}\nClonePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ClonePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nClonePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ClonePipe, name: \"clone\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ClonePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'clone'\n                }]\n        }] });\n\n/**\n * constructs a color of it's constructor parameters\n */\nclass ColorPipe {\n    /* ContructorProperties does not support multiple constructors --> */\n    transform(args) {\n        if (Array.isArray(args)) {\n            return new Color(...args);\n        }\n        else {\n            return new Color(args);\n        }\n    }\n}\nColorPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ColorPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nColorPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ColorPipe, name: \"color\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ColorPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'color',\n                    pure: true\n                }]\n        }] });\n\nclass FogPipe {\n    transform(args) {\n        return new Fog(...args);\n    }\n}\nFogPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: FogPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nFogPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: FogPipe, name: \"fog\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: FogPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'fog',\n                    pure: true\n                }]\n        }] });\n\n/**\n * transform arrays to vectors\n */\nclass Vector2Pipe {\n    transform(args) {\n        return new Vector2(...args);\n    }\n}\nVector2Pipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector2Pipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nVector2Pipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector2Pipe, name: \"vector2\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector2Pipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'vector2',\n                    pure: true\n                }]\n        }] });\nclass Vector3Pipe {\n    transform(args) {\n        return new Vector3(...args);\n    }\n}\nVector3Pipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector3Pipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nVector3Pipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector3Pipe, name: \"vector3\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector3Pipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'vector3',\n                    pure: true\n                }]\n        }] });\nclass Vector4Pipe {\n    transform(args) {\n        return new Vector4(...args);\n    }\n}\nVector4Pipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector4Pipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nVector4Pipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector4Pipe, name: \"vector4\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: Vector4Pipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'vector4',\n                    pure: true\n                }]\n        }] });\n\nclass ThRenderDirective {\n    constructor(engineService, animationLoopService) {\n        this.engineService = engineService;\n        this.animationLoopService = animationLoopService;\n    }\n    get beforeRender() {\n        return this.engineService.beforeRender$;\n    }\n    get onResize() {\n        return this.engineService.resize$;\n    }\n    set renderOnDemand(onDemand) {\n        if (onDemand) {\n            this.animationLoopService.stop();\n        }\n        else {\n            this.animationLoopService.start();\n        }\n    }\n    get renderOnDemand() {\n        return !this.animationLoopService.isActive();\n    }\n}\nThRenderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRenderDirective, deps: [{ token: ThEngineService }, { token: ThAnimationLoopService }], target: i0.ɵɵFactoryTarget.Directive });\nThRenderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThRenderDirective, selector: \"[beforeRender], [onResize], [renderOnDemand]\", inputs: { renderOnDemand: \"renderOnDemand\" }, outputs: { beforeRender: \"beforeRender\", onResize: \"onResize\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThRenderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[beforeRender], [onResize], [renderOnDemand]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThEngineService }, { type: ThAnimationLoopService }]; }, propDecorators: { beforeRender: [{\n                type: Output\n            }], onResize: [{\n                type: Output\n            }], renderOnDemand: [{\n                type: Input\n            }] } });\n\nclass StatsDirective {\n    constructor(engineService) {\n        this.engineService = engineService;\n        this.stats = new Stats();\n    }\n    ngOnDestroy() {\n        if (this.renderSubscription) {\n            this.renderSubscription.unsubscribe();\n        }\n    }\n    ngOnInit() {\n        if (!this.engineService.canvas) {\n            throw new Error('No canvas present');\n        }\n        const parentElement = this.engineService.canvas.parentElement;\n        if (parentElement) {\n            parentElement.style.position = 'relative';\n            this.stats.dom.style.position = 'absolute';\n            this.stats.showPanel(0);\n            this.engineService.canvas.parentElement?.appendChild(this.stats.dom);\n            this.renderSubscription = this.engineService.beforeRender$.subscribe(() => {\n                this.stats.update();\n            });\n        }\n    }\n    set thStats(enabled) {\n        if (!enabled) {\n            this.stats.dom.style.visibility = 'hidden';\n        }\n        else {\n            this.stats.dom.style.visibility = 'visible';\n        }\n    }\n}\nStatsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: StatsDirective, deps: [{ token: ThEngineService }], target: i0.ɵɵFactoryTarget.Directive });\nStatsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: StatsDirective, selector: \"[thStats]\", inputs: { thStats: \"thStats\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: StatsDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[thStats]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThEngineService }]; }, propDecorators: { thStats: [{\n                type: Input\n            }] } });\n\nclass OBJLoaderService extends ThAsyncLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = OBJLoader;\n    }\n}\nOBJLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: OBJLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nOBJLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: OBJLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: OBJLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThObjLoaderPipe extends ThAsyncLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThObjLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObjLoaderPipe, deps: [{ token: OBJLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThObjLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObjLoaderPipe, name: \"loadObj\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObjLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadObj',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: OBJLoaderService }]; } });\nclass ThObjLoaderDirective extends ThAsyncLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n    getRefFromResponse(response) {\n        return response;\n    }\n}\nThObjLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObjLoaderDirective, deps: [{ token: ThObject3D, host: true }, { token: i0.NgZone }, { token: OBJLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThObjLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThObjLoaderDirective, selector: \"[loadObj]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThObjLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadObj]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: OBJLoaderService }]; } });\n\nclass FBXLoaderService extends ThAsyncLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = FBXLoader;\n    }\n}\nFBXLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: FBXLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFBXLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: FBXLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: FBXLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThFBXLoaderPipe extends ThAsyncLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThFBXLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFBXLoaderPipe, deps: [{ token: FBXLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThFBXLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFBXLoaderPipe, name: \"loadFBX\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFBXLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadFBX',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: FBXLoaderService }]; } });\nclass ThFBXLoaderDirective extends ThAsyncLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n    getRefFromResponse(response) {\n        return response;\n    }\n}\nThFBXLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFBXLoaderDirective, deps: [{ token: ThObject3D, host: true }, { token: i0.NgZone }, { token: FBXLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThFBXLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThFBXLoaderDirective, selector: \"[loadFBX]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThFBXLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadFBX]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: FBXLoaderService }]; } });\n\nclass LogLuvLoaderService extends ThCallbackLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = LogLuvLoader;\n    }\n}\nLogLuvLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: LogLuvLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nLogLuvLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: LogLuvLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: LogLuvLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThLogLuvLoaderPipe extends ThCallbackLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThLogLuvLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLogLuvLoaderPipe, deps: [{ token: LogLuvLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThLogLuvLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLogLuvLoaderPipe, name: \"loadLogLuvTexture\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLogLuvLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadLogLuvTexture',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: LogLuvLoaderService }]; } });\nclass ThLogLuvLoaderDirective extends ThCallbackLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n}\nThLogLuvLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLogLuvLoaderDirective, deps: [{ token: ThDataTexture, host: true }, { token: i0.NgZone }, { token: LogLuvLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThLogLuvLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThLogLuvLoaderDirective, selector: \"[loadLogLuvTexture]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThLogLuvLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadLogLuvTexture]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThDataTexture, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: LogLuvLoaderService }]; } });\n\n/*\n          Generated, modifications will get overwritten\n        */\n\nclass PLYLoaderService extends ThAsyncLoaderService {\n    constructor() {\n        super(...arguments);\n        this.clazz = PLYLoader;\n    }\n}\nPLYLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PLYLoaderService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nPLYLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PLYLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PLYLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\nclass ThPLYLoaderPipe extends ThAsyncLoaderBasePipe {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nThPLYLoaderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPLYLoaderPipe, deps: [{ token: PLYLoaderService }], target: i0.ɵɵFactoryTarget.Pipe });\nThPLYLoaderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPLYLoaderPipe, name: \"loadPLY\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPLYLoaderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'loadPLY',\n                    pure: true\n                }]\n        }], ctorParameters: function () { return [{ type: PLYLoaderService }]; } });\nclass ThPLYLoaderDirective extends ThAsyncLoaderBaseDirective {\n    constructor(host, zone, service) {\n        super(host, zone);\n        this.host = host;\n        this.zone = zone;\n        this.service = service;\n    }\n    getRefFromResponse(response) {\n        response.computeVertexNormals();\n        return response;\n    }\n    async load() {\n        if (!this.initialized) {\n            return;\n        }\n        if (this._url === undefined) {\n            throw new Error('missing url');\n        }\n        const url = this._url;\n        const onProgress = isObserved(this.onProgress$)\n            ? (progress) => {\n                this.onProgress$?.next(progress);\n            }\n            : undefined;\n        const result = await this.zone.runOutsideAngular(() => this.service.load(url, onProgress));\n        // add the new object to the parent and\n        // emit a loaded event directly on the three.js object and on objRef$\n        this.host.objRef = this.getRefFromResponse(result);\n        if (this.onLoaded$ && result !== undefined) {\n            this.onLoaded$?.next(result);\n        }\n    }\n}\nThPLYLoaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPLYLoaderDirective, deps: [{ token: ThBufferGeometry, host: true }, { token: i0.NgZone }, { token: PLYLoaderService }], target: i0.ɵɵFactoryTarget.Directive });\nThPLYLoaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: ThPLYLoaderDirective, selector: \"[loadPLY]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: ThPLYLoaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[loadPLY]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThBufferGeometry, decorators: [{\n                    type: Host\n                }] }, { type: i0.NgZone }, { type: PLYLoaderService }]; } });\n\nclass BindPipe {\n    transform(methodToBind, instance) {\n        return methodToBind.bind(instance);\n    }\n}\nBindPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: BindPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nBindPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: BindPipe, name: \"bind\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: BindPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bind'\n                }]\n        }] });\n\n/**\n * The following code is ported from pmndrs/drei and adapted to work with Angular and ngx-three\n * Many thanks to pmndrs/drei at its contributors!\n */\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\nfunction defaultCalculatePosition(el, camera, size) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    objectPos.project(camera);\n    const widthHalf = size.width / 2;\n    const heightHalf = size.height / 2;\n    return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\nfunction isObjectBehindCamera(el, camera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const deltaCamObj = objectPos.sub(cameraPos);\n    const camDir = camera.getWorldDirection(v3);\n    return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n    const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const screenPos = elPos.clone();\n    screenPos.project(camera);\n    raycaster.setFromCamera(screenPos, camera);\n    const intersects = raycaster.intersectObjects(occlude, true);\n    if (intersects.length) {\n        const intersectionDistance = intersects[0].distance;\n        const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n        return pointDistance < intersectionDistance;\n    }\n    return true;\n}\nfunction objectScale(el, camera) {\n    if (camera instanceof OrthographicCamera) {\n        return camera.zoom;\n    }\n    else if (camera instanceof PerspectiveCamera) {\n        const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n        const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n        const vFOV = (camera.fov * Math.PI) / 180;\n        const dist = objectPos.distanceTo(cameraPos);\n        const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n        return 1 / scaleFOV;\n    }\n    else {\n        return 1;\n    }\n}\nfunction objectZIndex(el, camera, zIndexRange) {\n    if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n        const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n        const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n        const dist = objectPos.distanceTo(cameraPos);\n        const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n        const B = zIndexRange[1] - A * camera.far;\n        return Math.round(A * dist + B);\n    }\n    return undefined;\n}\nconst epsilon = (value) => (Math.abs(value) < 1e-10 ? 0 : value);\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n    let matrix3d = 'matrix3d(';\n    for (let i = 0; i !== 16; i++) {\n        matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n    }\n    return prepend + matrix3d;\n}\nconst getCameraCSSMatrix = ((multipliers) => (matrix) => getCSSMatrix(matrix, multipliers))([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\nconst getObjectCSSMatrix = ((scaleMultipliers) => (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)'))((f) => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n/**\n * A port of the pmndrs/drei Html component\n *\n * Add Html content to any three.js object3d node\n */\nclass HtmlComponent extends ThGroup {\n    constructor(view, canvas, parent) {\n        super(parent);\n        this.view = view;\n        this.canvas = canvas;\n        this.prepend = false; // Project content behind the canvas (default: false)\n        this.center = false; // Adds a -50%/-50% css transform (default: false) [ignored in transform mode]\n        this.fullscreen = false; // Aligns to the upper-left corner, fills the screen (default:false) [ignored in transform mode]\n        this.eps = 0.001;\n        this.sprite = false; // Renders as sprite, but only in transform mode (default=false)\n        this.transform = false; // If true, applies matrix3d transformations (default=false)\n        this.zIndexRange = [16777271, 0]; // Z-order range (default=[16777271, 0])\n        this.onOcclude = new EventEmitter();\n        /**\n         * Override default positioning function. [ignored in transform mode]\n         */\n        this.calculatePosition = defaultCalculatePosition;\n        this.as = 'div'; // Wrapping element (default: 'div')\n        this.pointerEvents = 'auto';\n        this.transformInnerStyles = this.computeInnerStyles();\n        this.styles = null;\n        this.oldZoom = 0;\n        this.oldPosition = [0, 0];\n        this.notOccluded = true;\n        this.raycaster = inject(RAYCASTER);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.styles = this.computeStyles();\n    }\n    ngAfterViewInit() {\n        this.el = document.createElement(this.as);\n        this.frameSubscription = this.view.onRender.subscribe(() => this.onFrame());\n        if (this.transformOuterRef) {\n            this.el.appendChild(this.transformOuterRef.nativeElement);\n        }\n        if (this.el && !this.target) {\n            this.appendElement(this.el);\n        }\n    }\n    onResize() {\n        this.styles = this.computeStyles();\n    }\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n        /*\n        if(this.el) {\n          if(changes.portal || changes.transform) {\n            this.appendElement(this.el);\n          }\n    \n          if(changes.wrapperClass) {\n            this.el.className = changes.wrapperClass.currentValue ?? '';\n          }\n    \n          if(changes.pointerEvents) {\n            this.transformInnerStyles = this.computeInnerStyles();\n          }\n        }\n        */\n    }\n    appendElement(el) {\n        if (!this.el || !this.objRef || !this.canvas.rendererCanvas || !this.view.camera) {\n            return;\n        }\n        this.target = this.portal ?? this.canvas.rendererCanvas?.nativeElement.parentElement;\n        this.view.scene?.objRef?.updateMatrixWorld();\n        if (this.transform) {\n            el.style.cssText = 'position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;';\n        }\n        else {\n            const vec = this.calculatePosition(this.objRef, this.view.camera.objRef, this.getSize());\n            el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n        }\n        if (this.target) {\n            if (this.prepend) {\n                this.target.prepend(el);\n            }\n            else {\n                this.target.appendChild(el);\n            }\n        }\n    }\n    onFrame() {\n        const camera = this.view.camera?.objRef;\n        const scene = this.view.scene?.objRef;\n        const group = this._objRef;\n        const size = this.getSize();\n        if (!camera || !group || !scene || !this.el) {\n            return;\n        }\n        camera.updateMatrixWorld();\n        group.updateWorldMatrix(true, false);\n        const vec = this.transform ? this.oldPosition : this.calculatePosition(group, camera, size);\n        if (this.transform ||\n            Math.abs(this.oldZoom - camera.zoom) > this.eps ||\n            Math.abs(this.oldPosition[0] - vec[0]) > this.eps ||\n            Math.abs(this.oldPosition[1] - vec[1]) > this.eps) {\n            const isBehindCamera = isObjectBehindCamera(group, camera);\n            let raytraceTarget = false;\n            if (typeof this.occlude === 'boolean') {\n                if (this.occlude === true) {\n                    raytraceTarget = [scene];\n                }\n            }\n            else if (Array.isArray(this.occlude)) {\n                raytraceTarget = this.occlude.map((item) => item.objRef ?? item);\n            }\n            const previouslyVisible = this.notOccluded;\n            if (raytraceTarget) {\n                this.notOccluded = !isBehindCamera && isObjectVisible(group, camera, this.raycaster, raytraceTarget);\n            }\n            else {\n                this.notOccluded = !isBehindCamera;\n            }\n            if (previouslyVisible !== this.notOccluded) {\n                if (this.onOcclude.length > 0) {\n                    this.onOcclude.next(!this.notOccluded);\n                }\n                else {\n                    this.el.style.display = this.notOccluded ? 'block' : 'none';\n                }\n            }\n            this.el.style.zIndex = `${objectZIndex(group, camera, this.zIndexRange)}`;\n            if (this.transform) {\n                const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n                const fov = camera.projectionMatrix.elements[5] * heightHalf;\n                const { isOrthographicCamera, top, left, bottom, right } = camera;\n                const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n                const cameraTransform = isOrthographicCamera\n                    ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)`\n                    : `translateZ(${fov}px)`;\n                let matrix = group.matrixWorld;\n                if (this.sprite) {\n                    matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.scale);\n                    matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n                    matrix.elements[15] = 1;\n                }\n                this.el.style.width = size.width + 'px';\n                this.el.style.height = size.height + 'px';\n                this.el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n                if (this.transformOuterRef && this.transformInnerRef) {\n                    // eslint-disable-next-line max-len\n                    this.transformOuterRef.nativeElement.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n                    this.transformInnerRef.nativeElement.style.transform = getObjectCSSMatrix(matrix, 1 / ((this.distanceFactor || 10) / 400));\n                }\n            }\n            else {\n                const scale = this.distanceFactor === undefined ? 1 : objectScale(group, camera) * this.distanceFactor;\n                this.el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n            }\n            this.oldPosition = vec;\n            this.oldZoom = camera.zoom;\n        }\n    }\n    ngOnDestroy() {\n        this.el?.remove();\n        this.frameSubscription?.unsubscribe();\n    }\n    computeStyles() {\n        const size = this.getSize();\n        if (this.transform) {\n            return {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: size.width + 'px',\n                height: size.height + 'px',\n                transformStyle: 'preserve-3d',\n                pointerEvents: 'none'\n            };\n        }\n        else {\n            return {\n                position: 'absolute',\n                transform: this.center ? 'translate3d(-50%,-50%,0)' : 'none',\n                ...(this.fullscreen && {\n                    top: -size.height / 2 + 'px',\n                    left: -size.width / 2 + 'px',\n                    width: size.width + 'px',\n                    height: size.height + 'px'\n                }),\n                ...this.style\n            };\n        }\n    }\n    computeInnerStyles() {\n        return { position: 'absolute', pointerEvents: this.pointerEvents };\n    }\n    getSize() {\n        return (this.view.viewPort ?? this.canvas.rendererCanvas?.nativeElement.getBoundingClientRect() ?? { width: 0, height: 0 });\n    }\n}\nHtmlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: HtmlComponent, deps: [{ token: ThView }, { token: ThCanvas }, { token: ThObject3D, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nHtmlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.1\", type: HtmlComponent, selector: \"th-html\", inputs: { prepend: \"prepend\", center: \"center\", fullscreen: \"fullscreen\", portal: \"portal\", distanceFactor: \"distanceFactor\", sprite: \"sprite\", transform: \"transform\", zIndexRange: \"zIndexRange\", style: \"style\", className: \"className\", occlude: \"occlude\", calculatePosition: \"calculatePosition\", as: \"as\", wrapperClass: \"wrapperClass\", pointerEvents: \"pointerEvents\" }, outputs: { onOcclude: \"onOcclude\" }, viewQueries: [{ propertyName: \"transformOuterRef\", first: true, predicate: [\"outerRef\"], descendants: true }, { propertyName: \"transformInnerRef\", first: true, predicate: [\"innerRef\"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div [ngStyle]=\\\"styles\\\" #outerRef *ngIf=\\\"transform;  else noTransform\\\" (onResize)=\\\"onResize()\\\">\\n    <div #innerRef [ngStyle]=\\\"transformInnerStyles\\\" >\\n        <div [style]=\\\"style\\\" [className]=\\\"className\\\">\\n            <ng-container *ngTemplateOutlet=\\\"tempOutlet\\\" ></ng-container>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #noTransform>\\n    <div [ngStyle]=\\\"styles\\\" [className]=\\\"className\\\" #outerRef>\\n        <ng-container *ngTemplateOutlet=\\\"tempOutlet\\\" ></ng-container>\\n    </div>\\n</ng-template>\\n\\n<ng-template #tempOutlet>\\n    <ng-content></ng-content>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: ThRenderDirective, selector: \"[beforeRender], [onResize], [renderOnDemand]\", inputs: [\"renderOnDemand\"], outputs: [\"beforeRender\", \"onResize\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: HtmlComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'th-html', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div [ngStyle]=\\\"styles\\\" #outerRef *ngIf=\\\"transform;  else noTransform\\\" (onResize)=\\\"onResize()\\\">\\n    <div #innerRef [ngStyle]=\\\"transformInnerStyles\\\" >\\n        <div [style]=\\\"style\\\" [className]=\\\"className\\\">\\n            <ng-container *ngTemplateOutlet=\\\"tempOutlet\\\" ></ng-container>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #noTransform>\\n    <div [ngStyle]=\\\"styles\\\" [className]=\\\"className\\\" #outerRef>\\n        <ng-container *ngTemplateOutlet=\\\"tempOutlet\\\" ></ng-container>\\n    </div>\\n</ng-template>\\n\\n<ng-template #tempOutlet>\\n    <ng-content></ng-content>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: ThView }, { type: ThCanvas }, { type: ThObject3D, decorators: [{\n                    type: SkipSelf\n                }] }]; }, propDecorators: { prepend: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], fullscreen: [{\n                type: Input\n            }], portal: [{\n                type: Input\n            }], distanceFactor: [{\n                type: Input\n            }], sprite: [{\n                type: Input\n            }], transform: [{\n                type: Input\n            }], zIndexRange: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], className: [{\n                type: Input\n            }], occlude: [{\n                type: Input\n            }], onOcclude: [{\n                type: Output\n            }], calculatePosition: [{\n                type: Input\n            }], as: [{\n                type: Input\n            }], wrapperClass: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], transformOuterRef: [{\n                type: ViewChild,\n                args: ['outerRef']\n            }], transformInnerRef: [{\n                type: ViewChild,\n                args: ['innerRef']\n            }] } });\n\nclass RefByIdDirective {\n    constructor(host, parent) {\n        this.host = host;\n        this.parent = parent;\n        this.host.autoAddToParent = false;\n        this.host.autoDispose = false;\n        this.host.objRef = createLazyObject3DProxy();\n    }\n    set refById(id) {\n        this.id = id;\n        this.subscription?.unsubscribe();\n        this.subscription = this.parent.objRef$.subscribe((obj) => {\n            this.parentObj = obj;\n            this.applyRef();\n        });\n    }\n    applyRef() {\n        if (!this.parentObj || this.id === undefined) {\n            return;\n        }\n        const ref = this.findById(this.parentObj, this.id);\n        if (ref) {\n            this.setRef(this.host, ref);\n        }\n    }\n    findById(parentObj, id) {\n        if ((parentObj.name ?? parentObj.uuid) === id) {\n            return parentObj;\n        }\n        for (const child of parentObj.children) {\n            const object = this.findById(child, id);\n            if (object !== undefined) {\n                return object;\n            }\n        }\n        return undefined;\n    }\n    setRef(host, ref) {\n        const objRef = host.objRef;\n        if (!objRef) {\n            return;\n        }\n        if (isLazyObject3dProxy(objRef)) {\n            objRef.objRef = ref;\n            host.objRef = objRef;\n        }\n    }\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n}\nRefByIdDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RefByIdDirective, deps: [{ token: ThObject3D, self: true }, { token: ThObject3D, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nRefByIdDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.1\", type: RefByIdDirective, selector: \"[refById]\", inputs: { refById: \"refById\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: RefByIdDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[refById]'\n                }]\n        }], ctorParameters: function () { return [{ type: ThObject3D, decorators: [{\n                    type: Self\n                }] }, { type: ThObject3D, decorators: [{\n                    type: SkipSelf\n                }] }]; }, propDecorators: { refById: [{\n                type: Input\n            }] } });\n\n/**\n * creates a plane from a normal vector3 and a constant:\n * https://threejs.org/docs/#api/en/math/Plane\n */\nclass PlanePipe {\n    transform(normal, constant) {\n        return new Plane(new Vector3(...normal), constant);\n    }\n}\nPlanePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PlanePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nPlanePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: PlanePipe, name: \"plane\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: PlanePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'plane'\n                }]\n        }] });\n\nclass NgxThreeModule {\n}\nNgxThreeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxThreeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeModule, declarations: [ThCanvas,\n        ThView,\n        ThObjectBase,\n        ThMaterialBase,\n        ThWrapperBase,\n        ThGLTFLoaderDirective,\n        ThGLTFLoaderPipe,\n        ThObjLoaderPipe,\n        ThObjLoaderDirective,\n        ThFBXLoaderDirective,\n        ThFBXLoaderPipe,\n        ThPLYLoaderDirective,\n        ThPLYLoaderPipe,\n        RaycasterEventDirective,\n        ColorPipe,\n        Vector2Pipe,\n        Vector3Pipe,\n        Vector4Pipe,\n        ClonePipe,\n        FogPipe,\n        BindPipe,\n        PlanePipe,\n        StatsDirective,\n        ThRenderDirective,\n        // texture loaders\n        ThTextureLoaderDirective,\n        ThTextureLoaderPipe,\n        ThCubeTextureLoaderDirective,\n        ThCubeTextureLoaderPipe,\n        // compressed texture loaders\n        ThDDSLoaderDirective,\n        ThDDSLoaderPipe,\n        ThKTXLoaderDirective,\n        ThKTXLoaderPipe,\n        ThKTX2LoaderDirective,\n        ThKTX2LoaderPipe,\n        ThPVRLoaderDirective,\n        ThPVRLoaderPipe,\n        // data texture loaders\n        ThEXRLoaderDirective,\n        ThEXRLoaderPipe,\n        ThRGBELoaderDirective,\n        ThRGBELoaderPipe,\n        ThRGBMLoaderDirective,\n        ThRGBMLoaderPipe,\n        ThTGALoaderDirective,\n        ThTGALoaderPipe,\n        ThLogLuvLoaderDirective,\n        ThLogLuvLoaderPipe,\n        // directives\n        RefByIdDirective,\n        //extras\n        HtmlComponent], imports: [NgxThreeGeneratedModule, CommonModule], exports: [NgxThreeGeneratedModule,\n        ThCanvas,\n        ThView,\n        ThGLTFLoaderDirective,\n        ThGLTFLoaderPipe,\n        ThObjLoaderDirective,\n        ThObjLoaderPipe,\n        ThFBXLoaderDirective,\n        ThFBXLoaderPipe,\n        ThPLYLoaderDirective,\n        ThPLYLoaderPipe,\n        RaycasterEventDirective,\n        ColorPipe,\n        Vector2Pipe,\n        Vector3Pipe,\n        Vector4Pipe,\n        ClonePipe,\n        FogPipe,\n        BindPipe,\n        PlanePipe,\n        ThRenderDirective,\n        StatsDirective,\n        // texture loaders\n        ThTextureLoaderDirective,\n        ThTextureLoaderPipe,\n        ThCubeTextureLoaderDirective,\n        ThCubeTextureLoaderPipe,\n        // compressed texture loaders\n        ThDDSLoaderDirective,\n        ThDDSLoaderPipe,\n        ThKTXLoaderDirective,\n        ThKTXLoaderPipe,\n        ThKTX2LoaderDirective,\n        ThKTX2LoaderPipe,\n        ThPVRLoaderDirective,\n        ThPVRLoaderPipe,\n        // data texture loaders\n        ThEXRLoaderDirective,\n        ThEXRLoaderPipe,\n        ThRGBELoaderDirective,\n        ThRGBELoaderPipe,\n        ThRGBMLoaderDirective,\n        ThRGBMLoaderPipe,\n        ThTGALoaderDirective,\n        ThTGALoaderPipe,\n        ThLogLuvLoaderDirective,\n        ThLogLuvLoaderPipe,\n        // directives\n        RefByIdDirective,\n        // extra\n        HtmlComponent] });\nNgxThreeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeModule, imports: [NgxThreeGeneratedModule, CommonModule, NgxThreeGeneratedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.1\", ngImport: i0, type: NgxThreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ThCanvas,\n                        ThView,\n                        ThObjectBase,\n                        ThMaterialBase,\n                        ThWrapperBase,\n                        ThGLTFLoaderDirective,\n                        ThGLTFLoaderPipe,\n                        ThObjLoaderPipe,\n                        ThObjLoaderDirective,\n                        ThFBXLoaderDirective,\n                        ThFBXLoaderPipe,\n                        ThPLYLoaderDirective,\n                        ThPLYLoaderPipe,\n                        RaycasterEventDirective,\n                        ColorPipe,\n                        Vector2Pipe,\n                        Vector3Pipe,\n                        Vector4Pipe,\n                        ClonePipe,\n                        FogPipe,\n                        BindPipe,\n                        PlanePipe,\n                        StatsDirective,\n                        ThRenderDirective,\n                        // texture loaders\n                        ThTextureLoaderDirective,\n                        ThTextureLoaderPipe,\n                        ThCubeTextureLoaderDirective,\n                        ThCubeTextureLoaderPipe,\n                        // compressed texture loaders\n                        ThDDSLoaderDirective,\n                        ThDDSLoaderPipe,\n                        ThKTXLoaderDirective,\n                        ThKTXLoaderPipe,\n                        ThKTX2LoaderDirective,\n                        ThKTX2LoaderPipe,\n                        ThPVRLoaderDirective,\n                        ThPVRLoaderPipe,\n                        // data texture loaders\n                        ThEXRLoaderDirective,\n                        ThEXRLoaderPipe,\n                        ThRGBELoaderDirective,\n                        ThRGBELoaderPipe,\n                        ThRGBMLoaderDirective,\n                        ThRGBMLoaderPipe,\n                        ThTGALoaderDirective,\n                        ThTGALoaderPipe,\n                        ThLogLuvLoaderDirective,\n                        ThLogLuvLoaderPipe,\n                        // directives\n                        RefByIdDirective,\n                        //extras\n                        HtmlComponent\n                    ],\n                    imports: [NgxThreeGeneratedModule, CommonModule],\n                    exports: [\n                        NgxThreeGeneratedModule,\n                        ThCanvas,\n                        ThView,\n                        ThGLTFLoaderDirective,\n                        ThGLTFLoaderPipe,\n                        ThObjLoaderDirective,\n                        ThObjLoaderPipe,\n                        ThFBXLoaderDirective,\n                        ThFBXLoaderPipe,\n                        ThPLYLoaderDirective,\n                        ThPLYLoaderPipe,\n                        RaycasterEventDirective,\n                        ColorPipe,\n                        Vector2Pipe,\n                        Vector3Pipe,\n                        Vector4Pipe,\n                        ClonePipe,\n                        FogPipe,\n                        BindPipe,\n                        PlanePipe,\n                        ThRenderDirective,\n                        StatsDirective,\n                        // texture loaders\n                        ThTextureLoaderDirective,\n                        ThTextureLoaderPipe,\n                        ThCubeTextureLoaderDirective,\n                        ThCubeTextureLoaderPipe,\n                        // compressed texture loaders\n                        ThDDSLoaderDirective,\n                        ThDDSLoaderPipe,\n                        ThKTXLoaderDirective,\n                        ThKTXLoaderPipe,\n                        ThKTX2LoaderDirective,\n                        ThKTX2LoaderPipe,\n                        ThPVRLoaderDirective,\n                        ThPVRLoaderPipe,\n                        // data texture loaders\n                        ThEXRLoaderDirective,\n                        ThEXRLoaderPipe,\n                        ThRGBELoaderDirective,\n                        ThRGBELoaderPipe,\n                        ThRGBMLoaderDirective,\n                        ThRGBMLoaderPipe,\n                        ThTGALoaderDirective,\n                        ThTGALoaderPipe,\n                        ThLogLuvLoaderDirective,\n                        ThLogLuvLoaderPipe,\n                        // directives\n                        RefByIdDirective,\n                        // extra\n                        HtmlComponent\n                    ]\n                }]\n        }] });\n\nfunction createThProviderArray(cls, baseCls) {\n    const providers = [];\n    if (ThObject3D.isPrototypeOf(baseCls) || Object3D === baseCls) {\n        providers.push({ provide: ThObject3D, useExisting: forwardRef(() => cls) });\n        if (ThCamera.isPrototypeOf(baseCls) || ThCamera === baseCls) {\n            providers.push({ provide: ThCamera, useExisting: forwardRef(() => cls) });\n        }\n    }\n}\n/**\n * usage:\n *\n * @Component({\n *  providers: createObj3DProviderArray(forwardRef(() => TheComponent)))\n * })\n * export class TheComponent {\n * ...\n * }\n * @param type the Object3D derived Class to be provided\n */\nfunction createObj3DProviderArray(type) {\n    return [{ provide: ThObject3D, useExisting: forwardRef(() => type) }];\n}\nfunction createCameraProviderArray(type) {\n    return [\n        { provide: ThObject3D, useExisting: forwardRef(() => type) },\n        { provide: ThCamera, useExisting: forwardRef(() => type) }\n    ];\n}\n\n/*\n * Public API Surface of ngx-three\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BindPipe, ClonePipe, ColorPipe, CubeTextureLoaderService, DDSLoaderService, DRACOLoaderService, EXRLoaderService, FBXLoaderService, FogPipe, GLTFLoaderService, HtmlComponent, KTX2LoaderService, KTXLoaderService, LogLuvLoaderService, NgxThreeGeneratedModule, NgxThreeModule, OBJLoaderService, PLYLoaderService, PVRLoaderService, PlanePipe, RGBELoaderService, RGBMLoaderService, RaycasterEventDirective, RefByIdDirective, StatsDirective, TGALoaderService, TextureLoaderService, ThAdaptiveToneMappingPass, ThAfterimagePass, ThAmbientLight, ThAmbientLightProbe, ThArcballControls, ThArrayCamera, ThArrowHelper, ThAsyncLoaderBaseDirective, ThAsyncLoaderBasePipe, ThAsyncLoaderService, ThAudio, ThAudioListener, ThAxesHelper, ThBloomPass, ThBokehPass, ThBone, ThBox3Helper, ThBoxGeometry, ThBoxHelper, ThBoxLineGeometry, ThBufferGeometry, ThCallbackLoaderBaseDirective, ThCallbackLoaderBasePipe, ThCallbackLoaderService, ThCamera, ThCameraHelper, ThCanvas, ThCanvasTexture, ThCapsuleGeometry, ThCircleGeometry, ThClearMaskPass, ThClearPass, ThCompressedArrayTexture, ThCompressedTexture, ThConeGeometry, ThConvexGeometry, ThCubeCamera, ThCubeTexture, ThCubeTextureLoaderDirective, ThCubeTextureLoaderPipe, ThCubeTexturePass, ThCylinderGeometry, ThDDSLoaderDirective, ThDDSLoaderPipe, ThData3DTexture, ThDataArrayTexture, ThDataTexture, ThDecalGeometry, ThDepthTexture, ThDirectionalLight, ThDirectionalLightHelper, ThDodecahedronGeometry, ThDotScreenPass, ThDragControls, ThEXRLoaderDirective, ThEXRLoaderPipe, ThEdgesGeometry, ThEffectComposer, ThEffectComposerGen, ThEngineService, ThExtrudeGeometry, ThFBXLoaderDirective, ThFBXLoaderPipe, ThFilmPass, ThFirstPersonControls, ThFlyControls, ThFramebufferTexture, ThGLTFLoaderDirective, ThGLTFLoaderPipe, ThGlitchPass, ThGridHelper, ThGroup, ThHalftonePass, ThHemisphereLight, ThHemisphereLightHelper, ThHemisphereLightProbe, ThIcosahedronGeometry, ThInstancedBufferGeometry, ThInstancedMesh, ThKTX2LoaderDirective, ThKTX2LoaderPipe, ThKTXLoaderDirective, ThKTXLoaderPipe, ThLOD, ThLUTPass, ThLatheGeometry, ThLight, ThLightProbe, ThLightningStrike, ThLine, ThLineBasicMaterial, ThLineDashedMaterial, ThLineLoop, ThLineSegments, ThLogLuvLoaderDirective, ThLogLuvLoaderPipe, ThMapControls, ThMaskPass, ThMaterial, ThMesh, ThMeshBasicMaterial, ThMeshDepthMaterial, ThMeshDistanceMaterial, ThMeshLambertMaterial, ThMeshMatcapMaterial, ThMeshNormalMaterial, ThMeshPhongMaterial, ThMeshPhysicalMaterial, ThMeshStandardMaterial, ThMeshToonMaterial, ThObjLoaderDirective, ThObjLoaderPipe, ThObject3D, ThOctahedronGeometry, ThOrbitControls, ThOrthographicCamera, ThOutlinePass, ThPLYLoaderDirective, ThPLYLoaderPipe, ThPVRLoaderDirective, ThPVRLoaderPipe, ThParametricGeometry, ThPass, ThPerspectiveCamera, ThPlaneGeometry, ThPlaneHelper, ThPointLight, ThPointLightHelper, ThPointerLockControls, ThPoints, ThPointsMaterial, ThPolarGridHelper, ThPolyhedronGeometry, ThPositionalAudio, ThRGBELoaderDirective, ThRGBELoaderPipe, ThRGBMLoaderDirective, ThRGBMLoaderPipe, ThRawShaderMaterial, ThRectAreaLight, ThRenderDirective, ThRenderPass, ThRenderPassGen, ThRingGeometry, ThRoundedBoxGeometry, ThSAOPass, ThSMAAPass, ThSSAARenderPass, ThSSAOPass, ThSSRPass, ThSavePass, ThScene, ThShaderMaterial, ThShaderPass, ThShadowMaterial, ThShapeGeometry, ThSkeletonHelper, ThSkinnedMesh, ThSphereGeometry, ThSpotLight, ThSpotLightHelper, ThSprite, ThSpriteMaterial, ThStereoCamera, ThTAARenderPass, ThTGALoaderDirective, ThTGALoaderPipe, ThTeapotGeometry, ThTetrahedronGeometry, ThTextGeometry, ThTexture, ThTextureLoaderDirective, ThTextureLoaderPipe, ThTexturePass, ThTorusGeometry, ThTorusKnotGeometry, ThTrackballControls, ThTransformControls, ThTransformControlsGen, ThTubeGeometry, ThUnrealBloomPass, ThVideoTexture, ThView, ThWireframeGeometry, Vector2Pipe, Vector3Pipe, Vector4Pipe, createCameraProviderArray, createLazyObject3DProxy, createObj3DProviderArray, createThProviderArray, isLazyObject3dProxy };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}